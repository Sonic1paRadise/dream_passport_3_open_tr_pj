/* NJA 1.01.00 NinjaAsciiDataMix CnkModel (MAX) */

/* ROOT OBJECT : object_kihon11_Bip01_Bip01 n(76) d(15) v(5893) */
/* TEXLIST     : texlist_kihon11_Bip01 n(3) */

TEXTURE_START

TEXTURENAME textures_kihon11_Bip01[]
START
	TEXN( "babyhada" ),        /* 200 32x32 565 TW MIP */
	TEXN( "kuchi" ),           /* 201 32x32 565 TW MIP */
	TEXN( "omutu" ),           /* 202 32x32 565 TW MIP */
END

TEXTURELIST texlist_kihon11_Bip01
START
TextureList textures_kihon11_Bip01,
TextureNum  3,
END

TEXTURE_END



CNKOBJECT_START

PLIST      strip_kihon11_Bip01_sftypin[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 204, 204, 204 ),
	MAmbi( 255, 76, 76, 76 ),
	MSpec( 12, 178, 178, 178 ),
	CnkS( 0x0 ), 326, _NB( UFO_0, 15 ),
	StripL(3),  58, 13, 59, 
	StripR(56),  71, 66, 69, 61, 62, 60, 67, 66, 68, 71, 
                   63, 65, 56, 55, 52, 51, 48, 50, 47, 46, 
                   42, 39, 40, 41, 9, 11, 8, 7, 3, 0, 
                   1, 2, 38, 37, 34, 33, 30, 32, 29, 28, 
                   25, 24, 21, 23, 20, 19, 15, 12, 13, 14, 
                   58, 57, 59, 16, 13, 15, 
	StripL(3),  60, 66, 61, 
	StripL(25),  83, 81, 80, 78, 76, 73, 75, 72, 110, 108, 
                   107, 105, 104, 102, 101, 99, 98, 96, 95, 93, 
                   92, 90, 88, 85, 87, 
	StripL(3),  130, 84, 131, 
	StripL(3),  134, 139, 132, 
	StripL(26),  16, 15, 17, 20, 18, 21, 22, 25, 26, 29, 
                   27, 30, 31, 34, 35, 38, 36, 1, 4, 3, 
                   5, 8, 6, 9, 10, 43, 
	StripL(44),  57, 16, 14, 17, 12, 18, 19, 22, 23, 26, 
                   24, 27, 28, 31, 32, 35, 33, 36, 37, 4, 
                   2, 5, 0, 6, 7, 10, 11, 43, 41, 44, 
                   39, 45, 46, 49, 50, 53, 51, 54, 55, 64, 
                   65, 70, 71, 69, 
	StripL(20),  62, 69, 67, 70, 68, 64, 63, 54, 56, 53, 
                   52, 49, 48, 45, 47, 44, 42, 43, 40, 9, 
                   
	StripL(58),  85, 84, 87, 130, 129, 131, 89, 84, 86, 85, 
                   91, 90, 94, 93, 97, 96, 100, 99, 103, 102, 
                   106, 105, 109, 108, 77, 72, 74, 73, 79, 78, 
                   82, 81, 111, 83, 114, 116, 115, 113, 119, 118, 
                   122, 121, 125, 124, 128, 127, 136, 135, 143, 140, 
                   139, 138, 132, 133, 134, 141, 139, 143, 
	StripR(11),  126, 125, 123, 122, 120, 119, 117, 115, 112, 114, 
                   111, 
	StripR(40),  135, 126, 127, 123, 124, 120, 121, 117, 118, 112, 
                   113, 111, 116, 82, 83, 79, 80, 74, 76, 77, 
                   75, 109, 110, 106, 107, 103, 104, 100, 101, 97, 
                   98, 94, 95, 91, 92, 86, 88, 89, 87, 129, 
                   
	StripL(6),  138, 140, 142, 137, 136, 128, 
	StripL(6),  133, 138, 141, 142, 143, 136, 
	StripL(6),  140, 135, 137, 126, 128, 125, 
	CnkEnd()
END

VLIST      vertex_kihon11_Bip01_sftypin[]
START
	CnkV_VN(0x0, 865),
	OffnbIdx(0, 144),
	VERT( 0x415f1579, 0x428512f6, 0xc1309fd8 ),
	NORM( 0xbf714c62, 0x3e78e7d9, 0x3e6a923b ),
	VERT( 0x415e07d1, 0x42848859, 0xc12e2d8e ),
	NORM( 0xbf6adf81, 0x3ec6f118, 0x3dae92b1 ),
	VERT( 0x41611a41, 0x42846d3a, 0xc12c1c1a ),
	NORM( 0x3f01d730, 0x3d6bda9b, 0x3f5c22fb ),
	VERT( 0x4161ec5a, 0x4284d2c0, 0xc1324693 ),
	NORM( 0x3edeb68a, 0xbf1773d2, 0xbf2dc680 ),
	VERT( 0x4160dbdc, 0x4284476e, 0xc12fd20e ),
	NORM( 0x3f0616a5, 0xbeda2a72, 0xbf3cd4c7 ),
	VERT( 0x4162b6fb, 0x42852334, 0xc12f821f ),
	NORM( 0x3f2c2edb, 0x3eecfd12, 0x3f13cfa0 ),
	VERT( 0x415e54cf, 0x42857872, 0xc1348dcb ),
	NORM( 0xbf658627, 0x3e0fa12e, 0x3ed715bd ),
	VERT( 0x41613208, 0x428539ff, 0xc1363a60 ),
	NORM( 0x3ed66dbe, 0xbf37caf9, 0xbf0e5791 ),
	VERT( 0x4161d920, 0x4285a9ad, 0xc134ddc4 ),
	NORM( 0x3f21e41b, 0x3f420d90, 0x3e237fb8 ),
	VERT( 0x415be051, 0x42859f6c, 0xc138dc1b ),
	NORM( 0xbf49bc94, 0x3defd0c0, 0x3f1ab983 ),
	VERT( 0x415ec7bf, 0x428563b0, 0xc13a8fdc ),
	NORM( 0x3ef7cb55, 0xbf47f64a, 0xbec9ff2b ),
	VERT( 0x415ea0b7, 0x4285deb3, 0xc13aaf7c ),
	NORM( 0x3ecc76cf, 0x3f5f6fa2, 0xbe8fade3 ),
	VERT( 0x415c3c64, 0x428527b2, 0xc13ea2ef ),
	NORM( 0xbf28c361, 0x3e426886, 0x3f3a4294 ),
	VERT( 0x415faf0e, 0x4285491c, 0xc13b25e9 ),
	NORM( 0xbf4b53da, 0x3d1bcc07, 0x3f1b3d24 ),
	VERT( 0x41626fb0, 0x42858857, 0xc13cf96a ),
	NORM( 0x3eb1bfc8, 0x3f592c4a, 0xbeccad62 ),
	VERT( 0x415f2c82, 0x4284ee70, 0xc1405cfe ),
	NORM( 0x3f1ce542, 0xbf41f30a, 0xbe65e6f6 ),
	VERT( 0x4162964b, 0x42850d55, 0xc13cd988 ),
	NORM( 0x3f0263c5, 0xbf5131d9, 0xbe8a2917 ),
	VERT( 0x415ddfee, 0x42855bb4, 0xc141b6cc ),
	NORM( 0x3d731e6f, 0x3f42172d, 0xbf263c16 ),
	VERT( 0x4158b0b2, 0x4284c544, 0xc14078cd ),
	NORM( 0xbf0d3f0d, 0x3ea8c133, 0x3f44209b ),
	VERT( 0x415ba72c, 0x42848e0c, 0xc142388b ),
	NORM( 0x3f439d49, 0xbf22f998, 0xbdd530cd ),
	VERT( 0x415940ac, 0x4284d675, 0xc144421c ),
	NORM( 0xbe8dd027, 0x3ed66460, 0xbf5d6601 ),
	VERT( 0x4155ee08, 0x42843f43, 0xc1400fe4 ),
	NORM( 0xbef995b2, 0x3f01cde7, 0x3f35f8c2 ),
	VERT( 0x4158e73e, 0x428408b9, 0xc141d040 ),
	NORM( 0x3f6177a9, 0xbef08778, 0xbd76406a ),
	VERT( 0x4155c202, 0x42841f1a, 0xc143d40c ),
	NORM( 0xbf02716a, 0xbd6b83be, 0xbf5bc816 ),
	VERT( 0x41547cb4, 0x4283bdc8, 0xc13d6306 ),
	NORM( 0xbef2b2da, 0x3f2d8de1, 0x3f0fd673 ),
	VERT( 0x415772f8, 0x4283867c, 0xc13f229b ),
	NORM( 0x3f72a31b, 0xbe9bb5e5, 0xbdc4400e ),
	VERT( 0x41540215, 0x42836cf0, 0xc14059c2 ),
	NORM( 0xbf19931c, 0xbf02f37a, 0xbf1d7d12 ),
	VERT( 0x41548709, 0x428367ec, 0xc1390a9e ),
	NORM( 0xbf0641f0, 0x3f4331c0, 0x3ec202d7 ),
	VERT( 0x4157779b, 0x42832ece, 0xc13ac4f9 ),
	NORM( 0x3f76825b, 0xbe240f98, 0xbe5e3dea ),
	VERT( 0x41542beb, 0x4282f5b1, 0xc13a94e7 ),
	NORM( 0xbf102677, 0xbf4db064, 0xbe45f04a ),
	VERT( 0x41562a38, 0x42835285, 0xc13441f2 ),
	NORM( 0xbf1a6c7f, 0x3f45bf20, 0x3e4b64e0 ),
	VERT( 0x4159111c, 0x428316a3, 0xc135f54f ),
	NORM( 0x3f67332c, 0xbde45b4a, 0xbed44cc9 ),
	VERT( 0x41565011, 0x4282d782, 0xc1342195 ),
	NORM( 0xbecb56a4, 0xbf5fb259, 0x3e8fa79f ),
	VERT( 0x4158d2c7, 0x42838674, 0xc1303d65 ),
	NORM( 0xbf39c012, 0x3f2fc546, 0x3d3ba381 ),
	VERT( 0x415bb087, 0x42834823, 0xc131ea5b ),
	NORM( 0x3f4db6ba, 0xbe178815, 0xbf1396fa ),
	VERT( 0x4159d5b7, 0x42831bf4, 0xc12eb732 ),
	NORM( 0xbdfbca09, 0xbf376a7b, 0x3f2fcb9c ),
	VERT( 0x415ba99e, 0x4283f8ee, 0xc12dfe40 ),
	NORM( 0xbf57da9b, 0x3f09943d, 0x3c788532 ),
	VERT( 0x415e802b, 0x4283b8a6, 0xc12fa4bb ),
	NORM( 0x3f2ace8c, 0xbe8125d9, 0xbf336b4f ),
	VERT( 0x415dbdce, 0x4283b1a7, 0xc12bc151 ),
	NORM( 0x3e4d3a56, 0xbebceb31, 0x3f685693 ),
	VERT( 0x4154d67a, 0x42851b43, 0xc13e39d1 ),
	NORM( 0xbf0d4cff, 0x3ea8a74f, 0x3f441c22 ),
	VERT( 0x4158625b, 0x42857d99, 0xc13c63c7 ),
	NORM( 0xbf282b9d, 0x3e42fd09, 0x3f3ac1fa ),
	VERT( 0x415a051a, 0x4285b1c0, 0xc13f7774 ),
	NORM( 0x3d75e640, 0x3f428daa, 0xbf25ad3f ),
	VERT( 0x4157ccf2, 0x4284e40b, 0xc13ff987 ),
	NORM( 0x3f438e25, 0xbf230b88, 0xbdd53c6b ),
	VERT( 0x415b52b2, 0x4285447a, 0xc13e1e8b ),
	NORM( 0x3f1d7529, 0xbf4175b0, 0xbe665a95 ),
	VERT( 0x41556674, 0x42852c74, 0xc142031c ),
	NORM( 0xbe8de0a4, 0x3ed64d79, 0xbf5d68e6 ),
	VERT( 0x415213cd, 0x42849541, 0xc13dd0e5 ),
	NORM( 0xbef99605, 0x3f01cea9, 0x3f35f81b ),
	VERT( 0x41550d0a, 0x42845eb8, 0xc13f9144 ),
	NORM( 0x3f6177e5, 0xbef08682, 0xbd76453d ),
	VERT( 0x4151e7cb, 0x42847518, 0xc141950d ),
	NORM( 0xbf0270c5, 0xbd6b8baf, 0xbf5bc870 ),
	VERT( 0x4150a27c, 0x428413c8, 0xc13b240a ),
	NORM( 0xbef2b254, 0x3f2d8dc7, 0x3f0fd6c9 ),
	VERT( 0x415398be, 0x4283dc7b, 0xc13ce398 ),
	NORM( 0x3f72a36a, 0xbe9bb4c3, 0xbdc435b6 ),
	VERT( 0x415027dd, 0x4283c2ee, 0xc13e1abe ),
	NORM( 0xbf199284, 0xbf02f487, 0xbf1d7cc5 ),
	VERT( 0x4150acd0, 0x4283bdeb, 0xc136cba2 ),
	NORM( 0xbf0641bc, 0x3f4331b5, 0x3ec20390 ),
	VERT( 0x41539d63, 0x428384cc, 0xc1388601 ),
	NORM( 0x3f768178, 0xbe2418ed, 0xbe5e46bd ),
	VERT( 0x415051b2, 0x42834bb0, 0xc13855eb ),
	NORM( 0xbf102741, 0xbf4dafd1, 0xbe45f095 ),
	VERT( 0x41525003, 0x4283a884, 0xc13202f6 ),
	NORM( 0xbef77871, 0x3f538f59, 0x3e93e43d ),
	VERT( 0x415536e6, 0x42836ca2, 0xc133b64f ),
	NORM( 0x3f6a8146, 0xbca28ef4, 0xbecd1c5e ),
	VERT( 0x415275d9, 0x42832d81, 0xc131e29d ),
	NORM( 0xbefe759c, 0xbf5b0653, 0x3e146b98 ),
	VERT( 0x4186a1d4, 0x428620aa, 0xc0eba986 ),
	NORM( 0x3f1c8464, 0x3f41d301, 0x3e6ba536 ),
	VERT( 0x41854185, 0x4285e16f, 0xc0e80288 ),
	NORM( 0xbed69388, 0x3c8cd474, 0x3f686445 ),
	VERT( 0x4186b523, 0x4285a5a7, 0xc0eb69c0 ),
	NORM( 0x3f2c2cc1, 0xbf2f4411, 0x3e8fdb5b ),
	VERT( 0x41804ca1, 0x4283e11a, 0xc0d9b40c ),
	NORM( 0x3f7f392d, 0x3d9efc35, 0x3bb9f923 ),
	VERT( 0x417f45ce, 0x4283fc75, 0xc0d82630 ),
	NORM( 0xbd86e654, 0x3f44be59, 0x3f22ec13 ),
	VERT( 0x417f571d, 0x4283c441, 0xc0d808a0 ),
	NORM( 0x3bfcb864, 0xbf2c2af0, 0x3f3d7294 ),
	VERT( 0x415cbdd4, 0x42831590, 0xc11fb95d ),
	NORM( 0xbed92d7c, 0xbf5f99df, 0x3e74da15 ),
	VERT( 0x415c9d18, 0x42837fdf, 0xc11fd552 ),
	NORM( 0xbee0c2bf, 0x3f5983a5, 0x3e9596c0 ),
	VERT( 0x415f1f21, 0x42834c1e, 0xc1214d92 ),
	NORM( 0x3f5f7f24, 0x3a883b8c, 0xbef9ae66 ),
	VERT( 0x4174d050, 0x4283865a, 0xc0fbbedb ),
	NORM( 0x3f54ce63, 0xbaebf07f, 0xbf0e4cd1 ),
	VERT( 0x41732e73, 0x428360f0, 0xc0f9946c ),
	NORM( 0xbeaea324, 0xbf5d581c, 0x3ebcdf64 ),
	VERT( 0x416788e4, 0x42831f3c, 0xc10df106 ),
	NORM( 0xbec4b5be, 0xbf5f1385, 0x3e9c3226 ),
	VERT( 0x417317fe, 0x4283a9d8, 0xc0f9babe ),
	NORM( 0xbef353da, 0x3f594324, 0x3e6db0a4 ),
	VERT( 0x41676d52, 0x428378d7, 0xc10e0895 ),
	NORM( 0xbeed096a, 0x3f586ddf, 0x3e88597b ),
	VERT( 0x41698a7a, 0x42834d39, 0xc10f45b9 ),
	NORM( 0x3f5a5e07, 0xbc00f7ff, 0xbf05985b ),
	VERT( 0xc1920e09, 0x428986e1, 0xc00dab03 ),
	NORM( 0x3f4a97da, 0x3ec8b0d4, 0xbef030a5 ),
	VERT( 0xc19334be, 0x428a117e, 0xc013066d ),
	NORM( 0x3f65ec53, 0x3e78e871, 0xbebb9b85 ),
	VERT( 0xc194553a, 0x428a21bc, 0xc006cb4d ),
	NORM( 0xbe468687, 0x3eea95f7, 0x3f5e11ee ),
	VERT( 0xc193ae18, 0x428945f5, 0xc00c3739 ),
	NORM( 0xbf5c9e55, 0xbedb25b5, 0xbe8b62c2 ),
	VERT( 0xc194d69b, 0x4289d148, 0xc0119307 ),
	NORM( 0xbf411b79, 0xbf188951, 0xbe8d1ce6 ),
	VERT( 0xc192ac82, 0x42896bc2, 0xbfff6a13 ),
	NORM( 0x3dd60e69, 0x3d6b4023, 0x3f7e2c44 ),
	VERT( 0xc19412a4, 0x428a76f9, 0xc02172bf ),
	NORM( 0x3f78fb3e, 0x3e11fb3c, 0xbe3c2459 ),
	VERT( 0xc1959435, 0x428aa835, 0xc01a14bd ),
	NORM( 0xbed26d0b, 0x3f413ef0, 0x3f02da21 ),
	VERT( 0xc195b8cd, 0x428a3886, 0xc020031e ),
	NORM( 0xbf2b91c1, 0xbf37f466, 0xbe3e2f35 ),
	VERT( 0xc1945e15, 0x428a9df3, 0xc0352250 ),
	NORM( 0x3f7e0304, 0x3dfb1467, 0x3cac4ce2 ),
	VERT( 0xc1960434, 0x428add3b, 0xc0347407 ),
	NORM( 0xbef9c80e, 0x3f5f6ecb, 0x3c806191 ),
	VERT( 0xc1960a7b, 0x428a6238, 0xc033b16f ),
	NORM( 0xbf20dd64, 0xbf47067f, 0xbcdc5373 ),
	VERT( 0xc1969412, 0x428a47a4, 0xc0336d38 ),
	NORM( 0x3f7fbb89, 0x3d2d8e90, 0x3c8c308a ),
	VERT( 0xc1963b1c, 0x428a263a, 0xc046d90e ),
	NORM( 0x3f76c055, 0x3e465483, 0x3e3b3fa0 ),
	VERT( 0xc197ce1c, 0x428a5a3c, 0xc04cd70b ),
	NORM( 0xbedd8e58, 0x3f417480, 0xbefbb586 ),
	VERT( 0xc1984057, 0x428a0bdc, 0xc031fc67 ),
	NORM( 0xbf12897d, 0xbf50aec3, 0x3db57314 ),
	VERT( 0xc197ecdc, 0x4289ecf8, 0xc04567be ),
	NORM( 0xbf2145ac, 0xbf41bc2f, 0x3e329e04 ),
	VERT( 0xc1983a4f, 0x428a86df, 0xc032bec2 ),
	NORM( 0xbf044b31, 0x3f591b7a, 0xbdefd61e ),
	VERT( 0xc1955a2e, 0x4289c3cc, 0xc055301e ),
	NORM( 0x3f677d39, 0x3ea744b6, 0x3e8cc54f ),
	VERT( 0xc196b473, 0x4289d4fd, 0xc060055d ),
	NORM( 0xbe94015c, 0x3ed36d1b, 0xbf5d191a ),
	VERT( 0xc197102e, 0x42898c94, 0xc053c1f1 ),
	NORM( 0xbf2d633a, 0xbf245dd8, 0x3eb7eac6 ),
	VERT( 0xc1941f03, 0x42893dcb, 0xc05a70fd ),
	NORM( 0x3f512638, 0x3f0223d3, 0x3e8b5f58 ),
	VERT( 0xc1952c33, 0x42891da1, 0xc066f52b ),
	NORM( 0xbdd14d5b, 0xbd67a7b8, 0xbf7e3f67 ),
	VERT( 0xc195d64c, 0x42890741, 0xc058fe60 ),
	NORM( 0xbf3f9bf8, 0xbef0d92c, 0x3eef54ec ),
	VERT( 0xc192bed1, 0x4288bc50, 0xc0554689 ),
	NORM( 0x3f373546, 0x3f2e1d93, 0x3e22b4b2 ),
	VERT( 0xc1936f4e, 0x42886b78, 0xc05ff170 ),
	NORM( 0x3de6c1ae, 0xbf01df1d, 0xbf5ab7b3 ),
	VERT( 0xc19474b0, 0x42888504, 0xc053d85c ),
	NORM( 0xbf5311f7, 0xbe9beeb3, 0x3ef42f87 ),
	VERT( 0xc19177fb, 0x42886674, 0xc04735f9 ),
	NORM( 0x3f24de9e, 0x3f43bfda, 0xbcc076b3 ),
	VERT( 0xc191c8b0, 0x4287f438, 0xc04d025e ),
	NORM( 0x3eaa1d83, 0xbf4c77d5, 0xbf006dd0 ),
	VERT( 0xc19329ff, 0x42882d56, 0xc045c4a8 ),
	NORM( 0xbf68ca0b, 0xbe249257, 0x3ec47e5e ),
	VERT( 0xc190b405, 0x4288510c, 0xc033ef5f ),
	NORM( 0x3f1b13fe, 0x3f45330c, 0xbe4bedc0 ),
	VERT( 0xc190b99a, 0x4287d60a, 0xc0332d30 ),
	NORM( 0x3ef8ecbf, 0xbf5fb151, 0xbc25e282 ),
	VERT( 0xc1926012, 0x4288152b, 0xc0327e80 ),
	NORM( 0xbf78bfc0, 0xbdeb35bc, 0x3e537d5a ),
	VERT( 0xc1909371, 0x428884fc, 0xc020b0f1 ),
	NORM( 0x3f1d492d, 0x3f30aa3b, 0xbec3d2ab ),
	VERT( 0xc1908763, 0x42881a7c, 0xc019623a ),
	NORM( 0x3f019978, 0xbf35e787, 0x3efa34c0 ),
	VERT( 0xc19239ec, 0x428846aa, 0xc01f414f ),
	NORM( 0xbf7d26c7, 0xbe157934, 0x3ceb0272 ),
	VERT( 0xc1910c61, 0x4288f776, 0xc012b5eb ),
	NORM( 0x3f307a9a, 0x3f0b4636, 0xbef4e61f ),
	VERT( 0xc19137bf, 0x4288b02f, 0xc0069158 ),
	NORM( 0x3ec0e2aa, 0xbeb9f3bd, 0x3f5a26e4 ),
	VERT( 0xc192ae09, 0x4288b72d, 0xc0114294 ),
	NORM( 0xbf74b81b, 0xbe7fc59c, 0xbe1dfa79 ),
	VERT( 0xc19403c1, 0x428a7c21, 0xc048cb3b ),
	NORM( 0x3f76f265, 0x3e437673, 0x3e3a22b1 ),
	VERT( 0xc19322ce, 0x428a19cb, 0xc0572354 ),
	NORM( 0x3f6773cf, 0x3ea76700, 0x3e8cda6d ),
	VERT( 0xc1947d10, 0x428a2afc, 0xc061f893 ),
	NORM( 0xbe940af0, 0x3ed3834e, 0xbf5d1230 ),
	VERT( 0xc195b5cf, 0x428a4302, 0xc0475bb2 ),
	NORM( 0xbf213ce5, 0xbf41ec86, 0x3e2fcfdb ),
	VERT( 0xc194d8cc, 0x4289e293, 0xc055b527 ),
	NORM( 0xbf2d6a19, 0xbf244f39, 0x3eb8051a ),
	VERT( 0xc1959664, 0x428ab047, 0xc04eca7d ),
	NORM( 0xbedcbd27, 0x3f41551a, 0xbefccd35 ),
	VERT( 0xc191e7a0, 0x428993c9, 0xc05c6442 ),
	NORM( 0x3f51264e, 0x3f02244c, 0x3e8b5d11 ),
	VERT( 0xc192f4d2, 0x428973a0, 0xc068e861 ),
	NORM( 0xbdd14f81, 0xbd67a14f, 0xbf7e3f67 ),
	VERT( 0xc1939eeb, 0x42895d3f, 0xc05af187 ),
	NORM( 0xbf3f9bd0, 0xbef0d89a, 0x3eef55ff ),
	VERT( 0xc1908772, 0x4289124f, 0xc05739cd ),
	NORM( 0x3f373567, 0x3f2e1d5b, 0x3e22b632 ),
	VERT( 0xc19137eb, 0x4288c176, 0xc061e4a6 ),
	NORM( 0x3de6c33c, 0xbf01df3f, 0xbf5ab798 ),
	VERT( 0xc1923d4f, 0x4288db03, 0xc055cb92 ),
	NORM( 0xbf531256, 0xbe9bec28, 0x3ef42fd6 ),
	VERT( 0xc18f4099, 0x4288bc73, 0xc049293e ),
	NORM( 0x3f24deda, 0x3f43bfa3, 0xbcc08a6b ),
	VERT( 0xc18f914f, 0x42884a37, 0xc04ef594 ),
	NORM( 0x3eaa1f09, 0xbf4c77b9, 0xbf006d7b ),
	VERT( 0xc190f2a0, 0x42888354, 0xc047b7df ),
	NORM( 0xbf68c9ba, 0xbe249b0d, 0x3ec47e0a ),
	VERT( 0xc18e7ca6, 0x4288a70b, 0xc035e288 ),
	NORM( 0x3f101ade, 0x3f533e4f, 0xbd41532a ),
	VERT( 0xc18e823a, 0x42882c09, 0xc0352076 ),
	NORM( 0x3ef91820, 0xbf5b211a, 0xbe332b69 ),
	VERT( 0xc19028b1, 0x42886b2a, 0xc03471a8 ),
	NORM( 0xbf78ec35, 0xbcb37912, 0x3e6e0f70 ),
	VERT( 0xc1944ad9, 0x428aa42f, 0x4018a8db ),
	NORM( 0xbebf2157, 0xbf2f447a, 0x3f2043a4 ),
	VERT( 0xc1929e95, 0x428adff7, 0x40173809 ),
	NORM( 0x3f608491, 0x3c8ceb39, 0x3ef5d504 ),
	VERT( 0xc19444d2, 0x428b1f31, 0x4017e681 ),
	NORM( 0xbeb5762c, 0x3f41d242, 0x3f0c7d3d ),
	VERT( 0xc18bc0e8, 0x4288c2c8, 0x40164e04 ),
	NORM( 0x3ede4beb, 0xbf2c2bf8, 0x3f196c91 ),
	VERT( 0xc18bbe59, 0x4288fafd, 0x4015f551 ),
	NORM( 0x3edd03fe, 0x3f44bddd, 0x3ef1ccaa ),
	VERT( 0xc18c81f2, 0x4288dfa2, 0x40169ddd ),
	NORM( 0xbf4c3ec1, 0x3d9f08df, 0x3f190d2b ),
	VERT( 0xc18d37a0, 0x42887e66, 0xbfc5db1d ),
	NORM( 0x3f06d398, 0x3f598362, 0xbcd89798 ),
	VERT( 0xc18d3c74, 0x42881418, 0xbfc48b8d ),
	NORM( 0x3ef7654a, 0xbf5f9989, 0xbd76d5a1 ),
	VERT( 0xc18ea990, 0x42884aa6, 0xbfc35d7a ),
	NORM( 0xbf7de813, 0x3a89afed, 0x3e02af0f ),
	VERT( 0xc18bdbcb, 0x42885f78, 0x3f86e2e0 ),
	NORM( 0x3efcbef3, 0xbf5d5817, 0x3dbf7185 ),
	VERT( 0xc18cd62f, 0x428884e2, 0x3f87b1fb ),
	NORM( 0xbf7fb47f, 0xbae98493, 0x3d446cd0 ),
	VERT( 0xc18d7bf1, 0x42884bc1, 0xbe6eb3f5 ),
	NORM( 0xbf7efe62, 0xbc00fcbb, 0x3db4b1c9 ),
	VERT( 0xc18bd879, 0x4288a85f, 0x3f85fccb ),
	NORM( 0x3f05240f, 0x3f5942a8, 0xbdc52b9a ),
	VERT( 0xc18c4831, 0x42881dc4, 0xbe76a91f ),
	NORM( 0x3efb0a75, 0xbf5f1357, 0x3c877a09 ),
	VERT( 0xc18c4420, 0x4288775f, 0xbe7f7f4a ),
	NORM( 0x3f07d15d, 0x3f586df8, 0xbd7bd99d ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_sftypin[]
START
VList      vertex_kihon11_Bip01_sftypin,
PList      strip_kihon11_Bip01_sftypin,
Center      -1.096485F, 67.490921F, -4.940417F,
Radius      20.068666F,
END

CNKOBJECT  object_kihon11_Bip01_sftypin[]
START
EvalFlags ( 0x00000010 ),
CNKModel   model_kihon11_Bip01_sftypin,
OPosition  ( -55.635731F,  0.018602F,  0.803779F ),
OAngle     (  0.000003F, 179.999879F, -89.999946F ),
OScale     (  1.030000F,  1.000000F,  1.070000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_kihon11_Bip01_pupil[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 30, 58, 80 ),
	MAmbi( 255, 7, 7, 7 ),
	MSpec( 15, 178, 178, 178 ),
	CnkS( 0x0 ), 42, _NB( UFO_0, 8 ),
	StripL(3),  5413, 5414, 5412, 
	StripL(3),  5416, 5417, 5415, 
	StripL(3),  5418, 5419, 5414, 
	StripR(5),  5422, 5421, 5414, 5420, 5419, 
	StripR(5),  5412, 5424, 5414, 5423, 5422, 
	StripL(3),  5425, 5426, 5417, 
	StripL(5),  5426, 5427, 5417, 5428, 5429, 
	StripR(5),  5415, 5431, 5417, 5430, 5429, 
	CnkNull(),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_pupil[]
START
VList      NULL,
PList      strip_kihon11_Bip01_pupil,
Center       0.015491F, 128.532440F, 11.716619F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_pupil[]
START
EvalFlags ( 0x00000014 ),
CNKModel   model_kihon11_Bip01_pupil,
OPosition  ( -55.635731F,  0.000256F,  0.932273F ),
OAngle     (  0.000003F, 179.999879F, -89.999946F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_kihon11_Bip01_sftypin,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_kihon11_Bip01_pinhead[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 204, 204, 204 ),
	MAmbi( 255, 76, 76, 76 ),
	MSpec( 12, 178, 178, 178 ),
	CnkS( 0x0 ), 108, _NB( UFO_0, 12 ),
	StripL(4),  5433, 5434, 5432, 5453, 
	StripL(5),  5437, 5435, 5436, 5463, 5467, 
	StripL(4),  5446, 5444, 5445, 5441, 
	StripL(31),  5449, 5447, 5448, 5438, 5450, 5440, 5453, 5457, 5432, 5458, 
                   5433, 5462, 5461, 5455, 5454, 5444, 5449, 5446, 5447, 5464, 
                   5465, 5436, 5466, 5467, 5439, 5468, 5443, 5441, 5442, 5444, 
                   5455, 
	StripR(6),  5460, 5459, 5452, 5451, 5448, 5450, 
	StripR(9),  5454, 5461, 5460, 5433, 5459, 5434, 5451, 5453, 5450, 
	StripL(9),  5464, 5446, 5437, 5445, 5435, 5441, 5463, 5468, 5467, 
	StripL(10),  5465, 5466, 5438, 5439, 5440, 5443, 5457, 5456, 5458, 5462, 
	StripL(3),  5436, 5464, 5437, 
	StripL(5),  5460, 5454, 5452, 5449, 5448, 
	StripR(5),  5462, 5455, 5456, 5442, 5443, 
	StripL(3),  5447, 5465, 5438, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_kihon11_Bip01_pinhead[]
START
	CnkV_VN(FV_CONT, 223),
	OffnbIdx(5432, 37),
	VERT( 0xc18ffedd, 0x42884d67, 0x400f9f91 ),
	NORM( 0xbf59f323, 0xbf042243, 0x3dbfc242 ),
	VERT( 0xc1928996, 0x4289afde, 0x404afa4a ),
	NORM( 0xbf59f300, 0xbf042281, 0x3dbfc1db ),
	VERT( 0xc1964683, 0x428ae463, 0x400fa9c9 ),
	NORM( 0xbf59f325, 0xbf042257, 0x3dbfbe58 ),
	VERT( 0xc18a351c, 0x42892db4, 0x4053c335 ),
	NORM( 0x3f59f2c0, 0x3f0422df, 0xbdbfc368 ),
	VERT( 0xc18d7b22, 0x428a7410, 0x40468766 ),
	NORM( 0x3f59f2f6, 0x3f042288, 0xbdbfc362 ),
	VERT( 0xc18b7b2e, 0x4289cab3, 0x40634aba ),
	NORM( 0x3f59f2fd, 0x3f042281, 0xbdbfc29c ),
	VERT( 0xc1912569, 0x428c0e79, 0x4056b87f ),
	NORM( 0x3e9be36f, 0x3f69ea7a, 0x3e89c107 ),
	VERT( 0xc19209c2, 0x428bec34, 0x3ffc7219 ),
	NORM( 0x3e9ba9dd, 0x3f47243a, 0xbf0cc961 ),
	VERT( 0xc195036e, 0x428baf01, 0x3ff2b4ee ),
	NORM( 0xbed69634, 0x3f0fdb35, 0xbf36904e ),
	VERT( 0xc1897d6b, 0x4288e62e, 0x4056ac08 ),
	NORM( 0x3f7378e7, 0xbe1c888d, 0x3e897d46 ),
	VERT( 0xc18ba06d, 0x42885d0d, 0x405a7a97 ),
	NORM( 0x3effb8ea, 0xbf3e3625, 0x3ee418eb ),
	VERT( 0xc18c9b2d, 0x4288376d, 0x3ff29991 ),
	NORM( 0x3e9bae18, 0xbf2188bd, 0xbf36b641 ),
	VERT( 0xc18d550b, 0x42892f44, 0x406f45e0 ),
	NORM( 0x3e92b8e6, 0xbe9dc0e6, 0x3f683be3 ),
	VERT( 0xc18b0b06, 0x4289a59e, 0x40699bd5 ),
	NORM( 0x3f5039b7, 0x3e33e4b6, 0x3f0df863 ),
	VERT( 0xc18d0e38, 0x428a8469, 0x4070bd3e ),
	NORM( 0x3f2bea82, 0x3ed04869, 0x3f1e8aa7 ),
	VERT( 0xc18f3623, 0x428b5db0, 0x4069a29d ),
	NORM( 0x3f083e52, 0x3f23b634, 0x3f0e0762 ),
	VERT( 0xc191e8d2, 0x428b1282, 0x406f4d53 ),
	NORM( 0xbe0f9ba3, 0x3ecab95b, 0x3f685208 ),
	VERT( 0xc18f8ac3, 0x428a23ea, 0x40771a66 ),
	NORM( 0x3da46afa, 0x3d456008, 0x3f7ee016 ),
	VERT( 0xc19408ad, 0x428bd4a1, 0x405a8846 ),
	NORM( 0xbedae906, 0x3f49424d, 0x3ee47a09 ),
	VERT( 0xc19633dd, 0x428b4a46, 0x405b2b62 ),
	NORM( 0xbf65a5de, 0x3e3db8dc, 0x3ecd689d ),
	VERT( 0xc1944498, 0x428a997e, 0x406e1581 ),
	NORM( 0xbf36801e, 0xbdec40e5, 0x3f311495 ),
	VERT( 0xc1971836, 0x428b2802, 0x4002abf2 ),
	NORM( 0xbf6875ee, 0x3d305c4a, 0xbed5525c ),
	VERT( 0xc1921cac, 0x4289c036, 0x40753022 ),
	NORM( 0xbf0f8e24, 0xbeae3d22, 0x3f413b0f ),
	VERT( 0xc190197a, 0x4288e16b, 0x406e0eb8 ),
	NORM( 0xbedd0849, 0xbf144502, 0x3f3106bd ),
	VERT( 0xc18e8be2, 0x428821fc, 0x405b1eed ),
	NORM( 0xbe803e9d, 0xbf619e29, 0x3ecd24aa ),
	VERT( 0xc18f7039, 0x4287ffb7, 0x40029f7d ),
	NORM( 0xbec3947a, 0xbf532016, 0xbed588bd ),
	VERT( 0xc18f4392, 0x42886982, 0x40583619 ),
	NORM( 0xbf59f2f9, 0xbf04229c, 0x3dbfbeb6 ),
	VERT( 0xc1958b33, 0x428b007e, 0x40584052 ),
	NORM( 0xbf59f2a1, 0xbf042335, 0x3dbfbda2 ),
	VERT( 0xc193f50b, 0x428a6f84, 0x4067c331 ),
	NORM( 0xbf59f300, 0xbf042296, 0x3dbfbdf4 ),
	VERT( 0xc1923044, 0x4289bd45, 0x406d972b ),
	NORM( 0xbf59f2fc, 0xbf0422b7, 0x3dbfb950 ),
	VERT( 0xc19089a4, 0x42890680, 0x4067bda0 ),
	NORM( 0xbf59f2f0, 0xbf04226f, 0x3dbfc950 ),
	VERT( 0xc18af069, 0x42891199, 0x400b2cac ),
	NORM( 0x3f59f2d7, 0x3f0422d5, 0xbdbfbf15 ),
	VERT( 0xc18d21d0, 0x428a8178, 0x40692447 ),
	NORM( 0x3f59f30e, 0x3f042295, 0xbdbfb9ce ),
	VERT( 0xc18ee697, 0x428b33b7, 0x4063504b ),
	NORM( 0x3f59f2ca, 0x3f0422f2, 0xbdbfbd9c ),
	VERT( 0xc1907cbf, 0x428bc4b0, 0x4053cd6e ),
	NORM( 0x3f59f2fa, 0x3f04228a, 0xbdbfc1dd ),
	VERT( 0xc191380b, 0x428ba895, 0x400b36e5 ),
	NORM( 0x3f59f2a6, 0x3f04230a, 0xbdbfc38e ),
	VERT( 0xc18a61c5, 0x4288c3ea, 0x3ffc592d ),
	NORM( 0x3f547fed, 0xbdb80943, 0xbf0ce474 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_pinhead[]
START
VList      vertex_kihon11_Bip01_pinhead,
PList      strip_kihon11_Bip01_pinhead,
Center      -18.036530F, 69.013855F,  2.878149F,
Radius       1.461200F,
END

CNKOBJECT  object_kihon11_Bip01_pinhead[]
START
EvalFlags ( 0x00000010 ),
CNKModel   model_kihon11_Bip01_pinhead,
OPosition  ( -55.635731F,  0.018602F,  0.803779F ),
OAngle     (  0.000003F, 179.999879F, -89.999946F ),
OScale     (  1.030000F,  1.000000F,  1.070000F ),
Child       NULL,
Sibling     object_kihon11_Bip01_pupil,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_kihon11_Bip01_pin2[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 204, 204, 204 ),
	MAmbi( 255, 76, 76, 76 ),
	MSpec( 12, 178, 178, 178 ),
	CnkS( 0x0 ), 104, _NB( UFO_0, 11 ),
	StripR(5),  5441, 5442, 5444, 5435, 5465, 
	StripL(7),  5432, 5434, 5458, 5457, 5441, 5445, 5444, 
	StripL(4),  5443, 5437, 5464, 5436, 
	StripL(8),  5433, 5460, 5461, 5453, 5452, 5440, 5449, 5450, 
	StripL(6),  5433, 5461, 5462, 5452, 5456, 5449, 
	StripL(4),  5433, 5462, 5463, 5456, 
	StripR(11),  5433, 5459, 5463, 5455, 5456, 5446, 5449, 5451, 5450, 5466, 
                   5467, 
	StripL(24),  5459, 5434, 5433, 5432, 5460, 5454, 5453, 5447, 5440, 5438, 
                   5439, 5468, 5467, 5436, 5466, 5465, 5451, 5444, 5446, 5445, 
                   5455, 5457, 5459, 5434, 
	StripL(8),  5436, 5468, 5464, 5438, 5443, 5447, 5448, 5454, 
	StripR(11),  5432, 5454, 5458, 5448, 5441, 5443, 5442, 5437, 5435, 5436, 
                   5465, 
	StripL(4),  5467, 5450, 5439, 5440, 
	CnkEnd()
END

VLIST      vertex_kihon11_Bip01_pin2[]
START
	CnkV_VN(FV_CONT, 223),
	OffnbIdx(5432, 37),
	VERT( 0x4187a1d6, 0x4285e5dc, 0xc0f3bfcd ),
	NORM( 0x3f3d6baf, 0xbf0421ca, 0xbedce134 ),
	VERT( 0x41890a53, 0x4284b157, 0xc0d30470 ),
	NORM( 0x3f3d6b83, 0xbf04229e, 0xbedcdfd0 ),
	VERT( 0x41829514, 0x42834ee0, 0xc0e4d11d ),
	NORM( 0x3f3d6bf9, 0xbf04222d, 0xbedcdf49 ),
	VERT( 0x41852d9c, 0x4284cc2c, 0xc0b87359 ),
	NORM( 0xbf3d6b37, 0x3f042284, 0x3edce112 ),
	VERT( 0x4184a54e, 0x4285758a, 0xc0c8c4c6 ),
	NORM( 0xbf3d6b79, 0x3f042297, 0x3edce004 ),
	VERT( 0x4182ffd8, 0x42842f2d, 0xc0bba8a1 ),
	NORM( 0xbf3d6bb5, 0x3f042344, 0x3edcdd97 ),
	VERT( 0x4182edf3, 0x4286edae, 0xc0f0abc4 ),
	NORM( 0xbf125462, 0x3f472486, 0xbe85a767 ),
	VERT( 0x4188cbb4, 0x42870ff2, 0xc0cafc97 ),
	NORM( 0xbdad3719, 0x3f69ea46, 0x3ecb7a90 ),
	VERT( 0x418b6668, 0x4286d61a, 0xc0d05444 ),
	NORM( 0x3f1bf22a, 0x3f494272, 0x3dd56276 ),
	VERT( 0x4184a3b9, 0x42835e87, 0xc0bc5693 ),
	NORM( 0xbe0b8b06, 0xbf3e35f8, 0x3f27bf0f ),
	VERT( 0x4182a39d, 0x4283e7a7, 0xc0b8c817 ),
	NORM( 0xbf1ac258, 0xbe1c8906, 0x3f4822a4 ),
	VERT( 0x41798bbc, 0x4283c563, 0xc0de773c ),
	NORM( 0xbf7e9ef0, 0xbdb808f7, 0x3d53abfa ),
	VERT( 0x41854bc6, 0x4284a717, 0xc0b4de91 ),
	NORM( 0xbea5b51d, 0x3e33e367, 0x3f6e0292 ),
	VERT( 0x41878e97, 0x428430bd, 0xc0b80add ),
	NORM( 0x3e9e7d2e, 0xbe9dc226, 0x3f664abd ),
	VERT( 0x4189ea59, 0x42852563, 0xc0ba27fa ),
	NORM( 0x3f0728b6, 0x3d4564fb, 0x3f590fd3 ),
	VERT( 0x4184f557, 0x4286b07a, 0xc0f9b5b9 ),
	NORM( 0xbdb35271, 0x3f0fdb06, 0xbf52918f ),
	VERT( 0x417c654e, 0x428338e6, 0xc0e5b80f ),
	NORM( 0xbf2b49ab, 0xbf2188a8, 0xbec907d7 ),
	VERT( 0x418b3cd9, 0x428613fb, 0xc0c2ed28 ),
	NORM( 0x3f271af4, 0x3ecab98b, 0x3f25572c ),
	VERT( 0x4188a5dd, 0x42865f29, 0xc0bec7fc ),
	NORM( 0xbdc7cda9, 0x3f23b620, 0x3f433849 ),
	VERT( 0x41877198, 0x428585e2, 0xc0b6cb6e ),
	NORM( 0xbe2f45df, 0x3ed04a42, 0x3f65b77a ),
	VERT( 0x418d0ae0, 0x42859af7, 0xc0c9079e ),
	NORM( 0x3f7c0bf4, 0xbdec3c25, 0x3e06d8d3 ),
	VERT( 0x418d30b7, 0x42864bc0, 0xc0d53c42 ),
	NORM( 0x3f75ad15, 0x3e3dbdc2, 0xbe587c87 ),
	VERT( 0x418752f4, 0x4286297b, 0xc0faeb67 ),
	NORM( 0x3ef6afe7, 0x3d305ae0, 0xbf600e37 ),
	VERT( 0x4189b0c8, 0x4283e2e5, 0xc0bf1e3b ),
	NORM( 0x3f4229af, 0xbf144569, 0x3e9900bf ),
	VERT( 0x418bd69d, 0x4284c1af, 0xc0c10b19 ),
	NORM( 0x3f665c76, 0xbeae3c85, 0x3e8bb756 ),
	VERT( 0x418708a4, 0x42832375, 0xc0c307c1 ),
	NORM( 0x3ee124e3, 0xbf619e09, 0x3e311a87 ),
	VERT( 0x41812ae2, 0x42830130, 0xc0e8b6e6 ),
	NORM( 0x3d70dc79, 0xbf53200c, 0xbf0fff98 ),
	VERT( 0x418764db, 0x42836afb, 0xc0c5e84a ),
	NORM( 0x3f3d6b8a, 0xbf042294, 0xbedcdfd1 ),
	VERT( 0x418c719a, 0x428601f7, 0xc0d4d6fb ),
	NORM( 0x3f3d6bee, 0xbf0421da, 0xbedce037 ),
	VERT( 0x418c5293, 0x428570fd, 0xc0cad490 ),
	NORM( 0x3f3d6c58, 0xbf042249, 0xbedcddbf ),
	VERT( 0x418b55ad, 0x4284bebe, 0xc0c44743 ),
	NORM( 0x3f3d6ad0, 0xbf042249, 0xbedce300 ),
	VERT( 0x418992a1, 0x428407f9, 0xc0c2b303 ),
	NORM( 0x3f3d6bae, 0xbf04233b, 0xbedcddc2 ),
	VERT( 0x417c6025, 0x42841312, 0xc0da9172 ),
	NORM( 0xbf3d6b2a, 0x3f0422fc, 0x3edce01f ),
	VERT( 0x4186f0ac, 0x428582f1, 0xc0ba07a0 ),
	NORM( 0xbf3d6b54, 0x3f0422df, 0x3edcdfd5 ),
	VERT( 0x4187ed8f, 0x4286352f, 0xc0c094e6 ),
	NORM( 0xbf3d6b95, 0x3f042284, 0x3edcdfd1 ),
	VERT( 0x41880c96, 0x4286c629, 0xc0ca9751 ),
	NORM( 0xbf3d6ba2, 0x3f042238, 0x3edce05a ),
	VERT( 0x41833cd0, 0x4286aa0e, 0xc0e98023 ),
	NORM( 0xbf3d6b96, 0x3f042271, 0x3edcdffc ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_pin2[]
START
VList      vertex_kihon11_Bip01_pin2,
PList      strip_kihon11_Bip01_pin2,
Center      16.622700F, 66.516731F, -6.746702F,
Radius       1.577587F,
END

CNKOBJECT  object_kihon11_Bip01_pin2[]
START
EvalFlags ( 0x00000010 ),
CNKModel   model_kihon11_Bip01_pin2,
OPosition  ( -55.635731F,  0.018602F,  0.803779F ),
OAngle     (  0.000003F, 179.999879F, -89.999946F ),
OScale     (  1.030000F,  1.000000F,  1.070000F ),
Child       NULL,
Sibling     object_kihon11_Bip01_pinhead,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_kihon11_Bip01_lips[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 185, 124, 156 ),
	MAmbi( 255, 127, 127, 127 ),
	MSpec( 15, 210, 191, 200 ),
	CnkT_TID( 0x0|FDA_100 ), _TID( FFM_BF, 1 ),
	CnkS_UVN( 0x0 ), 312, _NB( UFO_0, 11 ),
	StripL(10),  
	5362, 	Uvn( 0, 255 ),
	5382, 	Uvn( 0, 255 ),
	5381, 	Uvn( 0, 255 ),
	5379, 	Uvn( 0, 255 ),
	5367, 	Uvn( 0, 255 ),
	5378, 	Uvn( 0, 255 ),
	5383, 	Uvn( 0, 255 ),
	5376, 	Uvn( 0, 255 ),
	5384, 	Uvn( 0, 255 ),
	5375, 	Uvn( 0, 255 ),
	StripR(8),  
	5364, 	Uvn( 0, 255 ),
	5372, 	Uvn( 0, 255 ),
	5369, 	Uvn( 0, 255 ),
	5371, 	Uvn( 0, 255 ),
	5370, 	Uvn( 0, 255 ),
	5380, 	Uvn( 0, 255 ),
	5373, 	Uvn( 0, 255 ),
	5385, 	Uvn( 0, 255 ),
	StripR(7),  
	5394, 	Uvn( 0, 255 ),
	5393, 	Uvn( 0, 255 ),
	5392, 	Uvn( 0, 255 ),
	5385, 	Uvn( 0, 255 ),
	5401, 	Uvn( 0, 255 ),
	5408, 	Uvn( 0, 255 ),
	5406, 	Uvn( 0, 255 ),
	StripL(18),  
	5397, 	Uvn( 0, 255 ),
	5398, 	Uvn( 0, 255 ),
	5399, 	Uvn( 0, 255 ),
	5401, 	Uvn( 0, 255 ),
	5395, 	Uvn( 0, 255 ),
	5392, 	Uvn( 0, 255 ),
	5407, 	Uvn( 0, 255 ),
	5394, 	Uvn( 0, 255 ),
	5402, 	Uvn( 0, 255 ),
	5375, 	Uvn( 0, 255 ),
	5374, 	Uvn( 0, 255 ),
	5376, 	Uvn( 0, 255 ),
	5387, 	Uvn( 0, 255 ),
	5378, 	Uvn( 0, 255 ),
	5377, 	Uvn( 0, 255 ),
	5379, 	Uvn( 0, 255 ),
	5386, 	Uvn( 0, 255 ),
	5382, 	Uvn( 0, 255 ),
	StripR(13),  
	5398, 	Uvn( 0, 255 ),
	5400, 	Uvn( 0, 255 ),
	5397, 	Uvn( 0, 255 ),
	5389, 	Uvn( 0, 255 ),
	5390, 	Uvn( 0, 255 ),
	5391, 	Uvn( 0, 255 ),
	5396, 	Uvn( 0, 255 ),
	5403, 	Uvn( 0, 255 ),
	5404, 	Uvn( 0, 255 ),
	5405, 	Uvn( 0, 255 ),
	5402, 	Uvn( 0, 255 ),
	5410, 	Uvn( 0, 255 ),
	5374, 	Uvn( 0, 255 ),
	StripL(3),  
	5406, 	Uvn( 0, 255 ),
	5401, 	Uvn( 0, 255 ),
	5398, 	Uvn( 0, 255 ),
	StripL(15),  
	5375, 	Uvn( 0, 255 ),
	5394, 	Uvn( 0, 255 ),
	5384, 	Uvn( 0, 255 ),
	5393, 	Uvn( 0, 255 ),
	5388, 	Uvn( 0, 255 ),
	5385, 	Uvn( 0, 255 ),
	5365, 	Uvn( 0, 255 ),
	5373, 	Uvn( 0, 255 ),
	5366, 	Uvn( 0, 255 ),
	5370, 	Uvn( 0, 255 ),
	5368, 	Uvn( 0, 255 ),
	5369, 	Uvn( 0, 255 ),
	5363, 	Uvn( 0, 255 ),
	5364, 	Uvn( 0, 255 ),
	5362, 	Uvn( 0, 255 ),
	StripL(3),  
	5408, 	Uvn( 0, 255 ),
	5380, 	Uvn( 0, 255 ),
	5385, 	Uvn( 0, 255 ),
	StripL(10),  
	5384, 	Uvn( 0, 255 ),
	5388, 	Uvn( 0, 255 ),
	5383, 	Uvn( 0, 255 ),
	5365, 	Uvn( 0, 255 ),
	5367, 	Uvn( 0, 255 ),
	5366, 	Uvn( 0, 255 ),
	5381, 	Uvn( 0, 255 ),
	5368, 	Uvn( 0, 255 ),
	5362, 	Uvn( 0, 255 ),
	5363, 	Uvn( 0, 255 ),
	StripR(5),  
	5391, 	Uvn( 0, 255 ),
	5411, 	Uvn( 0, 255 ),
	5403, 	Uvn( 0, 255 ),
	5409, 	Uvn( 0, 255 ),
	5405, 	Uvn( 0, 255 ),
	StripL(8),  
	5402, 	Uvn( 0, 255 ),
	5404, 	Uvn( 0, 255 ),
	5407, 	Uvn( 0, 255 ),
	5396, 	Uvn( 0, 255 ),
	5395, 	Uvn( 0, 255 ),
	5390, 	Uvn( 0, 255 ),
	5399, 	Uvn( 0, 255 ),
	5397, 	Uvn( 0, 255 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_lips[]
START
VList      NULL,
PList      strip_kihon11_Bip01_lips,
Center      -0.000004F, 118.190369F, 14.291990F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_lips[]
START
EvalFlags ( 0x00000014 ),
CNKModel   model_kihon11_Bip01_lips,
OPosition  ( -55.635731F,  0.000256F,  0.932273F ),
OAngle     (  0.000003F, 179.999879F, -89.999946F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_kihon11_Bip01_pin2,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_kihon11_Bip01_iris[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 82, 135, 255 ),
	MAmbi( 255, 76, 76, 76 ),
	MSpec( 15, 106, 139, 157 ),
	CnkS( 0x0 ), 48, _NB( UFO_0, 2 ),
	StripL(22),  5336, 5341, 5334, 5333, 5327, 5325, 5326, 5337, 5338, 5340, 
                   5332, 5331, 5330, 5328, 5329, 5339, 5324, 5322, 5323, 5335, 
                   5336, 5341, 
	StripL(22),  5350, 5348, 5349, 5359, 5344, 5342, 5343, 5355, 5356, 5361, 
                   5354, 5353, 5347, 5345, 5346, 5357, 5358, 5360, 5352, 5351, 
                   5350, 5348, 
	CnkNull(),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_iris[]
START
VList      NULL,
PList      strip_kihon11_Bip01_iris,
Center       0.015286F, 128.490662F, 11.585325F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_iris[]
START
EvalFlags ( 0x00000014 ),
CNKModel   model_kihon11_Bip01_iris,
OPosition  ( -55.635731F,  0.000256F,  0.932273F ),
OAngle     (  0.000003F, 179.999879F, -89.999946F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_kihon11_Bip01_lips,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_kihon11_Bip01_eyeball[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 255, 255, 255 ),
	MAmbi( 255, 76, 76, 76 ),
	MSpec( 12, 224, 223, 223 ),
	CnkS( 0x0 ), 52, _NB( UFO_0, 7 ),
	StripL(3),  5289, 5290, 5288, 
	StripL(3),  5296, 5297, 5294, 
	StripR(15),  5303, 5294, 5295, 5296, 5304, 5302, 5291, 5293, 5292, 5299, 
                   5298, 5301, 5288, 5300, 5290, 
	StripL(5),  5316, 5317, 5307, 5305, 5306, 
	StripL(3),  5319, 5313, 5312, 
	StripR(8),  5317, 5321, 5316, 5315, 5309, 5308, 5310, 5318, 
	StripL(7),  5308, 5318, 5320, 5312, 5311, 5313, 5314, 
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_eyeball[]
START
VList      NULL,
PList      strip_kihon11_Bip01_eyeball,
Center      -0.000001F, 128.466461F, 10.741331F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_eyeball[]
START
EvalFlags ( 0x00000014 ),
CNKModel   model_kihon11_Bip01_eyeball,
OPosition  ( -55.635731F,  0.000256F,  0.932273F ),
OAngle     (  0.000003F, 179.999879F, -89.999946F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_kihon11_Bip01_iris,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_kihon11_Bip01_diaper[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 204, 204, 204 ),
	MAmbi( 255, 76, 76, 76 ),
	MSpec( 15, 178, 178, 178 ),
	CnkT_TID( 0x0|FDA_100 ), _TID( FFM_BF, 2 ),
	CnkS_UVN( 0x0 ), 3134, _NB( UFO_0, 82 ),
	StripR(27),  
	5470, 	Uvn( 0, 255 ),
	5461, 	Uvn( 0, 255 ),
	5474, 	Uvn( 0, 255 ),
	5475, 	Uvn( 0, 255 ),
	5480, 	Uvn( 0, 255 ),
	5499, 	Uvn( 0, 255 ),
	5494, 	Uvn( 0, 255 ),
	5526, 	Uvn( 0, 255 ),
	5513, 	Uvn( 0, 255 ),
	5538, 	Uvn( 0, 255 ),
	5535, 	Uvn( 0, 255 ),
	5555, 	Uvn( 0, 255 ),
	5557, 	Uvn( 0, 255 ),
	5583, 	Uvn( 0, 255 ),
	5581, 	Uvn( 0, 255 ),
	5643, 	Uvn( 0, 255 ),
	5641, 	Uvn( 0, 255 ),
	5719, 	Uvn( 0, 255 ),
	5709, 	Uvn( 0, 255 ),
	5756, 	Uvn( 0, 255 ),
	5750, 	Uvn( 0, 255 ),
	5795, 	Uvn( 0, 255 ),
	5796, 	Uvn( 0, 255 ),
	5802, 	Uvn( 0, 255 ),
	5801, 	Uvn( 0, 255 ),
	5806, 	Uvn( 0, 255 ),
	5807, 	Uvn( 0, 255 ),
	StripR(42),  
	5483, 	Uvn( 0, 255 ),
	5454, 	Uvn( 0, 255 ),
	5495, 	Uvn( 0, 255 ),
	5476, 	Uvn( 0, 255 ),
	5509, 	Uvn( 0, 255 ),
	5527, 	Uvn( 0, 255 ),
	5533, 	Uvn( 0, 255 ),
	5556, 	Uvn( 0, 255 ),
	5551, 	Uvn( 0, 255 ),
	5594, 	Uvn( 0, 255 ),
	5587, 	Uvn( 0, 255 ),
	5654, 	Uvn( 0, 255 ),
	5646, 	Uvn( 0, 255 ),
	5722, 	Uvn( 0, 255 ),
	5717, 	Uvn( 0, 255 ),
	5748, 	Uvn( 0, 255 ),
	5752, 	Uvn( 0, 255 ),
	5776, 	Uvn( 0, 255 ),
	5794, 	Uvn( 0, 255 ),
	5811, 	Uvn( 0, 255 ),
	5805, 	Uvn( 0, 255 ),
	5826, 	Uvn( 0, 255 ),
	5814, 	Uvn( 0, 255 ),
	5820, 	Uvn( 0, 255 ),
	5806, 	Uvn( 0, 255 ),
	5813, 	Uvn( 0, 255 ),
	5807, 	Uvn( 0, 255 ),
	5817, 	Uvn( 0, 255 ),
	5808, 	Uvn( 0, 255 ),
	5816, 	Uvn( 0, 255 ),
	5803, 	Uvn( 0, 255 ),
	5830, 	Uvn( 0, 255 ),
	5812, 	Uvn( 0, 255 ),
	5840, 	Uvn( 0, 255 ),
	5828, 	Uvn( 0, 255 ),
	5850, 	Uvn( 0, 255 ),
	5836, 	Uvn( 0, 255 ),
	5858, 	Uvn( 0, 255 ),
	5844, 	Uvn( 0, 255 ),
	5837, 	Uvn( 0, 255 ),
	5822, 	Uvn( 0, 255 ),
	5788, 	Uvn( 0, 255 ),
	StripR(11),  
	5579, 	Uvn( 0, 255 ),
	5540, 	Uvn( 0, 255 ),
	5536, 	Uvn( 0, 255 ),
	5504, 	Uvn( 0, 255 ),
	5496, 	Uvn( 0, 255 ),
	5432, 	Uvn( 0, 255 ),
	5434, 	Uvn( 0, 255 ),
	5433, 	Uvn( 0, 255 ),
	5446, 	Uvn( 0, 255 ),
	5435, 	Uvn( 0, 255 ),
	5466, 	Uvn( 0, 255 ),
	StripR(5),  
	5568, 	Uvn( 0, 255 ),
	5614, 	Uvn( 0, 255 ),
	5608, 	Uvn( 0, 255 ),
	5663, 	Uvn( 0, 255 ),
	5664, 	Uvn( 0, 255 ),
	StripL(3),  
	5663, 	Uvn( 0, 255 ),
	5659, 	Uvn( 0, 255 ),
	5614, 	Uvn( 0, 255 ),
	StripL(3),  
	5665, 	Uvn( 0, 255 ),
	5648, 	Uvn( 0, 255 ),
	5653, 	Uvn( 0, 255 ),
	StripL(13),  
	5669, 	Uvn( 0, 255 ),
	5644, 	Uvn( 0, 255 ),
	5651, 	Uvn( 0, 255 ),
	5627, 	Uvn( 0, 255 ),
	5639, 	Uvn( 0, 255 ),
	5621, 	Uvn( 0, 255 ),
	5624, 	Uvn( 0, 255 ),
	5612, 	Uvn( 0, 255 ),
	5600, 	Uvn( 0, 255 ),
	5580, 	Uvn( 0, 255 ),
	5578, 	Uvn( 0, 255 ),
	5547, 	Uvn( 0, 255 ),
	5545, 	Uvn( 0, 255 ),
	StripL(5),  
	5644, 	Uvn( 0, 255 ),
	5633, 	Uvn( 0, 255 ),
	5627, 	Uvn( 0, 255 ),
	5618, 	Uvn( 0, 255 ),
	5621, 	Uvn( 0, 255 ),
	StripL(12),  
	5640, 	Uvn( 0, 255 ),
	5652, 	Uvn( 0, 255 ),
	5667, 	Uvn( 0, 255 ),
	5691, 	Uvn( 0, 255 ),
	5718, 	Uvn( 0, 255 ),
	5745, 	Uvn( 0, 255 ),
	5778, 	Uvn( 0, 255 ),
	5772, 	Uvn( 0, 255 ),
	5856, 	Uvn( 0, 255 ),
	5891, 	Uvn( 0, 255 ),
	5892, 	Uvn( 0, 255 ),
	5890, 	Uvn( 0, 255 ),
	StripL(13),  
	5522, 	Uvn( 0, 255 ),
	5515, 	Uvn( 0, 255 ),
	5471, 	Uvn( 0, 255 ),
	5458, 	Uvn( 0, 255 ),
	5457, 	Uvn( 0, 255 ),
	5451, 	Uvn( 0, 255 ),
	5455, 	Uvn( 0, 255 ),
	5445, 	Uvn( 0, 255 ),
	5448, 	Uvn( 0, 255 ),
	5441, 	Uvn( 0, 255 ),
	5453, 	Uvn( 0, 255 ),
	5442, 	Uvn( 0, 255 ),
	5467, 	Uvn( 0, 255 ),
	StripR(8),  
	5458, 	Uvn( 0, 255 ),
	5451, 	Uvn( 0, 255 ),
	5438, 	Uvn( 0, 255 ),
	5445, 	Uvn( 0, 255 ),
	5437, 	Uvn( 0, 255 ),
	5441, 	Uvn( 0, 255 ),
	5436, 	Uvn( 0, 255 ),
	5442, 	Uvn( 0, 255 ),
	StripR(5),  
	5438, 	Uvn( 0, 255 ),
	5444, 	Uvn( 0, 255 ),
	5458, 	Uvn( 0, 255 ),
	5511, 	Uvn( 0, 255 ),
	5515, 	Uvn( 0, 255 ),
	StripL(9),  
	5564, 	Uvn( 0, 255 ),
	5562, 	Uvn( 0, 255 ),
	5512, 	Uvn( 0, 255 ),
	5520, 	Uvn( 0, 255 ),
	5463, 	Uvn( 0, 255 ),
	5477, 	Uvn( 0, 255 ),
	5464, 	Uvn( 0, 255 ),
	5481, 	Uvn( 0, 255 ),
	5462, 	Uvn( 0, 255 ),
	StripR(6),  
	5871, 	Uvn( 0, 255 ),
	5862, 	Uvn( 0, 255 ),
	5874, 	Uvn( 0, 255 ),
	5864, 	Uvn( 0, 255 ),
	5882, 	Uvn( 0, 255 ),
	5867, 	Uvn( 0, 255 ),
	StripL(3),  
	5603, 	Uvn( 0, 255 ),
	5703, 	Uvn( 0, 255 ),
	5607, 	Uvn( 0, 255 ),
	StripR(7),  
	5604, 	Uvn( 0, 255 ),
	5602, 	Uvn( 0, 255 ),
	5685, 	Uvn( 0, 255 ),
	5690, 	Uvn( 0, 255 ),
	5740, 	Uvn( 0, 255 ),
	5753, 	Uvn( 0, 255 ),
	5809, 	Uvn( 0, 255 ),
	StripR(28),  
	5609, 	Uvn( 0, 255 ),
	5604, 	Uvn( 0, 255 ),
	5683, 	Uvn( 0, 255 ),
	5685, 	Uvn( 0, 255 ),
	5737, 	Uvn( 0, 255 ),
	5740, 	Uvn( 0, 255 ),
	5797, 	Uvn( 0, 255 ),
	5809, 	Uvn( 0, 255 ),
	5851, 	Uvn( 0, 255 ),
	5849, 	Uvn( 0, 255 ),
	5866, 	Uvn( 0, 255 ),
	5858, 	Uvn( 0, 255 ),
	5859, 	Uvn( 0, 255 ),
	5850, 	Uvn( 0, 255 ),
	5853, 	Uvn( 0, 255 ),
	5840, 	Uvn( 0, 255 ),
	5843, 	Uvn( 0, 255 ),
	5830, 	Uvn( 0, 255 ),
	5832, 	Uvn( 0, 255 ),
	5816, 	Uvn( 0, 255 ),
	5821, 	Uvn( 0, 255 ),
	5817, 	Uvn( 0, 255 ),
	5823, 	Uvn( 0, 255 ),
	5813, 	Uvn( 0, 255 ),
	5824, 	Uvn( 0, 255 ),
	5820, 	Uvn( 0, 255 ),
	5818, 	Uvn( 0, 255 ),
	5826, 	Uvn( 0, 255 ),
	StripL(11),  
	5609, 	Uvn( 0, 255 ),
	5616, 	Uvn( 0, 255 ),
	5668, 	Uvn( 0, 255 ),
	5658, 	Uvn( 0, 255 ),
	5686, 	Uvn( 0, 255 ),
	5675, 	Uvn( 0, 255 ),
	5730, 	Uvn( 0, 255 ),
	5718, 	Uvn( 0, 255 ),
	5754, 	Uvn( 0, 255 ),
	5778, 	Uvn( 0, 255 ),
	5777, 	Uvn( 0, 255 ),
	StripL(6),  
	5876, 	Uvn( 0, 255 ),
	5890, 	Uvn( 0, 255 ),
	5889, 	Uvn( 0, 255 ),
	5891, 	Uvn( 0, 255 ),
	5781, 	Uvn( 0, 255 ),
	5772, 	Uvn( 0, 255 ),
	StripL(4),  
	5835, 	Uvn( 0, 255 ),
	5841, 	Uvn( 0, 255 ),
	5879, 	Uvn( 0, 255 ),
	5886, 	Uvn( 0, 255 ),
	StripL(5),  
	5625, 	Uvn( 0, 255 ),
	5636, 	Uvn( 0, 255 ),
	5656, 	Uvn( 0, 255 ),
	5640, 	Uvn( 0, 255 ),
	5667, 	Uvn( 0, 255 ),
	StripR(6),  
	5691, 	Uvn( 0, 255 ),
	5745, 	Uvn( 0, 255 ),
	5725, 	Uvn( 0, 255 ),
	5772, 	Uvn( 0, 255 ),
	5732, 	Uvn( 0, 255 ),
	5781, 	Uvn( 0, 255 ),
	StripR(7),  
	5718, 	Uvn( 0, 255 ),
	5667, 	Uvn( 0, 255 ),
	5675, 	Uvn( 0, 255 ),
	5656, 	Uvn( 0, 255 ),
	5658, 	Uvn( 0, 255 ),
	5625, 	Uvn( 0, 255 ),
	5616, 	Uvn( 0, 255 ),
	StripL(13),  
	5652, 	Uvn( 0, 255 ),
	5671, 	Uvn( 0, 255 ),
	5691, 	Uvn( 0, 255 ),
	5678, 	Uvn( 0, 255 ),
	5725, 	Uvn( 0, 255 ),
	5687, 	Uvn( 0, 255 ),
	5732, 	Uvn( 0, 255 ),
	5736, 	Uvn( 0, 255 ),
	5781, 	Uvn( 0, 255 ),
	5784, 	Uvn( 0, 255 ),
	5889, 	Uvn( 0, 255 ),
	5885, 	Uvn( 0, 255 ),
	5876, 	Uvn( 0, 255 ),
	StripR(5),  
	5694, 	Uvn( 0, 255 ),
	5692, 	Uvn( 0, 255 ),
	5697, 	Uvn( 0, 255 ),
	5696, 	Uvn( 0, 255 ),
	5714, 	Uvn( 0, 255 ),
	StripR(10),  
	5645, 	Uvn( 0, 255 ),
	5632, 	Uvn( 0, 255 ),
	5624, 	Uvn( 0, 255 ),
	5619, 	Uvn( 0, 255 ),
	5600, 	Uvn( 0, 255 ),
	5596, 	Uvn( 0, 255 ),
	5578, 	Uvn( 0, 255 ),
	5571, 	Uvn( 0, 255 ),
	5545, 	Uvn( 0, 255 ),
	5543, 	Uvn( 0, 255 ),
	StripL(8),  
	5624, 	Uvn( 0, 255 ),
	5645, 	Uvn( 0, 255 ),
	5639, 	Uvn( 0, 255 ),
	5660, 	Uvn( 0, 255 ),
	5651, 	Uvn( 0, 255 ),
	5662, 	Uvn( 0, 255 ),
	5669, 	Uvn( 0, 255 ),
	5677, 	Uvn( 0, 255 ),
	StripL(9),  
	5700, 	Uvn( 0, 255 ),
	5716, 	Uvn( 0, 255 ),
	5723, 	Uvn( 0, 255 ),
	5731, 	Uvn( 0, 255 ),
	5735, 	Uvn( 0, 255 ),
	5758, 	Uvn( 0, 255 ),
	5760, 	Uvn( 0, 255 ),
	5769, 	Uvn( 0, 255 ),
	5771, 	Uvn( 0, 255 ),
	StripL(9),  
	5670, 	Uvn( 0, 255 ),
	5682, 	Uvn( 0, 255 ),
	5684, 	Uvn( 0, 255 ),
	5713, 	Uvn( 0, 255 ),
	5724, 	Uvn( 0, 255 ),
	5727, 	Uvn( 0, 255 ),
	5739, 	Uvn( 0, 255 ),
	5743, 	Uvn( 0, 255 ),
	5765, 	Uvn( 0, 255 ),
	StripR(6),  
	5682, 	Uvn( 0, 255 ),
	5713, 	Uvn( 0, 255 ),
	5688, 	Uvn( 0, 255 ),
	5727, 	Uvn( 0, 255 ),
	5689, 	Uvn( 0, 255 ),
	5743, 	Uvn( 0, 255 ),
	StripL(3),  
	5818, 	Uvn( 0, 255 ),
	5824, 	Uvn( 0, 255 ),
	5815, 	Uvn( 0, 255 ),
	StripL(9),  
	5823, 	Uvn( 0, 255 ),
	5821, 	Uvn( 0, 255 ),
	5827, 	Uvn( 0, 255 ),
	5832, 	Uvn( 0, 255 ),
	5845, 	Uvn( 0, 255 ),
	5843, 	Uvn( 0, 255 ),
	5861, 	Uvn( 0, 255 ),
	5853, 	Uvn( 0, 255 ),
	5859, 	Uvn( 0, 255 ),
	StripL(16),  
	5456, 	Uvn( 0, 255 ),
	5467, 	Uvn( 0, 255 ),
	5443, 	Uvn( 0, 255 ),
	5442, 	Uvn( 0, 255 ),
	5440, 	Uvn( 0, 255 ),
	5436, 	Uvn( 0, 255 ),
	5462, 	Uvn( 0, 255 ),
	5437, 	Uvn( 0, 255 ),
	5464, 	Uvn( 0, 255 ),
	5438, 	Uvn( 0, 255 ),
	5463, 	Uvn( 0, 255 ),
	5444, 	Uvn( 0, 255 ),
	5512, 	Uvn( 0, 255 ),
	5511, 	Uvn( 0, 255 ),
	5564, 	Uvn( 0, 255 ),
	5560, 	Uvn( 0, 255 ),
	StripL(5),  
	5831, 	Uvn( 0, 255 ),
	5815, 	Uvn( 0, 255 ),
	5829, 	Uvn( 0, 255 ),
	5824, 	Uvn( 0, 255 ),
	5823, 	Uvn( 0, 255 ),
	StripR(62),  
	5831, 	Uvn( 0, 255 ),
	5834, 	Uvn( 0, 255 ),
	5829, 	Uvn( 0, 255 ),
	5847, 	Uvn( 0, 255 ),
	5842, 	Uvn( 0, 255 ),
	5855, 	Uvn( 0, 255 ),
	5854, 	Uvn( 0, 255 ),
	5862, 	Uvn( 0, 255 ),
	5861, 	Uvn( 0, 255 ),
	5871, 	Uvn( 0, 255 ),
	5875, 	Uvn( 0, 255 ),
	5880, 	Uvn( 0, 255 ),
	5877, 	Uvn( 0, 255 ),
	5878, 	Uvn( 0, 255 ),
	5887, 	Uvn( 0, 255 ),
	5884, 	Uvn( 0, 255 ),
	5869, 	Uvn( 0, 255 ),
	5863, 	Uvn( 0, 255 ),
	5838, 	Uvn( 0, 255 ),
	5833, 	Uvn( 0, 255 ),
	5777, 	Uvn( 0, 255 ),
	5835, 	Uvn( 0, 255 ),
	5778, 	Uvn( 0, 255 ),
	5841, 	Uvn( 0, 255 ),
	5856, 	Uvn( 0, 255 ),
	5886, 	Uvn( 0, 255 ),
	5892, 	Uvn( 0, 255 ),
	5888, 	Uvn( 0, 255 ),
	5890, 	Uvn( 0, 255 ),
	5882, 	Uvn( 0, 255 ),
	5876, 	Uvn( 0, 255 ),
	5867, 	Uvn( 0, 255 ),
	5860, 	Uvn( 0, 255 ),
	5864, 	Uvn( 0, 255 ),
	5857, 	Uvn( 0, 255 ),
	5862, 	Uvn( 0, 255 ),
	5852, 	Uvn( 0, 255 ),
	5855, 	Uvn( 0, 255 ),
	5846, 	Uvn( 0, 255 ),
	5847, 	Uvn( 0, 255 ),
	5839, 	Uvn( 0, 255 ),
	5834, 	Uvn( 0, 255 ),
	5825, 	Uvn( 0, 255 ),
	5831, 	Uvn( 0, 255 ),
	5819, 	Uvn( 0, 255 ),
	5815, 	Uvn( 0, 255 ),
	5804, 	Uvn( 0, 255 ),
	5787, 	Uvn( 0, 255 ),
	5783, 	Uvn( 0, 255 ),
	5779, 	Uvn( 0, 255 ),
	5775, 	Uvn( 0, 255 ),
	5771, 	Uvn( 0, 255 ),
	5768, 	Uvn( 0, 255 ),
	5760, 	Uvn( 0, 255 ),
	5757, 	Uvn( 0, 255 ),
	5735, 	Uvn( 0, 255 ),
	5734, 	Uvn( 0, 255 ),
	5723, 	Uvn( 0, 255 ),
	5720, 	Uvn( 0, 255 ),
	5700, 	Uvn( 0, 255 ),
	5708, 	Uvn( 0, 255 ),
	5704, 	Uvn( 0, 255 ),
	StripL(3),  
	5452, 	Uvn( 0, 255 ),
	5466, 	Uvn( 0, 255 ),
	5446, 	Uvn( 0, 255 ),
	StripL(3),  
	5484, 	Uvn( 0, 255 ),
	5487, 	Uvn( 0, 255 ),
	5490, 	Uvn( 0, 255 ),
	StripL(40),  
	5490, 	Uvn( 0, 255 ),
	5491, 	Uvn( 0, 255 ),
	5484, 	Uvn( 0, 255 ),
	5485, 	Uvn( 0, 255 ),
	5466, 	Uvn( 0, 255 ),
	5470, 	Uvn( 0, 255 ),
	5435, 	Uvn( 0, 255 ),
	5461, 	Uvn( 0, 255 ),
	5433, 	Uvn( 0, 255 ),
	5483, 	Uvn( 0, 255 ),
	5432, 	Uvn( 0, 255 ),
	5454, 	Uvn( 0, 255 ),
	5504, 	Uvn( 0, 255 ),
	5518, 	Uvn( 0, 255 ),
	5540, 	Uvn( 0, 255 ),
	5553, 	Uvn( 0, 255 ),
	5579, 	Uvn( 0, 255 ),
	5591, 	Uvn( 0, 255 ),
	5622, 	Uvn( 0, 255 ),
	5650, 	Uvn( 0, 255 ),
	5649, 	Uvn( 0, 255 ),
	5657, 	Uvn( 0, 255 ),
	5666, 	Uvn( 0, 255 ),
	5670, 	Uvn( 0, 255 ),
	5672, 	Uvn( 0, 255 ),
	5684, 	Uvn( 0, 255 ),
	5681, 	Uvn( 0, 255 ),
	5705, 	Uvn( 0, 255 ),
	5715, 	Uvn( 0, 255 ),
	5733, 	Uvn( 0, 255 ),
	5738, 	Uvn( 0, 255 ),
	5763, 	Uvn( 0, 255 ),
	5764, 	Uvn( 0, 255 ),
	5770, 	Uvn( 0, 255 ),
	5767, 	Uvn( 0, 255 ),
	5774, 	Uvn( 0, 255 ),
	5769, 	Uvn( 0, 255 ),
	5780, 	Uvn( 0, 255 ),
	5771, 	Uvn( 0, 255 ),
	5779, 	Uvn( 0, 255 ),
	StripL(29),  
	5803, 	Uvn( 0, 255 ),
	5808, 	Uvn( 0, 255 ),
	5799, 	Uvn( 0, 255 ),
	5800, 	Uvn( 0, 255 ),
	5791, 	Uvn( 0, 255 ),
	5790, 	Uvn( 0, 255 ),
	5785, 	Uvn( 0, 255 ),
	5746, 	Uvn( 0, 255 ),
	5742, 	Uvn( 0, 255 ),
	5702, 	Uvn( 0, 255 ),
	5693, 	Uvn( 0, 255 ),
	5629, 	Uvn( 0, 255 ),
	5628, 	Uvn( 0, 255 ),
	5588, 	Uvn( 0, 255 ),
	5590, 	Uvn( 0, 255 ),
	5558, 	Uvn( 0, 255 ),
	5561, 	Uvn( 0, 255 ),
	5534, 	Uvn( 0, 255 ),
	5537, 	Uvn( 0, 255 ),
	5521, 	Uvn( 0, 255 ),
	5525, 	Uvn( 0, 255 ),
	5507, 	Uvn( 0, 255 ),
	5514, 	Uvn( 0, 255 ),
	5493, 	Uvn( 0, 255 ),
	5502, 	Uvn( 0, 255 ),
	5489, 	Uvn( 0, 255 ),
	5492, 	Uvn( 0, 255 ),
	5485, 	Uvn( 0, 255 ),
	5491, 	Uvn( 0, 255 ),
	StripL(10),  
	5833, 	Uvn( 0, 255 ),
	5835, 	Uvn( 0, 255 ),
	5863, 	Uvn( 0, 255 ),
	5879, 	Uvn( 0, 255 ),
	5881, 	Uvn( 0, 255 ),
	5886, 	Uvn( 0, 255 ),
	5883, 	Uvn( 0, 255 ),
	5888, 	Uvn( 0, 255 ),
	5878, 	Uvn( 0, 255 ),
	5880, 	Uvn( 0, 255 ),
	StripL(6),  
	5483, 	Uvn( 0, 255 ),
	5505, 	Uvn( 0, 255 ),
	5495, 	Uvn( 0, 255 ),
	5523, 	Uvn( 0, 255 ),
	5509, 	Uvn( 0, 255 ),
	5533, 	Uvn( 0, 255 ),
	StripR(8),  
	5706, 	Uvn( 0, 255 ),
	5762, 	Uvn( 0, 255 ),
	5761, 	Uvn( 0, 255 ),
	5798, 	Uvn( 0, 255 ),
	5810, 	Uvn( 0, 255 ),
	5837, 	Uvn( 0, 255 ),
	5849, 	Uvn( 0, 255 ),
	5858, 	Uvn( 0, 255 ),
	StripL(7),  
	5668, 	Uvn( 0, 255 ),
	5686, 	Uvn( 0, 255 ),
	5710, 	Uvn( 0, 255 ),
	5744, 	Uvn( 0, 255 ),
	5773, 	Uvn( 0, 255 ),
	5777, 	Uvn( 0, 255 ),
	5838, 	Uvn( 0, 255 ),
	StripL(3),  
	5728, 	Uvn( 0, 255 ),
	5729, 	Uvn( 0, 255 ),
	5714, 	Uvn( 0, 255 ),
	StripR(56),  
	5751, 	Uvn( 0, 255 ),
	5728, 	Uvn( 0, 255 ),
	5755, 	Uvn( 0, 255 ),
	5729, 	Uvn( 0, 255 ),
	5721, 	Uvn( 0, 255 ),
	5714, 	Uvn( 0, 255 ),
	5711, 	Uvn( 0, 255 ),
	5696, 	Uvn( 0, 255 ),
	5699, 	Uvn( 0, 255 ),
	5680, 	Uvn( 0, 255 ),
	5677, 	Uvn( 0, 255 ),
	5673, 	Uvn( 0, 255 ),
	5662, 	Uvn( 0, 255 ),
	5674, 	Uvn( 0, 255 ),
	5660, 	Uvn( 0, 255 ),
	5661, 	Uvn( 0, 255 ),
	5645, 	Uvn( 0, 255 ),
	5647, 	Uvn( 0, 255 ),
	5632, 	Uvn( 0, 255 ),
	5635, 	Uvn( 0, 255 ),
	5637, 	Uvn( 0, 255 ),
	5631, 	Uvn( 0, 255 ),
	5634, 	Uvn( 0, 255 ),
	5617, 	Uvn( 0, 255 ),
	5620, 	Uvn( 0, 255 ),
	5592, 	Uvn( 0, 255 ),
	5593, 	Uvn( 0, 255 ),
	5570, 	Uvn( 0, 255 ),
	5572, 	Uvn( 0, 255 ),
	5542, 	Uvn( 0, 255 ),
	5544, 	Uvn( 0, 255 ),
	5528, 	Uvn( 0, 255 ),
	5532, 	Uvn( 0, 255 ),
	5508, 	Uvn( 0, 255 ),
	5516, 	Uvn( 0, 255 ),
	5456, 	Uvn( 0, 255 ),
	5472, 	Uvn( 0, 255 ),
	5467, 	Uvn( 0, 255 ),
	5478, 	Uvn( 0, 255 ),
	5473, 	Uvn( 0, 255 ),
	5482, 	Uvn( 0, 255 ),
	5468, 	Uvn( 0, 255 ),
	5479, 	Uvn( 0, 255 ),
	5497, 	Uvn( 0, 255 ),
	5506, 	Uvn( 0, 255 ),
	5543, 	Uvn( 0, 255 ),
	5546, 	Uvn( 0, 255 ),
	5571, 	Uvn( 0, 255 ),
	5574, 	Uvn( 0, 255 ),
	5596, 	Uvn( 0, 255 ),
	5598, 	Uvn( 0, 255 ),
	5619, 	Uvn( 0, 255 ),
	5615, 	Uvn( 0, 255 ),
	5632, 	Uvn( 0, 255 ),
	5630, 	Uvn( 0, 255 ),
	5637, 	Uvn( 0, 255 ),
	StripR(9),  
	5786, 	Uvn( 0, 255 ),
	5751, 	Uvn( 0, 255 ),
	5789, 	Uvn( 0, 255 ),
	5755, 	Uvn( 0, 255 ),
	5741, 	Uvn( 0, 255 ),
	5721, 	Uvn( 0, 255 ),
	5707, 	Uvn( 0, 255 ),
	5699, 	Uvn( 0, 255 ),
	5677, 	Uvn( 0, 255 ),
	StripR(7),  
	5860, 	Uvn( 0, 255 ),
	5865, 	Uvn( 0, 255 ),
	5876, 	Uvn( 0, 255 ),
	5868, 	Uvn( 0, 255 ),
	5885, 	Uvn( 0, 255 ),
	5786, 	Uvn( 0, 255 ),
	5789, 	Uvn( 0, 255 ),
	StripL(28),  
	5470, 	Uvn( 0, 255 ),
	5485, 	Uvn( 0, 255 ),
	5474, 	Uvn( 0, 255 ),
	5489, 	Uvn( 0, 255 ),
	5480, 	Uvn( 0, 255 ),
	5493, 	Uvn( 0, 255 ),
	5494, 	Uvn( 0, 255 ),
	5507, 	Uvn( 0, 255 ),
	5513, 	Uvn( 0, 255 ),
	5521, 	Uvn( 0, 255 ),
	5535, 	Uvn( 0, 255 ),
	5534, 	Uvn( 0, 255 ),
	5557, 	Uvn( 0, 255 ),
	5558, 	Uvn( 0, 255 ),
	5581, 	Uvn( 0, 255 ),
	5588, 	Uvn( 0, 255 ),
	5641, 	Uvn( 0, 255 ),
	5629, 	Uvn( 0, 255 ),
	5709, 	Uvn( 0, 255 ),
	5702, 	Uvn( 0, 255 ),
	5750, 	Uvn( 0, 255 ),
	5746, 	Uvn( 0, 255 ),
	5796, 	Uvn( 0, 255 ),
	5790, 	Uvn( 0, 255 ),
	5801, 	Uvn( 0, 255 ),
	5800, 	Uvn( 0, 255 ),
	5807, 	Uvn( 0, 255 ),
	5808, 	Uvn( 0, 255 ),
	StripL(14),  
	5456, 	Uvn( 0, 255 ),
	5503, 	Uvn( 0, 255 ),
	5508, 	Uvn( 0, 255 ),
	5529, 	Uvn( 0, 255 ),
	5528, 	Uvn( 0, 255 ),
	5548, 	Uvn( 0, 255 ),
	5542, 	Uvn( 0, 255 ),
	5577, 	Uvn( 0, 255 ),
	5570, 	Uvn( 0, 255 ),
	5599, 	Uvn( 0, 255 ),
	5592, 	Uvn( 0, 255 ),
	5626, 	Uvn( 0, 255 ),
	5617, 	Uvn( 0, 255 ),
	5631, 	Uvn( 0, 255 ),
	StripL(14),  
	5503, 	Uvn( 0, 255 ),
	5530, 	Uvn( 0, 255 ),
	5529, 	Uvn( 0, 255 ),
	5554, 	Uvn( 0, 255 ),
	5548, 	Uvn( 0, 255 ),
	5582, 	Uvn( 0, 255 ),
	5577, 	Uvn( 0, 255 ),
	5613, 	Uvn( 0, 255 ),
	5599, 	Uvn( 0, 255 ),
	5642, 	Uvn( 0, 255 ),
	5626, 	Uvn( 0, 255 ),
	5648, 	Uvn( 0, 255 ),
	5631, 	Uvn( 0, 255 ),
	5635, 	Uvn( 0, 255 ),
	StripR(8),  
	5530, 	Uvn( 0, 255 ),
	5554, 	Uvn( 0, 255 ),
	5567, 	Uvn( 0, 255 ),
	5589, 	Uvn( 0, 255 ),
	5605, 	Uvn( 0, 255 ),
	5623, 	Uvn( 0, 255 ),
	5638, 	Uvn( 0, 255 ),
	5653, 	Uvn( 0, 255 ),
	StripL(8),  
	5554, 	Uvn( 0, 255 ),
	5589, 	Uvn( 0, 255 ),
	5582, 	Uvn( 0, 255 ),
	5623, 	Uvn( 0, 255 ),
	5613, 	Uvn( 0, 255 ),
	5653, 	Uvn( 0, 255 ),
	5642, 	Uvn( 0, 255 ),
	5648, 	Uvn( 0, 255 ),
	StripL(7),  
	5618, 	Uvn( 0, 255 ),
	5610, 	Uvn( 0, 255 ),
	5621, 	Uvn( 0, 255 ),
	5597, 	Uvn( 0, 255 ),
	5612, 	Uvn( 0, 255 ),
	5586, 	Uvn( 0, 255 ),
	5580, 	Uvn( 0, 255 ),
	StripL(12),  
	5547, 	Uvn( 0, 255 ),
	5580, 	Uvn( 0, 255 ),
	5550, 	Uvn( 0, 255 ),
	5586, 	Uvn( 0, 255 ),
	5563, 	Uvn( 0, 255 ),
	5597, 	Uvn( 0, 255 ),
	5576, 	Uvn( 0, 255 ),
	5610, 	Uvn( 0, 255 ),
	5585, 	Uvn( 0, 255 ),
	5618, 	Uvn( 0, 255 ),
	5611, 	Uvn( 0, 255 ),
	5633, 	Uvn( 0, 255 ),
	StripL(16),  
	5497, 	Uvn( 0, 255 ),
	5543, 	Uvn( 0, 255 ),
	5498, 	Uvn( 0, 255 ),
	5545, 	Uvn( 0, 255 ),
	5501, 	Uvn( 0, 255 ),
	5547, 	Uvn( 0, 255 ),
	5510, 	Uvn( 0, 255 ),
	5550, 	Uvn( 0, 255 ),
	5531, 	Uvn( 0, 255 ),
	5563, 	Uvn( 0, 255 ),
	5549, 	Uvn( 0, 255 ),
	5576, 	Uvn( 0, 255 ),
	5573, 	Uvn( 0, 255 ),
	5585, 	Uvn( 0, 255 ),
	5595, 	Uvn( 0, 255 ),
	5611, 	Uvn( 0, 255 ),
	StripL(4),  
	5510, 	Uvn( 0, 255 ),
	5531, 	Uvn( 0, 255 ),
	5500, 	Uvn( 0, 255 ),
	5549, 	Uvn( 0, 255 ),
	StripL(12),  
	5549, 	Uvn( 0, 255 ),
	5519, 	Uvn( 0, 255 ),
	5500, 	Uvn( 0, 255 ),
	5469, 	Uvn( 0, 255 ),
	5510, 	Uvn( 0, 255 ),
	5447, 	Uvn( 0, 255 ),
	5501, 	Uvn( 0, 255 ),
	5439, 	Uvn( 0, 255 ),
	5498, 	Uvn( 0, 255 ),
	5460, 	Uvn( 0, 255 ),
	5497, 	Uvn( 0, 255 ),
	5468, 	Uvn( 0, 255 ),
	StripL(13),  
	5473, 	Uvn( 0, 255 ),
	5468, 	Uvn( 0, 255 ),
	5465, 	Uvn( 0, 255 ),
	5460, 	Uvn( 0, 255 ),
	5449, 	Uvn( 0, 255 ),
	5439, 	Uvn( 0, 255 ),
	5450, 	Uvn( 0, 255 ),
	5447, 	Uvn( 0, 255 ),
	5459, 	Uvn( 0, 255 ),
	5469, 	Uvn( 0, 255 ),
	5488, 	Uvn( 0, 255 ),
	5519, 	Uvn( 0, 255 ),
	5517, 	Uvn( 0, 255 ),
	StripL(19),  
	5467, 	Uvn( 0, 255 ),
	5473, 	Uvn( 0, 255 ),
	5453, 	Uvn( 0, 255 ),
	5465, 	Uvn( 0, 255 ),
	5448, 	Uvn( 0, 255 ),
	5449, 	Uvn( 0, 255 ),
	5455, 	Uvn( 0, 255 ),
	5450, 	Uvn( 0, 255 ),
	5457, 	Uvn( 0, 255 ),
	5459, 	Uvn( 0, 255 ),
	5471, 	Uvn( 0, 255 ),
	5488, 	Uvn( 0, 255 ),
	5522, 	Uvn( 0, 255 ),
	5517, 	Uvn( 0, 255 ),
	5539, 	Uvn( 0, 255 ),
	5519, 	Uvn( 0, 255 ),
	5552, 	Uvn( 0, 255 ),
	5549, 	Uvn( 0, 255 ),
	5573, 	Uvn( 0, 255 ),
	StripR(12),  
	5511, 	Uvn( 0, 255 ),
	5560, 	Uvn( 0, 255 ),
	5515, 	Uvn( 0, 255 ),
	5566, 	Uvn( 0, 255 ),
	5522, 	Uvn( 0, 255 ),
	5569, 	Uvn( 0, 255 ),
	5539, 	Uvn( 0, 255 ),
	5575, 	Uvn( 0, 255 ),
	5552, 	Uvn( 0, 255 ),
	5584, 	Uvn( 0, 255 ),
	5573, 	Uvn( 0, 255 ),
	5595, 	Uvn( 0, 255 ),
	StripR(8),  
	5607, 	Uvn( 0, 255 ),
	5706, 	Uvn( 0, 255 ),
	5703, 	Uvn( 0, 255 ),
	5761, 	Uvn( 0, 255 ),
	5753, 	Uvn( 0, 255 ),
	5810, 	Uvn( 0, 255 ),
	5809, 	Uvn( 0, 255 ),
	5849, 	Uvn( 0, 255 ),
	StripR(5),  
	5882, 	Uvn( 0, 255 ),
	5888, 	Uvn( 0, 255 ),
	5874, 	Uvn( 0, 255 ),
	5880, 	Uvn( 0, 255 ),
	5871, 	Uvn( 0, 255 ),
	StripL(5),  
	5863, 	Uvn( 0, 255 ),
	5881, 	Uvn( 0, 255 ),
	5884, 	Uvn( 0, 255 ),
	5883, 	Uvn( 0, 255 ),
	5878, 	Uvn( 0, 255 ),
	StripL(15),  
	5609, 	Uvn( 0, 255 ),
	5668, 	Uvn( 0, 255 ),
	5683, 	Uvn( 0, 255 ),
	5710, 	Uvn( 0, 255 ),
	5737, 	Uvn( 0, 255 ),
	5773, 	Uvn( 0, 255 ),
	5797, 	Uvn( 0, 255 ),
	5848, 	Uvn( 0, 255 ),
	5851, 	Uvn( 0, 255 ),
	5870, 	Uvn( 0, 255 ),
	5866, 	Uvn( 0, 255 ),
	5872, 	Uvn( 0, 255 ),
	5859, 	Uvn( 0, 255 ),
	5873, 	Uvn( 0, 255 ),
	5861, 	Uvn( 0, 255 ),
	StripR(5),  
	5686, 	Uvn( 0, 255 ),
	5744, 	Uvn( 0, 255 ),
	5730, 	Uvn( 0, 255 ),
	5777, 	Uvn( 0, 255 ),
	5754, 	Uvn( 0, 255 ),
	StripR(32),  
	5885, 	Uvn( 0, 255 ),
	5789, 	Uvn( 0, 255 ),
	5784, 	Uvn( 0, 255 ),
	5741, 	Uvn( 0, 255 ),
	5736, 	Uvn( 0, 255 ),
	5707, 	Uvn( 0, 255 ),
	5687, 	Uvn( 0, 255 ),
	5677, 	Uvn( 0, 255 ),
	5678, 	Uvn( 0, 255 ),
	5669, 	Uvn( 0, 255 ),
	5671, 	Uvn( 0, 255 ),
	5644, 	Uvn( 0, 255 ),
	5652, 	Uvn( 0, 255 ),
	5633, 	Uvn( 0, 255 ),
	5640, 	Uvn( 0, 255 ),
	5611, 	Uvn( 0, 255 ),
	5636, 	Uvn( 0, 255 ),
	5595, 	Uvn( 0, 255 ),
	5625, 	Uvn( 0, 255 ),
	5584, 	Uvn( 0, 255 ),
	5616, 	Uvn( 0, 255 ),
	5575, 	Uvn( 0, 255 ),
	5609, 	Uvn( 0, 255 ),
	5569, 	Uvn( 0, 255 ),
	5604, 	Uvn( 0, 255 ),
	5566, 	Uvn( 0, 255 ),
	5602, 	Uvn( 0, 255 ),
	5560, 	Uvn( 0, 255 ),
	5603, 	Uvn( 0, 255 ),
	5564, 	Uvn( 0, 255 ),
	5607, 	Uvn( 0, 255 ),
	5562, 	Uvn( 0, 255 ),
	StripL(3),  
	5711, 	Uvn( 0, 255 ),
	5721, 	Uvn( 0, 255 ),
	5699, 	Uvn( 0, 255 ),
	StripR(8),  
	5767, 	Uvn( 0, 255 ),
	5764, 	Uvn( 0, 255 ),
	5747, 	Uvn( 0, 255 ),
	5738, 	Uvn( 0, 255 ),
	5726, 	Uvn( 0, 255 ),
	5715, 	Uvn( 0, 255 ),
	5695, 	Uvn( 0, 255 ),
	5681, 	Uvn( 0, 255 ),
	StripR(8),  
	5770, 	Uvn( 0, 255 ),
	5765, 	Uvn( 0, 255 ),
	5763, 	Uvn( 0, 255 ),
	5739, 	Uvn( 0, 255 ),
	5733, 	Uvn( 0, 255 ),
	5724, 	Uvn( 0, 255 ),
	5705, 	Uvn( 0, 255 ),
	5684, 	Uvn( 0, 255 ),
	StripL(23),  
	5787, 	Uvn( 0, 255 ),
	5779, 	Uvn( 0, 255 ),
	5793, 	Uvn( 0, 255 ),
	5780, 	Uvn( 0, 255 ),
	5792, 	Uvn( 0, 255 ),
	5774, 	Uvn( 0, 255 ),
	5782, 	Uvn( 0, 255 ),
	5770, 	Uvn( 0, 255 ),
	5766, 	Uvn( 0, 255 ),
	5765, 	Uvn( 0, 255 ),
	5749, 	Uvn( 0, 255 ),
	5743, 	Uvn( 0, 255 ),
	5712, 	Uvn( 0, 255 ),
	5689, 	Uvn( 0, 255 ),
	5655, 	Uvn( 0, 255 ),
	5664, 	Uvn( 0, 255 ),
	5601, 	Uvn( 0, 255 ),
	5608, 	Uvn( 0, 255 ),
	5559, 	Uvn( 0, 255 ),
	5568, 	Uvn( 0, 255 ),
	5541, 	Uvn( 0, 255 ),
	5553, 	Uvn( 0, 255 ),
	5518, 	Uvn( 0, 255 ),
	StripL(25),  
	5815, 	Uvn( 0, 255 ),
	5787, 	Uvn( 0, 255 ),
	5818, 	Uvn( 0, 255 ),
	5793, 	Uvn( 0, 255 ),
	5826, 	Uvn( 0, 255 ),
	5792, 	Uvn( 0, 255 ),
	5811, 	Uvn( 0, 255 ),
	5782, 	Uvn( 0, 255 ),
	5776, 	Uvn( 0, 255 ),
	5766, 	Uvn( 0, 255 ),
	5748, 	Uvn( 0, 255 ),
	5749, 	Uvn( 0, 255 ),
	5722, 	Uvn( 0, 255 ),
	5712, 	Uvn( 0, 255 ),
	5654, 	Uvn( 0, 255 ),
	5655, 	Uvn( 0, 255 ),
	5594, 	Uvn( 0, 255 ),
	5601, 	Uvn( 0, 255 ),
	5556, 	Uvn( 0, 255 ),
	5559, 	Uvn( 0, 255 ),
	5527, 	Uvn( 0, 255 ),
	5541, 	Uvn( 0, 255 ),
	5476, 	Uvn( 0, 255 ),
	5518, 	Uvn( 0, 255 ),
	5454, 	Uvn( 0, 255 ),
	StripR(7),  
	5823, 	Uvn( 0, 255 ),
	5829, 	Uvn( 0, 255 ),
	5827, 	Uvn( 0, 255 ),
	5842, 	Uvn( 0, 255 ),
	5845, 	Uvn( 0, 255 ),
	5854, 	Uvn( 0, 255 ),
	5861, 	Uvn( 0, 255 ),
	StripL(25),  
	5806, 	Uvn( 0, 255 ),
	5814, 	Uvn( 0, 255 ),
	5802, 	Uvn( 0, 255 ),
	5805, 	Uvn( 0, 255 ),
	5795, 	Uvn( 0, 255 ),
	5794, 	Uvn( 0, 255 ),
	5756, 	Uvn( 0, 255 ),
	5752, 	Uvn( 0, 255 ),
	5719, 	Uvn( 0, 255 ),
	5717, 	Uvn( 0, 255 ),
	5643, 	Uvn( 0, 255 ),
	5646, 	Uvn( 0, 255 ),
	5583, 	Uvn( 0, 255 ),
	5587, 	Uvn( 0, 255 ),
	5555, 	Uvn( 0, 255 ),
	5551, 	Uvn( 0, 255 ),
	5538, 	Uvn( 0, 255 ),
	5533, 	Uvn( 0, 255 ),
	5526, 	Uvn( 0, 255 ),
	5523, 	Uvn( 0, 255 ),
	5499, 	Uvn( 0, 255 ),
	5505, 	Uvn( 0, 255 ),
	5475, 	Uvn( 0, 255 ),
	5483, 	Uvn( 0, 255 ),
	5461, 	Uvn( 0, 255 ),
	StripL(51),  
	5837, 	Uvn( 0, 255 ),
	5788, 	Uvn( 0, 255 ),
	5798, 	Uvn( 0, 255 ),
	5759, 	Uvn( 0, 255 ),
	5762, 	Uvn( 0, 255 ),
	5698, 	Uvn( 0, 255 ),
	5706, 	Uvn( 0, 255 ),
	5606, 	Uvn( 0, 255 ),
	5607, 	Uvn( 0, 255 ),
	5565, 	Uvn( 0, 255 ),
	5562, 	Uvn( 0, 255 ),
	5524, 	Uvn( 0, 255 ),
	5520, 	Uvn( 0, 255 ),
	5486, 	Uvn( 0, 255 ),
	5477, 	Uvn( 0, 255 ),
	5487, 	Uvn( 0, 255 ),
	5481, 	Uvn( 0, 255 ),
	5484, 	Uvn( 0, 255 ),
	5462, 	Uvn( 0, 255 ),
	5466, 	Uvn( 0, 255 ),
	5440, 	Uvn( 0, 255 ),
	5452, 	Uvn( 0, 255 ),
	5443, 	Uvn( 0, 255 ),
	5446, 	Uvn( 0, 255 ),
	5456, 	Uvn( 0, 255 ),
	5434, 	Uvn( 0, 255 ),
	5503, 	Uvn( 0, 255 ),
	5496, 	Uvn( 0, 255 ),
	5530, 	Uvn( 0, 255 ),
	5536, 	Uvn( 0, 255 ),
	5567, 	Uvn( 0, 255 ),
	5579, 	Uvn( 0, 255 ),
	5605, 	Uvn( 0, 255 ),
	5622, 	Uvn( 0, 255 ),
	5638, 	Uvn( 0, 255 ),
	5649, 	Uvn( 0, 255 ),
	5653, 	Uvn( 0, 255 ),
	5666, 	Uvn( 0, 255 ),
	5665, 	Uvn( 0, 255 ),
	5672, 	Uvn( 0, 255 ),
	5679, 	Uvn( 0, 255 ),
	5681, 	Uvn( 0, 255 ),
	5700, 	Uvn( 0, 255 ),
	5695, 	Uvn( 0, 255 ),
	5716, 	Uvn( 0, 255 ),
	5726, 	Uvn( 0, 255 ),
	5731, 	Uvn( 0, 255 ),
	5747, 	Uvn( 0, 255 ),
	5758, 	Uvn( 0, 255 ),
	5767, 	Uvn( 0, 255 ),
	5769, 	Uvn( 0, 255 ),
	StripL(11),  
	5773, 	Uvn( 0, 255 ),
	5838, 	Uvn( 0, 255 ),
	5848, 	Uvn( 0, 255 ),
	5869, 	Uvn( 0, 255 ),
	5870, 	Uvn( 0, 255 ),
	5887, 	Uvn( 0, 255 ),
	5872, 	Uvn( 0, 255 ),
	5877, 	Uvn( 0, 255 ),
	5873, 	Uvn( 0, 255 ),
	5875, 	Uvn( 0, 255 ),
	5861, 	Uvn( 0, 255 ),
	StripL(5),  
	5753, 	Uvn( 0, 255 ),
	5703, 	Uvn( 0, 255 ),
	5690, 	Uvn( 0, 255 ),
	5603, 	Uvn( 0, 255 ),
	5602, 	Uvn( 0, 255 ),
	StripL(5),  
	5635, 	Uvn( 0, 255 ),
	5648, 	Uvn( 0, 255 ),
	5647, 	Uvn( 0, 255 ),
	5665, 	Uvn( 0, 255 ),
	5661, 	Uvn( 0, 255 ),
	StripR(5),  
	5679, 	Uvn( 0, 255 ),
	5676, 	Uvn( 0, 255 ),
	5700, 	Uvn( 0, 255 ),
	5701, 	Uvn( 0, 255 ),
	5704, 	Uvn( 0, 255 ),
	StripR(5),  
	5696, 	Uvn( 0, 255 ),
	5692, 	Uvn( 0, 255 ),
	5680, 	Uvn( 0, 255 ),
	5674, 	Uvn( 0, 255 ),
	5673, 	Uvn( 0, 255 ),
	StripR(7),  
	5657, 	Uvn( 0, 255 ),
	5659, 	Uvn( 0, 255 ),
	5650, 	Uvn( 0, 255 ),
	5614, 	Uvn( 0, 255 ),
	5591, 	Uvn( 0, 255 ),
	5568, 	Uvn( 0, 255 ),
	5553, 	Uvn( 0, 255 ),
	StripR(8),  
	5657, 	Uvn( 0, 255 ),
	5670, 	Uvn( 0, 255 ),
	5659, 	Uvn( 0, 255 ),
	5682, 	Uvn( 0, 255 ),
	5663, 	Uvn( 0, 255 ),
	5688, 	Uvn( 0, 255 ),
	5664, 	Uvn( 0, 255 ),
	5689, 	Uvn( 0, 255 ),
	StripR(9),  
	5694, 	Uvn( 0, 255 ),
	5704, 	Uvn( 0, 255 ),
	5692, 	Uvn( 0, 255 ),
	5701, 	Uvn( 0, 255 ),
	5674, 	Uvn( 0, 255 ),
	5676, 	Uvn( 0, 255 ),
	5661, 	Uvn( 0, 255 ),
	5679, 	Uvn( 0, 255 ),
	5665, 	Uvn( 0, 255 ),
	CnkEnd()
END

VLIST      vertex_kihon11_Bip01_diaper[]
START
	CnkV_VN(FV_CONT, 2767),
	OffnbIdx(5432, 461),
	VERT( 0xc1944b73, 0x4277fa7f, 0xc0ce9138 ),
	NORM( 0xbf714826, 0xbdfd1b77, 0xbe9ef90a ),
	VERT( 0xc193851d, 0x428a6ff0, 0xc06e3487 ),
	NORM( 0xbf75da02, 0x3e8961ac, 0x3d9ad521 ),
	VERT( 0xc1920b58, 0x4275f83b, 0xc0a5c874 ),
	NORM( 0xbf698692, 0xbeacac7d, 0x3e6e4020 ),
	VERT( 0xc191b2b2, 0x428bb7f6, 0xc08bb294 ),
	NORM( 0xbf44e996, 0x3f1f9dda, 0xbe0f555f ),
	VERT( 0xc1916525, 0x4289c845, 0xbe31b14d ),
	NORM( 0xbf7baba6, 0x3e394f11, 0xbce62ed9 ),
	VERT( 0xc1914d98, 0x428a0f46, 0x3f2fb39d ),
	NORM( 0xbf763383, 0x3e8c47c1, 0xbb932ef3 ),
	VERT( 0xc19136e5, 0x428a1552, 0x3fafd237 ),
	NORM( 0xbf773d8e, 0x3e81f116, 0x3d5ac494 ),
	VERT( 0xc1907a5a, 0x4280afb9, 0x406092b9 ),
	NORM( 0xbf73037c, 0xbe9641d9, 0x3de751de ),
	VERT( 0xc1906de0, 0x4289bef9, 0xbf8fb9e6 ),
	NORM( 0xbf69a2c3, 0x3ec1bba3, 0xbe1e5a1b ),
	VERT( 0xc1904ded, 0x4288e9b4, 0xbf6866f8 ),
	NORM( 0xbf7a2122, 0xbe5843fe, 0x3cddef44 ),
	VERT( 0xc1901b07, 0x4288c1d9, 0xbf9f3d84 ),
	NORM( 0xbf7dae42, 0xbdf3a2c5, 0xbd7f50dd ),
	VERT( 0xc1901787, 0x4288cc05, 0xbfd646de ),
	NORM( 0xbf7f3a66, 0x3cc5f4ea, 0xbd9703f7 ),
	VERT( 0xc1900c2c, 0x428a1ef5, 0x401f84c6 ),
	NORM( 0xbf664b7a, 0x3ebc74a3, 0x3e70b66e ),
	VERT( 0xc18f8feb, 0x4288bf66, 0xbebc3aad ),
	NORM( 0xbf7571c1, 0xbe81ddb1, 0x3e0341e4 ),
	VERT( 0xc18f4acb, 0x4289ce54, 0xc00a8007 ),
	NORM( 0xbf5d0775, 0x3ee01b41, 0x3e807890 ),
	VERT( 0xc18f3b37, 0x42821493, 0x407c88d9 ),
	NORM( 0xbf56290b, 0x3ed460a0, 0x3eb74078 ),
	VERT( 0xc18f2f33, 0x42841466, 0xbf038a2c ),
	NORM( 0xbf7dc6f6, 0xbdb7e748, 0x3dc4b928 ),
	VERT( 0xc18f0dfc, 0x4282abeb, 0x3f033be3 ),
	NORM( 0xbf6e80b9, 0xbe9979ee, 0xbe524844 ),
	VERT( 0xc18f074d, 0x428345f3, 0x3f8b6bd7 ),
	NORM( 0xbf761fa6, 0x3e8377b5, 0x3dca1af0 ),
	VERT( 0xc18ea1ab, 0x42888c35, 0x3ef6628e ),
	NORM( 0xbf73c944, 0xbe96096c, 0x3daea2e5 ),
	VERT( 0xc18e5310, 0x4289d46e, 0xbfe9b1e8 ),
	NORM( 0xbf5185c9, 0x3f12d011, 0xbd1123b6 ),
	VERT( 0xc18e3b65, 0x4282a785, 0xbf89345e ),
	NORM( 0xbf66cc05, 0xbec9ef6c, 0xbe362d9c ),
	VERT( 0xc18dcdec, 0x4279124a, 0xc0e1646a ),
	NORM( 0xbf20e991, 0x3dd95549, 0xbf453e76 ),
	VERT( 0xc18dc34a, 0x4284e9d7, 0xbea208da ),
	NORM( 0xbf6abb3a, 0x3d4a5659, 0x3ecac0f8 ),
	VERT( 0xc18d69c6, 0x4273dfa7, 0xc08ac8e1 ),
	NORM( 0xbf03a34c, 0xbf114f42, 0x3f249929 ),
	VERT( 0xc18cd4d2, 0x4285d904, 0x3f1391cb ),
	NORM( 0xbf7d9704, 0xbc69e1cf, 0x3e0b6a9b ),
	VERT( 0xc18cb3d7, 0x428810bd, 0x406d3dd2 ),
	NORM( 0xbf6dfb58, 0xbe605da9, 0x3e97b734 ),
	VERT( 0xc18ca0a8, 0x4283b7d2, 0x3fbf25ef ),
	NORM( 0xbf61a0db, 0x3ed0a434, 0x3e74c974 ),
	VERT( 0xc18c4941, 0x427f5afb, 0x402fc026 ),
	NORM( 0xbf34db8e, 0xbf2ec721, 0xbe3ef6fb ),
	VERT( 0xc18bc5d8, 0x428c42a8, 0xc0b7df3e ),
	NORM( 0xbf1e7013, 0x3f30b4d7, 0xbebfeb7e ),
	VERT( 0xc18bbe84, 0x428b0d22, 0xbef3950d ),
	NORM( 0xbef790a5, 0x3f5fa179, 0xbd640f7b ),
	VERT( 0xc18b62f2, 0x428b0d41, 0x40147bf5 ),
	NORM( 0xbead78b7, 0x3f6dab17, 0x3e1c4a86 ),
	VERT( 0xc18b4df2, 0x428b40c3, 0x3dc8ed77 ),
	NORM( 0xbe7cc490, 0x3f76da8d, 0xbdc4f088 ),
	VERT( 0xc18a61a7, 0x4282024b, 0xbdce0809 ),
	NORM( 0xbf412f30, 0xbf221fbb, 0xbe2fcd40 ),
	VERT( 0xc1899050, 0x428af8c6, 0xc0119f1e ),
	NORM( 0xbef44936, 0x3f5ec7d1, 0x3dfb3227 ),
	VERT( 0xc18908b0, 0x428117e0, 0xbfdb8e18 ),
	NORM( 0xbf0ba925, 0xbf3407b3, 0x3ee968f8 ),
	VERT( 0xc18893f9, 0x427e6837, 0x40196679 ),
	NORM( 0xbec34389, 0xbf590cf4, 0xbebc9b21 ),
	VERT( 0xc1888404, 0x42829caa, 0x4097da86 ),
	NORM( 0xbf3e1d13, 0x3ef8ad9a, 0x3eec12b7 ),
	VERT( 0xc1887afb, 0x428b43e4, 0xc0370e25 ),
	NORM( 0xbe9ebfb3, 0x3f6e4b9e, 0x3e4607ea ),
	VERT( 0xc18875af, 0x428716fb, 0x408fdf98 ),
	NORM( 0xbf5c11de, 0xbee3339b, 0x3e819df8 ),
	VERT( 0xc188207b, 0x42749c22, 0xc08a279e ),
	NORM( 0x3e08e9e8, 0xbf112281, 0x3f501657 ),
	VERT( 0xc1873a66, 0x428164a2, 0xbf234f2f ),
	NORM( 0xbea79ca9, 0xbf716020, 0xbd7d3414 ),
	VERT( 0xc185ceff, 0x428ca5e7, 0xc0a2c6e7 ),
	NORM( 0xbe896379, 0x3f75fbae, 0x3d8cb7f2 ),
	VERT( 0xc185c1ff, 0x428ae959, 0xc0ed82ac ),
	NORM( 0xbf50dfcd, 0x3e85f89d, 0xbf03fc98 ),
	VERT( 0xc1849800, 0x4278fb60, 0xc101ae15 ),
	NORM( 0xbf2be30d, 0x3db01b99, 0xbf3c6e60 ),
	VERT( 0xc1845d4d, 0x428b129f, 0x40174d48 ),
	NORM( 0x3e936e86, 0x3f74a4b4, 0x3d7dc8c1 ),
	VERT( 0xc183e594, 0x428137b6, 0xbfe4777b ),
	NORM( 0x3e0a23b3, 0xbf60909f, 0x3eebea28 ),
	VERT( 0xc18374d2, 0x427ec8df, 0x400bfa93 ),
	NORM( 0xbc1c7da6, 0xbf668e5a, 0xbede79f0 ),
	VERT( 0xc183744c, 0x428ce7b2, 0xc0c0546b ),
	NORM( 0xbee2e164, 0x3f62dda6, 0xbe0a84da ),
	VERT( 0xc182b430, 0x428b369d, 0x3f971d09 ),
	NORM( 0x3eb75914, 0x3f6ceb2f, 0x3dfd297f ),
	VERT( 0xc1822708, 0x428181dc, 0xbf3e8702 ),
	NORM( 0x3d94bde6, 0xbf7e0d60, 0xbdcb9c2e ),
	VERT( 0xc181d28e, 0x42891b6a, 0xc0ff6e17 ),
	NORM( 0xbf335521, 0x3e0d32da, 0xbf333f71 ),
	VERT( 0xc18152cf, 0x428be94f, 0xbf821cb3 ),
	NORM( 0x3e42c15d, 0x3f7a2197, 0x3dc3ebeb ),
	VERT( 0xc180260c, 0x428bed19, 0xbfc6f2b2 ),
	NORM( 0x3e6a822e, 0x3f7707b6, 0x3e0325c6 ),
	VERT( 0xc17fbc5d, 0x428a1155, 0x40074ab0 ),
	NORM( 0x3f2c9888, 0x3f3ce295, 0x3d050074 ),
	VERT( 0xc17c85a0, 0x428a33ba, 0x3f7a6d8b ),
	NORM( 0x3f32377f, 0x3f32db09, 0x3e2904bc ),
	VERT( 0xc17be562, 0x42845e45, 0x40d35955 ),
	NORM( 0xbf53c5ee, 0x3d40f501, 0x3f0f53c5 ),
	VERT( 0xc17b5626, 0x428c6ba4, 0xc0682cc8 ),
	NORM( 0x3ea594b6, 0x3f6d23d3, 0x3e45d80e ),
	VERT( 0xc179d3de, 0x428adeed, 0xbf909a9d ),
	NORM( 0x3f31c2b8, 0x3f31fe43, 0x3e3df8d2 ),
	VERT( 0xc1778e61, 0x428ae27d, 0xbfd2a8da ),
	NORM( 0x3f31a2b7, 0x3f319f48, 0x3e45426e ),
	VERT( 0xc172c086, 0x428b5bb3, 0xc068add5 ),
	NORM( 0x3f2de386, 0x3f2e8b1f, 0x3e8b0b2a ),
	VERT( 0xc171c2e4, 0x428ca9c3, 0xc0a182c1 ),
	NORM( 0x3eacf98f, 0x3f68b302, 0x3e7a0604 ),
	VERT( 0xc1703ce0, 0x428ce6eb, 0xc0fc81da ),
	NORM( 0xbea7ac99, 0x3f627664, 0xbea9f745 ),
	VERT( 0xc16fc416, 0x428644eb, 0xc113cd11 ),
	NORM( 0xbf0bdf70, 0x3dd832b9, 0xbf54b32f ),
	VERT( 0xc16c9bb2, 0x4260188a, 0xc13237a6 ),
	NORM( 0xbf4404a6, 0xbea4d181, 0xbf0e8dcb ),
	VERT( 0xc16c683f, 0x4273e8bd, 0x40c7f83d ),
	NORM( 0xbefef2fb, 0xbf562d9c, 0xbe69b74a ),
	VERT( 0xc16adcfe, 0x42748d7f, 0x40f3cfff ),
	NORM( 0xbf3aea5d, 0xbf296a60, 0x3e2e378d ),
	VERT( 0xc16a9de9, 0x428aeefd, 0xc11690d0 ),
	NORM( 0xbf0abeb7, 0x3ead7953, 0xbf44e1cd ),
	VERT( 0xc16a06d8, 0x427e1601, 0x40fa9d01 ),
	NORM( 0xbf2312c0, 0x3ea12826, 0x3f3423b5 ),
	VERT( 0xc16988c9, 0x42757797, 0x410a97ec ),
	NORM( 0xbf49bde0, 0xbef4107b, 0x3ec77189 ),
	VERT( 0xc1696135, 0x428b95cf, 0xc09fc7d6 ),
	NORM( 0x3f2230bb, 0x3f27be45, 0x3ed2a44e ),
	VERT( 0xc168104b, 0x425d9409, 0xc120993b ),
	NORM( 0xbf426f25, 0xbf25c6a3, 0xbd7cd592 ),
	VERT( 0xc164440c, 0x426261d6, 0xc137a330 ),
	NORM( 0xbefc1605, 0x3ddc3d56, 0xbf5d1d1b ),
	VERT( 0xc163dbe1, 0x42883e2b, 0xc116438e ),
	NORM( 0xbf01f65b, 0x3d346a06, 0xbf5c44fe ),
	VERT( 0xc1636a75, 0x4274a4ee, 0x40bd0f80 ),
	NORM( 0xbd928d68, 0xbf52edf2, 0xbf0fe824 ),
	VERT( 0xc1630ad6, 0x428cfc50, 0xc0cf400b ),
	NORM( 0x3e94625c, 0x3f6ced4e, 0x3e79b560 ),
	VERT( 0xc162c290, 0x425c93e4, 0xc108a413 ),
	NORM( 0xbef71f08, 0xbf329244, 0x3f0793a5 ),
	VERT( 0xc16162b3, 0x4284fb00, 0xc11bad0b ),
	NORM( 0xbf090fca, 0x3e0644b4, 0xbf5598a3 ),
	VERT( 0xc160dc82, 0x4276ea08, 0x411c171b ),
	NORM( 0xbf371162, 0xbd6457de, 0x3f326098 ),
	VERT( 0xc160b998, 0x4286d9ce, 0x41363d96 ),
	NORM( 0xbf3e4a13, 0x3e448e76, 0x3f240bf3 ),
	VERT( 0xc15d8d96, 0x4287fd5a, 0x4131c79a ),
	NORM( 0xbf018421, 0x3f30abbf, 0x3f0478f8 ),
	VERT( 0xc15bf076, 0x428c8092, 0xc10fad31 ),
	NORM( 0xbe7a57b2, 0x3f59d455, 0xbeee120b ),
	VERT( 0xc15b272d, 0x428be3c0, 0xc0cb9d79 ),
	NORM( 0x3f1d689e, 0x3f257211, 0x3ee765ea ),
	VERT( 0xc15ae245, 0x42823fd2, 0x41352ab6 ),
	NORM( 0xbf422d27, 0xbed2cf8e, 0x3f014f86 ),
	VERT( 0xc15a18c2, 0x425e1b66, 0xc1060913 ),
	NORM( 0x3d7a13ed, 0xbeed16de, 0x3f625c2c ),
	VERT( 0xc15781f8, 0x427f6a65, 0x411f43f5 ),
	NORM( 0xbf44dab2, 0xbf111d6d, 0x3e975759 ),
	VERT( 0xc1572353, 0x4263f4a7, 0xc13c8d05 ),
	NORM( 0xbefe4e4b, 0x3d078938, 0xbf5e0723 ),
	VERT( 0xc157174c, 0x427f4c6f, 0x4115667c ),
	NORM( 0xbf38f3e3, 0xbf1a3057, 0x3eadd4c6 ),
	VERT( 0xc155d750, 0x4288b3b2, 0x412b3e08 ),
	NORM( 0x3d7c5420, 0x3f7d1108, 0x3e0d1dcb ),
	VERT( 0xc1559a93, 0x428d029b, 0xc0f4569f ),
	NORM( 0x3e5dc11c, 0x3f7554c4, 0x3e3ecbef ),
	VERT( 0xc14f9089, 0x42804c4e, 0x412d3059 ),
	NORM( 0xbf4192b9, 0xbed91892, 0x3eff353c ),
	VERT( 0xc14f73e9, 0x428828a2, 0xc1208f44 ),
	NORM( 0xbf0a0fbd, 0xbdfff592, 0xbf553178 ),
	VERT( 0xc14efab1, 0x4287cb65, 0x4121d1b0 ),
	NORM( 0x3f0bd2ed, 0x3f4ea187, 0xbe656571 ),
	VERT( 0xc14e6a4b, 0x428be48b, 0xc0ef6600 ),
	NORM( 0x3f096054, 0x3f196d05, 0x3f18110f ),
	VERT( 0xc14b75a2, 0x4289f92b, 0xc12d0d87 ),
	NORM( 0xbee208bb, 0x3e6483e2, 0xbf5e7c17 ),
	VERT( 0xc146ff46, 0x428054fb, 0xc13cc4a1 ),
	NORM( 0xbefccce9, 0x3e699cfa, 0xbf56d22a ),
	VERT( 0xc145f8d0, 0x42553d4c, 0xc114bb13 ),
	NORM( 0xbf072f35, 0xbf35ca06, 0x3eee71ad ),
	VERT( 0xc1446e1c, 0x4255eee4, 0xc126d200 ),
	NORM( 0xbf21517a, 0xbf41778b, 0xbe368e9f ),
	VERT( 0xc143490a, 0x42573e19, 0xc13e7384 ),
	NORM( 0xbf036b24, 0xbf1f25ee, 0xbf177324 ),
	VERT( 0xc143059f, 0x4277bad5, 0x41341fc9 ),
	NORM( 0xbea0dea7, 0x3ebedafe, 0x3f5f8450 ),
	VERT( 0xc13e4a1d, 0x425704dc, 0xc111b688 ),
	NORM( 0xbda35d29, 0xbea136c1, 0x3f721e6b ),
	VERT( 0xc13adec2, 0x42878851, 0xc12d9176 ),
	NORM( 0xbee02ed1, 0xbd436e92, 0xbf65d4c0 ),
	VERT( 0xc13a35f2, 0x428cc8e4, 0xc10add90 ),
	NORM( 0x3e6d8ee2, 0x3f6fe713, 0x3e858032 ),
	VERT( 0xc1397338, 0x428c0e91, 0xc11fb944 ),
	NORM( 0xbdb8aa53, 0x3f5c0789, 0xbf00cd90 ),
	VERT( 0xc13972ce, 0x42595551, 0xc1470436 ),
	NORM( 0xbe745636, 0xbe71e7ee, 0xbf712336 ),
	VERT( 0xc134742d, 0x428bb290, 0xc108497e ),
	NORM( 0x3ed64392, 0x3f015ad3, 0x3f413318 ),
	VERT( 0xc13372c4, 0x42897208, 0xc1369abf ),
	NORM( 0xbe86744d, 0x3e8dd2bf, 0xbf6c9e32 ),
	VERT( 0xc1331e95, 0x427b1315, 0x414bf6b1 ),
	NORM( 0xbf2cd425, 0xbec8c625, 0x3f1ff6f3 ),
	VERT( 0xc12ea974, 0x425ac4f4, 0xc1488da9 ),
	NORM( 0xbe642e2c, 0xbe7875ca, 0xbf71b5af ),
	VERT( 0xc12ba1f5, 0x426b7424, 0xc15f076f ),
	NORM( 0xbee82f1a, 0xbcc59f28, 0xbf64147d ),
	VERT( 0xc12b1e79, 0x42502de4, 0xc115c186 ),
	NORM( 0xbf0b54c8, 0xbf2dedb6, 0x3efbf735 ),
	VERT( 0xc12929e6, 0x426704ea, 0x4120dc8e ),
	NORM( 0xbf24e5af, 0xbf4311f1, 0x3d88d655 ),
	VERT( 0xc12459fa, 0x425221d4, 0xc112b400 ),
	NORM( 0xbe842763, 0xbe1900ab, 0x3f745980 ),
	VERT( 0xc122f4bb, 0x42676e13, 0x4128e544 ),
	NORM( 0xbf0ae326, 0xbf0820e3, 0x3f267ab3 ),
	VERT( 0xc1227671, 0x42683184, 0x41195547 ),
	NORM( 0xbe91a351, 0xbf2dd258, 0xbf2d42db ),
	VERT( 0xc11ccd79, 0x4268c149, 0x4130bb2b ),
	NORM( 0xbebcf87c, 0xbea1f173, 0x3f5fb92c ),
	VERT( 0xc1196b16, 0x424d91dd, 0xc1242f4c ),
	NORM( 0xbf01aaa2, 0xbf581ba5, 0xbe33c652 ),
	VERT( 0xc111f748, 0x4274a5ae, 0x4141ec1b ),
	NORM( 0xbee353de, 0xbf2ca82c, 0x3f170458 ),
	VERT( 0xc10e7d46, 0x4269cf97, 0x4134e32f ),
	NORM( 0xbd0a2cf1, 0xbdff6987, 0x3f7ddac1 ),
	VERT( 0xc10a318a, 0x42861dc4, 0xc13f79f3 ),
	NORM( 0xbe9bac1b, 0xbdff7a9a, 0xbf71c7c0 ),
	VERT( 0xc1098b9a, 0x4276f550, 0x41657a2b ),
	NORM( 0xbefa80a1, 0xbed7f408, 0x3f436ba7 ),
	VERT( 0xc10885ab, 0x425da004, 0xc15d7c4d ),
	NORM( 0xbe7a975a, 0xbed94a99, 0xbf5f2cf6 ),
	VERT( 0xc10811d2, 0x424c6b42, 0xc1338284 ),
	NORM( 0xbe73128b, 0xbf36b08e, 0xbf28b94c ),
	VERT( 0xc106c9a4, 0x42877408, 0xc1471741 ),
	NORM( 0xbe8e398b, 0x3c3db247, 0xbf75e831 ),
	VERT( 0xc1032eb8, 0x42811e1e, 0xc149feec ),
	NORM( 0xbe243eb5, 0x3e9eb64d, 0xbf6fe6b6 ),
	VERT( 0xc0fe698e, 0x428abcc6, 0xc136cf02 ),
	NORM( 0xbdd99f03, 0x3f4255e5, 0xbf24683c ),
	VERT( 0xc0fc11a3, 0x428bc7f1, 0xc1248508 ),
	NORM( 0x3e4bf46d, 0x3f751c42, 0x3e55ce48 ),
	VERT( 0xc0f62522, 0x426fd8e6, 0xc16d9c13 ),
	NORM( 0xbdecbe4e, 0x3e18e6a1, 0xbf7b64f0 ),
	VERT( 0xc0f609da, 0x42834341, 0x41818998 ),
	NORM( 0xbedf370b, 0x3df0cdeb, 0x3f646a6b ),
	VERT( 0xc0f46b65, 0x428abcd3, 0xc120742c ),
	NORM( 0x3ea3e6f0, 0x3f06f4e8, 0x3f4982d7 ),
	VERT( 0xc0f3c3a0, 0x42865e6c, 0x4173c32a ),
	NORM( 0x3d119e67, 0x3f777b25, 0x3e81b643 ),
	VERT( 0xc0f2f795, 0x426b9e82, 0x4130e3ed ),
	NORM( 0xbcda0330, 0xbe904fb8, 0x3f7586b9 ),
	VERT( 0xc0f188a7, 0x42853890, 0x417dc49c ),
	NORM( 0xbe87bef3, 0x3f0c527a, 0x3f4b12e3 ),
	VERT( 0xc0ed7050, 0x42858e3d, 0x41675fa8 ),
	NORM( 0x3eb8199e, 0x3f5c5e07, 0xbeb866f7 ),
	VERT( 0xc0e55169, 0x427d9907, 0x4181e90b ),
	NORM( 0xbee5f15c, 0xbef38f42, 0x3f419dc4 ),
	VERT( 0xc0e1d580, 0x424d0f4c, 0xc134c109 ),
	NORM( 0x3d40ae12, 0xbf1a13da, 0xbf4c1603 ),
	VERT( 0xc0d0d51a, 0x425f79f4, 0xc1666de8 ),
	NORM( 0xbd345444, 0xbeb6cacc, 0xbf6edd09 ),
	VERT( 0xc0cf4443, 0x427a83da, 0x4176bc42 ),
	NORM( 0xbec64d6b, 0xbf30e782, 0x3f1c3c96 ),
	VERT( 0xc0cd0dcd, 0x42468413, 0xc0fea62d ),
	NORM( 0xbf162be9, 0xbf3063e7, 0x3ed9e87b ),
	VERT( 0xc0c6ea8b, 0x4258bbad, 0x411cdedb ),
	NORM( 0xbf1eae97, 0xbf4294a5, 0x3e47c6a9 ),
	VERT( 0xc0c43136, 0x4248cc32, 0xc0fa1276 ),
	NORM( 0xbef5310d, 0x3c4af5bb, 0x3f60b6af ),
	VERT( 0xc0c1ef49, 0x427154ef, 0x4146c17d ),
	NORM( 0xbe8ea5d1, 0xbf445464, 0x3f13ffa2 ),
	VERT( 0xc0be4341, 0x425a64e0, 0x41157a56 ),
	NORM( 0xbf15a81d, 0xbece471c, 0xbf3447f0 ),
	VERT( 0xc0bd5a8f, 0x4279128a, 0x4176e5ea ),
	NORM( 0xbea4537a, 0xbf0ef72d, 0x3f43d254 ),
	VERT( 0xc0bb6fd6, 0x426bfff5, 0x4137766a ),
	NORM( 0xbe735e77, 0xbf029698, 0x3f539d74 ),
	VERT( 0xc0b6ac1f, 0x4245df41, 0xc108c61e ),
	NORM( 0xbea91524, 0xbf6e6e61, 0xbe1cf028 ),
	VERT( 0xc0b2e008, 0x425889ed, 0x411f0332 ),
	NORM( 0xbe30eba5, 0xbf13660c, 0x3f4c94b5 ),
	VERT( 0xc0a7c6b7, 0x424f832b, 0xc139c06c ),
	NORM( 0x3d6d21be, 0xbf335b1c, 0xbf3610be ),
	VERT( 0xc09a8200, 0x42584739, 0x4120592c ),
	NORM( 0xbd14c42e, 0xbf019b83, 0x3f5c921d ),
	VERT( 0xc0992650, 0x4289c450, 0xc147f158 ),
	NORM( 0xbdb868cd, 0x3f3a84ad, 0xbf2dd389 ),
	VERT( 0xc0978319, 0x42452232, 0xc1174249 ),
	NORM( 0x3e017238, 0xbf395618, 0xbf2d9b3d ),
	VERT( 0xc0936d39, 0x42868f01, 0xc155bd19 ),
	NORM( 0xbe54eb5b, 0xbe1df7b0, 0xbf774564 ),
	VERT( 0xc092973b, 0x4273126f, 0x416ac063 ),
	NORM( 0xbe921784, 0xbf48776e, 0x3f0d780c ),
	VERT( 0xc091f8ba, 0x426aaf97, 0x413bef87 ),
	NORM( 0xbea76cab, 0xbf0c980d, 0x3f44e132 ),
	VERT( 0xc08019d3, 0x42585d89, 0x411fcfa0 ),
	NORM( 0x3e0e6d5c, 0xbebfbbfb, 0x3f6aafaf ),
	VERT( 0xc07f8494, 0x4284e2d1, 0xc14b3a22 ),
	NORM( 0xbdf70157, 0xbe6d8a06, 0xbf77186c ),
	VERT( 0xc07b8dfe, 0x428aabfe, 0xc1344524 ),
	NORM( 0x3e16e8ca, 0x3f72b815, 0x3e903937 ),
	VERT( 0xc07623a7, 0x4246b9ba, 0xc1115e2a ),
	NORM( 0x3efcbdef, 0xbef4afac, 0xbf3a01c0 ),
	VERT( 0xc075bcf0, 0x4289abd8, 0xc12f8c8e ),
	NORM( 0x3e45ba0a, 0x3f06255a, 0x3f545c88 ),
	VERT( 0xc07277d9, 0x4250e637, 0xc13e0456 ),
	NORM( 0x3e2b5332, 0xbf2eaf60, 0xbf362c04 ),
	VERT( 0xc070829d, 0x424238de, 0xc0bd1d99 ),
	NORM( 0xbf2a2b85, 0xbf1c3323, 0x3edcb96f ),
	VERT( 0xc0649074, 0x4244a63a, 0xc0bac56c ),
	NORM( 0xbf2fddbb, 0x3dffc35b, 0x3f374319 ),
	VERT( 0xc061b9b2, 0x427f3888, 0xc15759b5 ),
	NORM( 0xbd095054, 0x3e7bfcc9, 0xbf77fab5 ),
	VERT( 0xc0549d4c, 0x426e9d33, 0x4150762c ),
	NORM( 0xbe9c510a, 0xbf3db348, 0x3f191ad3 ),
	VERT( 0xc051946a, 0x424ee4ec, 0x40fc5d55 ),
	NORM( 0xbf1c6512, 0xbf49eb42, 0x3d8bcdad ),
	VERT( 0xc04a78c3, 0x4257f0ed, 0x411c7bca ),
	NORM( 0x3e409f68, 0xbed2454d, 0x3f6464bb ),
	VERT( 0xc046afa3, 0x4250e3ee, 0x40efab92 ),
	NORM( 0xbf4408e7, 0xbe804794, 0xbf17a1f4 ),
	VERT( 0xc0431b25, 0x42415282, 0xc0c4af35 ),
	NORM( 0xbe4044c0, 0xbf781736, 0xbe23c8a4 ),
	VERT( 0xc03a8826, 0x424f5e6d, 0x41013fad ),
	NORM( 0x3dbf44d0, 0xbf2de14d, 0x3f3a5c31 ),
	VERT( 0xc0382cb0, 0x42729b96, 0xc164ca5a ),
	NORM( 0x3dfd7eb8, 0x3e1b0960, 0xbf7b0e9e ),
	VERT( 0xc02bb8ef, 0x42820231, 0x418cbf5e ),
	NORM( 0xbdf97cd8, 0x3e7b9526, 0x3f762fa1 ),
	VERT( 0xc0270996, 0x42832bb8, 0x418b1157 ),
	NORM( 0x38e47e27, 0x3f1d0667, 0x3f4a2f98 ),
	VERT( 0xc026567b, 0x427c5549, 0x418fd245 ),
	NORM( 0xbe13a0b3, 0xbeb0a959, 0x3f6d6d4d ),
	VERT( 0xc023a27b, 0x424a6f00, 0xc10bd15d ),
	NORM( 0x3eb160bc, 0xbf3af4e5, 0xbf16b926 ),
	VERT( 0xc02268c8, 0x428390d0, 0x417aec87 ),
	NORM( 0x3e5f583a, 0x3f64b2a6, 0xbec92720 ),
	VERT( 0xc02224c3, 0x42844bbe, 0x418414f4 ),
	NORM( 0x3e295cfa, 0x3f7a4823, 0x3e04cd70 ),
	VERT( 0xc01aa31d, 0x42622d4c, 0xc164bd65 ),
	NORM( 0x3e84e885, 0xbe8635fe, 0xbf6df151 ),
	VERT( 0xc018b792, 0x427a8568, 0x418b5ff0 ),
	NORM( 0xbdd39b74, 0xbf3c3fcb, 0x3f2b75ce ),
	VERT( 0xc014d3a8, 0x4257b43c, 0x4118685d ),
	NORM( 0x3e1fdb9b, 0xbef8455c, 0x3f5c4b24 ),
	VERT( 0xc011b8e2, 0x426510e0, 0x413e9fa0 ),
	NORM( 0xbe915b08, 0xbf11099a, 0x3f460916 ),
	VERT( 0xc011446c, 0x424f94ae, 0x40fce21b ),
	NORM( 0x3e3b64b0, 0xbf2a0a6d, 0x3f398bd3 ),
	VERT( 0xc0046f26, 0x4241462b, 0xc0cc24c5 ),
	NORM( 0x3ecc5916, 0xbf44a325, 0xbf002e39 ),
	VERT( 0xbfff35f2, 0x4253d389, 0xc13ca2c4 ),
	NORM( 0x3eb135f4, 0xbf1d49c1, 0xbf358253 ),
	VERT( 0xbfeb4440, 0x424ab110, 0x40b28bb1 ),
	NORM( 0xbf636a33, 0xbee65a47, 0xbdbc1c78 ),
	VERT( 0xbfe92ab8, 0x42755a0a, 0x41833914 ),
	NORM( 0xbd0d52c7, 0xbf2aca13, 0x3f3e7f25 ),
	VERT( 0xbfdfcb01, 0x423ff5af, 0xc0517bbd ),
	NORM( 0xbf3f778e, 0xbf15d4dd, 0x3ea0560a ),
	VERT( 0xbfdcf898, 0x4257eaf3, 0x41178912 ),
	NORM( 0x3de9130b, 0xbf119d02, 0x3f50872f ),
	VERT( 0xbfd7e40d, 0x42494a78, 0x40be8450 ),
	NORM( 0xbefa2c38, 0xbf52adb1, 0x3e9460ac ),
	VERT( 0xbfd0a94e, 0x424276b3, 0xc0528aef ),
	NORM( 0xbf61f9c6, 0x3e36780e, 0x3ede9f0b ),
	VERT( 0xbfcf0c6b, 0x424fc31b, 0x40fa5044 ),
	NORM( 0x3e4cdc80, 0xbf2b8f1b, 0x3f36fa0f ),
	VERT( 0xbfcc16b8, 0x424af42d, 0xc10a4758 ),
	NORM( 0x3e9b71db, 0xbf50792e, 0xbefd4067 ),
	VERT( 0xbfc9661d, 0x4243d055, 0xc0c46c6e ),
	NORM( 0x3f331f37, 0xbeea55cc, 0xbf0c705f ),
	VERT( 0xbfb749cd, 0x42493b68, 0x40bdca18 ),
	NORM( 0x3d9879ff, 0xbf56424b, 0x3f0acd28 ),
	VERT( 0xbfb40d8e, 0x426fc8b6, 0x41719f6e ),
	NORM( 0x3c56b55b, 0xbf4326dc, 0x3f25a6dd ),
	VERT( 0xbfac9f7e, 0x423f632e, 0xc05d01d0 ),
	NORM( 0xbe571bf1, 0xbf7a216a, 0x3d0df597 ),
	VERT( 0xbf8fcb09, 0x425009f9, 0x40f64ce1 ),
	NORM( 0x3e9ef3a4, 0xbf249bc9, 0x3f333b0b ),
	VERT( 0xbf8c14d5, 0x42894519, 0xc1341252 ),
	NORM( 0x3dec5b72, 0x3f051309, 0x3f58b081 ),
	VERT( 0xbf89f4ea, 0x428a4187, 0xc138f361 ),
	NORM( 0x3dc7d396, 0x3f6ff96a, 0x3eab2a73 ),
	VERT( 0xbf89934a, 0x42468eb8, 0x404a890b ),
	NORM( 0xbf7966d6, 0xbdf27772, 0xbe449e82 ),
	VERT( 0xbf836080, 0x424079d9, 0xbeaecab7 ),
	NORM( 0xbf39caee, 0xbf27c684, 0x3e563b85 ),
	VERT( 0xbf81f704, 0x42442162, 0x404f2c36 ),
	NORM( 0xbf1d59fd, 0xbf44326c, 0x3e3f222f ),
	VERT( 0xbf7fa0af, 0x42573461, 0x41130105 ),
	NORM( 0xbc995aff, 0xbf2a0cbd, 0x3f3f4d16 ),
	VERT( 0xbf6ec918, 0x4242f69f, 0xbeea6625 ),
	NORM( 0xbf7a061f, 0x3e2f6cd9, 0x3e04b488 ),
	VERT( 0xbf67cdc2, 0x42423821, 0x3fc81e6a ),
	NORM( 0xbf4a2191, 0xbf18f527, 0x3e0f4658 ),
	VERT( 0xbf5bc5de, 0x426bc4ae, 0x41534bae ),
	NORM( 0xbe912424, 0xbf376883, 0x3f233099 ),
	VERT( 0xbf50e43e, 0x4244a582, 0x3fb0e94e ),
	NORM( 0xbf7e3655, 0x3de69561, 0xbd105703 ),
	VERT( 0xbf481ee7, 0x42469c21, 0xc0b9f082 ),
	NORM( 0x3f151ad1, 0xbf276609, 0xbef73c92 ),
	VERT( 0xbf46b2de, 0x42493978, 0x40b8cf68 ),
	NORM( 0x3e401f12, 0xbf4e2946, 0x3f0ff7ac ),
	VERT( 0xbf351461, 0x4263f9dc, 0x41419354 ),
	NORM( 0xbe4106c2, 0xbf15a840, 0x3f4a03d0 ),
	VERT( 0xbf32fca5, 0x42892172, 0xc1530084 ),
	NORM( 0xbbf1bc16, 0x3f40e8b5, 0xbf2847fa ),
	VERT( 0xbf31bc15, 0x423effb7, 0xc0612ad3 ),
	NORM( 0x3ec1ecef, 0xbf695bde, 0xbe23d8e0 ),
	VERT( 0xbf1dd958, 0x4286ea7a, 0xc15ce12f ),
	NORM( 0xbd0adfa0, 0xbd20edab, 0xbf7fa7b2 ),
	VERT( 0xbf06293b, 0x42504794, 0x40ed9488 ),
	NORM( 0x3d4a35d7, 0xbf36b0eb, 0x3f32e2da ),
	VERT( 0xbec40e15, 0x42449a40, 0x40564deb ),
	NORM( 0x3e02baca, 0xbf68e6bf, 0x3eca3c57 ),
	VERT( 0xbebb6aa1, 0x428485b0, 0xc14ff871 ),
	NORM( 0xbd3e7a86, 0xbe5f9902, 0xbf7989e3 ),
	VERT( 0xbea42b4e, 0x4241ae29, 0x3fb9bdc1 ),
	NORM( 0x3d803803, 0xbf7795b9, 0x3e7c6068 ),
	VERT( 0xbea088d6, 0x42406042, 0xbeaae9d9 ),
	NORM( 0x3e24144a, 0xbf7b13c9, 0x3de42f6c ),
	VERT( 0xbe8c8354, 0x42478826, 0xc0b3514d ),
	NORM( 0x3edadbaa, 0xbf49d98e, 0xbee26ec5 ),
	VERT( 0xbe8bf6ab, 0x424cd5c0, 0xc10436be ),
	NORM( 0x3e111805, 0xbf617493, 0xbee76e68 ),
	VERT( 0xbe47086a, 0x4249715e, 0x40b31d1a ),
	NORM( 0x3ea28131, 0xbf4ce043, 0x3f023ae8 ),
	VERT( 0xbe284435, 0x4256e1f9, 0x41157571 ),
	NORM( 0xbe6cc885, 0xbf29bde3, 0x3f36432f ),
	VERT( 0xbd823521, 0x4241c835, 0xc055c6af ),
	NORM( 0x3f3c0bb8, 0xbf1e4440, 0xbe8f32dd ),
	VERT( 0xbcbd3028, 0x427f055b, 0xc1552c83 ),
	NORM( 0xbd8d9d80, 0x3e2fb5b0, 0xbf7b94c0 ),
	VERT( 0x3e0f1392, 0x4271b99f, 0xc15d9687 ),
	NORM( 0xbdad6c8f, 0xbb915feb, 0xbf7f13f6 ),
	VERT( 0x3e305c2e, 0x426a5d71, 0x41553c62 ),
	NORM( 0xbd7e1344, 0xbf1aaa77, 0x3f4b6093 ),
	VERT( 0x3e33ef90, 0x4247c441, 0xc0acc6c4 ),
	NORM( 0x3e7d5bac, 0xbf62801a, 0xbeca3460 ),
	VERT( 0x3e5a48e6, 0x4270ab29, 0x416682a0 ),
	NORM( 0x3e16f1bb, 0xbf29c571, 0x3f3bdb06 ),
	VERT( 0x3e68a691, 0x424c5735, 0xc1016f87 ),
	NORM( 0x3d2be327, 0xbf5d665f, 0xbf0012ad ),
	VERT( 0x3e899b27, 0x4245122b, 0x40588bbd ),
	NORM( 0x3df1904a, 0xbf66ccd1, 0x3ed52000 ),
	VERT( 0x3e89e03f, 0x42424123, 0x3faee105 ),
	NORM( 0x3e2d6a74, 0xbf7499a9, 0x3e7774c4 ),
	VERT( 0x3e8e08b5, 0x424a088e, 0x40a9a0d0 ),
	NORM( 0x3e308919, 0xbf595a08, 0x3effb4d6 ),
	VERT( 0x3ea1cfd7, 0x42582601, 0xc1319074 ),
	NORM( 0xbcdc1f54, 0xbf2b30fc, 0xbf3e3759 ),
	VERT( 0x3ec0867b, 0x4261fc09, 0xc1500c17 ),
	NORM( 0xbd9d9aeb, 0xbed23a57, 0xbf689780 ),
	VERT( 0x3ec80832, 0x42413e17, 0xbf0f8e55 ),
	NORM( 0x3e548018, 0xbf7a5b56, 0xbcbdde53 ),
	VERT( 0x3efaab7a, 0x42438652, 0xc0334a97 ),
	NORM( 0x3e9a25ae, 0xbf63dc1c, 0xbeaf3881 ),
	VERT( 0x3f0b84c7, 0x42631467, 0x41431905 ),
	NORM( 0xbdced5b4, 0xbf1898f3, 0x3f4bea64 ),
	VERT( 0x3f1298c2, 0x427594a6, 0x417e9ac3 ),
	NORM( 0x3d4c2858, 0xbf37f2c5, 0x3f319597 ),
	VERT( 0x3f273258, 0x424ee63c, 0x40f13c51 ),
	NORM( 0x3c6e6e9d, 0xbf4cb908, 0x3f19a863 ),
	VERT( 0x3f3e810c, 0x42482018, 0xc0a95d7f ),
	NORM( 0xbe225ece, 0xbf650c7f, 0xbed5c645 ),
	VERT( 0x3f594025, 0x4255bcdf, 0x41182372 ),
	NORM( 0xbd44e3fd, 0xbf30ea39, 0x3f389f80 ),
	VERT( 0x3f7714fa, 0x4242d767, 0xc026756c ),
	NORM( 0xbeb2d183, 0xbf685a02, 0xbe6e7c78 ),
	VERT( 0x3f8b9d60, 0x424947b7, 0x40af9705 ),
	NORM( 0xbe1c1888, 0xbf547427, 0x3f096457 ),
	VERT( 0x3f9a3a24, 0x424557eb, 0x405978d7 ),
	NORM( 0x3d9f7cf1, 0xbf6ac47c, 0x3ec83a40 ),
	VERT( 0x3f9a85eb, 0x4269b86b, 0x4152e98a ),
	NORM( 0xbcc1f352, 0xbf096fb3, 0x3f57e50b ),
	VERT( 0x3fa3bf62, 0x4242d34c, 0x3fbf9459 ),
	NORM( 0x3e0b969a, 0xbf74c483, 0x3e84c549 ),
	VERT( 0x3fb5dea8, 0x424f1f75, 0x40e8b9b0 ),
	NORM( 0xbd346725, 0xbf5081ef, 0x3f14197b ),
	VERT( 0x3fbd3e12, 0x4255f325, 0x411552cf ),
	NORM( 0x3e157ec4, 0xbf3c4ef6, 0x3f295960 ),
	VERT( 0x3fbe59b4, 0x42419f35, 0xbd91480d ),
	NORM( 0x3e039bdf, 0xbf7d1ab0, 0x3d9e53ad ),
	VERT( 0x3fbf2c35, 0x42494d30, 0x40af65a6 ),
	NORM( 0x3cc51c9f, 0xbf5cea40, 0x3f013526 ),
	VERT( 0x3fc315a3, 0x424193aa, 0xc0355ab8 ),
	NORM( 0xbf03bc68, 0xbf599b71, 0xbde64dcc ),
	VERT( 0x3fc45796, 0x424c4931, 0xc0fde707 ),
	NORM( 0xbe980405, 0xbf50995f, 0xbefee9d8 ),
	VERT( 0x3fca35c8, 0x427b2abf, 0x4189433a ),
	NORM( 0x3d5aeb06, 0xbf346ea8, 0x3f3516a0 ),
	VERT( 0x3fd8ff5c, 0x4245681a, 0xc0aa92f4 ),
	NORM( 0xbf0bb614, 0xbf3d7c16, 0xbec91ebb ),
	VERT( 0x3feac267, 0x427cf4ed, 0x418d036d ),
	NORM( 0x3cf81b69, 0xbef78c76, 0x3f5ff474 ),
	VERT( 0x3feba4bb, 0x426ec6a8, 0x41615308 ),
	NORM( 0xbcc0a5b2, 0xbf21de6e, 0x3f463ce0 ),
	VERT( 0x3ffcfd85, 0x4255b72b, 0x4113a59d ),
	NORM( 0xbe8e2b72, 0xbf249e46, 0x3f36b658 ),
	VERT( 0x400198af, 0x42531d4a, 0xc1363f71 ),
	NORM( 0xbed49929, 0xbf28c603, 0xbf20796c ),
	VERT( 0x400c9c9e, 0x4262682c, 0xc1604635 ),
	NORM( 0xbe9c2eb7, 0xbea2e85f, 0xbf65ca03 ),
	VERT( 0x4010da86, 0x427f2b75, 0x418e44bf ),
	NORM( 0x3ddb727d, 0x3dbc53e3, 0x3f7d6f65 ),
	VERT( 0x40163b04, 0x4262155d, 0x414231ad ),
	NORM( 0xbdbc464b, 0xbf179217, 0x3f4cf5ad ),
	VERT( 0x401b8831, 0x42464745, 0x4062b32e ),
	NORM( 0x3f378151, 0xbf24c3be, 0x3e8952f7 ),
	VERT( 0x401be100, 0x42888ed0, 0xc137a733 ),
	NORM( 0x3cf5b7a5, 0x3f09d532, 0x3f57971b ),
	VERT( 0x401be6ed, 0x4248ebb6, 0x40548ed8 ),
	NORM( 0x3f7fdf34, 0x3aedd958, 0x3d015917 ),
	VERT( 0x401bea2f, 0x423f4d12, 0xc03c0de9 ),
	NORM( 0xbdb28d12, 0xbf7da4c6, 0x3dd41447 ),
	VERT( 0x40205c25, 0x424908de, 0x40a70d64 ),
	NORM( 0x3f2721a8, 0xbf377c17, 0x3e7af6b2 ),
	VERT( 0x4022ea56, 0x424b69dc, 0x409be3d8 ),
	NORM( 0x3f7cab8b, 0xbdf63907, 0xbdda95a1 ),
	VERT( 0x4023c1ed, 0x42819ab5, 0x4176423e ),
	NORM( 0x3d9b4288, 0x3f6f1dd5, 0xbeb2b0f4 ),
	VERT( 0x4024b2e9, 0x424dff8e, 0x40ea6910 ),
	NORM( 0xbe0f50d9, 0xbf5a525a, 0x3f00cb4e ),
	VERT( 0x4024e132, 0x42429e34, 0x3d5e896d ),
	NORM( 0x3f206bc8, 0xbf40cec9, 0x3e4cfd09 ),
	VERT( 0x4024fa94, 0x4243e863, 0x3fd25520 ),
	NORM( 0x3f36f244, 0xbf2b23d9, 0x3e52d0ee ),
	VERT( 0x4025df6c, 0x42898428, 0xc13ca45e ),
	NORM( 0x3d2e9695, 0x3f6b9424, 0x3ec731cc ),
	VERT( 0x402678b6, 0x42813903, 0x41899b66 ),
	NORM( 0x3e2e9468, 0x3f33b55f, 0x3f31050d ),
	VERT( 0x402c4a1f, 0x4246f256, 0x3face203 ),
	NORM( 0x3f7ca483, 0xbe0b0b4a, 0x3db2c611 ),
	VERT( 0x402ca785, 0x4242da5b, 0xc0b20f87 ),
	NORM( 0xbf21264a, 0xbf1ece6e, 0xbeef8f97 ),
	VERT( 0x40316615, 0x428239d2, 0x41823270 ),
	NORM( 0x3e0cb29e, 0x3f7c2f70, 0x3dd3dcb5 ),
	VERT( 0x40352ba2, 0x42528c1d, 0x41180fe2 ),
	NORM( 0xbecda69c, 0xbf2501b6, 0x3f268a5d ),
	VERT( 0x40361887, 0x4245cb31, 0xbdca05a0 ),
	NORM( 0x3f70062a, 0xbe8df199, 0x3e56f090 ),
	VERT( 0x403acaa5, 0x4289286b, 0xc14c74aa ),
	NORM( 0x3d87a3ad, 0x3f5d8310, 0xbefe68b1 ),
	VERT( 0x403eba39, 0x4273fb01, 0x4179631b ),
	NORM( 0x3dc11170, 0xbf3ac800, 0x3f2d657f ),
	VERT( 0x403f84eb, 0x424db892, 0x40e87678 ),
	NORM( 0x3f0c48d3, 0xbf4c941a, 0x3e7d1af0 ),
	VERT( 0x40463b75, 0x4274544e, 0xc16918a9 ),
	NORM( 0xbe1650d6, 0x3defad71, 0xbf7b72c3 ),
	VERT( 0x4046cbb8, 0x4248f332, 0xc104c21d ),
	NORM( 0xbeebbea9, 0xbf3ea92a, 0xbef74f60 ),
	VERT( 0x404a5f2e, 0x424fdde1, 0x40dc2bae ),
	NORM( 0x3f69e281, 0xbec89fec, 0xbdde2f38 ),
	VERT( 0x404e2d18, 0x4240a6ed, 0xc0b9a40e ),
	NORM( 0xbf153a52, 0xbf28d828, 0xbef2f869 ),
	VERT( 0x404e3bb6, 0x424178ba, 0xc0381819 ),
	NORM( 0x3f1490f8, 0xbf43c941, 0x3e8f4617 ),
	VERT( 0x404e5e30, 0x4284f5ae, 0xc14feec4 ),
	NORM( 0x3d1e042d, 0xbdfc1fbc, 0xbf7ddc55 ),
	VERT( 0x4055df08, 0x4269874e, 0x4154f3ba ),
	NORM( 0xbdbbd7a8, 0xbf0a7390, 0x3f560be5 ),
	VERT( 0x4055e642, 0x42870dae, 0xc15a0d2e ),
	NORM( 0x3dcc8231, 0x3d710382, 0xbf7e4650 ),
	VERT( 0x4066eef9, 0x4245e3a4, 0xc037dd31 ),
	NORM( 0x3f61b205, 0x3d8c72d9, 0x3eef138c ),
	VERT( 0x406900cf, 0x42513f76, 0x41140f22 ),
	NORM( 0xbd07450e, 0xbf666cad, 0x3ede6ec3 ),
	VERT( 0x406be85e, 0x42801e61, 0xc15a88ef ),
	NORM( 0xbd984d94, 0x3e87e9c6, 0xbf761488 ),
	VERT( 0x406cb13b, 0x42431c80, 0xc039460e ),
	NORM( 0x3f53a3a0, 0xbeb6b924, 0x3edeb120 ),
	VERT( 0x406fd28f, 0x42478690, 0xc105d735 ),
	NORM( 0xbe80515b, 0xbf538544, 0xbf012560 ),
	VERT( 0x407021ff, 0x4260c638, 0x4140f19b ),
	NORM( 0xbea2781c, 0xbef0320a, 0x3f52fb70 ),
	VERT( 0x4084525b, 0x423ed6f0, 0xc0b96cad ),
	NORM( 0x3daead1a, 0xbf7e2761, 0xbdac8675 ),
	VERT( 0x40846126, 0x4250e898, 0xc13b10aa ),
	NORM( 0xbe3cc99e, 0xbf30cf8a, 0xbf3303e1 ),
	VERT( 0x408562cf, 0x42537c42, 0x410ba7e3 ),
	NORM( 0x3f563e5d, 0xbe3f439f, 0xbf03b77d ),
	VERT( 0x4088e5f2, 0x42512ff9, 0x4111d95e ),
	NORM( 0x3f0acb69, 0xbf560ddf, 0xbdaa3f24 ),
	VERT( 0x4089e7a9, 0x426c8361, 0x41601f9b ),
	NORM( 0xbbdba3ab, 0xbece2602, 0x3f6a5381 ),
	VERT( 0x409670dd, 0x4241ad0e, 0xc0a681b0 ),
	NORM( 0x3f1e7df9, 0xbf321a1d, 0x3eba8108 ),
	VERT( 0x40992fbd, 0x425ecd13, 0x414d3da0 ),
	NORM( 0xbebf9c1d, 0xbdbf7208, 0x3f6c301e ),
	VERT( 0x409a97c2, 0x42471d13, 0xc1049bd7 ),
	NORM( 0xbebc65a8, 0xbf236eba, 0xbf2d1157 ),
	VERT( 0x40a1e4c7, 0x4246fe6c, 0xc09d6179 ),
	NORM( 0x3f3fc525, 0x3d828927, 0x3f28cd38 ),
	VERT( 0x40a668ee, 0x42444148, 0xc0a064bf ),
	NORM( 0x3f416f4b, 0xbeaa4c89, 0x3f1075a7 ),
	VERT( 0x40b042cc, 0x425dce95, 0x414d588b ),
	NORM( 0xbe0c8bc2, 0xbeba6692, 0x3f6bd41f ),
	VERT( 0x40b11bec, 0x4279eccc, 0x4184b24c ),
	NORM( 0x3e48f7c9, 0xbf37c088, 0x3f2b046f ),
	VERT( 0x40b7619b, 0x4243fcf3, 0xc10c8af5 ),
	NORM( 0xbee9563a, 0xbf0907af, 0xbf36105b ),
	VERT( 0x40c607b0, 0x424fef9e, 0xc13ab98e ),
	NORM( 0x3d842c9a, 0xbf3f18f6, 0xbf298af8 ),
	VERT( 0x40c8319d, 0x427bfbaf, 0x4187327a ),
	NORM( 0x3e6ea67e, 0xbf2083c8, 0x3f3e4afa ),
	VERT( 0x40cc94d1, 0x425a6e91, 0x414943b6 ),
	NORM( 0xbc706ae6, 0xbf04641c, 0x3f5b1393 ),
	VERT( 0x40d06271, 0x42889064, 0xc13220bb ),
	NORM( 0xbdf9e79d, 0x3f04a9d9, 0x3f58b433 ),
	VERT( 0x40d1a954, 0x4260a851, 0xc16d891e ),
	NORM( 0x3cd0f992, 0xbe9bebf2, 0xbf73c0bc ),
	VERT( 0x40d653de, 0x427376c9, 0x4165089c ),
	NORM( 0x3e981d5b, 0xbf026549, 0x3f4ec1ab ),
	VERT( 0x40d82ab3, 0x42667ec8, 0x415ab946 ),
	NORM( 0x3c0aff2b, 0xbe6170b2, 0x3f79b5a2 ),
	VERT( 0x40d925c8, 0x42898762, 0xc1362fe0 ),
	NORM( 0xbd0c09ad, 0x3f6f445b, 0x3eb539c8 ),
	VERT( 0x40da7af5, 0x42425646, 0xc10b7779 ),
	NORM( 0x3e953f6e, 0xbf6b5d52, 0xbe873732 ),
	VERT( 0x40dd399e, 0x427fd0c9, 0xc15f00e0 ),
	NORM( 0x3dc05277, 0x3ea8a5c2, 0xbf7083e6 ),
	VERT( 0x40df78ba, 0x4274b875, 0xc16ca105 ),
	NORM( 0x3da19e3b, 0x3e1fc008, 0xbf7c0ea9 ),
	VERT( 0x40e0f847, 0x428904c5, 0xc1477e36 ),
	NORM( 0x3e03dfc7, 0x3f594349, 0xbf0352e5 ),
	VERT( 0x40e12075, 0x425a30be, 0x4138342f ),
	NORM( 0x3f03591c, 0xbeef7a86, 0xbf383eb2 ),
	VERT( 0x40e4888d, 0x4285db5e, 0xc14a044f ),
	NORM( 0x3e3c06c8, 0xbe2e6833, 0xbf77d75a ),
	VERT( 0x40e63a20, 0x427dc8e6, 0x4187bd46 ),
	NORM( 0x3ed7cfbd, 0xbdddd0f3, 0x3f667c4a ),
	VERT( 0x40e78e09, 0x426b1040, 0x415fe190 ),
	NORM( 0x3e5ef7ea, 0xbefea37c, 0x3f56fc32 ),
	VERT( 0x40e7df92, 0x425820f0, 0x413ff7de ),
	NORM( 0x3edfc1bd, 0xbf5d77d0, 0x3e7c1162 ),
	VERT( 0x40e9e936, 0x42873632, 0xc15338be ),
	NORM( 0x3e6528b1, 0x3b8c55e9, 0xbf798141 ),
	VERT( 0x40eccee2, 0x424afd0d, 0xc0e50250 ),
	NORM( 0x3f277727, 0x3cc3b08a, 0x3f4187ba ),
	VERT( 0x40ed8757, 0x4246200c, 0xc0fab85f ),
	NORM( 0x3f33c5a6, 0xbf23ce61, 0x3e9fd1bb ),
	VERT( 0x40f3ab35, 0x4280bf01, 0x416231b8 ),
	NORM( 0xbe16071b, 0x3f716d97, 0xbe98dcb9 ),
	VERT( 0x40f3f7a3, 0x42486448, 0xc0ea8c28 ),
	NORM( 0x3f3d8ce4, 0xbea998e4, 0x3f15b822 ),
	VERT( 0x40f93a8f, 0x4280ccd1, 0x417e7c55 ),
	NORM( 0x3e9fa3a7, 0x3f42843e, 0x3f120aa2 ),
	VERT( 0x4100919e, 0x42815c50, 0x416e7029 ),
	NORM( 0x3c9f3018, 0x3f7faf26, 0x3d3b2dac ),
	VERT( 0x410783f1, 0x42518917, 0xc1379756 ),
	NORM( 0xbeb695c2, 0xbec42bf5, 0xbf5a215e ),
	VERT( 0x410cf541, 0x424e2690, 0xc13d62c9 ),
	NORM( 0xbeb714c7, 0xbeb7b116, 0xbf5cba42 ),
	VERT( 0x410eb12c, 0x425f648d, 0xc16334bf ),
	NORM( 0x3e88d595, 0xbeb268c9, 0xbf65feae ),
	VERT( 0x411935f7, 0x4271fbc0, 0xc165d7e5 ),
	NORM( 0x3ea86673, 0x3d9caf5c, 0xbf70f64f ),
	VERT( 0x411e4a27, 0x424d13a0, 0xc13a5448 ),
	NORM( 0x3f03e20f, 0xbf32d559, 0xbefe4173 ),
	VERT( 0x4126123b, 0x4255d666, 0xc1195f56 ),
	NORM( 0x3f1ca353, 0xbbce9cd3, 0x3f4a7abe ),
	VERT( 0x412847cb, 0x4250e3e8, 0xc12779a6 ),
	NORM( 0x3f579a03, 0xbf06ccf1, 0x3ded6b88 ),
	VERT( 0x41284847, 0x425e8c2f, 0xc1579437 ),
	NORM( 0x3e52ad51, 0xbe7dac12, 0xbf725d14 ),
	VERT( 0x412b54ce, 0x42539f68, 0xc11d8321 ),
	NORM( 0x3f4fda46, 0xbe8c7a71, 0x3f03e87a ),
	VERT( 0x41316cdb, 0x42676029, 0x415917fe ),
	NORM( 0x3e4756ae, 0xbc8e2132, 0x3f7b1034 ),
	VERT( 0x4136d455, 0x42790534, 0x41558d89 ),
	NORM( 0x3f08a1a8, 0xbea56bf0, 0x3f481121 ),
	VERT( 0x413a7a68, 0x425dc0bd, 0xc155f925 ),
	NORM( 0x3f073d16, 0xbe990faf, 0xbf4b71bc ),
	VERT( 0x413b8e61, 0x4260299f, 0xc1287aa4 ),
	NORM( 0x3f074d86, 0xbdd17e7f, 0x3f57bd3b ),
	VERT( 0x413bb46e, 0x427f369b, 0xc14c0c57 ),
	NORM( 0x3ee27556, 0x3e68f171, 0xbf5e16eb ),
	VERT( 0x413c5e69, 0x42743a33, 0x413e602a ),
	NORM( 0x3f2f174b, 0xbd501db8, 0x3f3a4e5c ),
	VERT( 0x41412e56, 0x426e3089, 0x4149a9a9 ),
	NORM( 0x3f02750e, 0x3e9853a2, 0x3f4eadbb ),
	VERT( 0x414192ee, 0x425e4fda, 0xc12d26d7 ),
	NORM( 0x3f54b994, 0xbe926e88, 0x3ef452ef ),
	VERT( 0x4141d551, 0x425dbc09, 0xc13c10e6 ),
	NORM( 0x3f64a764, 0xbee0bbe8, 0xbdc85473 ),
	VERT( 0x41437a5e, 0x42668f0c, 0x41543bb8 ),
	NORM( 0x3f037250, 0x3dae375b, 0x3f5a9833 ),
	VERT( 0x4145ba9f, 0x426caa43, 0xc14b399a ),
	NORM( 0x3e8a600d, 0x3e29714b, 0xbf72ce49 ),
	VERT( 0x4146c7ba, 0x4267a78f, 0xc1293490 ),
	NORM( 0x3eb4bcb9, 0xbe9955ec, 0x3f62eae2 ),
	VERT( 0x414ae14c, 0x42645ffd, 0x41454c89 ),
	NORM( 0x3f1d2c18, 0xbf12aaaf, 0x3f0b00b3 ),
	VERT( 0x414afdf1, 0x42878220, 0xc116e0f5 ),
	NORM( 0xbe7e3b68, 0x3f0eb3dc, 0x3f4acfa7 ),
	VERT( 0x414bf32b, 0x4264b7c8, 0x412aa0b8 ),
	NORM( 0xbdec28fa, 0xbf472db2, 0xbf1e1715 ),
	VERT( 0x414d3194, 0x42661169, 0xc12de751 ),
	NORM( 0x3f3ec140, 0xbeacd667, 0x3f133e18 ),
	VERT( 0x4150fa45, 0x4281ea28, 0x411a91d9 ),
	NORM( 0xbea9d7d8, 0x3f6d6231, 0xbe31b0d2 ),
	VERT( 0x41528baf, 0x42630720, 0x4131e9d8 ),
	NORM( 0x3f07a152, 0xbf59072a, 0x3cc8a2fc ),
	VERT( 0x41534786, 0x428860ac, 0xc11929ca ),
	NORM( 0xbc4c822b, 0x3f725ac1, 0x3ea4cdc8 ),
	VERT( 0x41537e48, 0x42872fdf, 0xc1104a54 ),
	NORM( 0xbec9cf73, 0x3f310721, 0x3f1af7fa ),
	VERT( 0x41541277, 0x426b15f9, 0xc14dd8fc ),
	NORM( 0x3f164751, 0xbbbc6f07, 0xbf4f3e87 ),
	VERT( 0x4154ac9a, 0x426899fd, 0xc13d0ac2 ),
	NORM( 0x3f6d2915, 0xbebe7398, 0xbd6ee940 ),
	VERT( 0x41560903, 0x4286383a, 0xc12d49a3 ),
	NORM( 0x3eef0933, 0x3c446fb4, 0xbf625df6 ),
	VERT( 0x4157e2a3, 0x4287397f, 0xc12dc51d ),
	NORM( 0x3ef9836c, 0x3e98cb83, 0xbf521572 ),
	VERT( 0x41593e93, 0x42880107, 0xc126872e ),
	NORM( 0x3ed240c7, 0x3f4fbc35, 0xbed4e3c6 ),
	VERT( 0x4159f373, 0x427c1fff, 0x413fee7e ),
	NORM( 0x3f0bc3f3, 0xbf347f4a, 0x3ee7b5c0 ),
	VERT( 0x415aee04, 0x428295c3, 0x4123d65c ),
	NORM( 0x3d2526e8, 0x3f7ef0b8, 0x3da6d564 ),
	VERT( 0x415b2706, 0x42871ba1, 0xc10739de ),
	NORM( 0xbed29157, 0x3f3120ed, 0x3f17e90d ),
	VERT( 0x415c6fd6, 0x428810cd, 0xc1129715 ),
	NORM( 0xbd4a00e7, 0x3f7903fd, 0x3e6821f4 ),
	VERT( 0x415d9d2e, 0x4287e2a6, 0xc121ee6c ),
	NORM( 0x3f17158d, 0x3f4085be, 0xbe964320 ),
	VERT( 0x415ee71f, 0x42873c89, 0xc12559d0 ),
	NORM( 0x3f3e1009, 0x3ede6f6d, 0xbf028c56 ),
	VERT( 0x415f93ce, 0x4286a5c7, 0xc102807d ),
	NORM( 0xbeb9bda7, 0x3f2924f3, 0x3f283ad8 ),
	VERT( 0x4161f4a5, 0x42776d89, 0xc1168413 ),
	NORM( 0x3e81a3c5, 0xbed08047, 0x3f60a599 ),
	VERT( 0x4162c3bc, 0x42863c82, 0xc1250a51 ),
	NORM( 0x3f2f8c23, 0x3e52d509, 0xbf32b86b ),
	VERT( 0x4162e301, 0x42871c0c, 0xc11d96ec ),
	NORM( 0x3f4c650c, 0x3ef45dc8, 0xbebbefdc ),
	VERT( 0x41644659, 0x4287a915, 0xc116807e ),
	NORM( 0x3f1f6992, 0x3f375327, 0xbea17095 ),
	VERT( 0x41647955, 0x42880db6, 0xc1097893 ),
	NORM( 0x3d493c0f, 0x3f7487c8, 0x3e956f5b ),
	VERT( 0x4164cd17, 0x427e84e6, 0x413c8ff2 ),
	NORM( 0x3f495180, 0xbe38c89d, 0x3f173cdd ),
	VERT( 0x4165150a, 0x42819614, 0x4132a9a1 ),
	NORM( 0x3f1c9c68, 0x3f20ad6e, 0x3ef68281 ),
	VERT( 0x4165da06, 0x427f5118, 0xc1290270 ),
	NORM( 0x3ebee873, 0x3e197325, 0xbf6a6b97 ),
	VERT( 0x41675541, 0x42860a4e, 0xc0ec3a55 ),
	NORM( 0xbefec206, 0x3f425cc4, 0x3ed6cab1 ),
	VERT( 0x41681d33, 0x4286cc15, 0xc1157271 ),
	NORM( 0x3f551479, 0x3eca4e39, 0xbec70209 ),
	VERT( 0x4168b930, 0x42860b80, 0xc11e0254 ),
	NORM( 0x3f4b2bcf, 0x3ebc3a1f, 0xbef831d3 ),
	VERT( 0x416953d6, 0x427665cc, 0xc11a8e2d ),
	NORM( 0x3f484f90, 0xbed8e9c5, 0x3ee9a7e4 ),
	VERT( 0x416a0f5e, 0x4287badf, 0xc105a465 ),
	NORM( 0x3ea61268, 0x3f6aa5f5, 0x3e6f5f96 ),
	VERT( 0x416a7194, 0x428750af, 0xc1101909 ),
	NORM( 0x3f4c1ba3, 0x3ef849ff, 0xbeb8003a ),
	VERT( 0x416b7c44, 0x42783ebb, 0xc11e03e2 ),
	NORM( 0x3f780902, 0xbe58f37f, 0x3e0303d5 ),
	VERT( 0x416c062f, 0x42822570, 0xc100294b ),
	NORM( 0x3c8924e6, 0xbf4bda81, 0x3f1acb6b ),
	VERT( 0x416cae4d, 0x4285c835, 0xc118aaa8 ),
	NORM( 0x3f672d14, 0x3eaab619, 0xbe8aae0d ),
	VERT( 0x416d7c74, 0x4286ea96, 0xc1094070 ),
	NORM( 0x3f621149, 0x3ec5bf26, 0xbe886f07 ),
	VERT( 0x416d9289, 0x42823c03, 0x409d6d76 ),
	NORM( 0xbeb0aca1, 0x3f6fb7fb, 0xbd82d7fd ),
	VERT( 0x416eb9f0, 0x42863b54, 0xc109d8fc ),
	NORM( 0x3f6c117f, 0x3e837636, 0xbe9426b0 ),
	VERT( 0x416f5a00, 0x428527bc, 0xc110516f ),
	NORM( 0x3f732546, 0x3e1862f2, 0xbe8cec6e ),
	VERT( 0x416fae3a, 0x42824f22, 0xc0f1429c ),
	NORM( 0xbe8dc4d3, 0xbf75fd91, 0xba90291f ),
	VERT( 0x4170695a, 0x427cda26, 0xc128b405 ),
	NORM( 0x3f6a8569, 0x3da38506, 0xbec92d4e ),
	VERT( 0x4171b724, 0x42857fe9, 0xc103be62 ),
	NORM( 0x3f625af7, 0x3e33e897, 0xbedd98e1 ),
	VERT( 0x41727fec, 0x428582de, 0xc0a33385 ),
	NORM( 0xbefb344c, 0x3f53d635, 0x3e8bca28 ),
	VERT( 0x417295f3, 0x4284eeef, 0xc1065b55 ),
	NORM( 0x3f6eb0ce, 0x3e2a4214, 0xbea45450 ),
	VERT( 0x4172eaf6, 0x428740c2, 0xc0f32e54 ),
	NORM( 0x3eb21f70, 0x3f6fde1a, 0x3d038ebd ),
	VERT( 0x4173c03c, 0x4281dba4, 0xc103698a ),
	NORM( 0x3f5c1104, 0xbf01eec2, 0x3d6f9b9e ),
	VERT( 0x4173fb29, 0x428630ac, 0xc1009dc7 ),
	NORM( 0x3f5662e4, 0x3e8178ed, 0xbef80ffb ),
	VERT( 0x4174690a, 0x427b5583, 0x40d569e3 ),
	NORM( 0x3f5c26c5, 0xbeb927ee, 0x3eb86053 ),
	VERT( 0x4177895c, 0x428206cd, 0xc0f73b3d ),
	NORM( 0x3eb595f4, 0xbf3f65bf, 0xbf0fbc19 ),
	VERT( 0x417805ca, 0x4275c048, 0x40cb1305 ),
	NORM( 0x3f53c97e, 0x3e97f440, 0x3ef435f6 ),
	VERT( 0x417aa3b7, 0x42844c14, 0xc026ea67 ),
	NORM( 0xbef60acd, 0x3f52c00d, 0x3e9abd9a ),
	VERT( 0x417b3735, 0x4282f662, 0x40b4c6b5 ),
	NORM( 0xbac1ba00, 0x3f7fd115, 0x3d1ad8e1 ),
	VERT( 0x417b5ff3, 0x427d90a8, 0x40e1cfb4 ),
	NORM( 0x3f263a74, 0xbf3e5ca2, 0x3e234aa3 ),
	VERT( 0x417b6436, 0x4280f23a, 0xc0d6a10f ),
	NORM( 0xbec6dd9c, 0xbf538757, 0xbed0d9f4 ),
	VERT( 0x417da23b, 0x42865a71, 0xc0a3f64f ),
	NORM( 0x3e8637d8, 0x3f74c42d, 0x3e05f981 ),
	VERT( 0x417f4ffe, 0x42717785, 0x40de50d4 ),
	NORM( 0x3f13e228, 0x3f358b32, 0x3ecef663 ),
	VERT( 0x417ffab3, 0x4282611f, 0xc0e75f57 ),
	NORM( 0x3f466c6d, 0xbd8b0123, 0xbf20d137 ),
	VERT( 0x41800e8b, 0x428514bb, 0xc0d4980d ),
	NORM( 0x3f611f5f, 0x3ed18c21, 0xbe791ab9 ),
	VERT( 0x4180d7c6, 0x4282b8fb, 0x3e40788c ),
	NORM( 0xbeedd01a, 0x3f5fde4a, 0x3e0f1ef8 ),
	VERT( 0x41817fbf, 0x4282fffe, 0xc0e24db4 ),
	NORM( 0x3f55c3b8, 0x3db57459, 0xbf0b04d8 ),
	VERT( 0x4181bb5b, 0x427ea5cf, 0xc0ba3581 ),
	NORM( 0xbecb33c4, 0xbf4261dc, 0xbf04049c ),
	VERT( 0x4181d486, 0x42809d97, 0xc0dba937 ),
	NORM( 0x3ec86414, 0xbf133342, 0xbf37ed30 ),
	VERT( 0x4181f30f, 0x427f4ca5, 0x40eee789 ),
	NORM( 0x3f4e1a87, 0xbf02def4, 0x3e9a03a6 ),
	VERT( 0x4182e410, 0x4282551d, 0x40cdf309 ),
	NORM( 0x3f20e527, 0x3f3cd60b, 0x3e7ca7ec ),
	VERT( 0x41830719, 0x428512ab, 0xc021fca4 ),
	NORM( 0x3ea69bc3, 0x3f6c5e35, 0x3e50ddcf ),
	VERT( 0x41842fc4, 0x4280d836, 0x40e23e4c ),
	NORM( 0x3f6f467d, 0x3de2011b, 0x3ead08c7 ),
	VERT( 0x41847852, 0x427ad240, 0xc09a4ae1 ),
	NORM( 0xbecc7a55, 0xbf3f5338, 0xbf07eefa ),
	VERT( 0x4184d159, 0x4283d5ac, 0xc0a7a782 ),
	NORM( 0x3f6884da, 0x3ecd653b, 0xbdf331b3 ),
	VERT( 0x41850da5, 0x427f9a3d, 0xc0c3f3b4 ),
	NORM( 0x3f49ff93, 0xbe0d164d, 0xbf194284 ),
	VERT( 0x41860238, 0x427ddf3f, 0xc0be3d05 ),
	NORM( 0x3f10fb93, 0xbeff96b5, 0xbf27e1fc ),
	VERT( 0x418606f5, 0x426e1a1c, 0x40fe14f3 ),
	NORM( 0x3f568077, 0x3c7abd3f, 0x3f0bad46 ),
	VERT( 0x41861c9e, 0x4277e1bb, 0xc0744569 ),
	NORM( 0xbecd21a7, 0xbf43ecc1, 0xbf00f4d2 ),
	VERT( 0x41868a50, 0x42836ebe, 0x3eb99a43 ),
	NORM( 0xbc6ec7f4, 0x3f7fe849, 0x3cb93602 ),
	VERT( 0x4187cc05, 0x42823609, 0xc06cef5a ),
	NORM( 0x3f5fecd4, 0x3eeec901, 0xbe06fe57 ),
	VERT( 0x4188137f, 0x42750596, 0xc03fd9b7 ),
	NORM( 0xbed342ad, 0xbf4a23e0, 0xbee887d2 ),
	VERT( 0x4188558c, 0x42806a11, 0xc0be31f9 ),
	NORM( 0x3f582407, 0xbb82d21a, 0xbf092de3 ),
	VERT( 0x4188d7ed, 0x4279e920, 0xc09d3242 ),
	NORM( 0x3d81ce30, 0xbf386b56, 0xbf30cfb7 ),
	VERT( 0x4189e740, 0x42805d53, 0x40127022 ),
	NORM( 0x3f5a49a8, 0xbebffa3e, 0x3eba4104 ),
	VERT( 0x418a8b02, 0x4276de16, 0xc077cf9d ),
	NORM( 0xbca254ce, 0xbf4b95c6, 0xbf1b1fb1 ),
	VERT( 0x418bc457, 0x4270e8db, 0xbf5ff611 ),
	NORM( 0xbee04bee, 0xbf59937e, 0xbe95eccf ),
	VERT( 0x418c3d9c, 0x4283263e, 0x3f85b28d ),
	NORM( 0x3f10e306, 0x3f530237, 0x3c8c1078 ),
	VERT( 0x418c93a4, 0x4273e81e, 0xc0418a9a ),
	NORM( 0x3d7dc97d, 0xbf545275, 0xbf0e23cb ),
	VERT( 0x418d4bc8, 0x426c1f8b, 0x4031010e ),
	NORM( 0xbed42d02, 0xbf58814d, 0xbeac2074 ),
	VERT( 0x418d5ef1, 0x42814f45, 0x400fa97c ),
	NORM( 0x3f6f3dfb, 0xbe3735cd, 0x3e9d7f41 ),
	VERT( 0x418de2ba, 0x42827f8a, 0x3fd7496e ),
	NORM( 0x3f5a38c1, 0x3efa1d91, 0x3e3ed2d3 ),
	VERT( 0x418e2615, 0x427b3e91, 0xc0968f0f ),
	NORM( 0x3f3767d1, 0xbea214a8, 0xbf1f2820 ),
	VERT( 0x418e33c1, 0x4281374a, 0xc025758b ),
	NORM( 0x3f5c40a3, 0x3ef39a12, 0xbe3b29c3 ),
	VERT( 0x418f6bb4, 0x427d2a70, 0xc07ad50c ),
	NORM( 0x3f72b6f8, 0x3e9931f3, 0xbddc4f58 ),
	VERT( 0x418fead4, 0x4277a160, 0xc06dd498 ),
	NORM( 0x3f31c8dd, 0xbefff6a4, 0xbf04794b ),
	VERT( 0x41901c77, 0x427b93ca, 0xc089344e ),
	NORM( 0x3f75e852, 0x3cdda1f4, 0xbe8dab49 ),
	VERT( 0x419065c6, 0x426fa641, 0xbf538f99 ),
	NORM( 0x3e6ac2e8, 0xbf68cb37, 0xbeb1bf2b ),
	VERT( 0x41906c05, 0x4278977b, 0xc02c41c8 ),
	NORM( 0x3f5a5ede, 0x3f059a89, 0x3b17f7cb ),
	VERT( 0x419073b9, 0x427869f5, 0xc00c3bc8 ),
	NORM( 0x3f7827b4, 0x3e7743df, 0x3d3912a6 ),
	VERT( 0x4190fce4, 0x4276883a, 0x3f3ff49c ),
	NORM( 0x3f6c5f30, 0x3e8a6967, 0x3e8ba422 ),
	VERT( 0x41918585, 0x42787f26, 0xc05364f4 ),
	NORM( 0x3f7c6a19, 0x3debe013, 0xbdf70b7f ),
	VERT( 0x4191a9cf, 0x42767aba, 0x3e391f1d ),
	NORM( 0x3f6e7a3a, 0x3eb43f0d, 0x3dba4d72 ),
	VERT( 0x4191bd17, 0x42753526, 0xc0326390 ),
	NORM( 0x3f48123c, 0xbee871e5, 0xbedb166e ),
	VERT( 0x4191c28f, 0x4276c0c3, 0xbfb69d58 ),
	NORM( 0x3f3e625c, 0x3f29f9c3, 0x3d9f9fff ),
	VERT( 0x4191d6d8, 0x4278db7f, 0xbf67968e ),
	NORM( 0x3f7f7462, 0xbd1cbd71, 0x3d586c74 ),
	VERT( 0x4191fb00, 0x426ab1c1, 0x403c524a ),
	NORM( 0x3ef18ce6, 0xbf5c0ed3, 0xbe48f3e6 ),
	VERT( 0x4192ee4b, 0x42753abe, 0x3ecb2799 ),
	NORM( 0x3f66ee8f, 0x3ec52a32, 0x3e4784d3 ),
	VERT( 0x41931f58, 0x427c10a3, 0xbf974631 ),
	NORM( 0x3f7fd0ec, 0x3d032c5e, 0xbca5f974 ),
	VERT( 0x41937dfb, 0x42773e08, 0xc0156e83 ),
	NORM( 0x3f70cf03, 0x3eac1a04, 0xbd3ef89e ),
	VERT( 0x41939a3b, 0x426cd65f, 0x40620700 ),
	NORM( 0x3f63c23b, 0xbee47dc1, 0x3dc591e0 ),
	VERT( 0x4193cea2, 0x42718e9e, 0xbf1d5c11 ),
	NORM( 0x3f5f9c96, 0xbee169e9, 0xbe54d410 ),
	VERT( 0x41945baa, 0x426df45f, 0x4087f819 ),
	NORM( 0x3f711c86, 0x3c471c7f, 0x3eabf2ea ),
	VERT( 0x4195521b, 0x427330a8, 0xbe72e59a ),
	NORM( 0x3f7fe4d2, 0x3ce94c6d, 0x3b8be80c ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_diaper[]
START
VList      vertex_kihon11_Bip01_diaper,
PList      strip_kihon11_Bip01_diaper,
Center       0.064125F, 59.107494F,  1.563533F,
Radius      25.991234F,
END

CNKOBJECT  object_kihon11_Bip01_diaper[]
START
EvalFlags ( 0x00000010 ),
CNKModel   model_kihon11_Bip01_diaper,
OPosition  ( -55.635731F,  0.018602F,  0.803779F ),
OAngle     (  0.000003F, 179.999879F, -89.999946F ),
OScale     (  1.030000F,  1.000000F,  1.070000F ),
Child       NULL,
Sibling     object_kihon11_Bip01_eyeball,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_kihon11_Bip01_body[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 192, 192, 192 ),
	MAmbi( 255, 127, 127, 127 ),
	MSpec( 15, 229, 229, 229 ),
	CnkT_TID( 0x0|FDA_100 ), _TID( FFM_BF, 0 ),
	CnkS_UVN( 0x0 ), 40392, _NB( UFO_0, 1294 ),
	StripR(5),  
	3549, 	Uvn( 0, 255 ),
	988, 	Uvn( 0, 255 ),
	990, 	Uvn( 0, 255 ),
	991, 	Uvn( 0, 255 ),
	4017, 	Uvn( 0, 255 ),
	StripL(11),  
	1429, 	Uvn( 0, 255 ),
	1427, 	Uvn( 0, 255 ),
	1428, 	Uvn( 0, 255 ),
	1417, 	Uvn( 0, 255 ),
	1413, 	Uvn( 0, 255 ),
	1399, 	Uvn( 0, 255 ),
	1425, 	Uvn( 0, 255 ),
	1406, 	Uvn( 0, 255 ),
	1426, 	Uvn( 0, 255 ),
	1418, 	Uvn( 0, 255 ),
	1435, 	Uvn( 0, 255 ),
	StripL(3),  
	1399, 	Uvn( 0, 255 ),
	1417, 	Uvn( 0, 255 ),
	1398, 	Uvn( 0, 255 ),
	StripR(5),  
	1396, 	Uvn( 0, 255 ),
	1420, 	Uvn( 0, 255 ),
	1414, 	Uvn( 0, 255 ),
	1424, 	Uvn( 0, 255 ),
	1423, 	Uvn( 0, 255 ),
	StripL(8),  
	1420, 	Uvn( 0, 255 ),
	1412, 	Uvn( 0, 255 ),
	1396, 	Uvn( 0, 255 ),
	1395, 	Uvn( 0, 255 ),
	1383, 	Uvn( 0, 255 ),
	1369, 	Uvn( 0, 255 ),
	1382, 	Uvn( 0, 255 ),
	1367, 	Uvn( 0, 255 ),
	StripR(5),  
	3483, 	Uvn( 0, 255 ),
	3561, 	Uvn( 0, 255 ),
	3573, 	Uvn( 0, 255 ),
	3564, 	Uvn( 0, 255 ),
	3569, 	Uvn( 0, 255 ),
	StripL(28),  
	4087, 	Uvn( 0, 255 ),
	4083, 	Uvn( 0, 255 ),
	4088, 	Uvn( 0, 255 ),
	4072, 	Uvn( 0, 255 ),
	4076, 	Uvn( 0, 255 ),
	720, 	Uvn( 0, 255 ),
	729, 	Uvn( 0, 255 ),
	714, 	Uvn( 0, 255 ),
	722, 	Uvn( 0, 255 ),
	712, 	Uvn( 0, 255 ),
	718, 	Uvn( 0, 255 ),
	715, 	Uvn( 0, 255 ),
	719, 	Uvn( 0, 255 ),
	721, 	Uvn( 0, 255 ),
	728, 	Uvn( 0, 255 ),
	4038, 	Uvn( 0, 255 ),
	4040, 	Uvn( 0, 255 ),
	4039, 	Uvn( 0, 255 ),
	4043, 	Uvn( 0, 255 ),
	512, 	Uvn( 0, 255 ),
	519, 	Uvn( 0, 255 ),
	507, 	Uvn( 0, 255 ),
	517, 	Uvn( 0, 255 ),
	505, 	Uvn( 0, 255 ),
	514, 	Uvn( 0, 255 ),
	503, 	Uvn( 0, 255 ),
	508, 	Uvn( 0, 255 ),
	498, 	Uvn( 0, 255 ),
	StripL(3),  
	3025, 	Uvn( 0, 255 ),
	3031, 	Uvn( 0, 255 ),
	3032, 	Uvn( 0, 255 ),
	StripL(9),  
	4157, 	Uvn( 0, 255 ),
	887, 	Uvn( 0, 255 ),
	886, 	Uvn( 0, 255 ),
	879, 	Uvn( 0, 255 ),
	883, 	Uvn( 0, 255 ),
	873, 	Uvn( 0, 255 ),
	874, 	Uvn( 0, 255 ),
	871, 	Uvn( 0, 255 ),
	867, 	Uvn( 0, 255 ),
	StripL(9),  
	4086, 	Uvn( 0, 255 ),
	4099, 	Uvn( 0, 255 ),
	4092, 	Uvn( 0, 255 ),
	4111, 	Uvn( 0, 255 ),
	4091, 	Uvn( 0, 255 ),
	4097, 	Uvn( 0, 255 ),
	844, 	Uvn( 0, 255 ),
	850, 	Uvn( 0, 255 ),
	849, 	Uvn( 0, 255 ),
	StripL(3),  
	4102, 	Uvn( 0, 255 ),
	4094, 	Uvn( 0, 255 ),
	4074, 	Uvn( 0, 255 ),
	StripL(8),  
	4118, 	Uvn( 0, 255 ),
	4123, 	Uvn( 0, 255 ),
	4131, 	Uvn( 0, 255 ),
	4133, 	Uvn( 0, 255 ),
	4145, 	Uvn( 0, 255 ),
	4143, 	Uvn( 0, 255 ),
	4159, 	Uvn( 0, 255 ),
	4154, 	Uvn( 0, 255 ),
	StripR(15),  
	4118, 	Uvn( 0, 255 ),
	4119, 	Uvn( 0, 255 ),
	4131, 	Uvn( 0, 255 ),
	4130, 	Uvn( 0, 255 ),
	4148, 	Uvn( 0, 255 ),
	764, 	Uvn( 0, 255 ),
	776, 	Uvn( 0, 255 ),
	778, 	Uvn( 0, 255 ),
	792, 	Uvn( 0, 255 ),
	794, 	Uvn( 0, 255 ),
	786, 	Uvn( 0, 255 ),
	789, 	Uvn( 0, 255 ),
	774, 	Uvn( 0, 255 ),
	791, 	Uvn( 0, 255 ),
	775, 	Uvn( 0, 255 ),
	StripL(10),  
	4192, 	Uvn( 0, 255 ),
	4196, 	Uvn( 0, 255 ),
	1906, 	Uvn( 0, 255 ),
	1910, 	Uvn( 0, 255 ),
	1907, 	Uvn( 0, 255 ),
	1896, 	Uvn( 0, 255 ),
	1886, 	Uvn( 0, 255 ),
	1897, 	Uvn( 0, 255 ),
	1887, 	Uvn( 0, 255 ),
	1898, 	Uvn( 0, 255 ),
	StripL(4),  
	807, 	Uvn( 0, 255 ),
	802, 	Uvn( 0, 255 ),
	798, 	Uvn( 0, 255 ),
	3332, 	Uvn( 0, 255 ),
	StripR(6),  
	4175, 	Uvn( 0, 255 ),
	4168, 	Uvn( 0, 255 ),
	4171, 	Uvn( 0, 255 ),
	4165, 	Uvn( 0, 255 ),
	4167, 	Uvn( 0, 255 ),
	4164, 	Uvn( 0, 255 ),
	StripL(7),  
	983, 	Uvn( 0, 255 ),
	4009, 	Uvn( 0, 255 ),
	980, 	Uvn( 0, 255 ),
	4008, 	Uvn( 0, 255 ),
	4011, 	Uvn( 0, 255 ),
	4010, 	Uvn( 0, 255 ),
	4012, 	Uvn( 0, 255 ),
	StripR(8),  
	988, 	Uvn( 0, 255 ),
	986, 	Uvn( 0, 255 ),
	991, 	Uvn( 0, 255 ),
	4014, 	Uvn( 0, 255 ),
	4017, 	Uvn( 0, 255 ),
	4018, 	Uvn( 0, 255 ),
	931, 	Uvn( 0, 255 ),
	930, 	Uvn( 0, 255 ),
	StripL(6),  
	3097, 	Uvn( 0, 255 ),
	3089, 	Uvn( 0, 255 ),
	3102, 	Uvn( 0, 255 ),
	3106, 	Uvn( 0, 255 ),
	3116, 	Uvn( 0, 255 ),
	3131, 	Uvn( 0, 255 ),
	StripL(4),  
	3111, 	Uvn( 0, 255 ),
	3110, 	Uvn( 0, 255 ),
	3096, 	Uvn( 0, 255 ),
	3098, 	Uvn( 0, 255 ),
	StripR(7),  
	3103, 	Uvn( 0, 255 ),
	3114, 	Uvn( 0, 255 ),
	3120, 	Uvn( 0, 255 ),
	3126, 	Uvn( 0, 255 ),
	3129, 	Uvn( 0, 255 ),
	3134, 	Uvn( 0, 255 ),
	3142, 	Uvn( 0, 255 ),
	StripL(7),  
	3131, 	Uvn( 0, 255 ),
	3137, 	Uvn( 0, 255 ),
	3116, 	Uvn( 0, 255 ),
	3125, 	Uvn( 0, 255 ),
	3102, 	Uvn( 0, 255 ),
	3115, 	Uvn( 0, 255 ),
	3097, 	Uvn( 0, 255 ),
	StripL(7),  
	3137, 	Uvn( 0, 255 ),
	3149, 	Uvn( 0, 255 ),
	3125, 	Uvn( 0, 255 ),
	3141, 	Uvn( 0, 255 ),
	3115, 	Uvn( 0, 255 ),
	3130, 	Uvn( 0, 255 ),
	3109, 	Uvn( 0, 255 ),
	StripL(9),  
	3155, 	Uvn( 0, 255 ),
	3158, 	Uvn( 0, 255 ),
	3167, 	Uvn( 0, 255 ),
	3168, 	Uvn( 0, 255 ),
	445, 	Uvn( 0, 255 ),
	446, 	Uvn( 0, 255 ),
	460, 	Uvn( 0, 255 ),
	462, 	Uvn( 0, 255 ),
	3172, 	Uvn( 0, 255 ),
	StripL(7),  
	3158, 	Uvn( 0, 255 ),
	3156, 	Uvn( 0, 255 ),
	3168, 	Uvn( 0, 255 ),
	3169, 	Uvn( 0, 255 ),
	446, 	Uvn( 0, 255 ),
	449, 	Uvn( 0, 255 ),
	462, 	Uvn( 0, 255 ),
	StripL(13),  
	1466, 	Uvn( 0, 255 ),
	1318, 	Uvn( 0, 255 ),
	1468, 	Uvn( 0, 255 ),
	1312, 	Uvn( 0, 255 ),
	1470, 	Uvn( 0, 255 ),
	1313, 	Uvn( 0, 255 ),
	1469, 	Uvn( 0, 255 ),
	1322, 	Uvn( 0, 255 ),
	1467, 	Uvn( 0, 255 ),
	1329, 	Uvn( 0, 255 ),
	1323, 	Uvn( 0, 255 ),
	1232, 	Uvn( 0, 255 ),
	1217, 	Uvn( 0, 255 ),
	StripL(3),  
	1324, 	Uvn( 0, 255 ),
	1323, 	Uvn( 0, 255 ),
	1217, 	Uvn( 0, 255 ),
	StripL(5),  
	1416, 	Uvn( 0, 255 ),
	1377, 	Uvn( 0, 255 ),
	1381, 	Uvn( 0, 255 ),
	1364, 	Uvn( 0, 255 ),
	1360, 	Uvn( 0, 255 ),
	StripR(9),  
	1432, 	Uvn( 0, 255 ),
	1401, 	Uvn( 0, 255 ),
	1437, 	Uvn( 0, 255 ),
	1404, 	Uvn( 0, 255 ),
	1440, 	Uvn( 0, 255 ),
	1402, 	Uvn( 0, 255 ),
	1445, 	Uvn( 0, 255 ),
	1405, 	Uvn( 0, 255 ),
	1446, 	Uvn( 0, 255 ),
	StripR(48),  
	1361, 	Uvn( 0, 255 ),
	1360, 	Uvn( 0, 255 ),
	1386, 	Uvn( 0, 255 ),
	1381, 	Uvn( 0, 255 ),
	1411, 	Uvn( 0, 255 ),
	1416, 	Uvn( 0, 255 ),
	1422, 	Uvn( 0, 255 ),
	1449, 	Uvn( 0, 255 ),
	1411, 	Uvn( 0, 255 ),
	1451, 	Uvn( 0, 255 ),
	1452, 	Uvn( 0, 255 ),
	1489, 	Uvn( 0, 255 ),
	1490, 	Uvn( 0, 255 ),
	1514, 	Uvn( 0, 255 ),
	1516, 	Uvn( 0, 255 ),
	1539, 	Uvn( 0, 255 ),
	1537, 	Uvn( 0, 255 ),
	1557, 	Uvn( 0, 255 ),
	1562, 	Uvn( 0, 255 ),
	1607, 	Uvn( 0, 255 ),
	1596, 	Uvn( 0, 255 ),
	1625, 	Uvn( 0, 255 ),
	1597, 	Uvn( 0, 255 ),
	1631, 	Uvn( 0, 255 ),
	1599, 	Uvn( 0, 255 ),
	1640, 	Uvn( 0, 255 ),
	1598, 	Uvn( 0, 255 ),
	1633, 	Uvn( 0, 255 ),
	4201, 	Uvn( 0, 255 ),
	4204, 	Uvn( 0, 255 ),
	4202, 	Uvn( 0, 255 ),
	4209, 	Uvn( 0, 255 ),
	4207, 	Uvn( 0, 255 ),
	4213, 	Uvn( 0, 255 ),
	4210, 	Uvn( 0, 255 ),
	4214, 	Uvn( 0, 255 ),
	4219, 	Uvn( 0, 255 ),
	4223, 	Uvn( 0, 255 ),
	4225, 	Uvn( 0, 255 ),
	4226, 	Uvn( 0, 255 ),
	2241, 	Uvn( 0, 255 ),
	2240, 	Uvn( 0, 255 ),
	2245, 	Uvn( 0, 255 ),
	2243, 	Uvn( 0, 255 ),
	2246, 	Uvn( 0, 255 ),
	2247, 	Uvn( 0, 255 ),
	4742, 	Uvn( 0, 255 ),
	2249, 	Uvn( 0, 255 ),
	StripL(16),  
	1290, 	Uvn( 0, 255 ),
	1259, 	Uvn( 0, 255 ),
	1293, 	Uvn( 0, 255 ),
	1234, 	Uvn( 0, 255 ),
	1275, 	Uvn( 0, 255 ),
	1224, 	Uvn( 0, 255 ),
	1269, 	Uvn( 0, 255 ),
	1211, 	Uvn( 0, 255 ),
	1260, 	Uvn( 0, 255 ),
	1215, 	Uvn( 0, 255 ),
	1267, 	Uvn( 0, 255 ),
	4229, 	Uvn( 0, 255 ),
	4186, 	Uvn( 0, 255 ),
	4181, 	Uvn( 0, 255 ),
	4188, 	Uvn( 0, 255 ),
	4183, 	Uvn( 0, 255 ),
	StripL(6),  
	1266, 	Uvn( 0, 255 ),
	1212, 	Uvn( 0, 255 ),
	1236, 	Uvn( 0, 255 ),
	1188, 	Uvn( 0, 255 ),
	1196, 	Uvn( 0, 255 ),
	1167, 	Uvn( 0, 255 ),
	StripL(17),  
	1326, 	Uvn( 0, 255 ),
	1207, 	Uvn( 0, 255 ),
	1264, 	Uvn( 0, 255 ),
	1209, 	Uvn( 0, 255 ),
	1192, 	Uvn( 0, 255 ),
	1095, 	Uvn( 0, 255 ),
	1107, 	Uvn( 0, 255 ),
	1098, 	Uvn( 0, 255 ),
	1103, 	Uvn( 0, 255 ),
	1144, 	Uvn( 0, 255 ),
	1139, 	Uvn( 0, 255 ),
	1169, 	Uvn( 0, 255 ),
	1185, 	Uvn( 0, 255 ),
	1212, 	Uvn( 0, 255 ),
	1255, 	Uvn( 0, 255 ),
	1266, 	Uvn( 0, 255 ),
	1336, 	Uvn( 0, 255 ),
	StripR(5),  
	1378, 	Uvn( 0, 255 ),
	1455, 	Uvn( 0, 255 ),
	1397, 	Uvn( 0, 255 ),
	4194, 	Uvn( 0, 255 ),
	4193, 	Uvn( 0, 255 ),
	StripL(4),  
	1345, 	Uvn( 0, 255 ),
	1307, 	Uvn( 0, 255 ),
	1335, 	Uvn( 0, 255 ),
	1343, 	Uvn( 0, 255 ),
	StripR(7),  
	1406, 	Uvn( 0, 255 ),
	1418, 	Uvn( 0, 255 ),
	1387, 	Uvn( 0, 255 ),
	1391, 	Uvn( 0, 255 ),
	1351, 	Uvn( 0, 255 ),
	1372, 	Uvn( 0, 255 ),
	1353, 	Uvn( 0, 255 ),
	StripL(3),  
	1428, 	Uvn( 0, 255 ),
	1413, 	Uvn( 0, 255 ),
	1425, 	Uvn( 0, 255 ),
	StripL(5),  
	628, 	Uvn( 0, 255 ),
	3563, 	Uvn( 0, 255 ),
	3566, 	Uvn( 0, 255 ),
	3462, 	Uvn( 0, 255 ),
	3555, 	Uvn( 0, 255 ),
	StripL(20),  
	571, 	Uvn( 0, 255 ),
	572, 	Uvn( 0, 255 ),
	596, 	Uvn( 0, 255 ),
	590, 	Uvn( 0, 255 ),
	609, 	Uvn( 0, 255 ),
	588, 	Uvn( 0, 255 ),
	610, 	Uvn( 0, 255 ),
	589, 	Uvn( 0, 255 ),
	606, 	Uvn( 0, 255 ),
	586, 	Uvn( 0, 255 ),
	602, 	Uvn( 0, 255 ),
	4065, 	Uvn( 0, 255 ),
	4068, 	Uvn( 0, 255 ),
	4062, 	Uvn( 0, 255 ),
	4067, 	Uvn( 0, 255 ),
	768, 	Uvn( 0, 255 ),
	781, 	Uvn( 0, 255 ),
	767, 	Uvn( 0, 255 ),
	779, 	Uvn( 0, 255 ),
	771, 	Uvn( 0, 255 ),
	StripL(4),  
	613, 	Uvn( 0, 255 ),
	620, 	Uvn( 0, 255 ),
	612, 	Uvn( 0, 255 ),
	616, 	Uvn( 0, 255 ),
	StripL(7),  
	552, 	Uvn( 0, 255 ),
	545, 	Uvn( 0, 255 ),
	569, 	Uvn( 0, 255 ),
	541, 	Uvn( 0, 255 ),
	568, 	Uvn( 0, 255 ),
	3456, 	Uvn( 0, 255 ),
	603, 	Uvn( 0, 255 ),
	StripL(10),  
	552, 	Uvn( 0, 255 ),
	520, 	Uvn( 0, 255 ),
	545, 	Uvn( 0, 255 ),
	509, 	Uvn( 0, 255 ),
	541, 	Uvn( 0, 255 ),
	3438, 	Uvn( 0, 255 ),
	3446, 	Uvn( 0, 255 ),
	3436, 	Uvn( 0, 255 ),
	3442, 	Uvn( 0, 255 ),
	976, 	Uvn( 0, 255 ),
	StripR(6),  
	559, 	Uvn( 0, 255 ),
	564, 	Uvn( 0, 255 ),
	585, 	Uvn( 0, 255 ),
	580, 	Uvn( 0, 255 ),
	598, 	Uvn( 0, 255 ),
	593, 	Uvn( 0, 255 ),
	StripL(7),  
	3429, 	Uvn( 0, 255 ),
	3430, 	Uvn( 0, 255 ),
	3434, 	Uvn( 0, 255 ),
	3437, 	Uvn( 0, 255 ),
	3439, 	Uvn( 0, 255 ),
	3445, 	Uvn( 0, 255 ),
	3448, 	Uvn( 0, 255 ),
	StripR(7),  
	599, 	Uvn( 0, 255 ),
	597, 	Uvn( 0, 255 ),
	617, 	Uvn( 0, 255 ),
	622, 	Uvn( 0, 255 ),
	623, 	Uvn( 0, 255 ),
	627, 	Uvn( 0, 255 ),
	625, 	Uvn( 0, 255 ),
	StripL(11),  
	485, 	Uvn( 0, 255 ),
	497, 	Uvn( 0, 255 ),
	489, 	Uvn( 0, 255 ),
	499, 	Uvn( 0, 255 ),
	496, 	Uvn( 0, 255 ),
	510, 	Uvn( 0, 255 ),
	523, 	Uvn( 0, 255 ),
	542, 	Uvn( 0, 255 ),
	544, 	Uvn( 0, 255 ),
	565, 	Uvn( 0, 255 ),
	560, 	Uvn( 0, 255 ),
	StripL(3),  
	3428, 	Uvn( 0, 255 ),
	3432, 	Uvn( 0, 255 ),
	3424, 	Uvn( 0, 255 ),
	StripL(9),  
	497, 	Uvn( 0, 255 ),
	527, 	Uvn( 0, 255 ),
	499, 	Uvn( 0, 255 ),
	534, 	Uvn( 0, 255 ),
	510, 	Uvn( 0, 255 ),
	540, 	Uvn( 0, 255 ),
	542, 	Uvn( 0, 255 ),
	566, 	Uvn( 0, 255 ),
	565, 	Uvn( 0, 255 ),
	StripR(6),  
	553, 	Uvn( 0, 255 ),
	559, 	Uvn( 0, 255 ),
	584, 	Uvn( 0, 255 ),
	585, 	Uvn( 0, 255 ),
	600, 	Uvn( 0, 255 ),
	598, 	Uvn( 0, 255 ),
	StripL(12),  
	600, 	Uvn( 0, 255 ),
	619, 	Uvn( 0, 255 ),
	598, 	Uvn( 0, 255 ),
	613, 	Uvn( 0, 255 ),
	593, 	Uvn( 0, 255 ),
	612, 	Uvn( 0, 255 ),
	607, 	Uvn( 0, 255 ),
	616, 	Uvn( 0, 255 ),
	611, 	Uvn( 0, 255 ),
	618, 	Uvn( 0, 255 ),
	608, 	Uvn( 0, 255 ),
	615, 	Uvn( 0, 255 ),
	StripR(9),  
	597, 	Uvn( 0, 255 ),
	3555, 	Uvn( 0, 255 ),
	622, 	Uvn( 0, 255 ),
	3566, 	Uvn( 0, 255 ),
	627, 	Uvn( 0, 255 ),
	628, 	Uvn( 0, 255 ),
	625, 	Uvn( 0, 255 ),
	626, 	Uvn( 0, 255 ),
	601, 	Uvn( 0, 255 ),
	StripL(5),  
	662, 	Uvn( 0, 255 ),
	671, 	Uvn( 0, 255 ),
	663, 	Uvn( 0, 255 ),
	666, 	Uvn( 0, 255 ),
	658, 	Uvn( 0, 255 ),
	StripR(11),  
	637, 	Uvn( 0, 255 ),
	3549, 	Uvn( 0, 255 ),
	3551, 	Uvn( 0, 255 ),
	990, 	Uvn( 0, 255 ),
	993, 	Uvn( 0, 255 ),
	995, 	Uvn( 0, 255 ),
	996, 	Uvn( 0, 255 ),
	4021, 	Uvn( 0, 255 ),
	997, 	Uvn( 0, 255 ),
	998, 	Uvn( 0, 255 ),
	3586, 	Uvn( 0, 255 ),
	StripR(30),  
	639, 	Uvn( 0, 255 ),
	640, 	Uvn( 0, 255 ),
	637, 	Uvn( 0, 255 ),
	636, 	Uvn( 0, 255 ),
	3549, 	Uvn( 0, 255 ),
	3547, 	Uvn( 0, 255 ),
	988, 	Uvn( 0, 255 ),
	982, 	Uvn( 0, 255 ),
	986, 	Uvn( 0, 255 ),
	983, 	Uvn( 0, 255 ),
	985, 	Uvn( 0, 255 ),
	4009, 	Uvn( 0, 255 ),
	899, 	Uvn( 0, 255 ),
	894, 	Uvn( 0, 255 ),
	893, 	Uvn( 0, 255 ),
	892, 	Uvn( 0, 255 ),
	3609, 	Uvn( 0, 255 ),
	895, 	Uvn( 0, 255 ),
	3611, 	Uvn( 0, 255 ),
	896, 	Uvn( 0, 255 ),
	3610, 	Uvn( 0, 255 ),
	3324, 	Uvn( 0, 255 ),
	3317, 	Uvn( 0, 255 ),
	3326, 	Uvn( 0, 255 ),
	3318, 	Uvn( 0, 255 ),
	3322, 	Uvn( 0, 255 ),
	3309, 	Uvn( 0, 255 ),
	796, 	Uvn( 0, 255 ),
	3300, 	Uvn( 0, 255 ),
	3258, 	Uvn( 0, 255 ),
	StripL(3),  
	3480, 	Uvn( 0, 255 ),
	3479, 	Uvn( 0, 255 ),
	3475, 	Uvn( 0, 255 ),
	StripR(6),  
	3427, 	Uvn( 0, 255 ),
	632, 	Uvn( 0, 255 ),
	630, 	Uvn( 0, 255 ),
	634, 	Uvn( 0, 255 ),
	3544, 	Uvn( 0, 255 ),
	3548, 	Uvn( 0, 255 ),
	StripL(13),  
	2983, 	Uvn( 0, 255 ),
	2995, 	Uvn( 0, 255 ),
	2992, 	Uvn( 0, 255 ),
	2996, 	Uvn( 0, 255 ),
	288, 	Uvn( 0, 255 ),
	297, 	Uvn( 0, 255 ),
	290, 	Uvn( 0, 255 ),
	299, 	Uvn( 0, 255 ),
	280, 	Uvn( 0, 255 ),
	287, 	Uvn( 0, 255 ),
	263, 	Uvn( 0, 255 ),
	279, 	Uvn( 0, 255 ),
	267, 	Uvn( 0, 255 ),
	StripR(5),  
	3004, 	Uvn( 0, 255 ),
	3012, 	Uvn( 0, 255 ),
	296, 	Uvn( 0, 255 ),
	303, 	Uvn( 0, 255 ),
	292, 	Uvn( 0, 255 ),
	StripR(6),  
	2818, 	Uvn( 0, 255 ),
	2825, 	Uvn( 0, 255 ),
	2830, 	Uvn( 0, 255 ),
	175, 	Uvn( 0, 255 ),
	2839, 	Uvn( 0, 255 ),
	181, 	Uvn( 0, 255 ),
	StripL(5),  
	2810, 	Uvn( 0, 255 ),
	115, 	Uvn( 0, 255 ),
	2811, 	Uvn( 0, 255 ),
	2813, 	Uvn( 0, 255 ),
	2818, 	Uvn( 0, 255 ),
	StripR(18),  
	57, 	Uvn( 0, 255 ),
	66, 	Uvn( 0, 255 ),
	60, 	Uvn( 0, 255 ),
	69, 	Uvn( 0, 255 ),
	67, 	Uvn( 0, 255 ),
	2747, 	Uvn( 0, 255 ),
	2744, 	Uvn( 0, 255 ),
	2752, 	Uvn( 0, 255 ),
	109, 	Uvn( 0, 255 ),
	114, 	Uvn( 0, 255 ),
	112, 	Uvn( 0, 255 ),
	119, 	Uvn( 0, 255 ),
	117, 	Uvn( 0, 255 ),
	2922, 	Uvn( 0, 255 ),
	123, 	Uvn( 0, 255 ),
	2819, 	Uvn( 0, 255 ),
	2816, 	Uvn( 0, 255 ),
	2823, 	Uvn( 0, 255 ),
	StripL(4),  
	65, 	Uvn( 0, 255 ),
	2740, 	Uvn( 0, 255 ),
	59, 	Uvn( 0, 255 ),
	52, 	Uvn( 0, 255 ),
	StripR(13),  
	182, 	Uvn( 0, 255 ),
	181, 	Uvn( 0, 255 ),
	177, 	Uvn( 0, 255 ),
	175, 	Uvn( 0, 255 ),
	173, 	Uvn( 0, 255 ),
	2825, 	Uvn( 0, 255 ),
	171, 	Uvn( 0, 255 ),
	2818, 	Uvn( 0, 255 ),
	169, 	Uvn( 0, 255 ),
	2811, 	Uvn( 0, 255 ),
	168, 	Uvn( 0, 255 ),
	2810, 	Uvn( 0, 255 ),
	2814, 	Uvn( 0, 255 ),
	StripL(3),  
	22, 	Uvn( 0, 255 ),
	23, 	Uvn( 0, 255 ),
	9, 	Uvn( 0, 255 ),
	StripL(12),  
	22, 	Uvn( 0, 255 ),
	27, 	Uvn( 0, 255 ),
	23, 	Uvn( 0, 255 ),
	33, 	Uvn( 0, 255 ),
	30, 	Uvn( 0, 255 ),
	34, 	Uvn( 0, 255 ),
	2754, 	Uvn( 0, 255 ),
	2755, 	Uvn( 0, 255 ),
	2759, 	Uvn( 0, 255 ),
	311, 	Uvn( 0, 255 ),
	2802, 	Uvn( 0, 255 ),
	2806, 	Uvn( 0, 255 ),
	StripR(7),  
	2840, 	Uvn( 0, 255 ),
	2837, 	Uvn( 0, 255 ),
	2843, 	Uvn( 0, 255 ),
	2841, 	Uvn( 0, 255 ),
	2856, 	Uvn( 0, 255 ),
	2846, 	Uvn( 0, 255 ),
	2851, 	Uvn( 0, 255 ),
	StripR(6),  
	19, 	Uvn( 0, 255 ),
	2732, 	Uvn( 0, 255 ),
	2730, 	Uvn( 0, 255 ),
	2735, 	Uvn( 0, 255 ),
	24, 	Uvn( 0, 255 ),
	2739, 	Uvn( 0, 255 ),
	StripR(5),  
	2731, 	Uvn( 0, 255 ),
	18, 	Uvn( 0, 255 ),
	26, 	Uvn( 0, 255 ),
	11, 	Uvn( 0, 255 ),
	4, 	Uvn( 0, 255 ),
	StripL(28),  
	2734, 	Uvn( 0, 255 ),
	2733, 	Uvn( 0, 255 ),
	73, 	Uvn( 0, 255 ),
	84, 	Uvn( 0, 255 ),
	72, 	Uvn( 0, 255 ),
	77, 	Uvn( 0, 255 ),
	74, 	Uvn( 0, 255 ),
	83, 	Uvn( 0, 255 ),
	79, 	Uvn( 0, 255 ),
	86, 	Uvn( 0, 255 ),
	81, 	Uvn( 0, 255 ),
	87, 	Uvn( 0, 255 ),
	94, 	Uvn( 0, 255 ),
	90, 	Uvn( 0, 255 ),
	97, 	Uvn( 0, 255 ),
	91, 	Uvn( 0, 255 ),
	99, 	Uvn( 0, 255 ),
	95, 	Uvn( 0, 255 ),
	100, 	Uvn( 0, 255 ),
	92, 	Uvn( 0, 255 ),
	98, 	Uvn( 0, 255 ),
	84, 	Uvn( 0, 255 ),
	93, 	Uvn( 0, 255 ),
	2733, 	Uvn( 0, 255 ),
	2736, 	Uvn( 0, 255 ),
	2734, 	Uvn( 0, 255 ),
	2737, 	Uvn( 0, 255 ),
	78, 	Uvn( 0, 255 ),
	StripR(17),  
	2860, 	Uvn( 0, 255 ),
	2870, 	Uvn( 0, 255 ),
	2861, 	Uvn( 0, 255 ),
	2871, 	Uvn( 0, 255 ),
	2862, 	Uvn( 0, 255 ),
	2866, 	Uvn( 0, 255 ),
	2865, 	Uvn( 0, 255 ),
	2950, 	Uvn( 0, 255 ),
	338, 	Uvn( 0, 255 ),
	2949, 	Uvn( 0, 255 ),
	335, 	Uvn( 0, 255 ),
	2948, 	Uvn( 0, 255 ),
	334, 	Uvn( 0, 255 ),
	2935, 	Uvn( 0, 255 ),
	2934, 	Uvn( 0, 255 ),
	2933, 	Uvn( 0, 255 ),
	2931, 	Uvn( 0, 255 ),
	StripR(5),  
	2879, 	Uvn( 0, 255 ),
	2876, 	Uvn( 0, 255 ),
	2872, 	Uvn( 0, 255 ),
	2956, 	Uvn( 0, 255 ),
	2866, 	Uvn( 0, 255 ),
	StripL(5),  
	2878, 	Uvn( 0, 255 ),
	2880, 	Uvn( 0, 255 ),
	2885, 	Uvn( 0, 255 ),
	2884, 	Uvn( 0, 255 ),
	2893, 	Uvn( 0, 255 ),
	StripL(3),  
	159, 	Uvn( 0, 255 ),
	155, 	Uvn( 0, 255 ),
	151, 	Uvn( 0, 255 ),
	StripR(8),  
	2902, 	Uvn( 0, 255 ),
	2899, 	Uvn( 0, 255 ),
	2897, 	Uvn( 0, 255 ),
	2891, 	Uvn( 0, 255 ),
	2898, 	Uvn( 0, 255 ),
	2894, 	Uvn( 0, 255 ),
	2904, 	Uvn( 0, 255 ),
	389, 	Uvn( 0, 255 ),
	StripL(11),  
	384, 	Uvn( 0, 255 ),
	385, 	Uvn( 0, 255 ),
	378, 	Uvn( 0, 255 ),
	380, 	Uvn( 0, 255 ),
	373, 	Uvn( 0, 255 ),
	374, 	Uvn( 0, 255 ),
	369, 	Uvn( 0, 255 ),
	370, 	Uvn( 0, 255 ),
	363, 	Uvn( 0, 255 ),
	364, 	Uvn( 0, 255 ),
	358, 	Uvn( 0, 255 ),
	StripL(3),  
	276, 	Uvn( 0, 255 ),
	283, 	Uvn( 0, 255 ),
	274, 	Uvn( 0, 255 ),
	StripL(87),  
	2892, 	Uvn( 0, 255 ),
	388, 	Uvn( 0, 255 ),
	2889, 	Uvn( 0, 255 ),
	379, 	Uvn( 0, 255 ),
	361, 	Uvn( 0, 255 ),
	371, 	Uvn( 0, 255 ),
	356, 	Uvn( 0, 255 ),
	368, 	Uvn( 0, 255 ),
	362, 	Uvn( 0, 255 ),
	373, 	Uvn( 0, 255 ),
	359, 	Uvn( 0, 255 ),
	369, 	Uvn( 0, 255 ),
	355, 	Uvn( 0, 255 ),
	363, 	Uvn( 0, 255 ),
	353, 	Uvn( 0, 255 ),
	358, 	Uvn( 0, 255 ),
	352, 	Uvn( 0, 255 ),
	357, 	Uvn( 0, 255 ),
	360, 	Uvn( 0, 255 ),
	365, 	Uvn( 0, 255 ),
	2961, 	Uvn( 0, 255 ),
	376, 	Uvn( 0, 255 ),
	2895, 	Uvn( 0, 255 ),
	2962, 	Uvn( 0, 255 ),
	2896, 	Uvn( 0, 255 ),
	2901, 	Uvn( 0, 255 ),
	2905, 	Uvn( 0, 255 ),
	390, 	Uvn( 0, 255 ),
	2907, 	Uvn( 0, 255 ),
	392, 	Uvn( 0, 255 ),
	393, 	Uvn( 0, 255 ),
	2966, 	Uvn( 0, 255 ),
	391, 	Uvn( 0, 255 ),
	388, 	Uvn( 0, 255 ),
	389, 	Uvn( 0, 255 ),
	2892, 	Uvn( 0, 255 ),
	2894, 	Uvn( 0, 255 ),
	2890, 	Uvn( 0, 255 ),
	2891, 	Uvn( 0, 255 ),
	2896, 	Uvn( 0, 255 ),
	2899, 	Uvn( 0, 255 ),
	2905, 	Uvn( 0, 255 ),
	2902, 	Uvn( 0, 255 ),
	2908, 	Uvn( 0, 255 ),
	2914, 	Uvn( 0, 255 ),
	2912, 	Uvn( 0, 255 ),
	2915, 	Uvn( 0, 255 ),
	2913, 	Uvn( 0, 255 ),
	2918, 	Uvn( 0, 255 ),
	394, 	Uvn( 0, 255 ),
	271, 	Uvn( 0, 255 ),
	2909, 	Uvn( 0, 255 ),
	274, 	Uvn( 0, 255 ),
	265, 	Uvn( 0, 255 ),
	276, 	Uvn( 0, 255 ),
	264, 	Uvn( 0, 255 ),
	285, 	Uvn( 0, 255 ),
	266, 	Uvn( 0, 255 ),
	294, 	Uvn( 0, 255 ),
	267, 	Uvn( 0, 255 ),
	295, 	Uvn( 0, 255 ),
	279, 	Uvn( 0, 255 ),
	300, 	Uvn( 0, 255 ),
	287, 	Uvn( 0, 255 ),
	307, 	Uvn( 0, 255 ),
	299, 	Uvn( 0, 255 ),
	3006, 	Uvn( 0, 255 ),
	297, 	Uvn( 0, 255 ),
	3003, 	Uvn( 0, 255 ),
	2996, 	Uvn( 0, 255 ),
	2999, 	Uvn( 0, 255 ),
	2995, 	Uvn( 0, 255 ),
	3010, 	Uvn( 0, 255 ),
	3001, 	Uvn( 0, 255 ),
	401, 	Uvn( 0, 255 ),
	398, 	Uvn( 0, 255 ),
	412, 	Uvn( 0, 255 ),
	409, 	Uvn( 0, 255 ),
	423, 	Uvn( 0, 255 ),
	419, 	Uvn( 0, 255 ),
	3045, 	Uvn( 0, 255 ),
	3040, 	Uvn( 0, 255 ),
	3046, 	Uvn( 0, 255 ),
	3044, 	Uvn( 0, 255 ),
	3053, 	Uvn( 0, 255 ),
	3048, 	Uvn( 0, 255 ),
	3060, 	Uvn( 0, 255 ),
	StripL(12),  
	2896, 	Uvn( 0, 255 ),
	2890, 	Uvn( 0, 255 ),
	2895, 	Uvn( 0, 255 ),
	2887, 	Uvn( 0, 255 ),
	2961, 	Uvn( 0, 255 ),
	2960, 	Uvn( 0, 255 ),
	360, 	Uvn( 0, 255 ),
	354, 	Uvn( 0, 255 ),
	352, 	Uvn( 0, 255 ),
	356, 	Uvn( 0, 255 ),
	353, 	Uvn( 0, 255 ),
	355, 	Uvn( 0, 255 ),
	StripR(7),  
	131, 	Uvn( 0, 255 ),
	127, 	Uvn( 0, 255 ),
	134, 	Uvn( 0, 255 ),
	126, 	Uvn( 0, 255 ),
	136, 	Uvn( 0, 255 ),
	129, 	Uvn( 0, 255 ),
	137, 	Uvn( 0, 255 ),
	StripL(4),  
	155, 	Uvn( 0, 255 ),
	148, 	Uvn( 0, 255 ),
	130, 	Uvn( 0, 255 ),
	135, 	Uvn( 0, 255 ),
	StripL(3),  
	97, 	Uvn( 0, 255 ),
	99, 	Uvn( 0, 255 ),
	94, 	Uvn( 0, 255 ),
	StripL(9),  
	2847, 	Uvn( 0, 255 ),
	2853, 	Uvn( 0, 255 ),
	2854, 	Uvn( 0, 255 ),
	2864, 	Uvn( 0, 255 ),
	194, 	Uvn( 0, 255 ),
	205, 	Uvn( 0, 255 ),
	207, 	Uvn( 0, 255 ),
	210, 	Uvn( 0, 255 ),
	218, 	Uvn( 0, 255 ),
	StripR(6),  
	32, 	Uvn( 0, 255 ),
	36, 	Uvn( 0, 255 ),
	37, 	Uvn( 0, 255 ),
	2760, 	Uvn( 0, 255 ),
	2762, 	Uvn( 0, 255 ),
	2764, 	Uvn( 0, 255 ),
	StripR(7),  
	2856, 	Uvn( 0, 255 ),
	2851, 	Uvn( 0, 255 ),
	188, 	Uvn( 0, 255 ),
	190, 	Uvn( 0, 255 ),
	203, 	Uvn( 0, 255 ),
	202, 	Uvn( 0, 255 ),
	235, 	Uvn( 0, 255 ),
	StripL(3),  
	309, 	Uvn( 0, 255 ),
	308, 	Uvn( 0, 255 ),
	306, 	Uvn( 0, 255 ),
	StripR(10),  
	305, 	Uvn( 0, 255 ),
	3015, 	Uvn( 0, 255 ),
	3021, 	Uvn( 0, 255 ),
	3025, 	Uvn( 0, 255 ),
	3027, 	Uvn( 0, 255 ),
	3031, 	Uvn( 0, 255 ),
	3029, 	Uvn( 0, 255 ),
	3035, 	Uvn( 0, 255 ),
	3028, 	Uvn( 0, 255 ),
	407, 	Uvn( 0, 255 ),
	StripR(34),  
	282, 	Uvn( 0, 255 ),
	292, 	Uvn( 0, 255 ),
	298, 	Uvn( 0, 255 ),
	303, 	Uvn( 0, 255 ),
	305, 	Uvn( 0, 255 ),
	3012, 	Uvn( 0, 255 ),
	3015, 	Uvn( 0, 255 ),
	3019, 	Uvn( 0, 255 ),
	3025, 	Uvn( 0, 255 ),
	3030, 	Uvn( 0, 255 ),
	3032, 	Uvn( 0, 255 ),
	3036, 	Uvn( 0, 255 ),
	3031, 	Uvn( 0, 255 ),
	3037, 	Uvn( 0, 255 ),
	3035, 	Uvn( 0, 255 ),
	428, 	Uvn( 0, 255 ),
	425, 	Uvn( 0, 255 ),
	436, 	Uvn( 0, 255 ),
	435, 	Uvn( 0, 255 ),
	3087, 	Uvn( 0, 255 ),
	3072, 	Uvn( 0, 255 ),
	3105, 	Uvn( 0, 255 ),
	3061, 	Uvn( 0, 255 ),
	3085, 	Uvn( 0, 255 ),
	3069, 	Uvn( 0, 255 ),
	3099, 	Uvn( 0, 255 ),
	3081, 	Uvn( 0, 255 ),
	3109, 	Uvn( 0, 255 ),
	3092, 	Uvn( 0, 255 ),
	3115, 	Uvn( 0, 255 ),
	3076, 	Uvn( 0, 255 ),
	3097, 	Uvn( 0, 255 ),
	3071, 	Uvn( 0, 255 ),
	3089, 	Uvn( 0, 255 ),
	StripR(9),  
	226, 	Uvn( 0, 255 ),
	233, 	Uvn( 0, 255 ),
	256, 	Uvn( 0, 255 ),
	244, 	Uvn( 0, 255 ),
	254, 	Uvn( 0, 255 ),
	246, 	Uvn( 0, 255 ),
	245, 	Uvn( 0, 255 ),
	2910, 	Uvn( 0, 255 ),
	2906, 	Uvn( 0, 255 ),
	StripR(31),  
	248, 	Uvn( 0, 255 ),
	282, 	Uvn( 0, 255 ),
	286, 	Uvn( 0, 255 ),
	298, 	Uvn( 0, 255 ),
	302, 	Uvn( 0, 255 ),
	305, 	Uvn( 0, 255 ),
	308, 	Uvn( 0, 255 ),
	3021, 	Uvn( 0, 255 ),
	309, 	Uvn( 0, 255 ),
	3024, 	Uvn( 0, 255 ),
	3017, 	Uvn( 0, 255 ),
	3020, 	Uvn( 0, 255 ),
	3011, 	Uvn( 0, 255 ),
	3023, 	Uvn( 0, 255 ),
	3014, 	Uvn( 0, 255 ),
	3028, 	Uvn( 0, 255 ),
	3018, 	Uvn( 0, 255 ),
	407, 	Uvn( 0, 255 ),
	403, 	Uvn( 0, 255 ),
	421, 	Uvn( 0, 255 ),
	414, 	Uvn( 0, 255 ),
	432, 	Uvn( 0, 255 ),
	429, 	Uvn( 0, 255 ),
	3061, 	Uvn( 0, 255 ),
	3052, 	Uvn( 0, 255 ),
	3069, 	Uvn( 0, 255 ),
	3059, 	Uvn( 0, 255 ),
	3081, 	Uvn( 0, 255 ),
	3065, 	Uvn( 0, 255 ),
	3092, 	Uvn( 0, 255 ),
	3076, 	Uvn( 0, 255 ),
	StripR(11),  
	189, 	Uvn( 0, 255 ),
	182, 	Uvn( 0, 255 ),
	179, 	Uvn( 0, 255 ),
	177, 	Uvn( 0, 255 ),
	174, 	Uvn( 0, 255 ),
	173, 	Uvn( 0, 255 ),
	172, 	Uvn( 0, 255 ),
	171, 	Uvn( 0, 255 ),
	170, 	Uvn( 0, 255 ),
	169, 	Uvn( 0, 255 ),
	168, 	Uvn( 0, 255 ),
	StripL(4),  
	111, 	Uvn( 0, 255 ),
	120, 	Uvn( 0, 255 ),
	115, 	Uvn( 0, 255 ),
	2813, 	Uvn( 0, 255 ),
	StripL(8),  
	40, 	Uvn( 0, 255 ),
	43, 	Uvn( 0, 255 ),
	48, 	Uvn( 0, 255 ),
	46, 	Uvn( 0, 255 ),
	50, 	Uvn( 0, 255 ),
	62, 	Uvn( 0, 255 ),
	48, 	Uvn( 0, 255 ),
	64, 	Uvn( 0, 255 ),
	StripR(12),  
	2839, 	Uvn( 0, 255 ),
	2833, 	Uvn( 0, 255 ),
	2830, 	Uvn( 0, 255 ),
	2822, 	Uvn( 0, 255 ),
	2818, 	Uvn( 0, 255 ),
	2815, 	Uvn( 0, 255 ),
	2813, 	Uvn( 0, 255 ),
	122, 	Uvn( 0, 255 ),
	120, 	Uvn( 0, 255 ),
	116, 	Uvn( 0, 255 ),
	111, 	Uvn( 0, 255 ),
	2751, 	Uvn( 0, 255 ),
	StripR(15),  
	2745, 	Uvn( 0, 255 ),
	2748, 	Uvn( 0, 255 ),
	2750, 	Uvn( 0, 255 ),
	2751, 	Uvn( 0, 255 ),
	2753, 	Uvn( 0, 255 ),
	116, 	Uvn( 0, 255 ),
	118, 	Uvn( 0, 255 ),
	122, 	Uvn( 0, 255 ),
	124, 	Uvn( 0, 255 ),
	2815, 	Uvn( 0, 255 ),
	2817, 	Uvn( 0, 255 ),
	2822, 	Uvn( 0, 255 ),
	2824, 	Uvn( 0, 255 ),
	2833, 	Uvn( 0, 255 ),
	2823, 	Uvn( 0, 255 ),
	StripR(6),  
	186, 	Uvn( 0, 255 ),
	2835, 	Uvn( 0, 255 ),
	2844, 	Uvn( 0, 255 ),
	2831, 	Uvn( 0, 255 ),
	2836, 	Uvn( 0, 255 ),
	2924, 	Uvn( 0, 255 ),
	StripL(3),  
	17, 	Uvn( 0, 255 ),
	24, 	Uvn( 0, 255 ),
	2730, 	Uvn( 0, 255 ),
	StripL(3),  
	317, 	Uvn( 0, 255 ),
	316, 	Uvn( 0, 255 ),
	315, 	Uvn( 0, 255 ),
	StripR(5),  
	74, 	Uvn( 0, 255 ),
	72, 	Uvn( 0, 255 ),
	70, 	Uvn( 0, 255 ),
	73, 	Uvn( 0, 255 ),
	71, 	Uvn( 0, 255 ),
	StripL(3),  
	2954, 	Uvn( 0, 255 ),
	331, 	Uvn( 0, 255 ),
	327, 	Uvn( 0, 255 ),
	StripL(6),  
	2932, 	Uvn( 0, 255 ),
	2930, 	Uvn( 0, 255 ),
	150, 	Uvn( 0, 255 ),
	146, 	Uvn( 0, 255 ),
	134, 	Uvn( 0, 255 ),
	136, 	Uvn( 0, 255 ),
	StripL(6),  
	2880, 	Uvn( 0, 255 ),
	2874, 	Uvn( 0, 255 ),
	2884, 	Uvn( 0, 255 ),
	2881, 	Uvn( 0, 255 ),
	2893, 	Uvn( 0, 255 ),
	222, 	Uvn( 0, 255 ),
	StripR(5),  
	138, 	Uvn( 0, 255 ),
	139, 	Uvn( 0, 255 ),
	144, 	Uvn( 0, 255 ),
	145, 	Uvn( 0, 255 ),
	153, 	Uvn( 0, 255 ),
	StripL(7),  
	165, 	Uvn( 0, 255 ),
	167, 	Uvn( 0, 255 ),
	160, 	Uvn( 0, 255 ),
	163, 	Uvn( 0, 255 ),
	152, 	Uvn( 0, 255 ),
	157, 	Uvn( 0, 255 ),
	149, 	Uvn( 0, 255 ),
	StripR(8),  
	394, 	Uvn( 0, 255 ),
	391, 	Uvn( 0, 255 ),
	2913, 	Uvn( 0, 255 ),
	393, 	Uvn( 0, 255 ),
	2912, 	Uvn( 0, 255 ),
	2907, 	Uvn( 0, 255 ),
	2908, 	Uvn( 0, 255 ),
	2905, 	Uvn( 0, 255 ),
	StripL(3),  
	2911, 	Uvn( 0, 255 ),
	246, 	Uvn( 0, 255 ),
	2910, 	Uvn( 0, 255 ),
	StripR(14),  
	166, 	Uvn( 0, 255 ),
	165, 	Uvn( 0, 255 ),
	2945, 	Uvn( 0, 255 ),
	167, 	Uvn( 0, 255 ),
	164, 	Uvn( 0, 255 ),
	163, 	Uvn( 0, 255 ),
	161, 	Uvn( 0, 255 ),
	157, 	Uvn( 0, 255 ),
	153, 	Uvn( 0, 255 ),
	149, 	Uvn( 0, 255 ),
	144, 	Uvn( 0, 255 ),
	141, 	Uvn( 0, 255 ),
	138, 	Uvn( 0, 255 ),
	132, 	Uvn( 0, 255 ),
	StripR(7),  
	2789, 	Uvn( 0, 255 ),
	322, 	Uvn( 0, 255 ),
	318, 	Uvn( 0, 255 ),
	327, 	Uvn( 0, 255 ),
	320, 	Uvn( 0, 255 ),
	2954, 	Uvn( 0, 255 ),
	2952, 	Uvn( 0, 255 ),
	StripR(8),  
	79, 	Uvn( 0, 255 ),
	74, 	Uvn( 0, 255 ),
	76, 	Uvn( 0, 255 ),
	70, 	Uvn( 0, 255 ),
	78, 	Uvn( 0, 255 ),
	71, 	Uvn( 0, 255 ),
	2734, 	Uvn( 0, 255 ),
	73, 	Uvn( 0, 255 ),
	StripR(9),  
	2775, 	Uvn( 0, 255 ),
	2789, 	Uvn( 0, 255 ),
	2778, 	Uvn( 0, 255 ),
	318, 	Uvn( 0, 255 ),
	2800, 	Uvn( 0, 255 ),
	320, 	Uvn( 0, 255 ),
	2803, 	Uvn( 0, 255 ),
	2952, 	Uvn( 0, 255 ),
	2807, 	Uvn( 0, 255 ),
	StripL(11),  
	2808, 	Uvn( 0, 255 ),
	2807, 	Uvn( 0, 255 ),
	2804, 	Uvn( 0, 255 ),
	2803, 	Uvn( 0, 255 ),
	2801, 	Uvn( 0, 255 ),
	2800, 	Uvn( 0, 255 ),
	2781, 	Uvn( 0, 255 ),
	2778, 	Uvn( 0, 255 ),
	2777, 	Uvn( 0, 255 ),
	2775, 	Uvn( 0, 255 ),
	2773, 	Uvn( 0, 255 ),
	StripL(7),  
	14, 	Uvn( 0, 255 ),
	15, 	Uvn( 0, 255 ),
	7, 	Uvn( 0, 255 ),
	6, 	Uvn( 0, 255 ),
	2, 	Uvn( 0, 255 ),
	0, 	Uvn( 0, 255 ),
	3, 	Uvn( 0, 255 ),
	StripL(5),  
	2925, 	Uvn( 0, 255 ),
	316, 	Uvn( 0, 255 ),
	2927, 	Uvn( 0, 255 ),
	317, 	Uvn( 0, 255 ),
	2928, 	Uvn( 0, 255 ),
	StripL(11),  
	168, 	Uvn( 0, 255 ),
	170, 	Uvn( 0, 255 ),
	2821, 	Uvn( 0, 255 ),
	2828, 	Uvn( 0, 255 ),
	2834, 	Uvn( 0, 255 ),
	178, 	Uvn( 0, 255 ),
	2850, 	Uvn( 0, 255 ),
	191, 	Uvn( 0, 255 ),
	198, 	Uvn( 0, 255 ),
	208, 	Uvn( 0, 255 ),
	213, 	Uvn( 0, 255 ),
	StripL(6),  
	218, 	Uvn( 0, 255 ),
	270, 	Uvn( 0, 255 ),
	259, 	Uvn( 0, 255 ),
	277, 	Uvn( 0, 255 ),
	269, 	Uvn( 0, 255 ),
	2984, 	Uvn( 0, 255 ),
	StripL(4),  
	3003, 	Uvn( 0, 255 ),
	2999, 	Uvn( 0, 255 ),
	3007, 	Uvn( 0, 255 ),
	3010, 	Uvn( 0, 255 ),
	StripL(3),  
	3024, 	Uvn( 0, 255 ),
	3027, 	Uvn( 0, 255 ),
	3021, 	Uvn( 0, 255 ),
	StripL(3),  
	3237, 	Uvn( 0, 255 ),
	3222, 	Uvn( 0, 255 ),
	3228, 	Uvn( 0, 255 ),
	StripR(15),  
	3227, 	Uvn( 0, 255 ),
	3211, 	Uvn( 0, 255 ),
	3214, 	Uvn( 0, 255 ),
	3191, 	Uvn( 0, 255 ),
	3193, 	Uvn( 0, 255 ),
	3175, 	Uvn( 0, 255 ),
	3174, 	Uvn( 0, 255 ),
	467, 	Uvn( 0, 255 ),
	466, 	Uvn( 0, 255 ),
	453, 	Uvn( 0, 255 ),
	450, 	Uvn( 0, 255 ),
	442, 	Uvn( 0, 255 ),
	3166, 	Uvn( 0, 255 ),
	3157, 	Uvn( 0, 255 ),
	3147, 	Uvn( 0, 255 ),
	StripR(19),  
	3253, 	Uvn( 0, 255 ),
	3241, 	Uvn( 0, 255 ),
	3247, 	Uvn( 0, 255 ),
	3230, 	Uvn( 0, 255 ),
	3233, 	Uvn( 0, 255 ),
	3216, 	Uvn( 0, 255 ),
	3219, 	Uvn( 0, 255 ),
	3196, 	Uvn( 0, 255 ),
	3198, 	Uvn( 0, 255 ),
	3176, 	Uvn( 0, 255 ),
	3179, 	Uvn( 0, 255 ),
	468, 	Uvn( 0, 255 ),
	469, 	Uvn( 0, 255 ),
	452, 	Uvn( 0, 255 ),
	451, 	Uvn( 0, 255 ),
	3163, 	Uvn( 0, 255 ),
	3162, 	Uvn( 0, 255 ),
	3138, 	Uvn( 0, 255 ),
	3140, 	Uvn( 0, 255 ),
	StripL(3),  
	3279, 	Uvn( 0, 255 ),
	3277, 	Uvn( 0, 255 ),
	801, 	Uvn( 0, 255 ),
	StripR(10),  
	3274, 	Uvn( 0, 255 ),
	3265, 	Uvn( 0, 255 ),
	3267, 	Uvn( 0, 255 ),
	3255, 	Uvn( 0, 255 ),
	3259, 	Uvn( 0, 255 ),
	3246, 	Uvn( 0, 255 ),
	3250, 	Uvn( 0, 255 ),
	3234, 	Uvn( 0, 255 ),
	3238, 	Uvn( 0, 255 ),
	3224, 	Uvn( 0, 255 ),
	StripR(6),  
	3215, 	Uvn( 0, 255 ),
	3199, 	Uvn( 0, 255 ),
	3203, 	Uvn( 0, 255 ),
	3190, 	Uvn( 0, 255 ),
	3188, 	Uvn( 0, 255 ),
	3184, 	Uvn( 0, 255 ),
	StripR(5),  
	449, 	Uvn( 0, 255 ),
	441, 	Uvn( 0, 255 ),
	3169, 	Uvn( 0, 255 ),
	3152, 	Uvn( 0, 255 ),
	3156, 	Uvn( 0, 255 ),
	StripL(8),  
	3187, 	Uvn( 0, 255 ),
	3197, 	Uvn( 0, 255 ),
	3190, 	Uvn( 0, 255 ),
	3206, 	Uvn( 0, 255 ),
	3199, 	Uvn( 0, 255 ),
	3213, 	Uvn( 0, 255 ),
	3215, 	Uvn( 0, 255 ),
	3225, 	Uvn( 0, 255 ),
	StripR(8),  
	3208, 	Uvn( 0, 255 ),
	3224, 	Uvn( 0, 255 ),
	3217, 	Uvn( 0, 255 ),
	3234, 	Uvn( 0, 255 ),
	3231, 	Uvn( 0, 255 ),
	3246, 	Uvn( 0, 255 ),
	3239, 	Uvn( 0, 255 ),
	3255, 	Uvn( 0, 255 ),
	StripR(5),  
	797, 	Uvn( 0, 255 ),
	798, 	Uvn( 0, 255 ),
	799, 	Uvn( 0, 255 ),
	807, 	Uvn( 0, 255 ),
	803, 	Uvn( 0, 255 ),
	StripR(8),  
	439, 	Uvn( 0, 255 ),
	444, 	Uvn( 0, 255 ),
	461, 	Uvn( 0, 255 ),
	463, 	Uvn( 0, 255 ),
	3181, 	Uvn( 0, 255 ),
	3180, 	Uvn( 0, 255 ),
	3202, 	Uvn( 0, 255 ),
	3200, 	Uvn( 0, 255 ),
	StripL(4),  
	3128, 	Uvn( 0, 255 ),
	3145, 	Uvn( 0, 255 ),
	3153, 	Uvn( 0, 255 ),
	3165, 	Uvn( 0, 255 ),
	StripR(12),  
	3150, 	Uvn( 0, 255 ),
	3159, 	Uvn( 0, 255 ),
	3164, 	Uvn( 0, 255 ),
	443, 	Uvn( 0, 255 ),
	3170, 	Uvn( 0, 255 ),
	455, 	Uvn( 0, 255 ),
	458, 	Uvn( 0, 255 ),
	470, 	Uvn( 0, 255 ),
	472, 	Uvn( 0, 255 ),
	3177, 	Uvn( 0, 255 ),
	3182, 	Uvn( 0, 255 ),
	3189, 	Uvn( 0, 255 ),
	StripR(27),  
	3307, 	Uvn( 0, 255 ),
	3314, 	Uvn( 0, 255 ),
	3316, 	Uvn( 0, 255 ),
	3319, 	Uvn( 0, 255 ),
	3320, 	Uvn( 0, 255 ),
	3325, 	Uvn( 0, 255 ),
	3612, 	Uvn( 0, 255 ),
	3614, 	Uvn( 0, 255 ),
	3613, 	Uvn( 0, 255 ),
	3333, 	Uvn( 0, 255 ),
	905, 	Uvn( 0, 255 ),
	3339, 	Uvn( 0, 255 ),
	916, 	Uvn( 0, 255 ),
	922, 	Uvn( 0, 255 ),
	923, 	Uvn( 0, 255 ),
	929, 	Uvn( 0, 255 ),
	925, 	Uvn( 0, 255 ),
	926, 	Uvn( 0, 255 ),
	920, 	Uvn( 0, 255 ),
	915, 	Uvn( 0, 255 ),
	906, 	Uvn( 0, 255 ),
	899, 	Uvn( 0, 255 ),
	901, 	Uvn( 0, 255 ),
	898, 	Uvn( 0, 255 ),
	897, 	Uvn( 0, 255 ),
	3612, 	Uvn( 0, 255 ),
	3613, 	Uvn( 0, 255 ),
	StripL(10),  
	3318, 	Uvn( 0, 255 ),
	3317, 	Uvn( 0, 255 ),
	3310, 	Uvn( 0, 255 ),
	3606, 	Uvn( 0, 255 ),
	3302, 	Uvn( 0, 255 ),
	3311, 	Uvn( 0, 255 ),
	3303, 	Uvn( 0, 255 ),
	3299, 	Uvn( 0, 255 ),
	3291, 	Uvn( 0, 255 ),
	3297, 	Uvn( 0, 255 ),
	StripR(6),  
	3218, 	Uvn( 0, 255 ),
	3222, 	Uvn( 0, 255 ),
	3212, 	Uvn( 0, 255 ),
	3228, 	Uvn( 0, 255 ),
	3221, 	Uvn( 0, 255 ),
	3229, 	Uvn( 0, 255 ),
	StripR(16),  
	3353, 	Uvn( 0, 255 ),
	1888, 	Uvn( 0, 255 ),
	3352, 	Uvn( 0, 255 ),
	3349, 	Uvn( 0, 255 ),
	3350, 	Uvn( 0, 255 ),
	3344, 	Uvn( 0, 255 ),
	3345, 	Uvn( 0, 255 ),
	4174, 	Uvn( 0, 255 ),
	4175, 	Uvn( 0, 255 ),
	4170, 	Uvn( 0, 255 ),
	4168, 	Uvn( 0, 255 ),
	808, 	Uvn( 0, 255 ),
	804, 	Uvn( 0, 255 ),
	3285, 	Uvn( 0, 255 ),
	3284, 	Uvn( 0, 255 ),
	3282, 	Uvn( 0, 255 ),
	StripL(5),  
	3337, 	Uvn( 0, 255 ),
	3344, 	Uvn( 0, 255 ),
	809, 	Uvn( 0, 255 ),
	4174, 	Uvn( 0, 255 ),
	4170, 	Uvn( 0, 255 ),
	StripL(6),  
	1888, 	Uvn( 0, 255 ),
	3349, 	Uvn( 0, 255 ),
	3348, 	Uvn( 0, 255 ),
	3343, 	Uvn( 0, 255 ),
	3342, 	Uvn( 0, 255 ),
	3335, 	Uvn( 0, 255 ),
	StripR(6),  
	3339, 	Uvn( 0, 255 ),
	3333, 	Uvn( 0, 255 ),
	3341, 	Uvn( 0, 255 ),
	3334, 	Uvn( 0, 255 ),
	3331, 	Uvn( 0, 255 ),
	3325, 	Uvn( 0, 255 ),
	StripL(4),  
	3350, 	Uvn( 0, 255 ),
	3352, 	Uvn( 0, 255 ),
	3351, 	Uvn( 0, 255 ),
	3354, 	Uvn( 0, 255 ),
	StripR(13),  
	803, 	Uvn( 0, 255 ),
	800, 	Uvn( 0, 255 ),
	799, 	Uvn( 0, 255 ),
	3275, 	Uvn( 0, 255 ),
	797, 	Uvn( 0, 255 ),
	3262, 	Uvn( 0, 255 ),
	3245, 	Uvn( 0, 255 ),
	3254, 	Uvn( 0, 255 ),
	3237, 	Uvn( 0, 255 ),
	3243, 	Uvn( 0, 255 ),
	3228, 	Uvn( 0, 255 ),
	3235, 	Uvn( 0, 255 ),
	3229, 	Uvn( 0, 255 ),
	StripL(11),  
	3347, 	Uvn( 0, 255 ),
	3341, 	Uvn( 0, 255 ),
	3346, 	Uvn( 0, 255 ),
	3339, 	Uvn( 0, 255 ),
	3615, 	Uvn( 0, 255 ),
	922, 	Uvn( 0, 255 ),
	928, 	Uvn( 0, 255 ),
	929, 	Uvn( 0, 255 ),
	934, 	Uvn( 0, 255 ),
	933, 	Uvn( 0, 255 ),
	938, 	Uvn( 0, 255 ),
	StripL(10),  
	3324, 	Uvn( 0, 255 ),
	900, 	Uvn( 0, 255 ),
	896, 	Uvn( 0, 255 ),
	4012, 	Uvn( 0, 255 ),
	895, 	Uvn( 0, 255 ),
	4010, 	Uvn( 0, 255 ),
	892, 	Uvn( 0, 255 ),
	4008, 	Uvn( 0, 255 ),
	894, 	Uvn( 0, 255 ),
	4009, 	Uvn( 0, 255 ),
	StripL(4),  
	3340, 	Uvn( 0, 255 ),
	3336, 	Uvn( 0, 255 ),
	814, 	Uvn( 0, 255 ),
	810, 	Uvn( 0, 255 ),
	StripL(4),  
	3333, 	Uvn( 0, 255 ),
	3334, 	Uvn( 0, 255 ),
	3614, 	Uvn( 0, 255 ),
	3325, 	Uvn( 0, 255 ),
	StripR(6),  
	3346, 	Uvn( 0, 255 ),
	3347, 	Uvn( 0, 255 ),
	1891, 	Uvn( 0, 255 ),
	1889, 	Uvn( 0, 255 ),
	1892, 	Uvn( 0, 255 ),
	1895, 	Uvn( 0, 255 ),
	StripL(8),  
	3035, 	Uvn( 0, 255 ),
	407, 	Uvn( 0, 255 ),
	425, 	Uvn( 0, 255 ),
	421, 	Uvn( 0, 255 ),
	435, 	Uvn( 0, 255 ),
	432, 	Uvn( 0, 255 ),
	3072, 	Uvn( 0, 255 ),
	3061, 	Uvn( 0, 255 ),
	StripL(8),  
	3034, 	Uvn( 0, 255 ),
	3036, 	Uvn( 0, 255 ),
	426, 	Uvn( 0, 255 ),
	427, 	Uvn( 0, 255 ),
	434, 	Uvn( 0, 255 ),
	437, 	Uvn( 0, 255 ),
	3078, 	Uvn( 0, 255 ),
	3088, 	Uvn( 0, 255 ),
	StripL(4),  
	3103, 	Uvn( 0, 255 ),
	3107, 	Uvn( 0, 255 ),
	3120, 	Uvn( 0, 255 ),
	3129, 	Uvn( 0, 255 ),
	StripL(6),  
	424, 	Uvn( 0, 255 ),
	411, 	Uvn( 0, 255 ),
	413, 	Uvn( 0, 255 ),
	402, 	Uvn( 0, 255 ),
	404, 	Uvn( 0, 255 ),
	3022, 	Uvn( 0, 255 ),
	StripL(18),  
	415, 	Uvn( 0, 255 ),
	405, 	Uvn( 0, 255 ),
	406, 	Uvn( 0, 255 ),
	3009, 	Uvn( 0, 255 ),
	399, 	Uvn( 0, 255 ),
	2998, 	Uvn( 0, 255 ),
	400, 	Uvn( 0, 255 ),
	3005, 	Uvn( 0, 255 ),
	3013, 	Uvn( 0, 255 ),
	2997, 	Uvn( 0, 255 ),
	3002, 	Uvn( 0, 255 ),
	2994, 	Uvn( 0, 255 ),
	3000, 	Uvn( 0, 255 ),
	2984, 	Uvn( 0, 255 ),
	289, 	Uvn( 0, 255 ),
	277, 	Uvn( 0, 255 ),
	284, 	Uvn( 0, 255 ),
	270, 	Uvn( 0, 255 ),
	StripL(5),  
	3078, 	Uvn( 0, 255 ),
	3073, 	Uvn( 0, 255 ),
	434, 	Uvn( 0, 255 ),
	433, 	Uvn( 0, 255 ),
	426, 	Uvn( 0, 255 ),
	StripR(6),  
	3044, 	Uvn( 0, 255 ),
	3038, 	Uvn( 0, 255 ),
	3040, 	Uvn( 0, 255 ),
	417, 	Uvn( 0, 255 ),
	419, 	Uvn( 0, 255 ),
	409, 	Uvn( 0, 255 ),
	StripL(3),  
	397, 	Uvn( 0, 255 ),
	396, 	Uvn( 0, 255 ),
	408, 	Uvn( 0, 255 ),
	StripR(30),  
	3082, 	Uvn( 0, 255 ),
	3100, 	Uvn( 0, 255 ),
	3094, 	Uvn( 0, 255 ),
	3108, 	Uvn( 0, 255 ),
	3104, 	Uvn( 0, 255 ),
	3123, 	Uvn( 0, 255 ),
	3117, 	Uvn( 0, 255 ),
	3143, 	Uvn( 0, 255 ),
	3110, 	Uvn( 0, 255 ),
	3136, 	Uvn( 0, 255 ),
	3111, 	Uvn( 0, 255 ),
	3140, 	Uvn( 0, 255 ),
	3114, 	Uvn( 0, 255 ),
	3138, 	Uvn( 0, 255 ),
	3126, 	Uvn( 0, 255 ),
	3147, 	Uvn( 0, 255 ),
	3134, 	Uvn( 0, 255 ),
	3157, 	Uvn( 0, 255 ),
	3159, 	Uvn( 0, 255 ),
	442, 	Uvn( 0, 255 ),
	443, 	Uvn( 0, 255 ),
	453, 	Uvn( 0, 255 ),
	455, 	Uvn( 0, 255 ),
	467, 	Uvn( 0, 255 ),
	470, 	Uvn( 0, 255 ),
	3175, 	Uvn( 0, 255 ),
	3177, 	Uvn( 0, 255 ),
	3191, 	Uvn( 0, 255 ),
	3189, 	Uvn( 0, 255 ),
	3211, 	Uvn( 0, 255 ),
	StripR(18),  
	401, 	Uvn( 0, 255 ),
	3010, 	Uvn( 0, 255 ),
	3018, 	Uvn( 0, 255 ),
	3007, 	Uvn( 0, 255 ),
	3014, 	Uvn( 0, 255 ),
	3003, 	Uvn( 0, 255 ),
	3011, 	Uvn( 0, 255 ),
	3006, 	Uvn( 0, 255 ),
	3017, 	Uvn( 0, 255 ),
	307, 	Uvn( 0, 255 ),
	309, 	Uvn( 0, 255 ),
	300, 	Uvn( 0, 255 ),
	306, 	Uvn( 0, 255 ),
	295, 	Uvn( 0, 255 ),
	304, 	Uvn( 0, 255 ),
	294, 	Uvn( 0, 255 ),
	301, 	Uvn( 0, 255 ),
	285, 	Uvn( 0, 255 ),
	StripR(7),  
	3058, 	Uvn( 0, 255 ),
	3064, 	Uvn( 0, 255 ),
	431, 	Uvn( 0, 255 ),
	433, 	Uvn( 0, 255 ),
	422, 	Uvn( 0, 255 ),
	426, 	Uvn( 0, 255 ),
	3034, 	Uvn( 0, 255 ),
	StripL(12),  
	3050, 	Uvn( 0, 255 ),
	424, 	Uvn( 0, 255 ),
	430, 	Uvn( 0, 255 ),
	413, 	Uvn( 0, 255 ),
	416, 	Uvn( 0, 255 ),
	404, 	Uvn( 0, 255 ),
	3033, 	Uvn( 0, 255 ),
	3022, 	Uvn( 0, 255 ),
	3026, 	Uvn( 0, 255 ),
	3016, 	Uvn( 0, 255 ),
	3030, 	Uvn( 0, 255 ),
	3019, 	Uvn( 0, 255 ),
	StripR(7),  
	400, 	Uvn( 0, 255 ),
	399, 	Uvn( 0, 255 ),
	410, 	Uvn( 0, 255 ),
	406, 	Uvn( 0, 255 ),
	418, 	Uvn( 0, 255 ),
	415, 	Uvn( 0, 255 ),
	3039, 	Uvn( 0, 255 ),
	StripR(5),  
	2993, 	Uvn( 0, 255 ),
	2988, 	Uvn( 0, 255 ),
	396, 	Uvn( 0, 255 ),
	2990, 	Uvn( 0, 255 ),
	397, 	Uvn( 0, 255 ),
	StripL(8),  
	3045, 	Uvn( 0, 255 ),
	429, 	Uvn( 0, 255 ),
	423, 	Uvn( 0, 255 ),
	414, 	Uvn( 0, 255 ),
	412, 	Uvn( 0, 255 ),
	403, 	Uvn( 0, 255 ),
	401, 	Uvn( 0, 255 ),
	3018, 	Uvn( 0, 255 ),
	StripL(3),  
	3056, 	Uvn( 0, 255 ),
	3047, 	Uvn( 0, 255 ),
	3049, 	Uvn( 0, 255 ),
	StripL(7),  
	3057, 	Uvn( 0, 255 ),
	3056, 	Uvn( 0, 255 ),
	3051, 	Uvn( 0, 255 ),
	3049, 	Uvn( 0, 255 ),
	3042, 	Uvn( 0, 255 ),
	3041, 	Uvn( 0, 255 ),
	420, 	Uvn( 0, 255 ),
	StripR(20),  
	3101, 	Uvn( 0, 255 ),
	3107, 	Uvn( 0, 255 ),
	3119, 	Uvn( 0, 255 ),
	3129, 	Uvn( 0, 255 ),
	3127, 	Uvn( 0, 255 ),
	3142, 	Uvn( 0, 255 ),
	3132, 	Uvn( 0, 255 ),
	3144, 	Uvn( 0, 255 ),
	3146, 	Uvn( 0, 255 ),
	3154, 	Uvn( 0, 255 ),
	3155, 	Uvn( 0, 255 ),
	3164, 	Uvn( 0, 255 ),
	3167, 	Uvn( 0, 255 ),
	3170, 	Uvn( 0, 255 ),
	445, 	Uvn( 0, 255 ),
	458, 	Uvn( 0, 255 ),
	460, 	Uvn( 0, 255 ),
	472, 	Uvn( 0, 255 ),
	3172, 	Uvn( 0, 255 ),
	3182, 	Uvn( 0, 255 ),
	StripR(16),  
	3146, 	Uvn( 0, 255 ),
	3133, 	Uvn( 0, 255 ),
	3132, 	Uvn( 0, 255 ),
	3118, 	Uvn( 0, 255 ),
	3121, 	Uvn( 0, 255 ),
	3088, 	Uvn( 0, 255 ),
	3112, 	Uvn( 0, 255 ),
	3078, 	Uvn( 0, 255 ),
	3101, 	Uvn( 0, 255 ),
	3073, 	Uvn( 0, 255 ),
	3091, 	Uvn( 0, 255 ),
	3064, 	Uvn( 0, 255 ),
	3079, 	Uvn( 0, 255 ),
	3058, 	Uvn( 0, 255 ),
	3066, 	Uvn( 0, 255 ),
	3050, 	Uvn( 0, 255 ),
	StripL(14),  
	3085, 	Uvn( 0, 255 ),
	3099, 	Uvn( 0, 255 ),
	3124, 	Uvn( 0, 255 ),
	3109, 	Uvn( 0, 255 ),
	3139, 	Uvn( 0, 255 ),
	3130, 	Uvn( 0, 255 ),
	3151, 	Uvn( 0, 255 ),
	3141, 	Uvn( 0, 255 ),
	3158, 	Uvn( 0, 255 ),
	3149, 	Uvn( 0, 255 ),
	3156, 	Uvn( 0, 255 ),
	3137, 	Uvn( 0, 255 ),
	3152, 	Uvn( 0, 255 ),
	3131, 	Uvn( 0, 255 ),
	StripL(3),  
	3095, 	Uvn( 0, 255 ),
	3104, 	Uvn( 0, 255 ),
	3094, 	Uvn( 0, 255 ),
	StripR(5),  
	3289, 	Uvn( 0, 255 ),
	3218, 	Uvn( 0, 255 ),
	3204, 	Uvn( 0, 255 ),
	3212, 	Uvn( 0, 255 ),
	3194, 	Uvn( 0, 255 ),
	StripL(12),  
	3207, 	Uvn( 0, 255 ),
	3195, 	Uvn( 0, 255 ),
	3287, 	Uvn( 0, 255 ),
	3200, 	Uvn( 0, 255 ),
	3289, 	Uvn( 0, 255 ),
	3202, 	Uvn( 0, 255 ),
	3204, 	Uvn( 0, 255 ),
	3181, 	Uvn( 0, 255 ),
	476, 	Uvn( 0, 255 ),
	461, 	Uvn( 0, 255 ),
	459, 	Uvn( 0, 255 ),
	439, 	Uvn( 0, 255 ),
	StripL(20),  
	860, 	Uvn( 0, 255 ),
	4122, 	Uvn( 0, 255 ),
	875, 	Uvn( 0, 255 ),
	880, 	Uvn( 0, 255 ),
	874, 	Uvn( 0, 255 ),
	881, 	Uvn( 0, 255 ),
	883, 	Uvn( 0, 255 ),
	888, 	Uvn( 0, 255 ),
	886, 	Uvn( 0, 255 ),
	4152, 	Uvn( 0, 255 ),
	4157, 	Uvn( 0, 255 ),
	4154, 	Uvn( 0, 255 ),
	4146, 	Uvn( 0, 255 ),
	4143, 	Uvn( 0, 255 ),
	4135, 	Uvn( 0, 255 ),
	4133, 	Uvn( 0, 255 ),
	4127, 	Uvn( 0, 255 ),
	4123, 	Uvn( 0, 255 ),
	4116, 	Uvn( 0, 255 ),
	4118, 	Uvn( 0, 255 ),
	StripL(6),  
	836, 	Uvn( 0, 255 ),
	834, 	Uvn( 0, 255 ),
	842, 	Uvn( 0, 255 ),
	829, 	Uvn( 0, 255 ),
	835, 	Uvn( 0, 255 ),
	3697, 	Uvn( 0, 255 ),
	StripR(5),  
	857, 	Uvn( 0, 255 ),
	864, 	Uvn( 0, 255 ),
	858, 	Uvn( 0, 255 ),
	863, 	Uvn( 0, 255 ),
	861, 	Uvn( 0, 255 ),
	StripR(6),  
	3785, 	Uvn( 0, 255 ),
	3751, 	Uvn( 0, 255 ),
	3784, 	Uvn( 0, 255 ),
	3749, 	Uvn( 0, 255 ),
	3788, 	Uvn( 0, 255 ),
	3750, 	Uvn( 0, 255 ),
	StripL(9),  
	3794, 	Uvn( 0, 255 ),
	3797, 	Uvn( 0, 255 ),
	3793, 	Uvn( 0, 255 ),
	3821, 	Uvn( 0, 255 ),
	3818, 	Uvn( 0, 255 ),
	3852, 	Uvn( 0, 255 ),
	3840, 	Uvn( 0, 255 ),
	3864, 	Uvn( 0, 255 ),
	3861, 	Uvn( 0, 255 ),
	StripL(3),  
	3769, 	Uvn( 0, 255 ),
	3762, 	Uvn( 0, 255 ),
	3767, 	Uvn( 0, 255 ),
	StripR(9),  
	3820, 	Uvn( 0, 255 ),
	3812, 	Uvn( 0, 255 ),
	3816, 	Uvn( 0, 255 ),
	3798, 	Uvn( 0, 255 ),
	3817, 	Uvn( 0, 255 ),
	3802, 	Uvn( 0, 255 ),
	3814, 	Uvn( 0, 255 ),
	3801, 	Uvn( 0, 255 ),
	3807, 	Uvn( 0, 255 ),
	StripR(15),  
	3855, 	Uvn( 0, 255 ),
	3831, 	Uvn( 0, 255 ),
	3833, 	Uvn( 0, 255 ),
	3842, 	Uvn( 0, 255 ),
	3851, 	Uvn( 0, 255 ),
	3879, 	Uvn( 0, 255 ),
	3883, 	Uvn( 0, 255 ),
	3906, 	Uvn( 0, 255 ),
	3908, 	Uvn( 0, 255 ),
	3914, 	Uvn( 0, 255 ),
	3921, 	Uvn( 0, 255 ),
	3904, 	Uvn( 0, 255 ),
	3905, 	Uvn( 0, 255 ),
	3901, 	Uvn( 0, 255 ),
	3899, 	Uvn( 0, 255 ),
	StripL(6),  
	3902, 	Uvn( 0, 255 ),
	3924, 	Uvn( 0, 255 ),
	3909, 	Uvn( 0, 255 ),
	3931, 	Uvn( 0, 255 ),
	3919, 	Uvn( 0, 255 ),
	3929, 	Uvn( 0, 255 ),
	StripL(15),  
	3953, 	Uvn( 0, 255 ),
	3950, 	Uvn( 0, 255 ),
	3933, 	Uvn( 0, 255 ),
	3954, 	Uvn( 0, 255 ),
	3938, 	Uvn( 0, 255 ),
	3955, 	Uvn( 0, 255 ),
	3939, 	Uvn( 0, 255 ),
	3944, 	Uvn( 0, 255 ),
	3926, 	Uvn( 0, 255 ),
	3922, 	Uvn( 0, 255 ),
	3938, 	Uvn( 0, 255 ),
	3917, 	Uvn( 0, 255 ),
	3933, 	Uvn( 0, 255 ),
	3936, 	Uvn( 0, 255 ),
	3953, 	Uvn( 0, 255 ),
	StripR(56),  
	3844, 	Uvn( 0, 255 ),
	3832, 	Uvn( 0, 255 ),
	3820, 	Uvn( 0, 255 ),
	3804, 	Uvn( 0, 255 ),
	3812, 	Uvn( 0, 255 ),
	3799, 	Uvn( 0, 255 ),
	3798, 	Uvn( 0, 255 ),
	3772, 	Uvn( 0, 255 ),
	3802, 	Uvn( 0, 255 ),
	3779, 	Uvn( 0, 255 ),
	3801, 	Uvn( 0, 255 ),
	3778, 	Uvn( 0, 255 ),
	3807, 	Uvn( 0, 255 ),
	3768, 	Uvn( 0, 255 ),
	3780, 	Uvn( 0, 255 ),
	3765, 	Uvn( 0, 255 ),
	3776, 	Uvn( 0, 255 ),
	3756, 	Uvn( 0, 255 ),
	3759, 	Uvn( 0, 255 ),
	3767, 	Uvn( 0, 255 ),
	3774, 	Uvn( 0, 255 ),
	3804, 	Uvn( 0, 255 ),
	3810, 	Uvn( 0, 255 ),
	3832, 	Uvn( 0, 255 ),
	3836, 	Uvn( 0, 255 ),
	3844, 	Uvn( 0, 255 ),
	3853, 	Uvn( 0, 255 ),
	3828, 	Uvn( 0, 255 ),
	3830, 	Uvn( 0, 255 ),
	3825, 	Uvn( 0, 255 ),
	3823, 	Uvn( 0, 255 ),
	3807, 	Uvn( 0, 255 ),
	3809, 	Uvn( 0, 255 ),
	3776, 	Uvn( 0, 255 ),
	3791, 	Uvn( 0, 255 ),
	3759, 	Uvn( 0, 255 ),
	3770, 	Uvn( 0, 255 ),
	3774, 	Uvn( 0, 255 ),
	3790, 	Uvn( 0, 255 ),
	3810, 	Uvn( 0, 255 ),
	3813, 	Uvn( 0, 255 ),
	3836, 	Uvn( 0, 255 ),
	3839, 	Uvn( 0, 255 ),
	3853, 	Uvn( 0, 255 ),
	3850, 	Uvn( 0, 255 ),
	3830, 	Uvn( 0, 255 ),
	3826, 	Uvn( 0, 255 ),
	3809, 	Uvn( 0, 255 ),
	3811, 	Uvn( 0, 255 ),
	3791, 	Uvn( 0, 255 ),
	3819, 	Uvn( 0, 255 ),
	3803, 	Uvn( 0, 255 ),
	3827, 	Uvn( 0, 255 ),
	3806, 	Uvn( 0, 255 ),
	3835, 	Uvn( 0, 255 ),
	3815, 	Uvn( 0, 255 ),
	StripL(4),  
	3772, 	Uvn( 0, 255 ),
	3781, 	Uvn( 0, 255 ),
	3799, 	Uvn( 0, 255 ),
	3804, 	Uvn( 0, 255 ),
	StripR(6),  
	3773, 	Uvn( 0, 255 ),
	3742, 	Uvn( 0, 255 ),
	3764, 	Uvn( 0, 255 ),
	3738, 	Uvn( 0, 255 ),
	3763, 	Uvn( 0, 255 ),
	3734, 	Uvn( 0, 255 ),
	StripL(3),  
	3706, 	Uvn( 0, 255 ),
	3736, 	Uvn( 0, 255 ),
	3703, 	Uvn( 0, 255 ),
	StripL(15),  
	3677, 	Uvn( 0, 255 ),
	3676, 	Uvn( 0, 255 ),
	3682, 	Uvn( 0, 255 ),
	3664, 	Uvn( 0, 255 ),
	3691, 	Uvn( 0, 255 ),
	3660, 	Uvn( 0, 255 ),
	3695, 	Uvn( 0, 255 ),
	3669, 	Uvn( 0, 255 ),
	3708, 	Uvn( 0, 255 ),
	3671, 	Uvn( 0, 255 ),
	3710, 	Uvn( 0, 255 ),
	3712, 	Uvn( 0, 255 ),
	3721, 	Uvn( 0, 255 ),
	3713, 	Uvn( 0, 255 ),
	3723, 	Uvn( 0, 255 ),
	StripL(6),  
	3633, 	Uvn( 0, 255 ),
	3655, 	Uvn( 0, 255 ),
	3638, 	Uvn( 0, 255 ),
	821, 	Uvn( 0, 255 ),
	3634, 	Uvn( 0, 255 ),
	816, 	Uvn( 0, 255 ),
	StripL(10),  
	3655, 	Uvn( 0, 255 ),
	3673, 	Uvn( 0, 255 ),
	821, 	Uvn( 0, 255 ),
	828, 	Uvn( 0, 255 ),
	823, 	Uvn( 0, 255 ),
	829, 	Uvn( 0, 255 ),
	825, 	Uvn( 0, 255 ),
	834, 	Uvn( 0, 255 ),
	827, 	Uvn( 0, 255 ),
	836, 	Uvn( 0, 255 ),
	StripL(5),  
	3751, 	Uvn( 0, 255 ),
	848, 	Uvn( 0, 255 ),
	3785, 	Uvn( 0, 255 ),
	3805, 	Uvn( 0, 255 ),
	3784, 	Uvn( 0, 255 ),
	StripR(22),  
	4094, 	Uvn( 0, 255 ),
	4096, 	Uvn( 0, 255 ),
	4102, 	Uvn( 0, 255 ),
	4100, 	Uvn( 0, 255 ),
	4108, 	Uvn( 0, 255 ),
	4093, 	Uvn( 0, 255 ),
	4107, 	Uvn( 0, 255 ),
	4104, 	Uvn( 0, 255 ),
	4112, 	Uvn( 0, 255 ),
	4109, 	Uvn( 0, 255 ),
	4129, 	Uvn( 0, 255 ),
	753, 	Uvn( 0, 255 ),
	765, 	Uvn( 0, 255 ),
	766, 	Uvn( 0, 255 ),
	783, 	Uvn( 0, 255 ),
	785, 	Uvn( 0, 255 ),
	795, 	Uvn( 0, 255 ),
	793, 	Uvn( 0, 255 ),
	791, 	Uvn( 0, 255 ),
	787, 	Uvn( 0, 255 ),
	775, 	Uvn( 0, 255 ),
	773, 	Uvn( 0, 255 ),
	StripR(5),  
	844, 	Uvn( 0, 255 ),
	4091, 	Uvn( 0, 255 ),
	4080, 	Uvn( 0, 255 ),
	4092, 	Uvn( 0, 255 ),
	4086, 	Uvn( 0, 255 ),
	StripR(5),  
	874, 	Uvn( 0, 255 ),
	875, 	Uvn( 0, 255 ),
	867, 	Uvn( 0, 255 ),
	860, 	Uvn( 0, 255 ),
	856, 	Uvn( 0, 255 ),
	StripL(4),  
	879, 	Uvn( 0, 255 ),
	872, 	Uvn( 0, 255 ),
	873, 	Uvn( 0, 255 ),
	871, 	Uvn( 0, 255 ),
	StripR(6),  
	832, 	Uvn( 0, 255 ),
	822, 	Uvn( 0, 255 ),
	824, 	Uvn( 0, 255 ),
	819, 	Uvn( 0, 255 ),
	826, 	Uvn( 0, 255 ),
	3672, 	Uvn( 0, 255 ),
	StripR(5),  
	3653, 	Uvn( 0, 255 ),
	3657, 	Uvn( 0, 255 ),
	3661, 	Uvn( 0, 255 ),
	3675, 	Uvn( 0, 255 ),
	3678, 	Uvn( 0, 255 ),
	StripL(12),  
	3693, 	Uvn( 0, 255 ),
	3700, 	Uvn( 0, 255 ),
	3721, 	Uvn( 0, 255 ),
	3719, 	Uvn( 0, 255 ),
	3710, 	Uvn( 0, 255 ),
	3716, 	Uvn( 0, 255 ),
	3708, 	Uvn( 0, 255 ),
	3717, 	Uvn( 0, 255 ),
	3695, 	Uvn( 0, 255 ),
	3714, 	Uvn( 0, 255 ),
	3691, 	Uvn( 0, 255 ),
	3682, 	Uvn( 0, 255 ),
	StripR(52),  
	3754, 	Uvn( 0, 255 ),
	3782, 	Uvn( 0, 255 ),
	3760, 	Uvn( 0, 255 ),
	3786, 	Uvn( 0, 255 ),
	3758, 	Uvn( 0, 255 ),
	3775, 	Uvn( 0, 255 ),
	3761, 	Uvn( 0, 255 ),
	3748, 	Uvn( 0, 255 ),
	3745, 	Uvn( 0, 255 ),
	3741, 	Uvn( 0, 255 ),
	3727, 	Uvn( 0, 255 ),
	3728, 	Uvn( 0, 255 ),
	3698, 	Uvn( 0, 255 ),
	3709, 	Uvn( 0, 255 ),
	3681, 	Uvn( 0, 255 ),
	3696, 	Uvn( 0, 255 ),
	3690, 	Uvn( 0, 255 ),
	3734, 	Uvn( 0, 255 ),
	3699, 	Uvn( 0, 255 ),
	3738, 	Uvn( 0, 255 ),
	3715, 	Uvn( 0, 255 ),
	3742, 	Uvn( 0, 255 ),
	3747, 	Uvn( 0, 255 ),
	3773, 	Uvn( 0, 255 ),
	3771, 	Uvn( 0, 255 ),
	3782, 	Uvn( 0, 255 ),
	3789, 	Uvn( 0, 255 ),
	3754, 	Uvn( 0, 255 ),
	3766, 	Uvn( 0, 255 ),
	3739, 	Uvn( 0, 255 ),
	3746, 	Uvn( 0, 255 ),
	3720, 	Uvn( 0, 255 ),
	3732, 	Uvn( 0, 255 ),
	3694, 	Uvn( 0, 255 ),
	3711, 	Uvn( 0, 255 ),
	3715, 	Uvn( 0, 255 ),
	3725, 	Uvn( 0, 255 ),
	3747, 	Uvn( 0, 255 ),
	3726, 	Uvn( 0, 255 ),
	3750, 	Uvn( 0, 255 ),
	3729, 	Uvn( 0, 255 ),
	3749, 	Uvn( 0, 255 ),
	3733, 	Uvn( 0, 255 ),
	3751, 	Uvn( 0, 255 ),
	838, 	Uvn( 0, 255 ),
	848, 	Uvn( 0, 255 ),
	840, 	Uvn( 0, 255 ),
	851, 	Uvn( 0, 255 ),
	846, 	Uvn( 0, 255 ),
	855, 	Uvn( 0, 255 ),
	853, 	Uvn( 0, 255 ),
	859, 	Uvn( 0, 255 ),
	StripL(3),  
	3830, 	Uvn( 0, 255 ),
	3809, 	Uvn( 0, 255 ),
	3823, 	Uvn( 0, 255 ),
	StripR(5),  
	3818, 	Uvn( 0, 255 ),
	3839, 	Uvn( 0, 255 ),
	3840, 	Uvn( 0, 255 ),
	3850, 	Uvn( 0, 255 ),
	3861, 	Uvn( 0, 255 ),
	StripR(8),  
	3835, 	Uvn( 0, 255 ),
	3857, 	Uvn( 0, 255 ),
	3827, 	Uvn( 0, 255 ),
	3849, 	Uvn( 0, 255 ),
	3819, 	Uvn( 0, 255 ),
	3837, 	Uvn( 0, 255 ),
	3811, 	Uvn( 0, 255 ),
	3826, 	Uvn( 0, 255 ),
	StripR(10),  
	3868, 	Uvn( 0, 255 ),
	3843, 	Uvn( 0, 255 ),
	3862, 	Uvn( 0, 255 ),
	3863, 	Uvn( 0, 255 ),
	3866, 	Uvn( 0, 255 ),
	3887, 	Uvn( 0, 255 ),
	3891, 	Uvn( 0, 255 ),
	3911, 	Uvn( 0, 255 ),
	3916, 	Uvn( 0, 255 ),
	3920, 	Uvn( 0, 255 ),
	StripL(3),  
	3856, 	Uvn( 0, 255 ),
	3846, 	Uvn( 0, 255 ),
	3875, 	Uvn( 0, 255 ),
	StripR(6),  
	3955, 	Uvn( 0, 255 ),
	3944, 	Uvn( 0, 255 ),
	3960, 	Uvn( 0, 255 ),
	3937, 	Uvn( 0, 255 ),
	3961, 	Uvn( 0, 255 ),
	3963, 	Uvn( 0, 255 ),
	StripL(8),  
	3988, 	Uvn( 0, 255 ),
	3971, 	Uvn( 0, 255 ),
	3987, 	Uvn( 0, 255 ),
	3974, 	Uvn( 0, 255 ),
	3990, 	Uvn( 0, 255 ),
	3963, 	Uvn( 0, 255 ),
	3982, 	Uvn( 0, 255 ),
	3961, 	Uvn( 0, 255 ),
	StripR(16),  
	3950, 	Uvn( 0, 255 ),
	3964, 	Uvn( 0, 255 ),
	3953, 	Uvn( 0, 255 ),
	3956, 	Uvn( 0, 255 ),
	3936, 	Uvn( 0, 255 ),
	3927, 	Uvn( 0, 255 ),
	3917, 	Uvn( 0, 255 ),
	3918, 	Uvn( 0, 255 ),
	3907, 	Uvn( 0, 255 ),
	3912, 	Uvn( 0, 255 ),
	3937, 	Uvn( 0, 255 ),
	3928, 	Uvn( 0, 255 ),
	3949, 	Uvn( 0, 255 ),
	3948, 	Uvn( 0, 255 ),
	3974, 	Uvn( 0, 255 ),
	3971, 	Uvn( 0, 255 ),
	StripL(7),  
	3859, 	Uvn( 0, 255 ),
	3846, 	Uvn( 0, 255 ),
	3834, 	Uvn( 0, 255 ),
	3856, 	Uvn( 0, 255 ),
	3838, 	Uvn( 0, 255 ),
	3841, 	Uvn( 0, 255 ),
	3860, 	Uvn( 0, 255 ),
	StripL(3),  
	3780, 	Uvn( 0, 255 ),
	3807, 	Uvn( 0, 255 ),
	3776, 	Uvn( 0, 255 ),
	StripR(10),  
	3782, 	Uvn( 0, 255 ),
	3773, 	Uvn( 0, 255 ),
	3786, 	Uvn( 0, 255 ),
	3764, 	Uvn( 0, 255 ),
	3775, 	Uvn( 0, 255 ),
	3763, 	Uvn( 0, 255 ),
	3748, 	Uvn( 0, 255 ),
	3734, 	Uvn( 0, 255 ),
	3741, 	Uvn( 0, 255 ),
	3728, 	Uvn( 0, 255 ),
	StripR(9),  
	3678, 	Uvn( 0, 255 ),
	3656, 	Uvn( 0, 255 ),
	3661, 	Uvn( 0, 255 ),
	3650, 	Uvn( 0, 255 ),
	3653, 	Uvn( 0, 255 ),
	3636, 	Uvn( 0, 255 ),
	3640, 	Uvn( 0, 255 ),
	3632, 	Uvn( 0, 255 ),
	3642, 	Uvn( 0, 255 ),
	StripL(4),  
	3652, 	Uvn( 0, 255 ),
	3658, 	Uvn( 0, 255 ),
	3646, 	Uvn( 0, 255 ),
	3649, 	Uvn( 0, 255 ),
	StripL(5),  
	3636, 	Uvn( 0, 255 ),
	3654, 	Uvn( 0, 255 ),
	3650, 	Uvn( 0, 255 ),
	3663, 	Uvn( 0, 255 ),
	3656, 	Uvn( 0, 255 ),
	StripR(5),  
	4099, 	Uvn( 0, 255 ),
	4111, 	Uvn( 0, 255 ),
	4115, 	Uvn( 0, 255 ),
	4125, 	Uvn( 0, 255 ),
	4128, 	Uvn( 0, 255 ),
	StripL(3),  
	594, 	Uvn( 0, 255 ),
	595, 	Uvn( 0, 255 ),
	581, 	Uvn( 0, 255 ),
	StripR(17),  
	4067, 	Uvn( 0, 255 ),
	4068, 	Uvn( 0, 255 ),
	4071, 	Uvn( 0, 255 ),
	615, 	Uvn( 0, 255 ),
	605, 	Uvn( 0, 255 ),
	608, 	Uvn( 0, 255 ),
	592, 	Uvn( 0, 255 ),
	595, 	Uvn( 0, 255 ),
	579, 	Uvn( 0, 255 ),
	581, 	Uvn( 0, 255 ),
	566, 	Uvn( 0, 255 ),
	564, 	Uvn( 0, 255 ),
	540, 	Uvn( 0, 255 ),
	559, 	Uvn( 0, 255 ),
	534, 	Uvn( 0, 255 ),
	553, 	Uvn( 0, 255 ),
	527, 	Uvn( 0, 255 ),
	StripR(9),  
	609, 	Uvn( 0, 255 ),
	620, 	Uvn( 0, 255 ),
	610, 	Uvn( 0, 255 ),
	616, 	Uvn( 0, 255 ),
	606, 	Uvn( 0, 255 ),
	618, 	Uvn( 0, 255 ),
	602, 	Uvn( 0, 255 ),
	615, 	Uvn( 0, 255 ),
	4068, 	Uvn( 0, 255 ),
	StripL(6),  
	587, 	Uvn( 0, 255 ),
	583, 	Uvn( 0, 255 ),
	591, 	Uvn( 0, 255 ),
	582, 	Uvn( 0, 255 ),
	592, 	Uvn( 0, 255 ),
	579, 	Uvn( 0, 255 ),
	StripL(30),  
	529, 	Uvn( 0, 255 ),
	547, 	Uvn( 0, 255 ),
	532, 	Uvn( 0, 255 ),
	549, 	Uvn( 0, 255 ),
	533, 	Uvn( 0, 255 ),
	550, 	Uvn( 0, 255 ),
	535, 	Uvn( 0, 255 ),
	4052, 	Uvn( 0, 255 ),
	4047, 	Uvn( 0, 255 ),
	4049, 	Uvn( 0, 255 ),
	4044, 	Uvn( 0, 255 ),
	741, 	Uvn( 0, 255 ),
	732, 	Uvn( 0, 255 ),
	740, 	Uvn( 0, 255 ),
	733, 	Uvn( 0, 255 ),
	742, 	Uvn( 0, 255 ),
	734, 	Uvn( 0, 255 ),
	743, 	Uvn( 0, 255 ),
	735, 	Uvn( 0, 255 ),
	4110, 	Uvn( 0, 255 ),
	4101, 	Uvn( 0, 255 ),
	4117, 	Uvn( 0, 255 ),
	4105, 	Uvn( 0, 255 ),
	4115, 	Uvn( 0, 255 ),
	4103, 	Uvn( 0, 255 ),
	4099, 	Uvn( 0, 255 ),
	4079, 	Uvn( 0, 255 ),
	4086, 	Uvn( 0, 255 ),
	4085, 	Uvn( 0, 255 ),
	4077, 	Uvn( 0, 255 ),
	StripL(28),  
	508, 	Uvn( 0, 255 ),
	529, 	Uvn( 0, 255 ),
	514, 	Uvn( 0, 255 ),
	532, 	Uvn( 0, 255 ),
	517, 	Uvn( 0, 255 ),
	533, 	Uvn( 0, 255 ),
	519, 	Uvn( 0, 255 ),
	535, 	Uvn( 0, 255 ),
	4043, 	Uvn( 0, 255 ),
	4047, 	Uvn( 0, 255 ),
	4040, 	Uvn( 0, 255 ),
	4044, 	Uvn( 0, 255 ),
	728, 	Uvn( 0, 255 ),
	732, 	Uvn( 0, 255 ),
	719, 	Uvn( 0, 255 ),
	733, 	Uvn( 0, 255 ),
	718, 	Uvn( 0, 255 ),
	734, 	Uvn( 0, 255 ),
	722, 	Uvn( 0, 255 ),
	735, 	Uvn( 0, 255 ),
	729, 	Uvn( 0, 255 ),
	4101, 	Uvn( 0, 255 ),
	4076, 	Uvn( 0, 255 ),
	4105, 	Uvn( 0, 255 ),
	4088, 	Uvn( 0, 255 ),
	4084, 	Uvn( 0, 255 ),
	4087, 	Uvn( 0, 255 ),
	4081, 	Uvn( 0, 255 ),
	StripR(6),  
	607, 	Uvn( 0, 255 ),
	593, 	Uvn( 0, 255 ),
	594, 	Uvn( 0, 255 ),
	580, 	Uvn( 0, 255 ),
	581, 	Uvn( 0, 255 ),
	564, 	Uvn( 0, 255 ),
	StripL(4),  
	925, 	Uvn( 0, 255 ),
	923, 	Uvn( 0, 255 ),
	921, 	Uvn( 0, 255 ),
	916, 	Uvn( 0, 255 ),
	StripL(3),  
	918, 	Uvn( 0, 255 ),
	913, 	Uvn( 0, 255 ),
	903, 	Uvn( 0, 255 ),
	StripR(8),  
	3610, 	Uvn( 0, 255 ),
	3317, 	Uvn( 0, 255 ),
	3611, 	Uvn( 0, 255 ),
	3608, 	Uvn( 0, 255 ),
	3607, 	Uvn( 0, 255 ),
	3311, 	Uvn( 0, 255 ),
	3308, 	Uvn( 0, 255 ),
	3299, 	Uvn( 0, 255 ),
	StripL(3),  
	1890, 	Uvn( 0, 255 ),
	1891, 	Uvn( 0, 255 ),
	3346, 	Uvn( 0, 255 ),
	StripL(16),  
	809, 	Uvn( 0, 255 ),
	3283, 	Uvn( 0, 255 ),
	3337, 	Uvn( 0, 255 ),
	3329, 	Uvn( 0, 255 ),
	3328, 	Uvn( 0, 255 ),
	3280, 	Uvn( 0, 255 ),
	3323, 	Uvn( 0, 255 ),
	3315, 	Uvn( 0, 255 ),
	3313, 	Uvn( 0, 255 ),
	3306, 	Uvn( 0, 255 ),
	3305, 	Uvn( 0, 255 ),
	3298, 	Uvn( 0, 255 ),
	3293, 	Uvn( 0, 255 ),
	3290, 	Uvn( 0, 255 ),
	3288, 	Uvn( 0, 255 ),
	3206, 	Uvn( 0, 255 ),
	StripR(12),  
	811, 	Uvn( 0, 255 ),
	803, 	Uvn( 0, 255 ),
	813, 	Uvn( 0, 255 ),
	807, 	Uvn( 0, 255 ),
	812, 	Uvn( 0, 255 ),
	802, 	Uvn( 0, 255 ),
	810, 	Uvn( 0, 255 ),
	3332, 	Uvn( 0, 255 ),
	3336, 	Uvn( 0, 255 ),
	3330, 	Uvn( 0, 255 ),
	3340, 	Uvn( 0, 255 ),
	3338, 	Uvn( 0, 255 ),
	StripL(3),  
	4165, 	Uvn( 0, 255 ),
	804, 	Uvn( 0, 255 ),
	4168, 	Uvn( 0, 255 ),
	StripL(12),  
	4187, 	Uvn( 0, 255 ),
	4192, 	Uvn( 0, 255 ),
	4185, 	Uvn( 0, 255 ),
	1906, 	Uvn( 0, 255 ),
	814, 	Uvn( 0, 255 ),
	1907, 	Uvn( 0, 255 ),
	3340, 	Uvn( 0, 255 ),
	1886, 	Uvn( 0, 255 ),
	3338, 	Uvn( 0, 255 ),
	1887, 	Uvn( 0, 255 ),
	3616, 	Uvn( 0, 255 ),
	1898, 	Uvn( 0, 255 ),
	StripR(7),  
	3283, 	Uvn( 0, 255 ),
	3329, 	Uvn( 0, 255 ),
	3281, 	Uvn( 0, 255 ),
	3280, 	Uvn( 0, 255 ),
	3273, 	Uvn( 0, 255 ),
	3315, 	Uvn( 0, 255 ),
	3306, 	Uvn( 0, 255 ),
	StripL(14),  
	3349, 	Uvn( 0, 255 ),
	3344, 	Uvn( 0, 255 ),
	3343, 	Uvn( 0, 255 ),
	3337, 	Uvn( 0, 255 ),
	3335, 	Uvn( 0, 255 ),
	3328, 	Uvn( 0, 255 ),
	3327, 	Uvn( 0, 255 ),
	3323, 	Uvn( 0, 255 ),
	3321, 	Uvn( 0, 255 ),
	3313, 	Uvn( 0, 255 ),
	3312, 	Uvn( 0, 255 ),
	3305, 	Uvn( 0, 255 ),
	3304, 	Uvn( 0, 255 ),
	3293, 	Uvn( 0, 255 ),
	StripR(15),  
	3615, 	Uvn( 0, 255 ),
	3346, 	Uvn( 0, 255 ),
	928, 	Uvn( 0, 255 ),
	1890, 	Uvn( 0, 255 ),
	3617, 	Uvn( 0, 255 ),
	1891, 	Uvn( 0, 255 ),
	1893, 	Uvn( 0, 255 ),
	1892, 	Uvn( 0, 255 ),
	1894, 	Uvn( 0, 255 ),
	1895, 	Uvn( 0, 255 ),
	1899, 	Uvn( 0, 255 ),
	1902, 	Uvn( 0, 255 ),
	1900, 	Uvn( 0, 255 ),
	3360, 	Uvn( 0, 255 ),
	3361, 	Uvn( 0, 255 ),
	StripR(5),  
	4164, 	Uvn( 0, 255 ),
	4165, 	Uvn( 0, 255 ),
	805, 	Uvn( 0, 255 ),
	804, 	Uvn( 0, 255 ),
	3284, 	Uvn( 0, 255 ),
	StripL(4),  
	4185, 	Uvn( 0, 255 ),
	4178, 	Uvn( 0, 255 ),
	4187, 	Uvn( 0, 255 ),
	4182, 	Uvn( 0, 255 ),
	StripL(5),  
	3302, 	Uvn( 0, 255 ),
	3301, 	Uvn( 0, 255 ),
	3310, 	Uvn( 0, 255 ),
	3309, 	Uvn( 0, 255 ),
	3318, 	Uvn( 0, 255 ),
	StripL(7),  
	4170, 	Uvn( 0, 255 ),
	808, 	Uvn( 0, 255 ),
	809, 	Uvn( 0, 255 ),
	3285, 	Uvn( 0, 255 ),
	3283, 	Uvn( 0, 255 ),
	3282, 	Uvn( 0, 255 ),
	3281, 	Uvn( 0, 255 ),
	StripR(10),  
	4166, 	Uvn( 0, 255 ),
	811, 	Uvn( 0, 255 ),
	4169, 	Uvn( 0, 255 ),
	813, 	Uvn( 0, 255 ),
	4182, 	Uvn( 0, 255 ),
	812, 	Uvn( 0, 255 ),
	4178, 	Uvn( 0, 255 ),
	810, 	Uvn( 0, 255 ),
	4185, 	Uvn( 0, 255 ),
	814, 	Uvn( 0, 255 ),
	StripL(5),  
	3269, 	Uvn( 0, 255 ),
	3271, 	Uvn( 0, 255 ),
	3261, 	Uvn( 0, 255 ),
	3263, 	Uvn( 0, 255 ),
	3251, 	Uvn( 0, 255 ),
	StripL(7),  
	3267, 	Uvn( 0, 255 ),
	3269, 	Uvn( 0, 255 ),
	3259, 	Uvn( 0, 255 ),
	3261, 	Uvn( 0, 255 ),
	3250, 	Uvn( 0, 255 ),
	3251, 	Uvn( 0, 255 ),
	3238, 	Uvn( 0, 255 ),
	StripL(3),  
	3154, 	Uvn( 0, 255 ),
	3164, 	Uvn( 0, 255 ),
	3150, 	Uvn( 0, 255 ),
	StripR(13),  
	3173, 	Uvn( 0, 255 ),
	3178, 	Uvn( 0, 255 ),
	464, 	Uvn( 0, 255 ),
	465, 	Uvn( 0, 255 ),
	447, 	Uvn( 0, 255 ),
	448, 	Uvn( 0, 255 ),
	440, 	Uvn( 0, 255 ),
	438, 	Uvn( 0, 255 ),
	3148, 	Uvn( 0, 255 ),
	3135, 	Uvn( 0, 255 ),
	3131, 	Uvn( 0, 255 ),
	3122, 	Uvn( 0, 255 ),
	3106, 	Uvn( 0, 255 ),
	StripL(3),  
	3271, 	Uvn( 0, 255 ),
	3272, 	Uvn( 0, 255 ),
	3263, 	Uvn( 0, 255 ),
	StripL(25),  
	3143, 	Uvn( 0, 255 ),
	3136, 	Uvn( 0, 255 ),
	3160, 	Uvn( 0, 255 ),
	3161, 	Uvn( 0, 255 ),
	456, 	Uvn( 0, 255 ),
	454, 	Uvn( 0, 255 ),
	473, 	Uvn( 0, 255 ),
	471, 	Uvn( 0, 255 ),
	3185, 	Uvn( 0, 255 ),
	3183, 	Uvn( 0, 255 ),
	3205, 	Uvn( 0, 255 ),
	3201, 	Uvn( 0, 255 ),
	3226, 	Uvn( 0, 255 ),
	3223, 	Uvn( 0, 255 ),
	3236, 	Uvn( 0, 255 ),
	3240, 	Uvn( 0, 255 ),
	3244, 	Uvn( 0, 255 ),
	3248, 	Uvn( 0, 255 ),
	3252, 	Uvn( 0, 255 ),
	3256, 	Uvn( 0, 255 ),
	3260, 	Uvn( 0, 255 ),
	3264, 	Uvn( 0, 255 ),
	3268, 	Uvn( 0, 255 ),
	3270, 	Uvn( 0, 255 ),
	3278, 	Uvn( 0, 255 ),
	StripL(17),  
	3138, 	Uvn( 0, 255 ),
	3147, 	Uvn( 0, 255 ),
	3163, 	Uvn( 0, 255 ),
	3166, 	Uvn( 0, 255 ),
	452, 	Uvn( 0, 255 ),
	450, 	Uvn( 0, 255 ),
	468, 	Uvn( 0, 255 ),
	466, 	Uvn( 0, 255 ),
	3176, 	Uvn( 0, 255 ),
	3174, 	Uvn( 0, 255 ),
	3196, 	Uvn( 0, 255 ),
	3193, 	Uvn( 0, 255 ),
	3216, 	Uvn( 0, 255 ),
	3214, 	Uvn( 0, 255 ),
	3230, 	Uvn( 0, 255 ),
	3227, 	Uvn( 0, 255 ),
	3241, 	Uvn( 0, 255 ),
	StripR(23),  
	3188, 	Uvn( 0, 255 ),
	3208, 	Uvn( 0, 255 ),
	3203, 	Uvn( 0, 255 ),
	3217, 	Uvn( 0, 255 ),
	3215, 	Uvn( 0, 255 ),
	3231, 	Uvn( 0, 255 ),
	3225, 	Uvn( 0, 255 ),
	3239, 	Uvn( 0, 255 ),
	3242, 	Uvn( 0, 255 ),
	3255, 	Uvn( 0, 255 ),
	3306, 	Uvn( 0, 255 ),
	3265, 	Uvn( 0, 255 ),
	3273, 	Uvn( 0, 255 ),
	3274, 	Uvn( 0, 255 ),
	3281, 	Uvn( 0, 255 ),
	3276, 	Uvn( 0, 255 ),
	3282, 	Uvn( 0, 255 ),
	3277, 	Uvn( 0, 255 ),
	3284, 	Uvn( 0, 255 ),
	801, 	Uvn( 0, 255 ),
	805, 	Uvn( 0, 255 ),
	806, 	Uvn( 0, 255 ),
	4164, 	Uvn( 0, 255 ),
	StripL(4),  
	3190, 	Uvn( 0, 255 ),
	3184, 	Uvn( 0, 255 ),
	3187, 	Uvn( 0, 255 ),
	3173, 	Uvn( 0, 255 ),
	StripL(4),  
	459, 	Uvn( 0, 255 ),
	475, 	Uvn( 0, 255 ),
	476, 	Uvn( 0, 255 ),
	3192, 	Uvn( 0, 255 ),
	StripL(3),  
	3300, 	Uvn( 0, 255 ),
	3309, 	Uvn( 0, 255 ),
	3301, 	Uvn( 0, 255 ),
	StripR(8),  
	3240, 	Uvn( 0, 255 ),
	3248, 	Uvn( 0, 255 ),
	3249, 	Uvn( 0, 255 ),
	3256, 	Uvn( 0, 255 ),
	3257, 	Uvn( 0, 255 ),
	3264, 	Uvn( 0, 255 ),
	3266, 	Uvn( 0, 255 ),
	3270, 	Uvn( 0, 255 ),
	StripL(30),  
	801, 	Uvn( 0, 255 ),
	3278, 	Uvn( 0, 255 ),
	3279, 	Uvn( 0, 255 ),
	3270, 	Uvn( 0, 255 ),
	3272, 	Uvn( 0, 255 ),
	3266, 	Uvn( 0, 255 ),
	3263, 	Uvn( 0, 255 ),
	3253, 	Uvn( 0, 255 ),
	3251, 	Uvn( 0, 255 ),
	3241, 	Uvn( 0, 255 ),
	3238, 	Uvn( 0, 255 ),
	3227, 	Uvn( 0, 255 ),
	3224, 	Uvn( 0, 255 ),
	3211, 	Uvn( 0, 255 ),
	3208, 	Uvn( 0, 255 ),
	3189, 	Uvn( 0, 255 ),
	3188, 	Uvn( 0, 255 ),
	3182, 	Uvn( 0, 255 ),
	3184, 	Uvn( 0, 255 ),
	3172, 	Uvn( 0, 255 ),
	3173, 	Uvn( 0, 255 ),
	462, 	Uvn( 0, 255 ),
	464, 	Uvn( 0, 255 ),
	449, 	Uvn( 0, 255 ),
	447, 	Uvn( 0, 255 ),
	441, 	Uvn( 0, 255 ),
	440, 	Uvn( 0, 255 ),
	3152, 	Uvn( 0, 255 ),
	3148, 	Uvn( 0, 255 ),
	3131, 	Uvn( 0, 255 ),
	StripL(8),  
	3267, 	Uvn( 0, 255 ),
	3274, 	Uvn( 0, 255 ),
	3269, 	Uvn( 0, 255 ),
	3276, 	Uvn( 0, 255 ),
	3271, 	Uvn( 0, 255 ),
	3277, 	Uvn( 0, 255 ),
	3272, 	Uvn( 0, 255 ),
	3279, 	Uvn( 0, 255 ),
	StripL(8),  
	3297, 	Uvn( 0, 255 ),
	3299, 	Uvn( 0, 255 ),
	3307, 	Uvn( 0, 255 ),
	3308, 	Uvn( 0, 255 ),
	3316, 	Uvn( 0, 255 ),
	3607, 	Uvn( 0, 255 ),
	3609, 	Uvn( 0, 255 ),
	3611, 	Uvn( 0, 255 ),
	StripR(7),  
	3221, 	Uvn( 0, 255 ),
	3210, 	Uvn( 0, 255 ),
	3212, 	Uvn( 0, 255 ),
	3192, 	Uvn( 0, 255 ),
	3194, 	Uvn( 0, 255 ),
	476, 	Uvn( 0, 255 ),
	3204, 	Uvn( 0, 255 ),
	StripR(15),  
	3229, 	Uvn( 0, 255 ),
	3220, 	Uvn( 0, 255 ),
	3221, 	Uvn( 0, 255 ),
	3209, 	Uvn( 0, 255 ),
	3210, 	Uvn( 0, 255 ),
	3186, 	Uvn( 0, 255 ),
	3192, 	Uvn( 0, 255 ),
	474, 	Uvn( 0, 255 ),
	475, 	Uvn( 0, 255 ),
	457, 	Uvn( 0, 255 ),
	459, 	Uvn( 0, 255 ),
	3165, 	Uvn( 0, 255 ),
	439, 	Uvn( 0, 255 ),
	3153, 	Uvn( 0, 255 ),
	444, 	Uvn( 0, 255 ),
	StripL(6),  
	3024, 	Uvn( 0, 255 ),
	3020, 	Uvn( 0, 255 ),
	3027, 	Uvn( 0, 255 ),
	3023, 	Uvn( 0, 255 ),
	3029, 	Uvn( 0, 255 ),
	3028, 	Uvn( 0, 255 ),
	StripL(9),  
	2983, 	Uvn( 0, 255 ),
	2992, 	Uvn( 0, 255 ),
	2985, 	Uvn( 0, 255 ),
	288, 	Uvn( 0, 255 ),
	281, 	Uvn( 0, 255 ),
	290, 	Uvn( 0, 255 ),
	268, 	Uvn( 0, 255 ),
	280, 	Uvn( 0, 255 ),
	263, 	Uvn( 0, 255 ),
	StripR(20),  
	2975, 	Uvn( 0, 255 ),
	2976, 	Uvn( 0, 255 ),
	2972, 	Uvn( 0, 255 ),
	2974, 	Uvn( 0, 255 ),
	2968, 	Uvn( 0, 255 ),
	2969, 	Uvn( 0, 255 ),
	250, 	Uvn( 0, 255 ),
	257, 	Uvn( 0, 255 ),
	235, 	Uvn( 0, 255 ),
	242, 	Uvn( 0, 255 ),
	203, 	Uvn( 0, 255 ),
	209, 	Uvn( 0, 255 ),
	188, 	Uvn( 0, 255 ),
	193, 	Uvn( 0, 255 ),
	2856, 	Uvn( 0, 255 ),
	187, 	Uvn( 0, 255 ),
	2843, 	Uvn( 0, 255 ),
	2849, 	Uvn( 0, 255 ),
	2840, 	Uvn( 0, 255 ),
	2845, 	Uvn( 0, 255 ),
	StripR(7),  
	2976, 	Uvn( 0, 255 ),
	2981, 	Uvn( 0, 255 ),
	2974, 	Uvn( 0, 255 ),
	2977, 	Uvn( 0, 255 ),
	2969, 	Uvn( 0, 255 ),
	2971, 	Uvn( 0, 255 ),
	257, 	Uvn( 0, 255 ),
	StripR(5),  
	3019, 	Uvn( 0, 255 ),
	3012, 	Uvn( 0, 255 ),
	3016, 	Uvn( 0, 255 ),
	3004, 	Uvn( 0, 255 ),
	3008, 	Uvn( 0, 255 ),
	StripL(6),  
	3144, 	Uvn( 0, 255 ),
	3154, 	Uvn( 0, 255 ),
	3142, 	Uvn( 0, 255 ),
	3150, 	Uvn( 0, 255 ),
	3134, 	Uvn( 0, 255 ),
	3159, 	Uvn( 0, 255 ),
	StripL(3),  
	224, 	Uvn( 0, 255 ),
	234, 	Uvn( 0, 255 ),
	221, 	Uvn( 0, 255 ),
	StripR(57),  
	284, 	Uvn( 0, 255 ),
	278, 	Uvn( 0, 255 ),
	270, 	Uvn( 0, 255 ),
	225, 	Uvn( 0, 255 ),
	218, 	Uvn( 0, 255 ),
	216, 	Uvn( 0, 255 ),
	210, 	Uvn( 0, 255 ),
	2875, 	Uvn( 0, 255 ),
	205, 	Uvn( 0, 255 ),
	2867, 	Uvn( 0, 255 ),
	2864, 	Uvn( 0, 255 ),
	2857, 	Uvn( 0, 255 ),
	2853, 	Uvn( 0, 255 ),
	328, 	Uvn( 0, 255 ),
	2847, 	Uvn( 0, 255 ),
	2808, 	Uvn( 0, 255 ),
	2838, 	Uvn( 0, 255 ),
	2807, 	Uvn( 0, 255 ),
	2848, 	Uvn( 0, 255 ),
	2952, 	Uvn( 0, 255 ),
	2855, 	Uvn( 0, 255 ),
	2954, 	Uvn( 0, 255 ),
	2861, 	Uvn( 0, 255 ),
	331, 	Uvn( 0, 255 ),
	2860, 	Uvn( 0, 255 ),
	332, 	Uvn( 0, 255 ),
	2955, 	Uvn( 0, 255 ),
	329, 	Uvn( 0, 255 ),
	326, 	Uvn( 0, 255 ),
	324, 	Uvn( 0, 255 ),
	321, 	Uvn( 0, 255 ),
	2799, 	Uvn( 0, 255 ),
	2796, 	Uvn( 0, 255 ),
	2793, 	Uvn( 0, 255 ),
	2790, 	Uvn( 0, 255 ),
	2787, 	Uvn( 0, 255 ),
	2783, 	Uvn( 0, 255 ),
	99, 	Uvn( 0, 255 ),
	96, 	Uvn( 0, 255 ),
	94, 	Uvn( 0, 255 ),
	89, 	Uvn( 0, 255 ),
	75, 	Uvn( 0, 255 ),
	80, 	Uvn( 0, 255 ),
	78, 	Uvn( 0, 255 ),
	2738, 	Uvn( 0, 255 ),
	2737, 	Uvn( 0, 255 ),
	2773, 	Uvn( 0, 255 ),
	2772, 	Uvn( 0, 255 ),
	2775, 	Uvn( 0, 255 ),
	2784, 	Uvn( 0, 255 ),
	2789, 	Uvn( 0, 255 ),
	2795, 	Uvn( 0, 255 ),
	322, 	Uvn( 0, 255 ),
	325, 	Uvn( 0, 255 ),
	330, 	Uvn( 0, 255 ),
	329, 	Uvn( 0, 255 ),
	332, 	Uvn( 0, 255 ),
	StripR(16),  
	264, 	Uvn( 0, 255 ),
	266, 	Uvn( 0, 255 ),
	256, 	Uvn( 0, 255 ),
	267, 	Uvn( 0, 255 ),
	226, 	Uvn( 0, 255 ),
	241, 	Uvn( 0, 255 ),
	228, 	Uvn( 0, 255 ),
	249, 	Uvn( 0, 255 ),
	239, 	Uvn( 0, 255 ),
	268, 	Uvn( 0, 255 ),
	262, 	Uvn( 0, 255 ),
	281, 	Uvn( 0, 255 ),
	275, 	Uvn( 0, 255 ),
	2985, 	Uvn( 0, 255 ),
	2978, 	Uvn( 0, 255 ),
	2983, 	Uvn( 0, 255 ),
	StripR(5),  
	168, 	Uvn( 0, 255 ),
	2814, 	Uvn( 0, 255 ),
	2821, 	Uvn( 0, 255 ),
	2826, 	Uvn( 0, 255 ),
	2834, 	Uvn( 0, 255 ),
	StripL(8),  
	2746, 	Uvn( 0, 255 ),
	64, 	Uvn( 0, 255 ),
	2742, 	Uvn( 0, 255 ),
	62, 	Uvn( 0, 255 ),
	2740, 	Uvn( 0, 255 ),
	46, 	Uvn( 0, 255 ),
	52, 	Uvn( 0, 255 ),
	43, 	Uvn( 0, 255 ),
	StripL(3),  
	2841, 	Uvn( 0, 255 ),
	2846, 	Uvn( 0, 255 ),
	2832, 	Uvn( 0, 255 ),
	StripL(12),  
	200, 	Uvn( 0, 255 ),
	2863, 	Uvn( 0, 255 ),
	194, 	Uvn( 0, 255 ),
	2852, 	Uvn( 0, 255 ),
	2854, 	Uvn( 0, 255 ),
	2842, 	Uvn( 0, 255 ),
	2836, 	Uvn( 0, 255 ),
	2926, 	Uvn( 0, 255 ),
	2924, 	Uvn( 0, 255 ),
	313, 	Uvn( 0, 255 ),
	2768, 	Uvn( 0, 255 ),
	2766, 	Uvn( 0, 255 ),
	StripL(3),  
	34, 	Uvn( 0, 255 ),
	33, 	Uvn( 0, 255 ),
	2758, 	Uvn( 0, 255 ),
	StripR(5),  
	37, 	Uvn( 0, 255 ),
	2739, 	Uvn( 0, 255 ),
	32, 	Uvn( 0, 255 ),
	2735, 	Uvn( 0, 255 ),
	2732, 	Uvn( 0, 255 ),
	StripL(8),  
	2782, 	Uvn( 0, 255 ),
	2776, 	Uvn( 0, 255 ),
	38, 	Uvn( 0, 255 ),
	31, 	Uvn( 0, 255 ),
	25, 	Uvn( 0, 255 ),
	16, 	Uvn( 0, 255 ),
	13, 	Uvn( 0, 255 ),
	3, 	Uvn( 0, 255 ),
	StripR(9),  
	2777, 	Uvn( 0, 255 ),
	2781, 	Uvn( 0, 255 ),
	2791, 	Uvn( 0, 255 ),
	2801, 	Uvn( 0, 255 ),
	319, 	Uvn( 0, 255 ),
	2804, 	Uvn( 0, 255 ),
	323, 	Uvn( 0, 255 ),
	2808, 	Uvn( 0, 255 ),
	328, 	Uvn( 0, 255 ),
	StripL(11),  
	2737, 	Uvn( 0, 255 ),
	2772, 	Uvn( 0, 255 ),
	2736, 	Uvn( 0, 255 ),
	2779, 	Uvn( 0, 255 ),
	93, 	Uvn( 0, 255 ),
	2788, 	Uvn( 0, 255 ),
	98, 	Uvn( 0, 255 ),
	2794, 	Uvn( 0, 255 ),
	100, 	Uvn( 0, 255 ),
	2787, 	Uvn( 0, 255 ),
	99, 	Uvn( 0, 255 ),
	StripL(7),  
	2855, 	Uvn( 0, 255 ),
	2848, 	Uvn( 0, 255 ),
	2859, 	Uvn( 0, 255 ),
	2844, 	Uvn( 0, 255 ),
	2868, 	Uvn( 0, 255 ),
	186, 	Uvn( 0, 255 ),
	204, 	Uvn( 0, 255 ),
	StripL(5),  
	2797, 	Uvn( 0, 255 ),
	2792, 	Uvn( 0, 255 ),
	2798, 	Uvn( 0, 255 ),
	2795, 	Uvn( 0, 255 ),
	325, 	Uvn( 0, 255 ),
	StripL(3),  
	2933, 	Uvn( 0, 255 ),
	2938, 	Uvn( 0, 255 ),
	2941, 	Uvn( 0, 255 ),
	StripL(6),  
	137, 	Uvn( 0, 255 ),
	136, 	Uvn( 0, 255 ),
	147, 	Uvn( 0, 255 ),
	146, 	Uvn( 0, 255 ),
	156, 	Uvn( 0, 255 ),
	2930, 	Uvn( 0, 255 ),
	StripR(5),  
	128, 	Uvn( 0, 255 ),
	133, 	Uvn( 0, 255 ),
	142, 	Uvn( 0, 255 ),
	140, 	Uvn( 0, 255 ),
	143, 	Uvn( 0, 255 ),
	StripL(10),  
	2945, 	Uvn( 0, 255 ),
	166, 	Uvn( 0, 255 ),
	2947, 	Uvn( 0, 255 ),
	2943, 	Uvn( 0, 255 ),
	346, 	Uvn( 0, 255 ),
	342, 	Uvn( 0, 255 ),
	350, 	Uvn( 0, 255 ),
	347, 	Uvn( 0, 255 ),
	351, 	Uvn( 0, 255 ),
	349, 	Uvn( 0, 255 ),
	StripL(3),  
	2900, 	Uvn( 0, 255 ),
	2906, 	Uvn( 0, 255 ),
	245, 	Uvn( 0, 255 ),
	StripR(17),  
	365, 	Uvn( 0, 255 ),
	376, 	Uvn( 0, 255 ),
	375, 	Uvn( 0, 255 ),
	2963, 	Uvn( 0, 255 ),
	382, 	Uvn( 0, 255 ),
	385, 	Uvn( 0, 255 ),
	383, 	Uvn( 0, 255 ),
	381, 	Uvn( 0, 255 ),
	382, 	Uvn( 0, 255 ),
	377, 	Uvn( 0, 255 ),
	372, 	Uvn( 0, 255 ),
	370, 	Uvn( 0, 255 ),
	366, 	Uvn( 0, 255 ),
	364, 	Uvn( 0, 255 ),
	365, 	Uvn( 0, 255 ),
	358, 	Uvn( 0, 255 ),
	357, 	Uvn( 0, 255 ),
	StripR(6),  
	2909, 	Uvn( 0, 255 ),
	265, 	Uvn( 0, 255 ),
	253, 	Uvn( 0, 255 ),
	264, 	Uvn( 0, 255 ),
	254, 	Uvn( 0, 255 ),
	256, 	Uvn( 0, 255 ),
	StripR(9),  
	271, 	Uvn( 0, 255 ),
	2918, 	Uvn( 0, 255 ),
	274, 	Uvn( 0, 255 ),
	2919, 	Uvn( 0, 255 ),
	283, 	Uvn( 0, 255 ),
	2916, 	Uvn( 0, 255 ),
	2920, 	Uvn( 0, 255 ),
	2917, 	Uvn( 0, 255 ),
	273, 	Uvn( 0, 255 ),
	StripL(24),  
	391, 	Uvn( 0, 255 ),
	389, 	Uvn( 0, 255 ),
	394, 	Uvn( 0, 255 ),
	2904, 	Uvn( 0, 255 ),
	2909, 	Uvn( 0, 255 ),
	2898, 	Uvn( 0, 255 ),
	2903, 	Uvn( 0, 255 ),
	2897, 	Uvn( 0, 255 ),
	2900, 	Uvn( 0, 255 ),
	2902, 	Uvn( 0, 255 ),
	2906, 	Uvn( 0, 255 ),
	2914, 	Uvn( 0, 255 ),
	2910, 	Uvn( 0, 255 ),
	2916, 	Uvn( 0, 255 ),
	2911, 	Uvn( 0, 255 ),
	2917, 	Uvn( 0, 255 ),
	260, 	Uvn( 0, 255 ),
	273, 	Uvn( 0, 255 ),
	272, 	Uvn( 0, 255 ),
	291, 	Uvn( 0, 255 ),
	301, 	Uvn( 0, 255 ),
	293, 	Uvn( 0, 255 ),
	285, 	Uvn( 0, 255 ),
	276, 	Uvn( 0, 255 ),
	StripR(5),  
	373, 	Uvn( 0, 255 ),
	378, 	Uvn( 0, 255 ),
	368, 	Uvn( 0, 255 ),
	384, 	Uvn( 0, 255 ),
	371, 	Uvn( 0, 255 ),
	StripR(7),  
	366, 	Uvn( 0, 255 ),
	365, 	Uvn( 0, 255 ),
	367, 	Uvn( 0, 255 ),
	375, 	Uvn( 0, 255 ),
	366, 	Uvn( 0, 255 ),
	382, 	Uvn( 0, 255 ),
	372, 	Uvn( 0, 255 ),
	StripR(10),  
	2962, 	Uvn( 0, 255 ),
	2901, 	Uvn( 0, 255 ),
	2964, 	Uvn( 0, 255 ),
	390, 	Uvn( 0, 255 ),
	2965, 	Uvn( 0, 255 ),
	392, 	Uvn( 0, 255 ),
	386, 	Uvn( 0, 255 ),
	2966, 	Uvn( 0, 255 ),
	379, 	Uvn( 0, 255 ),
	388, 	Uvn( 0, 255 ),
	StripR(30),  
	128, 	Uvn( 0, 255 ),
	132, 	Uvn( 0, 255 ),
	133, 	Uvn( 0, 255 ),
	141, 	Uvn( 0, 255 ),
	140, 	Uvn( 0, 255 ),
	149, 	Uvn( 0, 255 ),
	143, 	Uvn( 0, 255 ),
	152, 	Uvn( 0, 255 ),
	142, 	Uvn( 0, 255 ),
	160, 	Uvn( 0, 255 ),
	154, 	Uvn( 0, 255 ),
	165, 	Uvn( 0, 255 ),
	162, 	Uvn( 0, 255 ),
	166, 	Uvn( 0, 255 ),
	2937, 	Uvn( 0, 255 ),
	2943, 	Uvn( 0, 255 ),
	2939, 	Uvn( 0, 255 ),
	342, 	Uvn( 0, 255 ),
	337, 	Uvn( 0, 255 ),
	347, 	Uvn( 0, 255 ),
	339, 	Uvn( 0, 255 ),
	349, 	Uvn( 0, 255 ),
	343, 	Uvn( 0, 255 ),
	2874, 	Uvn( 0, 255 ),
	2869, 	Uvn( 0, 255 ),
	2881, 	Uvn( 0, 255 ),
	2873, 	Uvn( 0, 255 ),
	222, 	Uvn( 0, 255 ),
	215, 	Uvn( 0, 255 ),
	223, 	Uvn( 0, 255 ),
	StripL(3),  
	126, 	Uvn( 0, 255 ),
	129, 	Uvn( 0, 255 ),
	127, 	Uvn( 0, 255 ),
	StripR(5),  
	2940, 	Uvn( 0, 255 ),
	2936, 	Uvn( 0, 255 ),
	2932, 	Uvn( 0, 255 ),
	158, 	Uvn( 0, 255 ),
	150, 	Uvn( 0, 255 ),
	StripL(8),  
	204, 	Uvn( 0, 255 ),
	212, 	Uvn( 0, 255 ),
	2868, 	Uvn( 0, 255 ),
	206, 	Uvn( 0, 255 ),
	2859, 	Uvn( 0, 255 ),
	2862, 	Uvn( 0, 255 ),
	2855, 	Uvn( 0, 255 ),
	2861, 	Uvn( 0, 255 ),
	StripL(3),  
	2792, 	Uvn( 0, 255 ),
	2784, 	Uvn( 0, 255 ),
	2795, 	Uvn( 0, 255 ),
	StripR(9),  
	84, 	Uvn( 0, 255 ),
	77, 	Uvn( 0, 255 ),
	82, 	Uvn( 0, 255 ),
	83, 	Uvn( 0, 255 ),
	88, 	Uvn( 0, 255 ),
	86, 	Uvn( 0, 255 ),
	91, 	Uvn( 0, 255 ),
	87, 	Uvn( 0, 255 ),
	90, 	Uvn( 0, 255 ),
	StripR(7),  
	2790, 	Uvn( 0, 255 ),
	2783, 	Uvn( 0, 255 ),
	2774, 	Uvn( 0, 255 ),
	96, 	Uvn( 0, 255 ),
	2738, 	Uvn( 0, 255 ),
	89, 	Uvn( 0, 255 ),
	80, 	Uvn( 0, 255 ),
	StripL(4),  
	187, 	Uvn( 0, 255 ),
	195, 	Uvn( 0, 255 ),
	193, 	Uvn( 0, 255 ),
	209, 	Uvn( 0, 255 ),
	StripR(11),  
	2750, 	Uvn( 0, 255 ),
	2753, 	Uvn( 0, 255 ),
	114, 	Uvn( 0, 255 ),
	118, 	Uvn( 0, 255 ),
	119, 	Uvn( 0, 255 ),
	124, 	Uvn( 0, 255 ),
	2922, 	Uvn( 0, 255 ),
	2817, 	Uvn( 0, 255 ),
	2819, 	Uvn( 0, 255 ),
	2824, 	Uvn( 0, 255 ),
	2823, 	Uvn( 0, 255 ),
	StripL(3),  
	41, 	Uvn( 0, 255 ),
	40, 	Uvn( 0, 255 ),
	48, 	Uvn( 0, 255 ),
	StripR(35),  
	111, 	Uvn( 0, 255 ),
	107, 	Uvn( 0, 255 ),
	115, 	Uvn( 0, 255 ),
	113, 	Uvn( 0, 255 ),
	2810, 	Uvn( 0, 255 ),
	2812, 	Uvn( 0, 255 ),
	2814, 	Uvn( 0, 255 ),
	2820, 	Uvn( 0, 255 ),
	2826, 	Uvn( 0, 255 ),
	2832, 	Uvn( 0, 255 ),
	2834, 	Uvn( 0, 255 ),
	2841, 	Uvn( 0, 255 ),
	2829, 	Uvn( 0, 255 ),
	2837, 	Uvn( 0, 255 ),
	2925, 	Uvn( 0, 255 ),
	2840, 	Uvn( 0, 255 ),
	2927, 	Uvn( 0, 255 ),
	2845, 	Uvn( 0, 255 ),
	2928, 	Uvn( 0, 255 ),
	2953, 	Uvn( 0, 255 ),
	317, 	Uvn( 0, 255 ),
	2809, 	Uvn( 0, 255 ),
	315, 	Uvn( 0, 255 ),
	2805, 	Uvn( 0, 255 ),
	2785, 	Uvn( 0, 255 ),
	2780, 	Uvn( 0, 255 ),
	2763, 	Uvn( 0, 255 ),
	2757, 	Uvn( 0, 255 ),
	35, 	Uvn( 0, 255 ),
	28, 	Uvn( 0, 255 ),
	21, 	Uvn( 0, 255 ),
	20, 	Uvn( 0, 255 ),
	12, 	Uvn( 0, 255 ),
	8, 	Uvn( 0, 255 ),
	1, 	Uvn( 0, 255 ),
	StripL(5),  
	208, 	Uvn( 0, 255 ),
	191, 	Uvn( 0, 255 ),
	201, 	Uvn( 0, 255 ),
	184, 	Uvn( 0, 255 ),
	197, 	Uvn( 0, 255 ),
	StripL(12),  
	217, 	Uvn( 0, 255 ),
	213, 	Uvn( 0, 255 ),
	219, 	Uvn( 0, 255 ),
	208, 	Uvn( 0, 255 ),
	228, 	Uvn( 0, 255 ),
	201, 	Uvn( 0, 255 ),
	239, 	Uvn( 0, 255 ),
	197, 	Uvn( 0, 255 ),
	236, 	Uvn( 0, 255 ),
	192, 	Uvn( 0, 255 ),
	231, 	Uvn( 0, 255 ),
	189, 	Uvn( 0, 255 ),
	StripR(24),  
	234, 	Uvn( 0, 255 ),
	232, 	Uvn( 0, 255 ),
	224, 	Uvn( 0, 255 ),
	2883, 	Uvn( 0, 255 ),
	221, 	Uvn( 0, 255 ),
	214, 	Uvn( 0, 255 ),
	2877, 	Uvn( 0, 255 ),
	2870, 	Uvn( 0, 255 ),
	2867, 	Uvn( 0, 255 ),
	2860, 	Uvn( 0, 255 ),
	2857, 	Uvn( 0, 255 ),
	2955, 	Uvn( 0, 255 ),
	328, 	Uvn( 0, 255 ),
	326, 	Uvn( 0, 255 ),
	323, 	Uvn( 0, 255 ),
	321, 	Uvn( 0, 255 ),
	319, 	Uvn( 0, 255 ),
	2796, 	Uvn( 0, 255 ),
	2791, 	Uvn( 0, 255 ),
	2786, 	Uvn( 0, 255 ),
	2777, 	Uvn( 0, 255 ),
	2774, 	Uvn( 0, 255 ),
	2773, 	Uvn( 0, 255 ),
	2738, 	Uvn( 0, 255 ),
	StripL(3),  
	239, 	Uvn( 0, 255 ),
	236, 	Uvn( 0, 255 ),
	262, 	Uvn( 0, 255 ),
	StripL(3),  
	893, 	Uvn( 0, 255 ),
	899, 	Uvn( 0, 255 ),
	898, 	Uvn( 0, 255 ),
	StripR(8),  
	4016, 	Uvn( 0, 255 ),
	927, 	Uvn( 0, 255 ),
	924, 	Uvn( 0, 255 ),
	3616, 	Uvn( 0, 255 ),
	914, 	Uvn( 0, 255 ),
	3338, 	Uvn( 0, 255 ),
	904, 	Uvn( 0, 255 ),
	3330, 	Uvn( 0, 255 ),
	StripR(5),  
	901, 	Uvn( 0, 255 ),
	903, 	Uvn( 0, 255 ),
	906, 	Uvn( 0, 255 ),
	918, 	Uvn( 0, 255 ),
	920, 	Uvn( 0, 255 ),
	StripL(8),  
	4012, 	Uvn( 0, 255 ),
	4013, 	Uvn( 0, 255 ),
	4011, 	Uvn( 0, 255 ),
	987, 	Uvn( 0, 255 ),
	980, 	Uvn( 0, 255 ),
	981, 	Uvn( 0, 255 ),
	983, 	Uvn( 0, 255 ),
	982, 	Uvn( 0, 255 ),
	StripL(15),  
	3557, 	Uvn( 0, 255 ),
	994, 	Uvn( 0, 255 ),
	3565, 	Uvn( 0, 255 ),
	4019, 	Uvn( 0, 255 ),
	3575, 	Uvn( 0, 255 ),
	4022, 	Uvn( 0, 255 ),
	4025, 	Uvn( 0, 255 ),
	4023, 	Uvn( 0, 255 ),
	4024, 	Uvn( 0, 255 ),
	935, 	Uvn( 0, 255 ),
	939, 	Uvn( 0, 255 ),
	3619, 	Uvn( 0, 255 ),
	942, 	Uvn( 0, 255 ),
	952, 	Uvn( 0, 255 ),
	949, 	Uvn( 0, 255 ),
	StripL(21),  
	563, 	Uvn( 0, 255 ),
	4061, 	Uvn( 0, 255 ),
	562, 	Uvn( 0, 255 ),
	4060, 	Uvn( 0, 255 ),
	4055, 	Uvn( 0, 255 ),
	759, 	Uvn( 0, 255 ),
	4053, 	Uvn( 0, 255 ),
	761, 	Uvn( 0, 255 ),
	748, 	Uvn( 0, 255 ),
	763, 	Uvn( 0, 255 ),
	750, 	Uvn( 0, 255 ),
	762, 	Uvn( 0, 255 ),
	751, 	Uvn( 0, 255 ),
	760, 	Uvn( 0, 255 ),
	752, 	Uvn( 0, 255 ),
	4140, 	Uvn( 0, 255 ),
	4126, 	Uvn( 0, 255 ),
	4138, 	Uvn( 0, 255 ),
	4128, 	Uvn( 0, 255 ),
	4137, 	Uvn( 0, 255 ),
	4125, 	Uvn( 0, 255 ),
	StripL(3),  
	4063, 	Uvn( 0, 255 ),
	4064, 	Uvn( 0, 255 ),
	784, 	Uvn( 0, 255 ),
	StripR(9),  
	774, 	Uvn( 0, 255 ),
	772, 	Uvn( 0, 255 ),
	786, 	Uvn( 0, 255 ),
	769, 	Uvn( 0, 255 ),
	777, 	Uvn( 0, 255 ),
	4160, 	Uvn( 0, 255 ),
	780, 	Uvn( 0, 255 ),
	4162, 	Uvn( 0, 255 ),
	4161, 	Uvn( 0, 255 ),
	StripL(3),  
	4155, 	Uvn( 0, 255 ),
	769, 	Uvn( 0, 255 ),
	4160, 	Uvn( 0, 255 ),
	StripL(14),  
	2978, 	Uvn( 0, 255 ),
	275, 	Uvn( 0, 255 ),
	2970, 	Uvn( 0, 255 ),
	258, 	Uvn( 0, 255 ),
	255, 	Uvn( 0, 255 ),
	231, 	Uvn( 0, 255 ),
	227, 	Uvn( 0, 255 ),
	189, 	Uvn( 0, 255 ),
	196, 	Uvn( 0, 255 ),
	182, 	Uvn( 0, 255 ),
	185, 	Uvn( 0, 255 ),
	181, 	Uvn( 0, 255 ),
	183, 	Uvn( 0, 255 ),
	2839, 	Uvn( 0, 255 ),
	StripL(5),  
	240, 	Uvn( 0, 255 ),
	232, 	Uvn( 0, 255 ),
	2886, 	Uvn( 0, 255 ),
	2883, 	Uvn( 0, 255 ),
	2882, 	Uvn( 0, 255 ),
	StripL(4),  
	2997, 	Uvn( 0, 255 ),
	3005, 	Uvn( 0, 255 ),
	2991, 	Uvn( 0, 255 ),
	2998, 	Uvn( 0, 255 ),
	StripR(5),  
	2882, 	Uvn( 0, 255 ),
	2886, 	Uvn( 0, 255 ),
	2888, 	Uvn( 0, 255 ),
	240, 	Uvn( 0, 255 ),
	243, 	Uvn( 0, 255 ),
	StripL(4),  
	218, 	Uvn( 0, 255 ),
	200, 	Uvn( 0, 255 ),
	207, 	Uvn( 0, 255 ),
	194, 	Uvn( 0, 255 ),
	StripL(5),  
	308, 	Uvn( 0, 255 ),
	302, 	Uvn( 0, 255 ),
	306, 	Uvn( 0, 255 ),
	286, 	Uvn( 0, 255 ),
	304, 	Uvn( 0, 255 ),
	StripR(5),  
	268, 	Uvn( 0, 255 ),
	249, 	Uvn( 0, 255 ),
	263, 	Uvn( 0, 255 ),
	241, 	Uvn( 0, 255 ),
	267, 	Uvn( 0, 255 ),
	StripR(6),  
	209, 	Uvn( 0, 255 ),
	199, 	Uvn( 0, 255 ),
	195, 	Uvn( 0, 255 ),
	2858, 	Uvn( 0, 255 ),
	187, 	Uvn( 0, 255 ),
	2849, 	Uvn( 0, 255 ),
	StripL(20),  
	199, 	Uvn( 0, 255 ),
	211, 	Uvn( 0, 255 ),
	209, 	Uvn( 0, 255 ),
	251, 	Uvn( 0, 255 ),
	242, 	Uvn( 0, 255 ),
	261, 	Uvn( 0, 255 ),
	257, 	Uvn( 0, 255 ),
	2973, 	Uvn( 0, 255 ),
	2971, 	Uvn( 0, 255 ),
	2982, 	Uvn( 0, 255 ),
	2977, 	Uvn( 0, 255 ),
	2987, 	Uvn( 0, 255 ),
	2981, 	Uvn( 0, 255 ),
	2986, 	Uvn( 0, 255 ),
	2976, 	Uvn( 0, 255 ),
	2979, 	Uvn( 0, 255 ),
	2975, 	Uvn( 0, 255 ),
	2980, 	Uvn( 0, 255 ),
	2989, 	Uvn( 0, 255 ),
	3001, 	Uvn( 0, 255 ),
	StripL(6),  
	248, 	Uvn( 0, 255 ),
	260, 	Uvn( 0, 255 ),
	286, 	Uvn( 0, 255 ),
	272, 	Uvn( 0, 255 ),
	304, 	Uvn( 0, 255 ),
	301, 	Uvn( 0, 255 ),
	StripR(12),  
	228, 	Uvn( 0, 255 ),
	219, 	Uvn( 0, 255 ),
	226, 	Uvn( 0, 255 ),
	217, 	Uvn( 0, 255 ),
	233, 	Uvn( 0, 255 ),
	237, 	Uvn( 0, 255 ),
	244, 	Uvn( 0, 255 ),
	238, 	Uvn( 0, 255 ),
	246, 	Uvn( 0, 255 ),
	252, 	Uvn( 0, 255 ),
	2911, 	Uvn( 0, 255 ),
	260, 	Uvn( 0, 255 ),
	StripR(63),  
	121, 	Uvn( 0, 255 ),
	106, 	Uvn( 0, 255 ),
	110, 	Uvn( 0, 255 ),
	103, 	Uvn( 0, 255 ),
	108, 	Uvn( 0, 255 ),
	102, 	Uvn( 0, 255 ),
	105, 	Uvn( 0, 255 ),
	63, 	Uvn( 0, 255 ),
	68, 	Uvn( 0, 255 ),
	53, 	Uvn( 0, 255 ),
	56, 	Uvn( 0, 255 ),
	45, 	Uvn( 0, 255 ),
	42, 	Uvn( 0, 255 ),
	40, 	Uvn( 0, 255 ),
	44, 	Uvn( 0, 255 ),
	43, 	Uvn( 0, 255 ),
	49, 	Uvn( 0, 255 ),
	52, 	Uvn( 0, 255 ),
	57, 	Uvn( 0, 255 ),
	59, 	Uvn( 0, 255 ),
	66, 	Uvn( 0, 255 ),
	65, 	Uvn( 0, 255 ),
	2741, 	Uvn( 0, 255 ),
	2740, 	Uvn( 0, 255 ),
	2745, 	Uvn( 0, 255 ),
	2742, 	Uvn( 0, 255 ),
	2748, 	Uvn( 0, 255 ),
	2746, 	Uvn( 0, 255 ),
	2751, 	Uvn( 0, 255 ),
	2749, 	Uvn( 0, 255 ),
	111, 	Uvn( 0, 255 ),
	104, 	Uvn( 0, 255 ),
	107, 	Uvn( 0, 255 ),
	106, 	Uvn( 0, 255 ),
	113, 	Uvn( 0, 255 ),
	121, 	Uvn( 0, 255 ),
	2812, 	Uvn( 0, 255 ),
	2816, 	Uvn( 0, 255 ),
	2820, 	Uvn( 0, 255 ),
	2823, 	Uvn( 0, 255 ),
	2832, 	Uvn( 0, 255 ),
	2833, 	Uvn( 0, 255 ),
	2846, 	Uvn( 0, 255 ),
	2839, 	Uvn( 0, 255 ),
	2851, 	Uvn( 0, 255 ),
	183, 	Uvn( 0, 255 ),
	190, 	Uvn( 0, 255 ),
	185, 	Uvn( 0, 255 ),
	202, 	Uvn( 0, 255 ),
	196, 	Uvn( 0, 255 ),
	235, 	Uvn( 0, 255 ),
	229, 	Uvn( 0, 255 ),
	250, 	Uvn( 0, 255 ),
	247, 	Uvn( 0, 255 ),
	2968, 	Uvn( 0, 255 ),
	2970, 	Uvn( 0, 255 ),
	2972, 	Uvn( 0, 255 ),
	2978, 	Uvn( 0, 255 ),
	2975, 	Uvn( 0, 255 ),
	2983, 	Uvn( 0, 255 ),
	2989, 	Uvn( 0, 255 ),
	2995, 	Uvn( 0, 255 ),
	3001, 	Uvn( 0, 255 ),
	StripR(10),  
	106, 	Uvn( 0, 255 ),
	104, 	Uvn( 0, 255 ),
	103, 	Uvn( 0, 255 ),
	2743, 	Uvn( 0, 255 ),
	102, 	Uvn( 0, 255 ),
	61, 	Uvn( 0, 255 ),
	63, 	Uvn( 0, 255 ),
	51, 	Uvn( 0, 255 ),
	53, 	Uvn( 0, 255 ),
	45, 	Uvn( 0, 255 ),
	StripR(11),  
	40, 	Uvn( 0, 255 ),
	45, 	Uvn( 0, 255 ),
	41, 	Uvn( 0, 255 ),
	51, 	Uvn( 0, 255 ),
	48, 	Uvn( 0, 255 ),
	61, 	Uvn( 0, 255 ),
	64, 	Uvn( 0, 255 ),
	2743, 	Uvn( 0, 255 ),
	2746, 	Uvn( 0, 255 ),
	104, 	Uvn( 0, 255 ),
	2749, 	Uvn( 0, 255 ),
	StripR(20),  
	42, 	Uvn( 0, 255 ),
	44, 	Uvn( 0, 255 ),
	47, 	Uvn( 0, 255 ),
	55, 	Uvn( 0, 255 ),
	54, 	Uvn( 0, 255 ),
	60, 	Uvn( 0, 255 ),
	58, 	Uvn( 0, 255 ),
	67, 	Uvn( 0, 255 ),
	56, 	Uvn( 0, 255 ),
	2744, 	Uvn( 0, 255 ),
	68, 	Uvn( 0, 255 ),
	109, 	Uvn( 0, 255 ),
	105, 	Uvn( 0, 255 ),
	112, 	Uvn( 0, 255 ),
	108, 	Uvn( 0, 255 ),
	117, 	Uvn( 0, 255 ),
	110, 	Uvn( 0, 255 ),
	123, 	Uvn( 0, 255 ),
	121, 	Uvn( 0, 255 ),
	2816, 	Uvn( 0, 255 ),
	StripR(9),  
	170, 	Uvn( 0, 255 ),
	2828, 	Uvn( 0, 255 ),
	172, 	Uvn( 0, 255 ),
	176, 	Uvn( 0, 255 ),
	174, 	Uvn( 0, 255 ),
	180, 	Uvn( 0, 255 ),
	179, 	Uvn( 0, 255 ),
	192, 	Uvn( 0, 255 ),
	189, 	Uvn( 0, 255 ),
	StripL(3),  
	2745, 	Uvn( 0, 255 ),
	2741, 	Uvn( 0, 255 ),
	66, 	Uvn( 0, 255 ),
	StripR(7),  
	114, 	Uvn( 0, 255 ),
	2752, 	Uvn( 0, 255 ),
	2750, 	Uvn( 0, 255 ),
	2747, 	Uvn( 0, 255 ),
	2745, 	Uvn( 0, 255 ),
	69, 	Uvn( 0, 255 ),
	66, 	Uvn( 0, 255 ),
	StripL(3),  
	2756, 	Uvn( 0, 255 ),
	2761, 	Uvn( 0, 255 ),
	2767, 	Uvn( 0, 255 ),
	StripL(3),  
	2844, 	Uvn( 0, 255 ),
	2854, 	Uvn( 0, 255 ),
	2836, 	Uvn( 0, 255 ),
	StripL(5),  
	15, 	Uvn( 0, 255 ),
	10, 	Uvn( 0, 255 ),
	6, 	Uvn( 0, 255 ),
	5, 	Uvn( 0, 255 ),
	0, 	Uvn( 0, 255 ),
	StripL(3),  
	29, 	Uvn( 0, 255 ),
	2732, 	Uvn( 0, 255 ),
	32, 	Uvn( 0, 255 ),
	StripL(4),  
	2796, 	Uvn( 0, 255 ),
	2786, 	Uvn( 0, 255 ),
	2790, 	Uvn( 0, 255 ),
	2774, 	Uvn( 0, 255 ),
	StripL(3),  
	76, 	Uvn( 0, 255 ),
	75, 	Uvn( 0, 255 ),
	78, 	Uvn( 0, 255 ),
	StripR(5),  
	94, 	Uvn( 0, 255 ),
	81, 	Uvn( 0, 255 ),
	75, 	Uvn( 0, 255 ),
	79, 	Uvn( 0, 255 ),
	76, 	Uvn( 0, 255 ),
	StripR(6),  
	84, 	Uvn( 0, 255 ),
	82, 	Uvn( 0, 255 ),
	85, 	Uvn( 0, 255 ),
	88, 	Uvn( 0, 255 ),
	92, 	Uvn( 0, 255 ),
	95, 	Uvn( 0, 255 ),
	StripR(8),  
	2787, 	Uvn( 0, 255 ),
	2793, 	Uvn( 0, 255 ),
	2797, 	Uvn( 0, 255 ),
	2799, 	Uvn( 0, 255 ),
	2798, 	Uvn( 0, 255 ),
	324, 	Uvn( 0, 255 ),
	325, 	Uvn( 0, 255 ),
	329, 	Uvn( 0, 255 ),
	StripL(25),  
	223, 	Uvn( 0, 255 ),
	230, 	Uvn( 0, 255 ),
	222, 	Uvn( 0, 255 ),
	243, 	Uvn( 0, 255 ),
	2893, 	Uvn( 0, 255 ),
	2888, 	Uvn( 0, 255 ),
	2885, 	Uvn( 0, 255 ),
	2882, 	Uvn( 0, 255 ),
	2878, 	Uvn( 0, 255 ),
	2876, 	Uvn( 0, 255 ),
	2957, 	Uvn( 0, 255 ),
	2956, 	Uvn( 0, 255 ),
	345, 	Uvn( 0, 255 ),
	341, 	Uvn( 0, 255 ),
	340, 	Uvn( 0, 255 ),
	336, 	Uvn( 0, 255 ),
	2944, 	Uvn( 0, 255 ),
	2941, 	Uvn( 0, 255 ),
	2940, 	Uvn( 0, 255 ),
	2938, 	Uvn( 0, 255 ),
	2932, 	Uvn( 0, 255 ),
	2933, 	Uvn( 0, 255 ),
	2930, 	Uvn( 0, 255 ),
	2931, 	Uvn( 0, 255 ),
	156, 	Uvn( 0, 255 ),
	StripL(6),  
	779, 	Uvn( 0, 255 ),
	790, 	Uvn( 0, 255 ),
	781, 	Uvn( 0, 255 ),
	4070, 	Uvn( 0, 255 ),
	4067, 	Uvn( 0, 255 ),
	4071, 	Uvn( 0, 255 ),
	StripL(28),  
	730, 	Uvn( 0, 255 ),
	738, 	Uvn( 0, 255 ),
	725, 	Uvn( 0, 255 ),
	736, 	Uvn( 0, 255 ),
	724, 	Uvn( 0, 255 ),
	737, 	Uvn( 0, 255 ),
	727, 	Uvn( 0, 255 ),
	739, 	Uvn( 0, 255 ),
	731, 	Uvn( 0, 255 ),
	4048, 	Uvn( 0, 255 ),
	4045, 	Uvn( 0, 255 ),
	4050, 	Uvn( 0, 255 ),
	4046, 	Uvn( 0, 255 ),
	4051, 	Uvn( 0, 255 ),
	531, 	Uvn( 0, 255 ),
	543, 	Uvn( 0, 255 ),
	528, 	Uvn( 0, 255 ),
	539, 	Uvn( 0, 255 ),
	524, 	Uvn( 0, 255 ),
	537, 	Uvn( 0, 255 ),
	522, 	Uvn( 0, 255 ),
	536, 	Uvn( 0, 255 ),
	516, 	Uvn( 0, 255 ),
	530, 	Uvn( 0, 255 ),
	500, 	Uvn( 0, 255 ),
	495, 	Uvn( 0, 255 ),
	488, 	Uvn( 0, 255 ),
	484, 	Uvn( 0, 255 ),
	StripL(5),  
	777, 	Uvn( 0, 255 ),
	786, 	Uvn( 0, 255 ),
	780, 	Uvn( 0, 255 ),
	792, 	Uvn( 0, 255 ),
	776, 	Uvn( 0, 255 ),
	StripL(3),  
	789, 	Uvn( 0, 255 ),
	791, 	Uvn( 0, 255 ),
	794, 	Uvn( 0, 255 ),
	StripL(3),  
	4066, 	Uvn( 0, 255 ),
	4069, 	Uvn( 0, 255 ),
	790, 	Uvn( 0, 255 ),
	StripL(5),  
	773, 	Uvn( 0, 255 ),
	4063, 	Uvn( 0, 255 ),
	787, 	Uvn( 0, 255 ),
	784, 	Uvn( 0, 255 ),
	793, 	Uvn( 0, 255 ),
	StripL(30),  
	738, 	Uvn( 0, 255 ),
	744, 	Uvn( 0, 255 ),
	736, 	Uvn( 0, 255 ),
	746, 	Uvn( 0, 255 ),
	737, 	Uvn( 0, 255 ),
	747, 	Uvn( 0, 255 ),
	739, 	Uvn( 0, 255 ),
	749, 	Uvn( 0, 255 ),
	4048, 	Uvn( 0, 255 ),
	4054, 	Uvn( 0, 255 ),
	4050, 	Uvn( 0, 255 ),
	4056, 	Uvn( 0, 255 ),
	4051, 	Uvn( 0, 255 ),
	4057, 	Uvn( 0, 255 ),
	543, 	Uvn( 0, 255 ),
	557, 	Uvn( 0, 255 ),
	539, 	Uvn( 0, 255 ),
	558, 	Uvn( 0, 255 ),
	537, 	Uvn( 0, 255 ),
	556, 	Uvn( 0, 255 ),
	536, 	Uvn( 0, 255 ),
	555, 	Uvn( 0, 255 ),
	530, 	Uvn( 0, 255 ),
	526, 	Uvn( 0, 255 ),
	495, 	Uvn( 0, 255 ),
	491, 	Uvn( 0, 255 ),
	484, 	Uvn( 0, 255 ),
	481, 	Uvn( 0, 255 ),
	479, 	Uvn( 0, 255 ),
	478, 	Uvn( 0, 255 ),
	StripL(20),  
	755, 	Uvn( 0, 255 ),
	771, 	Uvn( 0, 255 ),
	756, 	Uvn( 0, 255 ),
	767, 	Uvn( 0, 255 ),
	757, 	Uvn( 0, 255 ),
	768, 	Uvn( 0, 255 ),
	758, 	Uvn( 0, 255 ),
	4062, 	Uvn( 0, 255 ),
	4058, 	Uvn( 0, 255 ),
	4065, 	Uvn( 0, 255 ),
	4059, 	Uvn( 0, 255 ),
	586, 	Uvn( 0, 255 ),
	575, 	Uvn( 0, 255 ),
	589, 	Uvn( 0, 255 ),
	576, 	Uvn( 0, 255 ),
	588, 	Uvn( 0, 255 ),
	573, 	Uvn( 0, 255 ),
	590, 	Uvn( 0, 255 ),
	574, 	Uvn( 0, 255 ),
	572, 	Uvn( 0, 255 ),
	StripR(5),  
	1087, 	Uvn( 0, 255 ),
	1086, 	Uvn( 0, 255 ),
	1078, 	Uvn( 0, 255 ),
	1037, 	Uvn( 0, 255 ),
	1045, 	Uvn( 0, 255 ),
	StripL(3),  
	1054, 	Uvn( 0, 255 ),
	1094, 	Uvn( 0, 255 ),
	1077, 	Uvn( 0, 255 ),
	StripR(5),  
	1047, 	Uvn( 0, 255 ),
	1029, 	Uvn( 0, 255 ),
	1057, 	Uvn( 0, 255 ),
	1033, 	Uvn( 0, 255 ),
	1046, 	Uvn( 0, 255 ),
	StripR(6),  
	1044, 	Uvn( 0, 255 ),
	1048, 	Uvn( 0, 255 ),
	1032, 	Uvn( 0, 255 ),
	1043, 	Uvn( 0, 255 ),
	1028, 	Uvn( 0, 255 ),
	1036, 	Uvn( 0, 255 ),
	StripR(6),  
	1210, 	Uvn( 0, 255 ),
	1118, 	Uvn( 0, 255 ),
	1123, 	Uvn( 0, 255 ),
	1071, 	Uvn( 0, 255 ),
	1091, 	Uvn( 0, 255 ),
	1087, 	Uvn( 0, 255 ),
	StripL(3),  
	1292, 	Uvn( 0, 255 ),
	1300, 	Uvn( 0, 255 ),
	1277, 	Uvn( 0, 255 ),
	StripR(7),  
	1426, 	Uvn( 0, 255 ),
	1425, 	Uvn( 0, 255 ),
	1439, 	Uvn( 0, 255 ),
	1428, 	Uvn( 0, 255 ),
	1438, 	Uvn( 0, 255 ),
	1434, 	Uvn( 0, 255 ),
	1471, 	Uvn( 0, 255 ),
	StripR(7),  
	1401, 	Uvn( 0, 255 ),
	1374, 	Uvn( 0, 255 ),
	1404, 	Uvn( 0, 255 ),
	1373, 	Uvn( 0, 255 ),
	1402, 	Uvn( 0, 255 ),
	1379, 	Uvn( 0, 255 ),
	1405, 	Uvn( 0, 255 ),
	StripL(3),  
	1444, 	Uvn( 0, 255 ),
	1390, 	Uvn( 0, 255 ),
	1447, 	Uvn( 0, 255 ),
	StripL(16),  
	1333, 	Uvn( 0, 255 ),
	1298, 	Uvn( 0, 255 ),
	1316, 	Uvn( 0, 255 ),
	1297, 	Uvn( 0, 255 ),
	1337, 	Uvn( 0, 255 ),
	1299, 	Uvn( 0, 255 ),
	1311, 	Uvn( 0, 255 ),
	1285, 	Uvn( 0, 255 ),
	1280, 	Uvn( 0, 255 ),
	1257, 	Uvn( 0, 255 ),
	1250, 	Uvn( 0, 255 ),
	1241, 	Uvn( 0, 255 ),
	1216, 	Uvn( 0, 255 ),
	1222, 	Uvn( 0, 255 ),
	1187, 	Uvn( 0, 255 ),
	1175, 	Uvn( 0, 255 ),
	StripR(12),  
	4172, 	Uvn( 0, 255 ),
	4173, 	Uvn( 0, 255 ),
	4228, 	Uvn( 0, 255 ),
	4179, 	Uvn( 0, 255 ),
	1249, 	Uvn( 0, 255 ),
	4184, 	Uvn( 0, 255 ),
	1263, 	Uvn( 0, 255 ),
	1310, 	Uvn( 0, 255 ),
	1321, 	Uvn( 0, 255 ),
	1375, 	Uvn( 0, 255 ),
	1461, 	Uvn( 0, 255 ),
	1462, 	Uvn( 0, 255 ),
	StripL(3),  
	4190, 	Uvn( 0, 255 ),
	4189, 	Uvn( 0, 255 ),
	4188, 	Uvn( 0, 255 ),
	StripL(3),  
	1253, 	Uvn( 0, 255 ),
	1321, 	Uvn( 0, 255 ),
	1263, 	Uvn( 0, 255 ),
	StripR(9),  
	1909, 	Uvn( 0, 255 ),
	4193, 	Uvn( 0, 255 ),
	4195, 	Uvn( 0, 255 ),
	4194, 	Uvn( 0, 255 ),
	4197, 	Uvn( 0, 255 ),
	1503, 	Uvn( 0, 255 ),
	1543, 	Uvn( 0, 255 ),
	1553, 	Uvn( 0, 255 ),
	1599, 	Uvn( 0, 255 ),
	StripL(12),  
	4190, 	Uvn( 0, 255 ),
	1908, 	Uvn( 0, 255 ),
	4189, 	Uvn( 0, 255 ),
	4191, 	Uvn( 0, 255 ),
	1302, 	Uvn( 0, 255 ),
	1357, 	Uvn( 0, 255 ),
	1301, 	Uvn( 0, 255 ),
	1347, 	Uvn( 0, 255 ),
	1303, 	Uvn( 0, 255 ),
	1341, 	Uvn( 0, 255 ),
	1304, 	Uvn( 0, 255 ),
	1338, 	Uvn( 0, 255 ),
	StripL(3),  
	1081, 	Uvn( 0, 255 ),
	1080, 	Uvn( 0, 255 ),
	1061, 	Uvn( 0, 255 ),
	StripL(5),  
	1051, 	Uvn( 0, 255 ),
	1027, 	Uvn( 0, 255 ),
	1064, 	Uvn( 0, 255 ),
	1040, 	Uvn( 0, 255 ),
	1075, 	Uvn( 0, 255 ),
	StripR(8),  
	1022, 	Uvn( 0, 255 ),
	1021, 	Uvn( 0, 255 ),
	1016, 	Uvn( 0, 255 ),
	1017, 	Uvn( 0, 255 ),
	1023, 	Uvn( 0, 255 ),
	1029, 	Uvn( 0, 255 ),
	1038, 	Uvn( 0, 255 ),
	1047, 	Uvn( 0, 255 ),
	StripL(4),  
	1067, 	Uvn( 0, 255 ),
	1058, 	Uvn( 0, 255 ),
	1072, 	Uvn( 0, 255 ),
	1074, 	Uvn( 0, 255 ),
	StripR(15),  
	1059, 	Uvn( 0, 255 ),
	1055, 	Uvn( 0, 255 ),
	1046, 	Uvn( 0, 255 ),
	1070, 	Uvn( 0, 255 ),
	1057, 	Uvn( 0, 255 ),
	1048, 	Uvn( 0, 255 ),
	1047, 	Uvn( 0, 255 ),
	1044, 	Uvn( 0, 255 ),
	1038, 	Uvn( 0, 255 ),
	1032, 	Uvn( 0, 255 ),
	1034, 	Uvn( 0, 255 ),
	1030, 	Uvn( 0, 255 ),
	1019, 	Uvn( 0, 255 ),
	1020, 	Uvn( 0, 255 ),
	1018, 	Uvn( 0, 255 ),
	StripL(18),  
	1195, 	Uvn( 0, 255 ),
	1201, 	Uvn( 0, 255 ),
	1186, 	Uvn( 0, 255 ),
	1203, 	Uvn( 0, 255 ),
	1191, 	Uvn( 0, 255 ),
	1197, 	Uvn( 0, 255 ),
	1172, 	Uvn( 0, 255 ),
	1173, 	Uvn( 0, 255 ),
	1163, 	Uvn( 0, 255 ),
	1153, 	Uvn( 0, 255 ),
	1140, 	Uvn( 0, 255 ),
	1160, 	Uvn( 0, 255 ),
	1137, 	Uvn( 0, 255 ),
	1164, 	Uvn( 0, 255 ),
	1155, 	Uvn( 0, 255 ),
	1182, 	Uvn( 0, 255 ),
	1166, 	Uvn( 0, 255 ),
	1179, 	Uvn( 0, 255 ),
	StripR(9),  
	1298, 	Uvn( 0, 255 ),
	1297, 	Uvn( 0, 255 ),
	1284, 	Uvn( 0, 255 ),
	1282, 	Uvn( 0, 255 ),
	1265, 	Uvn( 0, 255 ),
	1258, 	Uvn( 0, 255 ),
	1248, 	Uvn( 0, 255 ),
	1257, 	Uvn( 0, 255 ),
	1241, 	Uvn( 0, 255 ),
	StripR(27),  
	1190, 	Uvn( 0, 255 ),
	1230, 	Uvn( 0, 255 ),
	1126, 	Uvn( 0, 255 ),
	1228, 	Uvn( 0, 255 ),
	1143, 	Uvn( 0, 255 ),
	1239, 	Uvn( 0, 255 ),
	1135, 	Uvn( 0, 255 ),
	1238, 	Uvn( 0, 255 ),
	1128, 	Uvn( 0, 255 ),
	1233, 	Uvn( 0, 255 ),
	1129, 	Uvn( 0, 255 ),
	1232, 	Uvn( 0, 255 ),
	1123, 	Uvn( 0, 255 ),
	1217, 	Uvn( 0, 255 ),
	1210, 	Uvn( 0, 255 ),
	1324, 	Uvn( 0, 255 ),
	1325, 	Uvn( 0, 255 ),
	1460, 	Uvn( 0, 255 ),
	1459, 	Uvn( 0, 255 ),
	1575, 	Uvn( 0, 255 ),
	1574, 	Uvn( 0, 255 ),
	1693, 	Uvn( 0, 255 ),
	1636, 	Uvn( 0, 255 ),
	1691, 	Uvn( 0, 255 ),
	1708, 	Uvn( 0, 255 ),
	1805, 	Uvn( 0, 255 ),
	1793, 	Uvn( 0, 255 ),
	StripR(15),  
	1192, 	Uvn( 0, 255 ),
	1264, 	Uvn( 0, 255 ),
	1254, 	Uvn( 0, 255 ),
	1328, 	Uvn( 0, 255 ),
	1315, 	Uvn( 0, 255 ),
	1457, 	Uvn( 0, 255 ),
	1456, 	Uvn( 0, 255 ),
	1585, 	Uvn( 0, 255 ),
	1564, 	Uvn( 0, 255 ),
	1645, 	Uvn( 0, 255 ),
	1634, 	Uvn( 0, 255 ),
	1688, 	Uvn( 0, 255 ),
	1664, 	Uvn( 0, 255 ),
	1712, 	Uvn( 0, 255 ),
	1704, 	Uvn( 0, 255 ),
	StripR(5),  
	1296, 	Uvn( 0, 255 ),
	1283, 	Uvn( 0, 255 ),
	1281, 	Uvn( 0, 255 ),
	1256, 	Uvn( 0, 255 ),
	1261, 	Uvn( 0, 255 ),
	StripR(8),  
	1340, 	Uvn( 0, 255 ),
	1306, 	Uvn( 0, 255 ),
	1272, 	Uvn( 0, 255 ),
	1270, 	Uvn( 0, 255 ),
	1219, 	Uvn( 0, 255 ),
	1213, 	Uvn( 0, 255 ),
	1179, 	Uvn( 0, 255 ),
	1182, 	Uvn( 0, 255 ),
	StripL(6),  
	1424, 	Uvn( 0, 255 ),
	1433, 	Uvn( 0, 255 ),
	1420, 	Uvn( 0, 255 ),
	1430, 	Uvn( 0, 255 ),
	1412, 	Uvn( 0, 255 ),
	1431, 	Uvn( 0, 255 ),
	StripL(6),  
	1333, 	Uvn( 0, 255 ),
	1316, 	Uvn( 0, 255 ),
	1370, 	Uvn( 0, 255 ),
	1337, 	Uvn( 0, 255 ),
	1358, 	Uvn( 0, 255 ),
	1311, 	Uvn( 0, 255 ),
	StripR(7),  
	1432, 	Uvn( 0, 255 ),
	1409, 	Uvn( 0, 255 ),
	1401, 	Uvn( 0, 255 ),
	1389, 	Uvn( 0, 255 ),
	1374, 	Uvn( 0, 255 ),
	1362, 	Uvn( 0, 255 ),
	1373, 	Uvn( 0, 255 ),
	StripL(13),  
	1184, 	Uvn( 0, 255 ),
	1199, 	Uvn( 0, 255 ),
	1194, 	Uvn( 0, 255 ),
	1208, 	Uvn( 0, 255 ),
	1220, 	Uvn( 0, 255 ),
	1243, 	Uvn( 0, 255 ),
	1252, 	Uvn( 0, 255 ),
	1262, 	Uvn( 0, 255 ),
	1287, 	Uvn( 0, 255 ),
	1289, 	Uvn( 0, 255 ),
	1342, 	Uvn( 0, 255 ),
	1334, 	Uvn( 0, 255 ),
	1371, 	Uvn( 0, 255 ),
	StripL(3),  
	1144, 	Uvn( 0, 255 ),
	1159, 	Uvn( 0, 255 ),
	1169, 	Uvn( 0, 255 ),
	StripL(4),  
	1288, 	Uvn( 0, 255 ),
	1244, 	Uvn( 0, 255 ),
	1251, 	Uvn( 0, 255 ),
	1205, 	Uvn( 0, 255 ),
	StripL(8),  
	1443, 	Uvn( 0, 255 ),
	1442, 	Uvn( 0, 255 ),
	1392, 	Uvn( 0, 255 ),
	1388, 	Uvn( 0, 255 ),
	1330, 	Uvn( 0, 255 ),
	1327, 	Uvn( 0, 255 ),
	1286, 	Uvn( 0, 255 ),
	1274, 	Uvn( 0, 255 ),
	StripL(13),  
	1274, 	Uvn( 0, 255 ),
	1244, 	Uvn( 0, 255 ),
	1286, 	Uvn( 0, 255 ),
	1288, 	Uvn( 0, 255 ),
	1330, 	Uvn( 0, 255 ),
	1346, 	Uvn( 0, 255 ),
	1392, 	Uvn( 0, 255 ),
	1390, 	Uvn( 0, 255 ),
	1443, 	Uvn( 0, 255 ),
	1444, 	Uvn( 0, 255 ),
	1510, 	Uvn( 0, 255 ),
	1447, 	Uvn( 0, 255 ),
	1500, 	Uvn( 0, 255 ),
	StripL(4),  
	1241, 	Uvn( 0, 255 ),
	1248, 	Uvn( 0, 255 ),
	1222, 	Uvn( 0, 255 ),
	1245, 	Uvn( 0, 255 ),
	StripR(10),  
	1134, 	Uvn( 0, 255 ),
	1170, 	Uvn( 0, 255 ),
	1175, 	Uvn( 0, 255 ),
	1202, 	Uvn( 0, 255 ),
	1222, 	Uvn( 0, 255 ),
	1218, 	Uvn( 0, 255 ),
	1245, 	Uvn( 0, 255 ),
	1261, 	Uvn( 0, 255 ),
	1248, 	Uvn( 0, 255 ),
	1256, 	Uvn( 0, 255 ),
	StripL(22),  
	1367, 	Uvn( 0, 255 ),
	1340, 	Uvn( 0, 255 ),
	1354, 	Uvn( 0, 255 ),
	1306, 	Uvn( 0, 255 ),
	1300, 	Uvn( 0, 255 ),
	1270, 	Uvn( 0, 255 ),
	1277, 	Uvn( 0, 255 ),
	1213, 	Uvn( 0, 255 ),
	1223, 	Uvn( 0, 255 ),
	1182, 	Uvn( 0, 255 ),
	1193, 	Uvn( 0, 255 ),
	1164, 	Uvn( 0, 255 ),
	1178, 	Uvn( 0, 255 ),
	1160, 	Uvn( 0, 255 ),
	1168, 	Uvn( 0, 255 ),
	1153, 	Uvn( 0, 255 ),
	1165, 	Uvn( 0, 255 ),
	1173, 	Uvn( 0, 255 ),
	1200, 	Uvn( 0, 255 ),
	1197, 	Uvn( 0, 255 ),
	1221, 	Uvn( 0, 255 ),
	1203, 	Uvn( 0, 255 ),
	StripL(20),  
	1294, 	Uvn( 0, 255 ),
	1276, 	Uvn( 0, 255 ),
	1290, 	Uvn( 0, 255 ),
	1240, 	Uvn( 0, 255 ),
	1259, 	Uvn( 0, 255 ),
	1206, 	Uvn( 0, 255 ),
	1234, 	Uvn( 0, 255 ),
	1189, 	Uvn( 0, 255 ),
	1224, 	Uvn( 0, 255 ),
	1180, 	Uvn( 0, 255 ),
	1211, 	Uvn( 0, 255 ),
	1181, 	Uvn( 0, 255 ),
	1215, 	Uvn( 0, 255 ),
	1214, 	Uvn( 0, 255 ),
	4229, 	Uvn( 0, 255 ),
	1246, 	Uvn( 0, 255 ),
	4181, 	Uvn( 0, 255 ),
	4177, 	Uvn( 0, 255 ),
	4183, 	Uvn( 0, 255 ),
	4180, 	Uvn( 0, 255 ),
	StripL(7),  
	1361, 	Uvn( 0, 255 ),
	1363, 	Uvn( 0, 255 ),
	1384, 	Uvn( 0, 255 ),
	1393, 	Uvn( 0, 255 ),
	1415, 	Uvn( 0, 255 ),
	1421, 	Uvn( 0, 255 ),
	1453, 	Uvn( 0, 255 ),
	StripL(8),  
	1363, 	Uvn( 0, 255 ),
	1366, 	Uvn( 0, 255 ),
	1393, 	Uvn( 0, 255 ),
	1378, 	Uvn( 0, 255 ),
	1421, 	Uvn( 0, 255 ),
	1455, 	Uvn( 0, 255 ),
	1453, 	Uvn( 0, 255 ),
	1479, 	Uvn( 0, 255 ),
	StripL(3),  
	1256, 	Uvn( 0, 255 ),
	1273, 	Uvn( 0, 255 ),
	1283, 	Uvn( 0, 255 ),
	StripR(8),  
	1090, 	Uvn( 0, 255 ),
	1083, 	Uvn( 0, 255 ),
	1098, 	Uvn( 0, 255 ),
	1062, 	Uvn( 0, 255 ),
	1095, 	Uvn( 0, 255 ),
	1115, 	Uvn( 0, 255 ),
	1209, 	Uvn( 0, 255 ),
	1207, 	Uvn( 0, 255 ),
	StripL(9),  
	1135, 	Uvn( 0, 255 ),
	1143, 	Uvn( 0, 255 ),
	1119, 	Uvn( 0, 255 ),
	1126, 	Uvn( 0, 255 ),
	1141, 	Uvn( 0, 255 ),
	1190, 	Uvn( 0, 255 ),
	1151, 	Uvn( 0, 255 ),
	1183, 	Uvn( 0, 255 ),
	1171, 	Uvn( 0, 255 ),
	StripL(3),  
	1048, 	Uvn( 0, 255 ),
	1043, 	Uvn( 0, 255 ),
	1070, 	Uvn( 0, 255 ),
	StripL(3),  
	1039, 	Uvn( 0, 255 ),
	1031, 	Uvn( 0, 255 ),
	1049, 	Uvn( 0, 255 ),
	StripL(3),  
	1099, 	Uvn( 0, 255 ),
	1084, 	Uvn( 0, 255 ),
	1085, 	Uvn( 0, 255 ),
	StripL(6),  
	1125, 	Uvn( 0, 255 ),
	1093, 	Uvn( 0, 255 ),
	1108, 	Uvn( 0, 255 ),
	1096, 	Uvn( 0, 255 ),
	1073, 	Uvn( 0, 255 ),
	1069, 	Uvn( 0, 255 ),
	StripR(5),  
	1151, 	Uvn( 0, 255 ),
	1117, 	Uvn( 0, 255 ),
	1171, 	Uvn( 0, 255 ),
	1147, 	Uvn( 0, 255 ),
	1154, 	Uvn( 0, 255 ),
	StripR(9),  
	1141, 	Uvn( 0, 255 ),
	1110, 	Uvn( 0, 255 ),
	1151, 	Uvn( 0, 255 ),
	1094, 	Uvn( 0, 255 ),
	1117, 	Uvn( 0, 255 ),
	1077, 	Uvn( 0, 255 ),
	1147, 	Uvn( 0, 255 ),
	1100, 	Uvn( 0, 255 ),
	1154, 	Uvn( 0, 255 ),
	StripR(5),  
	1114, 	Uvn( 0, 255 ),
	1092, 	Uvn( 0, 255 ),
	1122, 	Uvn( 0, 255 ),
	1101, 	Uvn( 0, 255 ),
	1127, 	Uvn( 0, 255 ),
	StripL(3),  
	1097, 	Uvn( 0, 255 ),
	1076, 	Uvn( 0, 255 ),
	1084, 	Uvn( 0, 255 ),
	StripL(6),  
	1331, 	Uvn( 0, 255 ),
	1348, 	Uvn( 0, 255 ),
	1359, 	Uvn( 0, 255 ),
	1376, 	Uvn( 0, 255 ),
	1385, 	Uvn( 0, 255 ),
	1380, 	Uvn( 0, 255 ),
	StripL(15),  
	1208, 	Uvn( 0, 255 ),
	1247, 	Uvn( 0, 255 ),
	1243, 	Uvn( 0, 255 ),
	1268, 	Uvn( 0, 255 ),
	1262, 	Uvn( 0, 255 ),
	1291, 	Uvn( 0, 255 ),
	1289, 	Uvn( 0, 255 ),
	1331, 	Uvn( 0, 255 ),
	1334, 	Uvn( 0, 255 ),
	1359, 	Uvn( 0, 255 ),
	1371, 	Uvn( 0, 255 ),
	1385, 	Uvn( 0, 255 ),
	1400, 	Uvn( 0, 255 ),
	1380, 	Uvn( 0, 255 ),
	1408, 	Uvn( 0, 255 ),
	StripL(3),  
	1428, 	Uvn( 0, 255 ),
	1434, 	Uvn( 0, 255 ),
	1429, 	Uvn( 0, 255 ),
	StripL(4),  
	1123, 	Uvn( 0, 255 ),
	1129, 	Uvn( 0, 255 ),
	1091, 	Uvn( 0, 255 ),
	1128, 	Uvn( 0, 255 ),
	StripR(5),  
	1460, 	Uvn( 0, 255 ),
	1324, 	Uvn( 0, 255 ),
	1464, 	Uvn( 0, 255 ),
	1323, 	Uvn( 0, 255 ),
	1467, 	Uvn( 0, 255 ),
	StripL(16),  
	1166, 	Uvn( 0, 255 ),
	1156, 	Uvn( 0, 255 ),
	1155, 	Uvn( 0, 255 ),
	1138, 	Uvn( 0, 255 ),
	1137, 	Uvn( 0, 255 ),
	1132, 	Uvn( 0, 255 ),
	1140, 	Uvn( 0, 255 ),
	1149, 	Uvn( 0, 255 ),
	1163, 	Uvn( 0, 255 ),
	1162, 	Uvn( 0, 255 ),
	1172, 	Uvn( 0, 255 ),
	1127, 	Uvn( 0, 255 ),
	1145, 	Uvn( 0, 255 ),
	1122, 	Uvn( 0, 255 ),
	1152, 	Uvn( 0, 255 ),
	1114, 	Uvn( 0, 255 ),
	StripL(10),  
	1351, 	Uvn( 0, 255 ),
	1308, 	Uvn( 0, 255 ),
	1344, 	Uvn( 0, 255 ),
	1294, 	Uvn( 0, 255 ),
	1345, 	Uvn( 0, 255 ),
	1290, 	Uvn( 0, 255 ),
	1307, 	Uvn( 0, 255 ),
	1293, 	Uvn( 0, 255 ),
	1343, 	Uvn( 0, 255 ),
	1338, 	Uvn( 0, 255 ),
	StripL(3),  
	1350, 	Uvn( 0, 255 ),
	1309, 	Uvn( 0, 255 ),
	1368, 	Uvn( 0, 255 ),
	StripR(26),  
	1368, 	Uvn( 0, 255 ),
	1365, 	Uvn( 0, 255 ),
	1309, 	Uvn( 0, 255 ),
	1332, 	Uvn( 0, 255 ),
	1278, 	Uvn( 0, 255 ),
	1279, 	Uvn( 0, 255 ),
	1237, 	Uvn( 0, 255 ),
	1231, 	Uvn( 0, 255 ),
	1204, 	Uvn( 0, 255 ),
	1198, 	Uvn( 0, 255 ),
	1174, 	Uvn( 0, 255 ),
	1177, 	Uvn( 0, 255 ),
	1157, 	Uvn( 0, 255 ),
	1161, 	Uvn( 0, 255 ),
	1136, 	Uvn( 0, 255 ),
	1148, 	Uvn( 0, 255 ),
	1113, 	Uvn( 0, 255 ),
	1130, 	Uvn( 0, 255 ),
	1124, 	Uvn( 0, 255 ),
	1142, 	Uvn( 0, 255 ),
	1125, 	Uvn( 0, 255 ),
	1146, 	Uvn( 0, 255 ),
	1108, 	Uvn( 0, 255 ),
	1121, 	Uvn( 0, 255 ),
	1073, 	Uvn( 0, 255 ),
	1082, 	Uvn( 0, 255 ),
	StripR(6),  
	1257, 	Uvn( 0, 255 ),
	1258, 	Uvn( 0, 255 ),
	1285, 	Uvn( 0, 255 ),
	1282, 	Uvn( 0, 255 ),
	1299, 	Uvn( 0, 255 ),
	1297, 	Uvn( 0, 255 ),
	StripL(15),  
	1116, 	Uvn( 0, 255 ),
	1105, 	Uvn( 0, 255 ),
	1090, 	Uvn( 0, 255 ),
	1106, 	Uvn( 0, 255 ),
	1098, 	Uvn( 0, 255 ),
	1104, 	Uvn( 0, 255 ),
	1120, 	Uvn( 0, 255 ),
	1131, 	Uvn( 0, 255 ),
	1133, 	Uvn( 0, 255 ),
	1170, 	Uvn( 0, 255 ),
	1150, 	Uvn( 0, 255 ),
	1158, 	Uvn( 0, 255 ),
	1167, 	Uvn( 0, 255 ),
	1176, 	Uvn( 0, 255 ),
	1196, 	Uvn( 0, 255 ),
	StripR(5),  
	1167, 	Uvn( 0, 255 ),
	1159, 	Uvn( 0, 255 ),
	1188, 	Uvn( 0, 255 ),
	1169, 	Uvn( 0, 255 ),
	1212, 	Uvn( 0, 255 ),
	StripR(7),  
	1274, 	Uvn( 0, 255 ),
	1314, 	Uvn( 0, 255 ),
	1327, 	Uvn( 0, 255 ),
	1394, 	Uvn( 0, 255 ),
	1388, 	Uvn( 0, 255 ),
	1450, 	Uvn( 0, 255 ),
	1442, 	Uvn( 0, 255 ),
	StripL(15),  
	1376, 	Uvn( 0, 255 ),
	1379, 	Uvn( 0, 255 ),
	1380, 	Uvn( 0, 255 ),
	1405, 	Uvn( 0, 255 ),
	1408, 	Uvn( 0, 255 ),
	1446, 	Uvn( 0, 255 ),
	1447, 	Uvn( 0, 255 ),
	1492, 	Uvn( 0, 255 ),
	1500, 	Uvn( 0, 255 ),
	1515, 	Uvn( 0, 255 ),
	1529, 	Uvn( 0, 255 ),
	1541, 	Uvn( 0, 255 ),
	1566, 	Uvn( 0, 255 ),
	1552, 	Uvn( 0, 255 ),
	1569, 	Uvn( 0, 255 ),
	StripL(7),  
	1098, 	Uvn( 0, 255 ),
	1120, 	Uvn( 0, 255 ),
	1144, 	Uvn( 0, 255 ),
	1133, 	Uvn( 0, 255 ),
	1159, 	Uvn( 0, 255 ),
	1150, 	Uvn( 0, 255 ),
	1167, 	Uvn( 0, 255 ),
	StripR(7),  
	1105, 	Uvn( 0, 255 ),
	1106, 	Uvn( 0, 255 ),
	1109, 	Uvn( 0, 255 ),
	1104, 	Uvn( 0, 255 ),
	1134, 	Uvn( 0, 255 ),
	1131, 	Uvn( 0, 255 ),
	1170, 	Uvn( 0, 255 ),
	StripR(5),  
	1427, 	Uvn( 0, 255 ),
	1417, 	Uvn( 0, 255 ),
	1419, 	Uvn( 0, 255 ),
	1398, 	Uvn( 0, 255 ),
	1403, 	Uvn( 0, 255 ),
	StripL(3),  
	1436, 	Uvn( 0, 255 ),
	1439, 	Uvn( 0, 255 ),
	1426, 	Uvn( 0, 255 ),
	StripR(5),  
	1351, 	Uvn( 0, 255 ),
	1353, 	Uvn( 0, 255 ),
	1344, 	Uvn( 0, 255 ),
	1352, 	Uvn( 0, 255 ),
	1345, 	Uvn( 0, 255 ),
	StripL(4),  
	1452, 	Uvn( 0, 255 ),
	1411, 	Uvn( 0, 255 ),
	1410, 	Uvn( 0, 255 ),
	1386, 	Uvn( 0, 255 ),
	StripL(6),  
	2866, 	Uvn( 0, 255 ),
	2950, 	Uvn( 0, 255 ),
	2956, 	Uvn( 0, 255 ),
	2949, 	Uvn( 0, 255 ),
	341, 	Uvn( 0, 255 ),
	2948, 	Uvn( 0, 255 ),
	StripL(46),  
	131, 	Uvn( 0, 255 ),
	130, 	Uvn( 0, 255 ),
	134, 	Uvn( 0, 255 ),
	135, 	Uvn( 0, 255 ),
	150, 	Uvn( 0, 255 ),
	148, 	Uvn( 0, 255 ),
	158, 	Uvn( 0, 255 ),
	155, 	Uvn( 0, 255 ),
	161, 	Uvn( 0, 255 ),
	159, 	Uvn( 0, 255 ),
	153, 	Uvn( 0, 255 ),
	151, 	Uvn( 0, 255 ),
	145, 	Uvn( 0, 255 ),
	155, 	Uvn( 0, 255 ),
	139, 	Uvn( 0, 255 ),
	130, 	Uvn( 0, 255 ),
	138, 	Uvn( 0, 255 ),
	131, 	Uvn( 0, 255 ),
	132, 	Uvn( 0, 255 ),
	127, 	Uvn( 0, 255 ),
	128, 	Uvn( 0, 255 ),
	129, 	Uvn( 0, 255 ),
	142, 	Uvn( 0, 255 ),
	137, 	Uvn( 0, 255 ),
	154, 	Uvn( 0, 255 ),
	147, 	Uvn( 0, 255 ),
	162, 	Uvn( 0, 255 ),
	156, 	Uvn( 0, 255 ),
	2937, 	Uvn( 0, 255 ),
	2931, 	Uvn( 0, 255 ),
	2939, 	Uvn( 0, 255 ),
	2934, 	Uvn( 0, 255 ),
	337, 	Uvn( 0, 255 ),
	334, 	Uvn( 0, 255 ),
	339, 	Uvn( 0, 255 ),
	335, 	Uvn( 0, 255 ),
	343, 	Uvn( 0, 255 ),
	338, 	Uvn( 0, 255 ),
	2869, 	Uvn( 0, 255 ),
	2865, 	Uvn( 0, 255 ),
	2873, 	Uvn( 0, 255 ),
	2862, 	Uvn( 0, 255 ),
	215, 	Uvn( 0, 255 ),
	206, 	Uvn( 0, 255 ),
	223, 	Uvn( 0, 255 ),
	212, 	Uvn( 0, 255 ),
	StripL(4),  
	2872, 	Uvn( 0, 255 ),
	2879, 	Uvn( 0, 255 ),
	2866, 	Uvn( 0, 255 ),
	2871, 	Uvn( 0, 255 ),
	StripL(19),  
	158, 	Uvn( 0, 255 ),
	161, 	Uvn( 0, 255 ),
	2936, 	Uvn( 0, 255 ),
	164, 	Uvn( 0, 255 ),
	2940, 	Uvn( 0, 255 ),
	2942, 	Uvn( 0, 255 ),
	2944, 	Uvn( 0, 255 ),
	2946, 	Uvn( 0, 255 ),
	340, 	Uvn( 0, 255 ),
	344, 	Uvn( 0, 255 ),
	345, 	Uvn( 0, 255 ),
	348, 	Uvn( 0, 255 ),
	2957, 	Uvn( 0, 255 ),
	2958, 	Uvn( 0, 255 ),
	2878, 	Uvn( 0, 255 ),
	351, 	Uvn( 0, 255 ),
	2880, 	Uvn( 0, 255 ),
	349, 	Uvn( 0, 255 ),
	2874, 	Uvn( 0, 255 ),
	StripR(11),  
	164, 	Uvn( 0, 255 ),
	2942, 	Uvn( 0, 255 ),
	2945, 	Uvn( 0, 255 ),
	2946, 	Uvn( 0, 255 ),
	2947, 	Uvn( 0, 255 ),
	344, 	Uvn( 0, 255 ),
	346, 	Uvn( 0, 255 ),
	348, 	Uvn( 0, 255 ),
	350, 	Uvn( 0, 255 ),
	2958, 	Uvn( 0, 255 ),
	351, 	Uvn( 0, 255 ),
	StripL(5),  
	2903, 	Uvn( 0, 255 ),
	2900, 	Uvn( 0, 255 ),
	253, 	Uvn( 0, 255 ),
	245, 	Uvn( 0, 255 ),
	254, 	Uvn( 0, 255 ),
	StripL(8),  
	356, 	Uvn( 0, 255 ),
	354, 	Uvn( 0, 255 ),
	361, 	Uvn( 0, 255 ),
	2960, 	Uvn( 0, 255 ),
	2889, 	Uvn( 0, 255 ),
	2887, 	Uvn( 0, 255 ),
	2892, 	Uvn( 0, 255 ),
	2890, 	Uvn( 0, 255 ),
	StripL(4),  
	355, 	Uvn( 0, 255 ),
	356, 	Uvn( 0, 255 ),
	359, 	Uvn( 0, 255 ),
	362, 	Uvn( 0, 255 ),
	StripL(6),  
	385, 	Uvn( 0, 255 ),
	381, 	Uvn( 0, 255 ),
	380, 	Uvn( 0, 255 ),
	377, 	Uvn( 0, 255 ),
	374, 	Uvn( 0, 255 ),
	370, 	Uvn( 0, 255 ),
	StripL(5),  
	2918, 	Uvn( 0, 255 ),
	2919, 	Uvn( 0, 255 ),
	2915, 	Uvn( 0, 255 ),
	2916, 	Uvn( 0, 255 ),
	2914, 	Uvn( 0, 255 ),
	StripL(3),  
	2909, 	Uvn( 0, 255 ),
	2903, 	Uvn( 0, 255 ),
	253, 	Uvn( 0, 255 ),
	StripR(10),  
	376, 	Uvn( 0, 255 ),
	2962, 	Uvn( 0, 255 ),
	2963, 	Uvn( 0, 255 ),
	2964, 	Uvn( 0, 255 ),
	385, 	Uvn( 0, 255 ),
	2965, 	Uvn( 0, 255 ),
	384, 	Uvn( 0, 255 ),
	386, 	Uvn( 0, 255 ),
	371, 	Uvn( 0, 255 ),
	379, 	Uvn( 0, 255 ),
	StripR(6),  
	2933, 	Uvn( 0, 255 ),
	2935, 	Uvn( 0, 255 ),
	2941, 	Uvn( 0, 255 ),
	2948, 	Uvn( 0, 255 ),
	336, 	Uvn( 0, 255 ),
	341, 	Uvn( 0, 255 ),
	StripR(7),  
	2870, 	Uvn( 0, 255 ),
	214, 	Uvn( 0, 255 ),
	2871, 	Uvn( 0, 255 ),
	2883, 	Uvn( 0, 255 ),
	2879, 	Uvn( 0, 255 ),
	2882, 	Uvn( 0, 255 ),
	2876, 	Uvn( 0, 255 ),
	StripL(3),  
	95, 	Uvn( 0, 255 ),
	91, 	Uvn( 0, 255 ),
	88, 	Uvn( 0, 255 ),
	StripR(5),  
	332, 	Uvn( 0, 255 ),
	331, 	Uvn( 0, 255 ),
	330, 	Uvn( 0, 255 ),
	327, 	Uvn( 0, 255 ),
	322, 	Uvn( 0, 255 ),
	StripL(3),  
	85, 	Uvn( 0, 255 ),
	84, 	Uvn( 0, 255 ),
	92, 	Uvn( 0, 255 ),
	StripL(5),  
	2847, 	Uvn( 0, 255 ),
	2854, 	Uvn( 0, 255 ),
	2838, 	Uvn( 0, 255 ),
	2844, 	Uvn( 0, 255 ),
	2848, 	Uvn( 0, 255 ),
	StripL(8),  
	2772, 	Uvn( 0, 255 ),
	2784, 	Uvn( 0, 255 ),
	2779, 	Uvn( 0, 255 ),
	2792, 	Uvn( 0, 255 ),
	2788, 	Uvn( 0, 255 ),
	2797, 	Uvn( 0, 255 ),
	2794, 	Uvn( 0, 255 ),
	2787, 	Uvn( 0, 255 ),
	StripL(90),  
	1183, 	Uvn( 0, 255 ),
	1195, 	Uvn( 0, 255 ),
	1171, 	Uvn( 0, 255 ),
	1186, 	Uvn( 0, 255 ),
	1154, 	Uvn( 0, 255 ),
	1152, 	Uvn( 0, 255 ),
	1100, 	Uvn( 0, 255 ),
	1114, 	Uvn( 0, 255 ),
	1079, 	Uvn( 0, 255 ),
	1092, 	Uvn( 0, 255 ),
	1060, 	Uvn( 0, 255 ),
	1101, 	Uvn( 0, 255 ),
	1082, 	Uvn( 0, 255 ),
	1127, 	Uvn( 0, 255 ),
	1121, 	Uvn( 0, 255 ),
	1162, 	Uvn( 0, 255 ),
	1146, 	Uvn( 0, 255 ),
	1149, 	Uvn( 0, 255 ),
	1142, 	Uvn( 0, 255 ),
	1132, 	Uvn( 0, 255 ),
	1130, 	Uvn( 0, 255 ),
	1138, 	Uvn( 0, 255 ),
	1148, 	Uvn( 0, 255 ),
	1156, 	Uvn( 0, 255 ),
	1161, 	Uvn( 0, 255 ),
	1166, 	Uvn( 0, 255 ),
	1177, 	Uvn( 0, 255 ),
	1179, 	Uvn( 0, 255 ),
	1198, 	Uvn( 0, 255 ),
	1219, 	Uvn( 0, 255 ),
	1231, 	Uvn( 0, 255 ),
	1272, 	Uvn( 0, 255 ),
	1279, 	Uvn( 0, 255 ),
	1340, 	Uvn( 0, 255 ),
	1332, 	Uvn( 0, 255 ),
	1367, 	Uvn( 0, 255 ),
	1365, 	Uvn( 0, 255 ),
	1369, 	Uvn( 0, 255 ),
	1368, 	Uvn( 0, 255 ),
	1389, 	Uvn( 0, 255 ),
	1350, 	Uvn( 0, 255 ),
	1362, 	Uvn( 0, 255 ),
	1311, 	Uvn( 0, 255 ),
	1373, 	Uvn( 0, 255 ),
	1358, 	Uvn( 0, 255 ),
	1379, 	Uvn( 0, 255 ),
	1370, 	Uvn( 0, 255 ),
	1376, 	Uvn( 0, 255 ),
	1349, 	Uvn( 0, 255 ),
	1348, 	Uvn( 0, 255 ),
	1317, 	Uvn( 0, 255 ),
	1331, 	Uvn( 0, 255 ),
	1296, 	Uvn( 0, 255 ),
	1291, 	Uvn( 0, 255 ),
	1281, 	Uvn( 0, 255 ),
	1268, 	Uvn( 0, 255 ),
	1261, 	Uvn( 0, 255 ),
	1247, 	Uvn( 0, 255 ),
	1218, 	Uvn( 0, 255 ),
	1208, 	Uvn( 0, 255 ),
	1202, 	Uvn( 0, 255 ),
	1199, 	Uvn( 0, 255 ),
	1170, 	Uvn( 0, 255 ),
	1184, 	Uvn( 0, 255 ),
	1158, 	Uvn( 0, 255 ),
	1194, 	Uvn( 0, 255 ),
	1176, 	Uvn( 0, 255 ),
	1205, 	Uvn( 0, 255 ),
	1196, 	Uvn( 0, 255 ),
	1244, 	Uvn( 0, 255 ),
	1236, 	Uvn( 0, 255 ),
	1274, 	Uvn( 0, 255 ),
	1266, 	Uvn( 0, 255 ),
	1314, 	Uvn( 0, 255 ),
	1336, 	Uvn( 0, 255 ),
	1394, 	Uvn( 0, 255 ),
	1454, 	Uvn( 0, 255 ),
	1450, 	Uvn( 0, 255 ),
	1506, 	Uvn( 0, 255 ),
	1512, 	Uvn( 0, 255 ),
	1573, 	Uvn( 0, 255 ),
	1570, 	Uvn( 0, 255 ),
	1614, 	Uvn( 0, 255 ),
	1612, 	Uvn( 0, 255 ),
	1656, 	Uvn( 0, 255 ),
	1649, 	Uvn( 0, 255 ),
	1695, 	Uvn( 0, 255 ),
	1648, 	Uvn( 0, 255 ),
	1680, 	Uvn( 0, 255 ),
	1657, 	Uvn( 0, 255 ),
	StripR(10),  
	1232, 	Uvn( 0, 255 ),
	1233, 	Uvn( 0, 255 ),
	1329, 	Uvn( 0, 255 ),
	1238, 	Uvn( 0, 255 ),
	1322, 	Uvn( 0, 255 ),
	1239, 	Uvn( 0, 255 ),
	1313, 	Uvn( 0, 255 ),
	1271, 	Uvn( 0, 255 ),
	1312, 	Uvn( 0, 255 ),
	1318, 	Uvn( 0, 255 ),
	StripR(12),  
	1103, 	Uvn( 0, 255 ),
	1107, 	Uvn( 0, 255 ),
	1139, 	Uvn( 0, 255 ),
	1192, 	Uvn( 0, 255 ),
	1185, 	Uvn( 0, 255 ),
	1254, 	Uvn( 0, 255 ),
	1255, 	Uvn( 0, 255 ),
	1315, 	Uvn( 0, 255 ),
	1336, 	Uvn( 0, 255 ),
	1456, 	Uvn( 0, 255 ),
	1454, 	Uvn( 0, 255 ),
	1564, 	Uvn( 0, 255 ),
	StripL(5),  
	1318, 	Uvn( 0, 255 ),
	1230, 	Uvn( 0, 255 ),
	1271, 	Uvn( 0, 255 ),
	1228, 	Uvn( 0, 255 ),
	1239, 	Uvn( 0, 255 ),
	StripL(16),  
	1076, 	Uvn( 0, 255 ),
	1058, 	Uvn( 0, 255 ),
	1084, 	Uvn( 0, 255 ),
	1067, 	Uvn( 0, 255 ),
	1085, 	Uvn( 0, 255 ),
	1072, 	Uvn( 0, 255 ),
	1068, 	Uvn( 0, 255 ),
	1035, 	Uvn( 0, 255 ),
	1085, 	Uvn( 0, 255 ),
	1050, 	Uvn( 0, 255 ),
	1069, 	Uvn( 0, 255 ),
	1056, 	Uvn( 0, 255 ),
	1073, 	Uvn( 0, 255 ),
	1053, 	Uvn( 0, 255 ),
	1082, 	Uvn( 0, 255 ),
	1060, 	Uvn( 0, 255 ),
	StripR(5),  
	1039, 	Uvn( 0, 255 ),
	1035, 	Uvn( 0, 255 ),
	1049, 	Uvn( 0, 255 ),
	1050, 	Uvn( 0, 255 ),
	1056, 	Uvn( 0, 255 ),
	StripR(19),  
	27, 	Uvn( 0, 255 ),
	26, 	Uvn( 0, 255 ),
	22, 	Uvn( 0, 255 ),
	4, 	Uvn( 0, 255 ),
	9, 	Uvn( 0, 255 ),
	8, 	Uvn( 0, 255 ),
	23, 	Uvn( 0, 255 ),
	20, 	Uvn( 0, 255 ),
	30, 	Uvn( 0, 255 ),
	28, 	Uvn( 0, 255 ),
	2754, 	Uvn( 0, 255 ),
	2757, 	Uvn( 0, 255 ),
	2759, 	Uvn( 0, 255 ),
	2780, 	Uvn( 0, 255 ),
	2802, 	Uvn( 0, 255 ),
	2805, 	Uvn( 0, 255 ),
	2806, 	Uvn( 0, 255 ),
	2809, 	Uvn( 0, 255 ),
	2953, 	Uvn( 0, 255 ),
	StripR(5),  
	3, 	Uvn( 0, 255 ),
	2, 	Uvn( 0, 255 ),
	16, 	Uvn( 0, 255 ),
	7, 	Uvn( 0, 255 ),
	14, 	Uvn( 0, 255 ),
	StripL(19),  
	314, 	Uvn( 0, 255 ),
	310, 	Uvn( 0, 255 ),
	312, 	Uvn( 0, 255 ),
	2764, 	Uvn( 0, 255 ),
	2765, 	Uvn( 0, 255 ),
	2762, 	Uvn( 0, 255 ),
	2782, 	Uvn( 0, 255 ),
	37, 	Uvn( 0, 255 ),
	2776, 	Uvn( 0, 255 ),
	2739, 	Uvn( 0, 255 ),
	31, 	Uvn( 0, 255 ),
	24, 	Uvn( 0, 255 ),
	16, 	Uvn( 0, 255 ),
	17, 	Uvn( 0, 255 ),
	14, 	Uvn( 0, 255 ),
	2730, 	Uvn( 0, 255 ),
	15, 	Uvn( 0, 255 ),
	19, 	Uvn( 0, 255 ),
	10, 	Uvn( 0, 255 ),
	StripR(6),  
	2770, 	Uvn( 0, 255 ),
	2769, 	Uvn( 0, 255 ),
	2768, 	Uvn( 0, 255 ),
	2767, 	Uvn( 0, 255 ),
	2766, 	Uvn( 0, 255 ),
	2756, 	Uvn( 0, 255 ),
	StripL(4),  
	2831, 	Uvn( 0, 255 ),
	2924, 	Uvn( 0, 255 ),
	2770, 	Uvn( 0, 255 ),
	2768, 	Uvn( 0, 255 ),
	StripL(3),  
	184, 	Uvn( 0, 255 ),
	191, 	Uvn( 0, 255 ),
	178, 	Uvn( 0, 255 ),
	StripR(7),  
	2828, 	Uvn( 0, 255 ),
	178, 	Uvn( 0, 255 ),
	176, 	Uvn( 0, 255 ),
	184, 	Uvn( 0, 255 ),
	180, 	Uvn( 0, 255 ),
	197, 	Uvn( 0, 255 ),
	192, 	Uvn( 0, 255 ),
	StripL(5),  
	60, 	Uvn( 0, 255 ),
	57, 	Uvn( 0, 255 ),
	55, 	Uvn( 0, 255 ),
	49, 	Uvn( 0, 255 ),
	44, 	Uvn( 0, 255 ),
	StripR(5),  
	42, 	Uvn( 0, 255 ),
	47, 	Uvn( 0, 255 ),
	56, 	Uvn( 0, 255 ),
	54, 	Uvn( 0, 255 ),
	58, 	Uvn( 0, 255 ),
	StripL(6),  
	278, 	Uvn( 0, 255 ),
	225, 	Uvn( 0, 255 ),
	234, 	Uvn( 0, 255 ),
	220, 	Uvn( 0, 255 ),
	221, 	Uvn( 0, 255 ),
	2877, 	Uvn( 0, 255 ),
	StripL(6),  
	276, 	Uvn( 0, 255 ),
	293, 	Uvn( 0, 255 ),
	283, 	Uvn( 0, 255 ),
	291, 	Uvn( 0, 255 ),
	2920, 	Uvn( 0, 255 ),
	273, 	Uvn( 0, 255 ),
	StripR(5),  
	231, 	Uvn( 0, 255 ),
	236, 	Uvn( 0, 255 ),
	258, 	Uvn( 0, 255 ),
	262, 	Uvn( 0, 255 ),
	275, 	Uvn( 0, 255 ),
	StripL(6),  
	2970, 	Uvn( 0, 255 ),
	255, 	Uvn( 0, 255 ),
	247, 	Uvn( 0, 255 ),
	227, 	Uvn( 0, 255 ),
	229, 	Uvn( 0, 255 ),
	196, 	Uvn( 0, 255 ),
	StripL(6),  
	2867, 	Uvn( 0, 255 ),
	2877, 	Uvn( 0, 255 ),
	2875, 	Uvn( 0, 255 ),
	220, 	Uvn( 0, 255 ),
	216, 	Uvn( 0, 255 ),
	225, 	Uvn( 0, 255 ),
	StripL(3),  
	3008, 	Uvn( 0, 255 ),
	3016, 	Uvn( 0, 255 ),
	3022, 	Uvn( 0, 255 ),
	StripL(10),  
	1051, 	Uvn( 0, 255 ),
	1021, 	Uvn( 0, 255 ),
	1027, 	Uvn( 0, 255 ),
	1017, 	Uvn( 0, 255 ),
	1040, 	Uvn( 0, 255 ),
	1025, 	Uvn( 0, 255 ),
	1075, 	Uvn( 0, 255 ),
	1042, 	Uvn( 0, 255 ),
	1059, 	Uvn( 0, 255 ),
	1046, 	Uvn( 0, 255 ),
	StripL(8),  
	1125, 	Uvn( 0, 255 ),
	1097, 	Uvn( 0, 255 ),
	1093, 	Uvn( 0, 255 ),
	1084, 	Uvn( 0, 255 ),
	1096, 	Uvn( 0, 255 ),
	1099, 	Uvn( 0, 255 ),
	1069, 	Uvn( 0, 255 ),
	1085, 	Uvn( 0, 255 ),
	StripR(6),  
	1024, 	Uvn( 0, 255 ),
	1031, 	Uvn( 0, 255 ),
	1041, 	Uvn( 0, 255 ),
	1049, 	Uvn( 0, 255 ),
	1053, 	Uvn( 0, 255 ),
	1056, 	Uvn( 0, 255 ),
	StripL(6),  
	1017, 	Uvn( 0, 255 ),
	1029, 	Uvn( 0, 255 ),
	1025, 	Uvn( 0, 255 ),
	1033, 	Uvn( 0, 255 ),
	1042, 	Uvn( 0, 255 ),
	1046, 	Uvn( 0, 255 ),
	StripL(12),  
	1128, 	Uvn( 0, 255 ),
	1135, 	Uvn( 0, 255 ),
	1091, 	Uvn( 0, 255 ),
	1119, 	Uvn( 0, 255 ),
	1087, 	Uvn( 0, 255 ),
	1141, 	Uvn( 0, 255 ),
	1111, 	Uvn( 0, 255 ),
	1110, 	Uvn( 0, 255 ),
	1088, 	Uvn( 0, 255 ),
	1094, 	Uvn( 0, 255 ),
	1045, 	Uvn( 0, 255 ),
	1054, 	Uvn( 0, 255 ),
	StripL(3),  
	1448, 	Uvn( 0, 255 ),
	1416, 	Uvn( 0, 255 ),
	1449, 	Uvn( 0, 255 ),
	StripL(14),  
	1194, 	Uvn( 0, 255 ),
	1220, 	Uvn( 0, 255 ),
	1205, 	Uvn( 0, 255 ),
	1252, 	Uvn( 0, 255 ),
	1251, 	Uvn( 0, 255 ),
	1287, 	Uvn( 0, 255 ),
	1288, 	Uvn( 0, 255 ),
	1342, 	Uvn( 0, 255 ),
	1346, 	Uvn( 0, 255 ),
	1371, 	Uvn( 0, 255 ),
	1390, 	Uvn( 0, 255 ),
	1400, 	Uvn( 0, 255 ),
	1447, 	Uvn( 0, 255 ),
	1408, 	Uvn( 0, 255 ),
	StripR(11),  
	1333, 	Uvn( 0, 255 ),
	1355, 	Uvn( 0, 255 ),
	1370, 	Uvn( 0, 255 ),
	1356, 	Uvn( 0, 255 ),
	1349, 	Uvn( 0, 255 ),
	1339, 	Uvn( 0, 255 ),
	1317, 	Uvn( 0, 255 ),
	1305, 	Uvn( 0, 255 ),
	1296, 	Uvn( 0, 255 ),
	1295, 	Uvn( 0, 255 ),
	1283, 	Uvn( 0, 255 ),
	StripL(3),  
	1089, 	Uvn( 0, 255 ),
	1075, 	Uvn( 0, 255 ),
	1059, 	Uvn( 0, 255 ),
	StripL(16),  
	1055, 	Uvn( 0, 255 ),
	1066, 	Uvn( 0, 255 ),
	1059, 	Uvn( 0, 255 ),
	1102, 	Uvn( 0, 255 ),
	1089, 	Uvn( 0, 255 ),
	1116, 	Uvn( 0, 255 ),
	1075, 	Uvn( 0, 255 ),
	1090, 	Uvn( 0, 255 ),
	1080, 	Uvn( 0, 255 ),
	1083, 	Uvn( 0, 255 ),
	1061, 	Uvn( 0, 255 ),
	1062, 	Uvn( 0, 255 ),
	1065, 	Uvn( 0, 255 ),
	1115, 	Uvn( 0, 255 ),
	1112, 	Uvn( 0, 255 ),
	1207, 	Uvn( 0, 255 ),
	StripL(3),  
	1028, 	Uvn( 0, 255 ),
	1032, 	Uvn( 0, 255 ),
	1030, 	Uvn( 0, 255 ),
	StripR(8),  
	1045, 	Uvn( 0, 255 ),
	1026, 	Uvn( 0, 255 ),
	1054, 	Uvn( 0, 255 ),
	1052, 	Uvn( 0, 255 ),
	1077, 	Uvn( 0, 255 ),
	1063, 	Uvn( 0, 255 ),
	1100, 	Uvn( 0, 255 ),
	1079, 	Uvn( 0, 255 ),
	StripL(3),  
	4180, 	Uvn( 0, 255 ),
	4177, 	Uvn( 0, 255 ),
	4176, 	Uvn( 0, 255 ),
	StripR(13),  
	4188, 	Uvn( 0, 255 ),
	4186, 	Uvn( 0, 255 ),
	4189, 	Uvn( 0, 255 ),
	1267, 	Uvn( 0, 255 ),
	1302, 	Uvn( 0, 255 ),
	1260, 	Uvn( 0, 255 ),
	1301, 	Uvn( 0, 255 ),
	1269, 	Uvn( 0, 255 ),
	1303, 	Uvn( 0, 255 ),
	1275, 	Uvn( 0, 255 ),
	1304, 	Uvn( 0, 255 ),
	1293, 	Uvn( 0, 255 ),
	1338, 	Uvn( 0, 255 ),
	StripL(3),  
	673, 	Uvn( 0, 255 ),
	674, 	Uvn( 0, 255 ),
	651, 	Uvn( 0, 255 ),
	StripR(6),  
	3458, 	Uvn( 0, 255 ),
	3556, 	Uvn( 0, 255 ),
	3465, 	Uvn( 0, 255 ),
	3561, 	Uvn( 0, 255 ),
	3474, 	Uvn( 0, 255 ),
	3483, 	Uvn( 0, 255 ),
	StripL(7),  
	636, 	Uvn( 0, 255 ),
	3440, 	Uvn( 0, 255 ),
	3443, 	Uvn( 0, 255 ),
	3448, 	Uvn( 0, 255 ),
	3450, 	Uvn( 0, 255 ),
	3460, 	Uvn( 0, 255 ),
	3451, 	Uvn( 0, 255 ),
	StripL(3),  
	634, 	Uvn( 0, 255 ),
	635, 	Uvn( 0, 255 ),
	632, 	Uvn( 0, 255 ),
	StripL(3),  
	652, 	Uvn( 0, 255 ),
	3468, 	Uvn( 0, 255 ),
	646, 	Uvn( 0, 255 ),
	StripR(15),  
	3448, 	Uvn( 0, 255 ),
	3439, 	Uvn( 0, 255 ),
	3440, 	Uvn( 0, 255 ),
	3434, 	Uvn( 0, 255 ),
	636, 	Uvn( 0, 255 ),
	633, 	Uvn( 0, 255 ),
	3547, 	Uvn( 0, 255 ),
	3545, 	Uvn( 0, 255 ),
	982, 	Uvn( 0, 255 ),
	3546, 	Uvn( 0, 255 ),
	981, 	Uvn( 0, 255 ),
	984, 	Uvn( 0, 255 ),
	987, 	Uvn( 0, 255 ),
	989, 	Uvn( 0, 255 ),
	4013, 	Uvn( 0, 255 ),
	StripL(5),  
	3545, 	Uvn( 0, 255 ),
	631, 	Uvn( 0, 255 ),
	633, 	Uvn( 0, 255 ),
	3429, 	Uvn( 0, 255 ),
	3434, 	Uvn( 0, 255 ),
	StripL(44),  
	3428, 	Uvn( 0, 255 ),
	3431, 	Uvn( 0, 255 ),
	3432, 	Uvn( 0, 255 ),
	3435, 	Uvn( 0, 255 ),
	976, 	Uvn( 0, 255 ),
	977, 	Uvn( 0, 255 ),
	3442, 	Uvn( 0, 255 ),
	3444, 	Uvn( 0, 255 ),
	3447, 	Uvn( 0, 255 ),
	3454, 	Uvn( 0, 255 ),
	3446, 	Uvn( 0, 255 ),
	3458, 	Uvn( 0, 255 ),
	3456, 	Uvn( 0, 255 ),
	3556, 	Uvn( 0, 255 ),
	603, 	Uvn( 0, 255 ),
	3560, 	Uvn( 0, 255 ),
	624, 	Uvn( 0, 255 ),
	3567, 	Uvn( 0, 255 ),
	3570, 	Uvn( 0, 255 ),
	3568, 	Uvn( 0, 255 ),
	3563, 	Uvn( 0, 255 ),
	3477, 	Uvn( 0, 255 ),
	3471, 	Uvn( 0, 255 ),
	3476, 	Uvn( 0, 255 ),
	3460, 	Uvn( 0, 255 ),
	3467, 	Uvn( 0, 255 ),
	3451, 	Uvn( 0, 255 ),
	3459, 	Uvn( 0, 255 ),
	640, 	Uvn( 0, 255 ),
	641, 	Uvn( 0, 255 ),
	639, 	Uvn( 0, 255 ),
	647, 	Uvn( 0, 255 ),
	644, 	Uvn( 0, 255 ),
	648, 	Uvn( 0, 255 ),
	649, 	Uvn( 0, 255 ),
	654, 	Uvn( 0, 255 ),
	3559, 	Uvn( 0, 255 ),
	655, 	Uvn( 0, 255 ),
	3562, 	Uvn( 0, 255 ),
	661, 	Uvn( 0, 255 ),
	3571, 	Uvn( 0, 255 ),
	667, 	Uvn( 0, 255 ),
	3586, 	Uvn( 0, 255 ),
	680, 	Uvn( 0, 255 ),
	StripL(6),  
	976, 	Uvn( 0, 255 ),
	3436, 	Uvn( 0, 255 ),
	3432, 	Uvn( 0, 255 ),
	3433, 	Uvn( 0, 255 ),
	3424, 	Uvn( 0, 255 ),
	480, 	Uvn( 0, 255 ),
	StripL(3),  
	3458, 	Uvn( 0, 255 ),
	3454, 	Uvn( 0, 255 ),
	3465, 	Uvn( 0, 255 ),
	StripR(15),  
	643, 	Uvn( 0, 255 ),
	3457, 	Uvn( 0, 255 ),
	3464, 	Uvn( 0, 255 ),
	3461, 	Uvn( 0, 255 ),
	3470, 	Uvn( 0, 255 ),
	3473, 	Uvn( 0, 255 ),
	3485, 	Uvn( 0, 255 ),
	3484, 	Uvn( 0, 255 ),
	3491, 	Uvn( 0, 255 ),
	3490, 	Uvn( 0, 255 ),
	3501, 	Uvn( 0, 255 ),
	3499, 	Uvn( 0, 255 ),
	3510, 	Uvn( 0, 255 ),
	3506, 	Uvn( 0, 255 ),
	3518, 	Uvn( 0, 255 ),
	StripR(5),  
	636, 	Uvn( 0, 255 ),
	640, 	Uvn( 0, 255 ),
	3443, 	Uvn( 0, 255 ),
	3451, 	Uvn( 0, 255 ),
	3450, 	Uvn( 0, 255 ),
	StripL(3),  
	3446, 	Uvn( 0, 255 ),
	3442, 	Uvn( 0, 255 ),
	3447, 	Uvn( 0, 255 ),
	StripL(6),  
	3481, 	Uvn( 0, 255 ),
	3476, 	Uvn( 0, 255 ),
	3482, 	Uvn( 0, 255 ),
	3477, 	Uvn( 0, 255 ),
	3572, 	Uvn( 0, 255 ),
	3568, 	Uvn( 0, 255 ),
	StripL(9),  
	3556, 	Uvn( 0, 255 ),
	3561, 	Uvn( 0, 255 ),
	3560, 	Uvn( 0, 255 ),
	3564, 	Uvn( 0, 255 ),
	3567, 	Uvn( 0, 255 ),
	3569, 	Uvn( 0, 255 ),
	3568, 	Uvn( 0, 255 ),
	3573, 	Uvn( 0, 255 ),
	3572, 	Uvn( 0, 255 ),
	StripL(4),  
	662, 	Uvn( 0, 255 ),
	663, 	Uvn( 0, 255 ),
	657, 	Uvn( 0, 255 ),
	658, 	Uvn( 0, 255 ),
	StripL(3),  
	656, 	Uvn( 0, 255 ),
	660, 	Uvn( 0, 255 ),
	653, 	Uvn( 0, 255 ),
	StripL(3),  
	639, 	Uvn( 0, 255 ),
	3551, 	Uvn( 0, 255 ),
	637, 	Uvn( 0, 255 ),
	StripL(3),  
	660, 	Uvn( 0, 255 ),
	670, 	Uvn( 0, 255 ),
	665, 	Uvn( 0, 255 ),
	StripL(14),  
	650, 	Uvn( 0, 255 ),
	656, 	Uvn( 0, 255 ),
	648, 	Uvn( 0, 255 ),
	653, 	Uvn( 0, 255 ),
	654, 	Uvn( 0, 255 ),
	658, 	Uvn( 0, 255 ),
	659, 	Uvn( 0, 255 ),
	666, 	Uvn( 0, 255 ),
	664, 	Uvn( 0, 255 ),
	671, 	Uvn( 0, 255 ),
	668, 	Uvn( 0, 255 ),
	677, 	Uvn( 0, 255 ),
	667, 	Uvn( 0, 255 ),
	680, 	Uvn( 0, 255 ),
	StripR(5),  
	3472, 	Uvn( 0, 255 ),
	3459, 	Uvn( 0, 255 ),
	3469, 	Uvn( 0, 255 ),
	641, 	Uvn( 0, 255 ),
	647, 	Uvn( 0, 255 ),
	StripL(4),  
	644, 	Uvn( 0, 255 ),
	649, 	Uvn( 0, 255 ),
	645, 	Uvn( 0, 255 ),
	3559, 	Uvn( 0, 255 ),
	StripR(6),  
	481, 	Uvn( 0, 255 ),
	478, 	Uvn( 0, 255 ),
	3422, 	Uvn( 0, 255 ),
	3423, 	Uvn( 0, 255 ),
	3425, 	Uvn( 0, 255 ),
	3427, 	Uvn( 0, 255 ),
	StripR(6),  
	526, 	Uvn( 0, 255 ),
	491, 	Uvn( 0, 255 ),
	521, 	Uvn( 0, 255 ),
	487, 	Uvn( 0, 255 ),
	511, 	Uvn( 0, 255 ),
	3426, 	Uvn( 0, 255 ),
	StripL(3),  
	568, 	Uvn( 0, 255 ),
	603, 	Uvn( 0, 255 ),
	569, 	Uvn( 0, 255 ),
	StripL(3),  
	3456, 	Uvn( 0, 255 ),
	541, 	Uvn( 0, 255 ),
	3446, 	Uvn( 0, 255 ),
	StripR(7),  
	3436, 	Uvn( 0, 255 ),
	3433, 	Uvn( 0, 255 ),
	3438, 	Uvn( 0, 255 ),
	492, 	Uvn( 0, 255 ),
	509, 	Uvn( 0, 255 ),
	494, 	Uvn( 0, 255 ),
	520, 	Uvn( 0, 255 ),
	StripR(8),  
	577, 	Uvn( 0, 255 ),
	601, 	Uvn( 0, 255 ),
	604, 	Uvn( 0, 255 ),
	626, 	Uvn( 0, 255 ),
	624, 	Uvn( 0, 255 ),
	628, 	Uvn( 0, 255 ),
	3570, 	Uvn( 0, 255 ),
	3563, 	Uvn( 0, 255 ),
	StripL(24),  
	551, 	Uvn( 0, 255 ),
	546, 	Uvn( 0, 255 ),
	511, 	Uvn( 0, 255 ),
	502, 	Uvn( 0, 255 ),
	3426, 	Uvn( 0, 255 ),
	3430, 	Uvn( 0, 255 ),
	3425, 	Uvn( 0, 255 ),
	3429, 	Uvn( 0, 255 ),
	3427, 	Uvn( 0, 255 ),
	631, 	Uvn( 0, 255 ),
	630, 	Uvn( 0, 255 ),
	3545, 	Uvn( 0, 255 ),
	3544, 	Uvn( 0, 255 ),
	3546, 	Uvn( 0, 255 ),
	3548, 	Uvn( 0, 255 ),
	984, 	Uvn( 0, 255 ),
	3552, 	Uvn( 0, 255 ),
	989, 	Uvn( 0, 255 ),
	992, 	Uvn( 0, 255 ),
	4013, 	Uvn( 0, 255 ),
	4015, 	Uvn( 0, 255 ),
	4012, 	Uvn( 0, 255 ),
	917, 	Uvn( 0, 255 ),
	900, 	Uvn( 0, 255 ),
	StripL(5),  
	3430, 	Uvn( 0, 255 ),
	502, 	Uvn( 0, 255 ),
	3437, 	Uvn( 0, 255 ),
	538, 	Uvn( 0, 255 ),
	3445, 	Uvn( 0, 255 ),
	StripL(19),  
	3563, 	Uvn( 0, 255 ),
	3471, 	Uvn( 0, 255 ),
	3466, 	Uvn( 0, 255 ),
	3460, 	Uvn( 0, 255 ),
	3452, 	Uvn( 0, 255 ),
	3448, 	Uvn( 0, 255 ),
	3455, 	Uvn( 0, 255 ),
	3445, 	Uvn( 0, 255 ),
	567, 	Uvn( 0, 255 ),
	538, 	Uvn( 0, 255 ),
	570, 	Uvn( 0, 255 ),
	546, 	Uvn( 0, 255 ),
	571, 	Uvn( 0, 255 ),
	551, 	Uvn( 0, 255 ),
	572, 	Uvn( 0, 255 ),
	554, 	Uvn( 0, 255 ),
	574, 	Uvn( 0, 255 ),
	555, 	Uvn( 0, 255 ),
	556, 	Uvn( 0, 255 ),
	StripR(6),  
	623, 	Uvn( 0, 255 ),
	621, 	Uvn( 0, 255 ),
	617, 	Uvn( 0, 255 ),
	614, 	Uvn( 0, 255 ),
	599, 	Uvn( 0, 255 ),
	596, 	Uvn( 0, 255 ),
	StripL(7),  
	1022, 	Uvn( 0, 255 ),
	1018, 	Uvn( 0, 255 ),
	1016, 	Uvn( 0, 255 ),
	1019, 	Uvn( 0, 255 ),
	1023, 	Uvn( 0, 255 ),
	1034, 	Uvn( 0, 255 ),
	1038, 	Uvn( 0, 255 ),
	StripR(8),  
	1060, 	Uvn( 0, 255 ),
	1079, 	Uvn( 0, 255 ),
	1053, 	Uvn( 0, 255 ),
	1063, 	Uvn( 0, 255 ),
	1041, 	Uvn( 0, 255 ),
	1052, 	Uvn( 0, 255 ),
	1024, 	Uvn( 0, 255 ),
	1026, 	Uvn( 0, 255 ),
	StripL(5),  
	1172, 	Uvn( 0, 255 ),
	1145, 	Uvn( 0, 255 ),
	1191, 	Uvn( 0, 255 ),
	1152, 	Uvn( 0, 255 ),
	1186, 	Uvn( 0, 255 ),
	StripR(5),  
	1051, 	Uvn( 0, 255 ),
	1081, 	Uvn( 0, 255 ),
	1064, 	Uvn( 0, 255 ),
	1080, 	Uvn( 0, 255 ),
	1075, 	Uvn( 0, 255 ),
	StripL(5),  
	1087, 	Uvn( 0, 255 ),
	1111, 	Uvn( 0, 255 ),
	1078, 	Uvn( 0, 255 ),
	1088, 	Uvn( 0, 255 ),
	1045, 	Uvn( 0, 255 ),
	StripL(6),  
	4105, 	Uvn( 0, 255 ),
	4103, 	Uvn( 0, 255 ),
	4084, 	Uvn( 0, 255 ),
	4079, 	Uvn( 0, 255 ),
	4081, 	Uvn( 0, 255 ),
	4085, 	Uvn( 0, 255 ),
	StripL(4),  
	4148, 	Uvn( 0, 255 ),
	4161, 	Uvn( 0, 255 ),
	776, 	Uvn( 0, 255 ),
	780, 	Uvn( 0, 255 ),
	StripL(6),  
	4066, 	Uvn( 0, 255 ),
	587, 	Uvn( 0, 255 ),
	4069, 	Uvn( 0, 255 ),
	591, 	Uvn( 0, 255 ),
	605, 	Uvn( 0, 255 ),
	592, 	Uvn( 0, 255 ),
	StripR(5),  
	790, 	Uvn( 0, 255 ),
	4070, 	Uvn( 0, 255 ),
	4069, 	Uvn( 0, 255 ),
	4071, 	Uvn( 0, 255 ),
	605, 	Uvn( 0, 255 ),
	StripL(70),  
	791, 	Uvn( 0, 255 ),
	795, 	Uvn( 0, 255 ),
	794, 	Uvn( 0, 255 ),
	783, 	Uvn( 0, 255 ),
	778, 	Uvn( 0, 255 ),
	765, 	Uvn( 0, 255 ),
	764, 	Uvn( 0, 255 ),
	4129, 	Uvn( 0, 255 ),
	4130, 	Uvn( 0, 255 ),
	4112, 	Uvn( 0, 255 ),
	4119, 	Uvn( 0, 255 ),
	4107, 	Uvn( 0, 255 ),
	4118, 	Uvn( 0, 255 ),
	4108, 	Uvn( 0, 255 ),
	4116, 	Uvn( 0, 255 ),
	4102, 	Uvn( 0, 255 ),
	4095, 	Uvn( 0, 255 ),
	4074, 	Uvn( 0, 255 ),
	836, 	Uvn( 0, 255 ),
	830, 	Uvn( 0, 255 ),
	827, 	Uvn( 0, 255 ),
	817, 	Uvn( 0, 255 ),
	820, 	Uvn( 0, 255 ),
	818, 	Uvn( 0, 255 ),
	3645, 	Uvn( 0, 255 ),
	3665, 	Uvn( 0, 255 ),
	3666, 	Uvn( 0, 255 ),
	3701, 	Uvn( 0, 255 ),
	3713, 	Uvn( 0, 255 ),
	3718, 	Uvn( 0, 255 ),
	3723, 	Uvn( 0, 255 ),
	3702, 	Uvn( 0, 255 ),
	3693, 	Uvn( 0, 255 ),
	3674, 	Uvn( 0, 255 ),
	3700, 	Uvn( 0, 255 ),
	3667, 	Uvn( 0, 255 ),
	3684, 	Uvn( 0, 255 ),
	3662, 	Uvn( 0, 255 ),
	3659, 	Uvn( 0, 255 ),
	3647, 	Uvn( 0, 255 ),
	3642, 	Uvn( 0, 255 ),
	3630, 	Uvn( 0, 255 ),
	3632, 	Uvn( 0, 255 ),
	3639, 	Uvn( 0, 255 ),
	3636, 	Uvn( 0, 255 ),
	3651, 	Uvn( 0, 255 ),
	3654, 	Uvn( 0, 255 ),
	3664, 	Uvn( 0, 255 ),
	3663, 	Uvn( 0, 255 ),
	3676, 	Uvn( 0, 255 ),
	3656, 	Uvn( 0, 255 ),
	3677, 	Uvn( 0, 255 ),
	3678, 	Uvn( 0, 255 ),
	3687, 	Uvn( 0, 255 ),
	3685, 	Uvn( 0, 255 ),
	3686, 	Uvn( 0, 255 ),
	3683, 	Uvn( 0, 255 ),
	3659, 	Uvn( 0, 255 ),
	3658, 	Uvn( 0, 255 ),
	3642, 	Uvn( 0, 255 ),
	3649, 	Uvn( 0, 255 ),
	3640, 	Uvn( 0, 255 ),
	3646, 	Uvn( 0, 255 ),
	3653, 	Uvn( 0, 255 ),
	3652, 	Uvn( 0, 255 ),
	3657, 	Uvn( 0, 255 ),
	3658, 	Uvn( 0, 255 ),
	3675, 	Uvn( 0, 255 ),
	3685, 	Uvn( 0, 255 ),
	3678, 	Uvn( 0, 255 ),
	StripL(18),  
	4096, 	Uvn( 0, 255 ),
	4100, 	Uvn( 0, 255 ),
	4089, 	Uvn( 0, 255 ),
	4093, 	Uvn( 0, 255 ),
	4078, 	Uvn( 0, 255 ),
	4104, 	Uvn( 0, 255 ),
	4098, 	Uvn( 0, 255 ),
	4109, 	Uvn( 0, 255 ),
	745, 	Uvn( 0, 255 ),
	753, 	Uvn( 0, 255 ),
	754, 	Uvn( 0, 255 ),
	766, 	Uvn( 0, 255 ),
	770, 	Uvn( 0, 255 ),
	785, 	Uvn( 0, 255 ),
	782, 	Uvn( 0, 255 ),
	793, 	Uvn( 0, 255 ),
	788, 	Uvn( 0, 255 ),
	784, 	Uvn( 0, 255 ),
	StripR(11),  
	4131, 	Uvn( 0, 255 ),
	4148, 	Uvn( 0, 255 ),
	4145, 	Uvn( 0, 255 ),
	4161, 	Uvn( 0, 255 ),
	4159, 	Uvn( 0, 255 ),
	4162, 	Uvn( 0, 255 ),
	4158, 	Uvn( 0, 255 ),
	4160, 	Uvn( 0, 255 ),
	4156, 	Uvn( 0, 255 ),
	4155, 	Uvn( 0, 255 ),
	4151, 	Uvn( 0, 255 ),
	StripR(18),  
	4061, 	Uvn( 0, 255 ),
	578, 	Uvn( 0, 255 ),
	563, 	Uvn( 0, 255 ),
	561, 	Uvn( 0, 255 ),
	547, 	Uvn( 0, 255 ),
	548, 	Uvn( 0, 255 ),
	529, 	Uvn( 0, 255 ),
	525, 	Uvn( 0, 255 ),
	508, 	Uvn( 0, 255 ),
	504, 	Uvn( 0, 255 ),
	498, 	Uvn( 0, 255 ),
	490, 	Uvn( 0, 255 ),
	493, 	Uvn( 0, 255 ),
	486, 	Uvn( 0, 255 ),
	488, 	Uvn( 0, 255 ),
	482, 	Uvn( 0, 255 ),
	484, 	Uvn( 0, 255 ),
	479, 	Uvn( 0, 255 ),
	StripL(33),  
	578, 	Uvn( 0, 255 ),
	4064, 	Uvn( 0, 255 ),
	4061, 	Uvn( 0, 255 ),
	4063, 	Uvn( 0, 255 ),
	4060, 	Uvn( 0, 255 ),
	773, 	Uvn( 0, 255 ),
	759, 	Uvn( 0, 255 ),
	775, 	Uvn( 0, 255 ),
	761, 	Uvn( 0, 255 ),
	774, 	Uvn( 0, 255 ),
	763, 	Uvn( 0, 255 ),
	772, 	Uvn( 0, 255 ),
	762, 	Uvn( 0, 255 ),
	769, 	Uvn( 0, 255 ),
	760, 	Uvn( 0, 255 ),
	4155, 	Uvn( 0, 255 ),
	4140, 	Uvn( 0, 255 ),
	4151, 	Uvn( 0, 255 ),
	4138, 	Uvn( 0, 255 ),
	4147, 	Uvn( 0, 255 ),
	4137, 	Uvn( 0, 255 ),
	4136, 	Uvn( 0, 255 ),
	4125, 	Uvn( 0, 255 ),
	4121, 	Uvn( 0, 255 ),
	4111, 	Uvn( 0, 255 ),
	4122, 	Uvn( 0, 255 ),
	4114, 	Uvn( 0, 255 ),
	860, 	Uvn( 0, 255 ),
	850, 	Uvn( 0, 255 ),
	856, 	Uvn( 0, 255 ),
	849, 	Uvn( 0, 255 ),
	854, 	Uvn( 0, 255 ),
	847, 	Uvn( 0, 255 ),
	StripL(7),  
	3565, 	Uvn( 0, 255 ),
	3575, 	Uvn( 0, 255 ),
	3574, 	Uvn( 0, 255 ),
	3582, 	Uvn( 0, 255 ),
	3590, 	Uvn( 0, 255 ),
	3591, 	Uvn( 0, 255 ),
	3594, 	Uvn( 0, 255 ),
	StripL(11),  
	3557, 	Uvn( 0, 255 ),
	3565, 	Uvn( 0, 255 ),
	3558, 	Uvn( 0, 255 ),
	3574, 	Uvn( 0, 255 ),
	3576, 	Uvn( 0, 255 ),
	3590, 	Uvn( 0, 255 ),
	690, 	Uvn( 0, 255 ),
	3594, 	Uvn( 0, 255 ),
	699, 	Uvn( 0, 255 ),
	3598, 	Uvn( 0, 255 ),
	703, 	Uvn( 0, 255 ),
	StripR(5),  
	994, 	Uvn( 0, 255 ),
	4019, 	Uvn( 0, 255 ),
	4020, 	Uvn( 0, 255 ),
	4023, 	Uvn( 0, 255 ),
	935, 	Uvn( 0, 255 ),
	StripL(7),  
	668, 	Uvn( 0, 255 ),
	667, 	Uvn( 0, 255 ),
	664, 	Uvn( 0, 255 ),
	661, 	Uvn( 0, 255 ),
	659, 	Uvn( 0, 255 ),
	655, 	Uvn( 0, 255 ),
	654, 	Uvn( 0, 255 ),
	StripL(3),  
	4022, 	Uvn( 0, 255 ),
	4019, 	Uvn( 0, 255 ),
	4023, 	Uvn( 0, 255 ),
	StripL(5),  
	992, 	Uvn( 0, 255 ),
	3553, 	Uvn( 0, 255 ),
	3552, 	Uvn( 0, 255 ),
	3554, 	Uvn( 0, 255 ),
	3550, 	Uvn( 0, 255 ),
	StripL(6),  
	898, 	Uvn( 0, 255 ),
	3612, 	Uvn( 0, 255 ),
	893, 	Uvn( 0, 255 ),
	3320, 	Uvn( 0, 255 ),
	3609, 	Uvn( 0, 255 ),
	3316, 	Uvn( 0, 255 ),
	StripL(4),  
	905, 	Uvn( 0, 255 ),
	3613, 	Uvn( 0, 255 ),
	902, 	Uvn( 0, 255 ),
	897, 	Uvn( 0, 255 ),
	StripL(3),  
	899, 	Uvn( 0, 255 ),
	985, 	Uvn( 0, 255 ),
	915, 	Uvn( 0, 255 ),
	StripL(4),  
	911, 	Uvn( 0, 255 ),
	910, 	Uvn( 0, 255 ),
	908, 	Uvn( 0, 255 ),
	909, 	Uvn( 0, 255 ),
	StripL(7),  
	920, 	Uvn( 0, 255 ),
	925, 	Uvn( 0, 255 ),
	918, 	Uvn( 0, 255 ),
	921, 	Uvn( 0, 255 ),
	913, 	Uvn( 0, 255 ),
	919, 	Uvn( 0, 255 ),
	912, 	Uvn( 0, 255 ),
	StripR(13),  
	905, 	Uvn( 0, 255 ),
	916, 	Uvn( 0, 255 ),
	902, 	Uvn( 0, 255 ),
	909, 	Uvn( 0, 255 ),
	907, 	Uvn( 0, 255 ),
	908, 	Uvn( 0, 255 ),
	912, 	Uvn( 0, 255 ),
	911, 	Uvn( 0, 255 ),
	919, 	Uvn( 0, 255 ),
	910, 	Uvn( 0, 255 ),
	921, 	Uvn( 0, 255 ),
	909, 	Uvn( 0, 255 ),
	916, 	Uvn( 0, 255 ),
	StripL(7),  
	912, 	Uvn( 0, 255 ),
	907, 	Uvn( 0, 255 ),
	913, 	Uvn( 0, 255 ),
	902, 	Uvn( 0, 255 ),
	903, 	Uvn( 0, 255 ),
	897, 	Uvn( 0, 255 ),
	901, 	Uvn( 0, 255 ),
	StripL(28),  
	493, 	Uvn( 0, 255 ),
	498, 	Uvn( 0, 255 ),
	501, 	Uvn( 0, 255 ),
	503, 	Uvn( 0, 255 ),
	506, 	Uvn( 0, 255 ),
	505, 	Uvn( 0, 255 ),
	513, 	Uvn( 0, 255 ),
	507, 	Uvn( 0, 255 ),
	515, 	Uvn( 0, 255 ),
	512, 	Uvn( 0, 255 ),
	518, 	Uvn( 0, 255 ),
	4039, 	Uvn( 0, 255 ),
	4042, 	Uvn( 0, 255 ),
	4038, 	Uvn( 0, 255 ),
	4041, 	Uvn( 0, 255 ),
	721, 	Uvn( 0, 255 ),
	726, 	Uvn( 0, 255 ),
	715, 	Uvn( 0, 255 ),
	717, 	Uvn( 0, 255 ),
	712, 	Uvn( 0, 255 ),
	713, 	Uvn( 0, 255 ),
	714, 	Uvn( 0, 255 ),
	716, 	Uvn( 0, 255 ),
	720, 	Uvn( 0, 255 ),
	723, 	Uvn( 0, 255 ),
	4072, 	Uvn( 0, 255 ),
	4073, 	Uvn( 0, 255 ),
	4083, 	Uvn( 0, 255 ),
	StripR(5),  
	607, 	Uvn( 0, 255 ),
	594, 	Uvn( 0, 255 ),
	611, 	Uvn( 0, 255 ),
	595, 	Uvn( 0, 255 ),
	608, 	Uvn( 0, 255 ),
	StripL(6),  
	583, 	Uvn( 0, 255 ),
	560, 	Uvn( 0, 255 ),
	582, 	Uvn( 0, 255 ),
	565, 	Uvn( 0, 255 ),
	579, 	Uvn( 0, 255 ),
	566, 	Uvn( 0, 255 ),
	StripL(22),  
	547, 	Uvn( 0, 255 ),
	563, 	Uvn( 0, 255 ),
	549, 	Uvn( 0, 255 ),
	562, 	Uvn( 0, 255 ),
	550, 	Uvn( 0, 255 ),
	4055, 	Uvn( 0, 255 ),
	4052, 	Uvn( 0, 255 ),
	4053, 	Uvn( 0, 255 ),
	4049, 	Uvn( 0, 255 ),
	748, 	Uvn( 0, 255 ),
	741, 	Uvn( 0, 255 ),
	750, 	Uvn( 0, 255 ),
	740, 	Uvn( 0, 255 ),
	751, 	Uvn( 0, 255 ),
	742, 	Uvn( 0, 255 ),
	752, 	Uvn( 0, 255 ),
	743, 	Uvn( 0, 255 ),
	4126, 	Uvn( 0, 255 ),
	4110, 	Uvn( 0, 255 ),
	4128, 	Uvn( 0, 255 ),
	4117, 	Uvn( 0, 255 ),
	4115, 	Uvn( 0, 255 ),
	StripL(20),  
	574, 	Uvn( 0, 255 ),
	556, 	Uvn( 0, 255 ),
	573, 	Uvn( 0, 255 ),
	558, 	Uvn( 0, 255 ),
	576, 	Uvn( 0, 255 ),
	557, 	Uvn( 0, 255 ),
	575, 	Uvn( 0, 255 ),
	4057, 	Uvn( 0, 255 ),
	4059, 	Uvn( 0, 255 ),
	4056, 	Uvn( 0, 255 ),
	4058, 	Uvn( 0, 255 ),
	4054, 	Uvn( 0, 255 ),
	758, 	Uvn( 0, 255 ),
	749, 	Uvn( 0, 255 ),
	757, 	Uvn( 0, 255 ),
	747, 	Uvn( 0, 255 ),
	756, 	Uvn( 0, 255 ),
	746, 	Uvn( 0, 255 ),
	755, 	Uvn( 0, 255 ),
	744, 	Uvn( 0, 255 ),
	StripL(4),  
	850, 	Uvn( 0, 255 ),
	4097, 	Uvn( 0, 255 ),
	4114, 	Uvn( 0, 255 ),
	4111, 	Uvn( 0, 255 ),
	StripL(7),  
	849, 	Uvn( 0, 255 ),
	847, 	Uvn( 0, 255 ),
	844, 	Uvn( 0, 255 ),
	843, 	Uvn( 0, 255 ),
	4080, 	Uvn( 0, 255 ),
	4077, 	Uvn( 0, 255 ),
	4086, 	Uvn( 0, 255 ),
	StripR(7),  
	853, 	Uvn( 0, 255 ),
	845, 	Uvn( 0, 255 ),
	846, 	Uvn( 0, 255 ),
	837, 	Uvn( 0, 255 ),
	840, 	Uvn( 0, 255 ),
	831, 	Uvn( 0, 255 ),
	838, 	Uvn( 0, 255 ),
	StripL(19),  
	4082, 	Uvn( 0, 255 ),
	4075, 	Uvn( 0, 255 ),
	832, 	Uvn( 0, 255 ),
	833, 	Uvn( 0, 255 ),
	824, 	Uvn( 0, 255 ),
	831, 	Uvn( 0, 255 ),
	826, 	Uvn( 0, 255 ),
	838, 	Uvn( 0, 255 ),
	3672, 	Uvn( 0, 255 ),
	3707, 	Uvn( 0, 255 ),
	3701, 	Uvn( 0, 255 ),
	3729, 	Uvn( 0, 255 ),
	3718, 	Uvn( 0, 255 ),
	3722, 	Uvn( 0, 255 ),
	3740, 	Uvn( 0, 255 ),
	3724, 	Uvn( 0, 255 ),
	3735, 	Uvn( 0, 255 ),
	3711, 	Uvn( 0, 255 ),
	3732, 	Uvn( 0, 255 ),
	StripL(5),  
	831, 	Uvn( 0, 255 ),
	833, 	Uvn( 0, 255 ),
	837, 	Uvn( 0, 255 ),
	841, 	Uvn( 0, 255 ),
	845, 	Uvn( 0, 255 ),
	StripR(13),  
	887, 	Uvn( 0, 255 ),
	890, 	Uvn( 0, 255 ),
	4157, 	Uvn( 0, 255 ),
	4144, 	Uvn( 0, 255 ),
	4146, 	Uvn( 0, 255 ),
	4132, 	Uvn( 0, 255 ),
	4135, 	Uvn( 0, 255 ),
	4124, 	Uvn( 0, 255 ),
	4127, 	Uvn( 0, 255 ),
	4120, 	Uvn( 0, 255 ),
	4113, 	Uvn( 0, 255 ),
	868, 	Uvn( 0, 255 ),
	862, 	Uvn( 0, 255 ),
	StripL(8),  
	4127, 	Uvn( 0, 255 ),
	4116, 	Uvn( 0, 255 ),
	4113, 	Uvn( 0, 255 ),
	4095, 	Uvn( 0, 255 ),
	4106, 	Uvn( 0, 255 ),
	4090, 	Uvn( 0, 255 ),
	852, 	Uvn( 0, 255 ),
	842, 	Uvn( 0, 255 ),
	StripR(9),  
	3805, 	Uvn( 0, 255 ),
	3824, 	Uvn( 0, 255 ),
	848, 	Uvn( 0, 255 ),
	857, 	Uvn( 0, 255 ),
	851, 	Uvn( 0, 255 ),
	858, 	Uvn( 0, 255 ),
	855, 	Uvn( 0, 255 ),
	861, 	Uvn( 0, 255 ),
	859, 	Uvn( 0, 255 ),
	StripR(18),  
	3876, 	Uvn( 0, 255 ),
	3847, 	Uvn( 0, 255 ),
	852, 	Uvn( 0, 255 ),
	3808, 	Uvn( 0, 255 ),
	842, 	Uvn( 0, 255 ),
	839, 	Uvn( 0, 255 ),
	835, 	Uvn( 0, 255 ),
	3718, 	Uvn( 0, 255 ),
	3697, 	Uvn( 0, 255 ),
	3702, 	Uvn( 0, 255 ),
	3673, 	Uvn( 0, 255 ),
	3674, 	Uvn( 0, 255 ),
	3655, 	Uvn( 0, 255 ),
	3641, 	Uvn( 0, 255 ),
	3633, 	Uvn( 0, 255 ),
	3647, 	Uvn( 0, 255 ),
	3631, 	Uvn( 0, 255 ),
	3630, 	Uvn( 0, 255 ),
	StripR(12),  
	3771, 	Uvn( 0, 255 ),
	3789, 	Uvn( 0, 255 ),
	3792, 	Uvn( 0, 255 ),
	3766, 	Uvn( 0, 255 ),
	3783, 	Uvn( 0, 255 ),
	3746, 	Uvn( 0, 255 ),
	3753, 	Uvn( 0, 255 ),
	3735, 	Uvn( 0, 255 ),
	3757, 	Uvn( 0, 255 ),
	3740, 	Uvn( 0, 255 ),
	839, 	Uvn( 0, 255 ),
	3718, 	Uvn( 0, 255 ),
	StripR(9),  
	3803, 	Uvn( 0, 255 ),
	3791, 	Uvn( 0, 255 ),
	3787, 	Uvn( 0, 255 ),
	3770, 	Uvn( 0, 255 ),
	3793, 	Uvn( 0, 255 ),
	3790, 	Uvn( 0, 255 ),
	3818, 	Uvn( 0, 255 ),
	3813, 	Uvn( 0, 255 ),
	3839, 	Uvn( 0, 255 ),
	StripL(3),  
	3845, 	Uvn( 0, 255 ),
	3859, 	Uvn( 0, 255 ),
	3834, 	Uvn( 0, 255 ),
	StripR(9),  
	3872, 	Uvn( 0, 255 ),
	3890, 	Uvn( 0, 255 ),
	3889, 	Uvn( 0, 255 ),
	3904, 	Uvn( 0, 255 ),
	3903, 	Uvn( 0, 255 ),
	3914, 	Uvn( 0, 255 ),
	3894, 	Uvn( 0, 255 ),
	3906, 	Uvn( 0, 255 ),
	3879, 	Uvn( 0, 255 ),
	StripL(3),  
	3902, 	Uvn( 0, 255 ),
	3884, 	Uvn( 0, 255 ),
	3882, 	Uvn( 0, 255 ),
	StripR(5),  
	3892, 	Uvn( 0, 255 ),
	3910, 	Uvn( 0, 255 ),
	3900, 	Uvn( 0, 255 ),
	3898, 	Uvn( 0, 255 ),
	3886, 	Uvn( 0, 255 ),
	StripL(49),  
	3959, 	Uvn( 0, 255 ),
	3930, 	Uvn( 0, 255 ),
	3942, 	Uvn( 0, 255 ),
	3892, 	Uvn( 0, 255 ),
	3929, 	Uvn( 0, 255 ),
	3910, 	Uvn( 0, 255 ),
	3919, 	Uvn( 0, 255 ),
	3898, 	Uvn( 0, 255 ),
	3893, 	Uvn( 0, 255 ),
	3880, 	Uvn( 0, 255 ),
	3877, 	Uvn( 0, 255 ),
	3867, 	Uvn( 0, 255 ),
	3862, 	Uvn( 0, 255 ),
	3870, 	Uvn( 0, 255 ),
	3866, 	Uvn( 0, 255 ),
	3896, 	Uvn( 0, 255 ),
	3891, 	Uvn( 0, 255 ),
	3923, 	Uvn( 0, 255 ),
	3916, 	Uvn( 0, 255 ),
	3924, 	Uvn( 0, 255 ),
	3920, 	Uvn( 0, 255 ),
	3902, 	Uvn( 0, 255 ),
	3905, 	Uvn( 0, 255 ),
	3882, 	Uvn( 0, 255 ),
	3899, 	Uvn( 0, 255 ),
	3881, 	Uvn( 0, 255 ),
	3901, 	Uvn( 0, 255 ),
	3888, 	Uvn( 0, 255 ),
	3890, 	Uvn( 0, 255 ),
	3875, 	Uvn( 0, 255 ),
	3872, 	Uvn( 0, 255 ),
	3846, 	Uvn( 0, 255 ),
	3873, 	Uvn( 0, 255 ),
	3859, 	Uvn( 0, 255 ),
	3879, 	Uvn( 0, 255 ),
	3845, 	Uvn( 0, 255 ),
	3842, 	Uvn( 0, 255 ),
	3834, 	Uvn( 0, 255 ),
	3831, 	Uvn( 0, 255 ),
	3838, 	Uvn( 0, 255 ),
	3855, 	Uvn( 0, 255 ),
	3860, 	Uvn( 0, 255 ),
	3881, 	Uvn( 0, 255 ),
	3841, 	Uvn( 0, 255 ),
	3854, 	Uvn( 0, 255 ),
	3856, 	Uvn( 0, 255 ),
	3874, 	Uvn( 0, 255 ),
	3875, 	Uvn( 0, 255 ),
	3888, 	Uvn( 0, 255 ),
	StripL(4),  
	3937, 	Uvn( 0, 255 ),
	3963, 	Uvn( 0, 255 ),
	3949, 	Uvn( 0, 255 ),
	3974, 	Uvn( 0, 255 ),
	StripL(14),  
	3977, 	Uvn( 0, 255 ),
	3957, 	Uvn( 0, 255 ),
	3962, 	Uvn( 0, 255 ),
	3940, 	Uvn( 0, 255 ),
	3946, 	Uvn( 0, 255 ),
	3932, 	Uvn( 0, 255 ),
	3934, 	Uvn( 0, 255 ),
	3952, 	Uvn( 0, 255 ),
	3958, 	Uvn( 0, 255 ),
	3976, 	Uvn( 0, 255 ),
	3978, 	Uvn( 0, 255 ),
	4001, 	Uvn( 0, 255 ),
	3986, 	Uvn( 0, 255 ),
	4002, 	Uvn( 0, 255 ),
	StripL(9),  
	3997, 	Uvn( 0, 255 ),
	3992, 	Uvn( 0, 255 ),
	3993, 	Uvn( 0, 255 ),
	3966, 	Uvn( 0, 255 ),
	3967, 	Uvn( 0, 255 ),
	3947, 	Uvn( 0, 255 ),
	3945, 	Uvn( 0, 255 ),
	3941, 	Uvn( 0, 255 ),
	3913, 	Uvn( 0, 255 ),
	StripR(10),  
	3987, 	Uvn( 0, 255 ),
	3988, 	Uvn( 0, 255 ),
	4004, 	Uvn( 0, 255 ),
	4005, 	Uvn( 0, 255 ),
	4000, 	Uvn( 0, 255 ),
	4003, 	Uvn( 0, 255 ),
	3973, 	Uvn( 0, 255 ),
	877, 	Uvn( 0, 255 ),
	870, 	Uvn( 0, 255 ),
	869, 	Uvn( 0, 255 ),
	StripL(3),  
	3991, 	Uvn( 0, 255 ),
	3983, 	Uvn( 0, 255 ),
	3979, 	Uvn( 0, 255 ),
	StripL(143),  
	3980, 	Uvn( 0, 255 ),
	3981, 	Uvn( 0, 255 ),
	3984, 	Uvn( 0, 255 ),
	3983, 	Uvn( 0, 255 ),
	3996, 	Uvn( 0, 255 ),
	3991, 	Uvn( 0, 255 ),
	3989, 	Uvn( 0, 255 ),
	3985, 	Uvn( 0, 255 ),
	3956, 	Uvn( 0, 255 ),
	3975, 	Uvn( 0, 255 ),
	3964, 	Uvn( 0, 255 ),
	3969, 	Uvn( 0, 255 ),
	3950, 	Uvn( 0, 255 ),
	3972, 	Uvn( 0, 255 ),
	3954, 	Uvn( 0, 255 ),
	3970, 	Uvn( 0, 255 ),
	3955, 	Uvn( 0, 255 ),
	3981, 	Uvn( 0, 255 ),
	3960, 	Uvn( 0, 255 ),
	3980, 	Uvn( 0, 255 ),
	3961, 	Uvn( 0, 255 ),
	3984, 	Uvn( 0, 255 ),
	3982, 	Uvn( 0, 255 ),
	3997, 	Uvn( 0, 255 ),
	3990, 	Uvn( 0, 255 ),
	3998, 	Uvn( 0, 255 ),
	3999, 	Uvn( 0, 255 ),
	3994, 	Uvn( 0, 255 ),
	3995, 	Uvn( 0, 255 ),
	3968, 	Uvn( 0, 255 ),
	3965, 	Uvn( 0, 255 ),
	3935, 	Uvn( 0, 255 ),
	3943, 	Uvn( 0, 255 ),
	3915, 	Uvn( 0, 255 ),
	864, 	Uvn( 0, 255 ),
	3897, 	Uvn( 0, 255 ),
	857, 	Uvn( 0, 255 ),
	3878, 	Uvn( 0, 255 ),
	3858, 	Uvn( 0, 255 ),
	3848, 	Uvn( 0, 255 ),
	3824, 	Uvn( 0, 255 ),
	3822, 	Uvn( 0, 255 ),
	3805, 	Uvn( 0, 255 ),
	3800, 	Uvn( 0, 255 ),
	3784, 	Uvn( 0, 255 ),
	3796, 	Uvn( 0, 255 ),
	3795, 	Uvn( 0, 255 ),
	3815, 	Uvn( 0, 255 ),
	3808, 	Uvn( 0, 255 ),
	3835, 	Uvn( 0, 255 ),
	3847, 	Uvn( 0, 255 ),
	3857, 	Uvn( 0, 255 ),
	3876, 	Uvn( 0, 255 ),
	3892, 	Uvn( 0, 255 ),
	862, 	Uvn( 0, 255 ),
	3930, 	Uvn( 0, 255 ),
	868, 	Uvn( 0, 255 ),
	3959, 	Uvn( 0, 255 ),
	876, 	Uvn( 0, 255 ),
	3986, 	Uvn( 0, 255 ),
	882, 	Uvn( 0, 255 ),
	4002, 	Uvn( 0, 255 ),
	885, 	Uvn( 0, 255 ),
	891, 	Uvn( 0, 255 ),
	890, 	Uvn( 0, 255 ),
	889, 	Uvn( 0, 255 ),
	887, 	Uvn( 0, 255 ),
	878, 	Uvn( 0, 255 ),
	879, 	Uvn( 0, 255 ),
	869, 	Uvn( 0, 255 ),
	872, 	Uvn( 0, 255 ),
	866, 	Uvn( 0, 255 ),
	871, 	Uvn( 0, 255 ),
	865, 	Uvn( 0, 255 ),
	867, 	Uvn( 0, 255 ),
	859, 	Uvn( 0, 255 ),
	854, 	Uvn( 0, 255 ),
	853, 	Uvn( 0, 255 ),
	847, 	Uvn( 0, 255 ),
	845, 	Uvn( 0, 255 ),
	843, 	Uvn( 0, 255 ),
	841, 	Uvn( 0, 255 ),
	4077, 	Uvn( 0, 255 ),
	4075, 	Uvn( 0, 255 ),
	4085, 	Uvn( 0, 255 ),
	4082, 	Uvn( 0, 255 ),
	4081, 	Uvn( 0, 255 ),
	4094, 	Uvn( 0, 255 ),
	4087, 	Uvn( 0, 255 ),
	4096, 	Uvn( 0, 255 ),
	4083, 	Uvn( 0, 255 ),
	4089, 	Uvn( 0, 255 ),
	4073, 	Uvn( 0, 255 ),
	4078, 	Uvn( 0, 255 ),
	730, 	Uvn( 0, 255 ),
	4098, 	Uvn( 0, 255 ),
	738, 	Uvn( 0, 255 ),
	745, 	Uvn( 0, 255 ),
	744, 	Uvn( 0, 255 ),
	754, 	Uvn( 0, 255 ),
	755, 	Uvn( 0, 255 ),
	770, 	Uvn( 0, 255 ),
	771, 	Uvn( 0, 255 ),
	782, 	Uvn( 0, 255 ),
	779, 	Uvn( 0, 255 ),
	788, 	Uvn( 0, 255 ),
	790, 	Uvn( 0, 255 ),
	784, 	Uvn( 0, 255 ),
	4066, 	Uvn( 0, 255 ),
	4064, 	Uvn( 0, 255 ),
	587, 	Uvn( 0, 255 ),
	578, 	Uvn( 0, 255 ),
	583, 	Uvn( 0, 255 ),
	561, 	Uvn( 0, 255 ),
	560, 	Uvn( 0, 255 ),
	548, 	Uvn( 0, 255 ),
	544, 	Uvn( 0, 255 ),
	525, 	Uvn( 0, 255 ),
	523, 	Uvn( 0, 255 ),
	504, 	Uvn( 0, 255 ),
	496, 	Uvn( 0, 255 ),
	490, 	Uvn( 0, 255 ),
	489, 	Uvn( 0, 255 ),
	486, 	Uvn( 0, 255 ),
	485, 	Uvn( 0, 255 ),
	482, 	Uvn( 0, 255 ),
	483, 	Uvn( 0, 255 ),
	479, 	Uvn( 0, 255 ),
	480, 	Uvn( 0, 255 ),
	478, 	Uvn( 0, 255 ),
	3424, 	Uvn( 0, 255 ),
	3423, 	Uvn( 0, 255 ),
	3428, 	Uvn( 0, 255 ),
	3427, 	Uvn( 0, 255 ),
	3431, 	Uvn( 0, 255 ),
	632, 	Uvn( 0, 255 ),
	3435, 	Uvn( 0, 255 ),
	635, 	Uvn( 0, 255 ),
	638, 	Uvn( 0, 255 ),
	3550, 	Uvn( 0, 255 ),
	642, 	Uvn( 0, 255 ),
	3554, 	Uvn( 0, 255 ),
	651, 	Uvn( 0, 255 ),
	StripR(6),  
	3927, 	Uvn( 0, 255 ),
	3956, 	Uvn( 0, 255 ),
	3918, 	Uvn( 0, 255 ),
	3925, 	Uvn( 0, 255 ),
	3912, 	Uvn( 0, 255 ),
	3928, 	Uvn( 0, 255 ),
	StripL(3),  
	3939, 	Uvn( 0, 255 ),
	3926, 	Uvn( 0, 255 ),
	3938, 	Uvn( 0, 255 ),
	StripL(10),  
	3986, 	Uvn( 0, 255 ),
	3959, 	Uvn( 0, 255 ),
	3951, 	Uvn( 0, 255 ),
	3942, 	Uvn( 0, 255 ),
	3941, 	Uvn( 0, 255 ),
	3929, 	Uvn( 0, 255 ),
	3913, 	Uvn( 0, 255 ),
	3931, 	Uvn( 0, 255 ),
	3923, 	Uvn( 0, 255 ),
	3924, 	Uvn( 0, 255 ),
	StripR(6),  
	3909, 	Uvn( 0, 255 ),
	3902, 	Uvn( 0, 255 ),
	3893, 	Uvn( 0, 255 ),
	3884, 	Uvn( 0, 255 ),
	3868, 	Uvn( 0, 255 ),
	3882, 	Uvn( 0, 255 ),
	StripL(3),  
	3904, 	Uvn( 0, 255 ),
	3901, 	Uvn( 0, 255 ),
	3890, 	Uvn( 0, 255 ),
	StripL(4),  
	3888, 	Uvn( 0, 255 ),
	3881, 	Uvn( 0, 255 ),
	3874, 	Uvn( 0, 255 ),
	3854, 	Uvn( 0, 255 ),
	StripL(15),  
	3881, 	Uvn( 0, 255 ),
	3882, 	Uvn( 0, 255 ),
	3855, 	Uvn( 0, 255 ),
	3868, 	Uvn( 0, 255 ),
	3833, 	Uvn( 0, 255 ),
	3843, 	Uvn( 0, 255 ),
	3851, 	Uvn( 0, 255 ),
	3863, 	Uvn( 0, 255 ),
	3883, 	Uvn( 0, 255 ),
	3887, 	Uvn( 0, 255 ),
	3908, 	Uvn( 0, 255 ),
	3911, 	Uvn( 0, 255 ),
	3921, 	Uvn( 0, 255 ),
	3920, 	Uvn( 0, 255 ),
	3905, 	Uvn( 0, 255 ),
	StripL(4),  
	3862, 	Uvn( 0, 255 ),
	3868, 	Uvn( 0, 255 ),
	3877, 	Uvn( 0, 255 ),
	3893, 	Uvn( 0, 255 ),
	StripR(12),  
	3898, 	Uvn( 0, 255 ),
	3880, 	Uvn( 0, 255 ),
	3886, 	Uvn( 0, 255 ),
	3869, 	Uvn( 0, 255 ),
	3857, 	Uvn( 0, 255 ),
	3865, 	Uvn( 0, 255 ),
	3849, 	Uvn( 0, 255 ),
	3864, 	Uvn( 0, 255 ),
	3837, 	Uvn( 0, 255 ),
	3861, 	Uvn( 0, 255 ),
	3826, 	Uvn( 0, 255 ),
	3850, 	Uvn( 0, 255 ),
	StripL(4),  
	3900, 	Uvn( 0, 255 ),
	3892, 	Uvn( 0, 255 ),
	3886, 	Uvn( 0, 255 ),
	3857, 	Uvn( 0, 255 ),
	StripR(7),  
	3779, 	Uvn( 0, 255 ),
	3772, 	Uvn( 0, 255 ),
	3762, 	Uvn( 0, 255 ),
	3781, 	Uvn( 0, 255 ),
	3769, 	Uvn( 0, 255 ),
	3804, 	Uvn( 0, 255 ),
	3767, 	Uvn( 0, 255 ),
	StripL(7),  
	3747, 	Uvn( 0, 255 ),
	3750, 	Uvn( 0, 255 ),
	3771, 	Uvn( 0, 255 ),
	3788, 	Uvn( 0, 255 ),
	3792, 	Uvn( 0, 255 ),
	3784, 	Uvn( 0, 255 ),
	3795, 	Uvn( 0, 255 ),
	StripL(4),  
	3728, 	Uvn( 0, 255 ),
	3709, 	Uvn( 0, 255 ),
	3734, 	Uvn( 0, 255 ),
	3696, 	Uvn( 0, 255 ),
	StripL(12),  
	3705, 	Uvn( 0, 255 ),
	3730, 	Uvn( 0, 255 ),
	3704, 	Uvn( 0, 255 ),
	3736, 	Uvn( 0, 255 ),
	3692, 	Uvn( 0, 255 ),
	3706, 	Uvn( 0, 255 ),
	3688, 	Uvn( 0, 255 ),
	3703, 	Uvn( 0, 255 ),
	3679, 	Uvn( 0, 255 ),
	3680, 	Uvn( 0, 255 ),
	3690, 	Uvn( 0, 255 ),
	3699, 	Uvn( 0, 255 ),
	StripR(6),  
	3711, 	Uvn( 0, 255 ),
	3725, 	Uvn( 0, 255 ),
	3724, 	Uvn( 0, 255 ),
	3726, 	Uvn( 0, 255 ),
	3722, 	Uvn( 0, 255 ),
	3729, 	Uvn( 0, 255 ),
	StripL(3),  
	3721, 	Uvn( 0, 255 ),
	3723, 	Uvn( 0, 255 ),
	3693, 	Uvn( 0, 255 ),
	StripL(3),  
	3683, 	Uvn( 0, 255 ),
	3658, 	Uvn( 0, 255 ),
	3685, 	Uvn( 0, 255 ),
	StripL(3),  
	3648, 	Uvn( 0, 255 ),
	3670, 	Uvn( 0, 255 ),
	3644, 	Uvn( 0, 255 ),
	StripL(14),  
	820, 	Uvn( 0, 255 ),
	3645, 	Uvn( 0, 255 ),
	816, 	Uvn( 0, 255 ),
	3643, 	Uvn( 0, 255 ),
	3634, 	Uvn( 0, 255 ),
	3648, 	Uvn( 0, 255 ),
	3638, 	Uvn( 0, 255 ),
	3644, 	Uvn( 0, 255 ),
	3633, 	Uvn( 0, 255 ),
	3637, 	Uvn( 0, 255 ),
	3631, 	Uvn( 0, 255 ),
	3635, 	Uvn( 0, 255 ),
	3630, 	Uvn( 0, 255 ),
	3639, 	Uvn( 0, 255 ),
	StripL(3),  
	3858, 	Uvn( 0, 255 ),
	3824, 	Uvn( 0, 255 ),
	857, 	Uvn( 0, 255 ),
	StripL(9),  
	884, 	Uvn( 0, 255 ),
	4141, 	Uvn( 0, 255 ),
	4139, 	Uvn( 0, 255 ),
	4142, 	Uvn( 0, 255 ),
	4149, 	Uvn( 0, 255 ),
	4150, 	Uvn( 0, 255 ),
	4153, 	Uvn( 0, 255 ),
	4156, 	Uvn( 0, 255 ),
	4158, 	Uvn( 0, 255 ),
	StripR(12),  
	4141, 	Uvn( 0, 255 ),
	880, 	Uvn( 0, 255 ),
	884, 	Uvn( 0, 255 ),
	881, 	Uvn( 0, 255 ),
	4139, 	Uvn( 0, 255 ),
	888, 	Uvn( 0, 255 ),
	4149, 	Uvn( 0, 255 ),
	4152, 	Uvn( 0, 255 ),
	4153, 	Uvn( 0, 255 ),
	4154, 	Uvn( 0, 255 ),
	4158, 	Uvn( 0, 255 ),
	4159, 	Uvn( 0, 255 ),
	StripL(12),  
	4094, 	Uvn( 0, 255 ),
	4082, 	Uvn( 0, 255 ),
	4074, 	Uvn( 0, 255 ),
	832, 	Uvn( 0, 255 ),
	830, 	Uvn( 0, 255 ),
	822, 	Uvn( 0, 255 ),
	817, 	Uvn( 0, 255 ),
	819, 	Uvn( 0, 255 ),
	818, 	Uvn( 0, 255 ),
	3672, 	Uvn( 0, 255 ),
	3665, 	Uvn( 0, 255 ),
	3701, 	Uvn( 0, 255 ),
	StripL(4),  
	4136, 	Uvn( 0, 255 ),
	4134, 	Uvn( 0, 255 ),
	4121, 	Uvn( 0, 255 ),
	4122, 	Uvn( 0, 255 ),
	StripL(4),  
	3729, 	Uvn( 0, 255 ),
	3707, 	Uvn( 0, 255 ),
	3733, 	Uvn( 0, 255 ),
	838, 	Uvn( 0, 255 ),
	StripL(3),  
	3689, 	Uvn( 0, 255 ),
	3687, 	Uvn( 0, 255 ),
	3677, 	Uvn( 0, 255 ),
	StripL(11),  
	3677, 	Uvn( 0, 255 ),
	3682, 	Uvn( 0, 255 ),
	3689, 	Uvn( 0, 255 ),
	3714, 	Uvn( 0, 255 ),
	3687, 	Uvn( 0, 255 ),
	3717, 	Uvn( 0, 255 ),
	3686, 	Uvn( 0, 255 ),
	3716, 	Uvn( 0, 255 ),
	3684, 	Uvn( 0, 255 ),
	3719, 	Uvn( 0, 255 ),
	3700, 	Uvn( 0, 255 ),
	StripR(13),  
	3671, 	Uvn( 0, 255 ),
	3712, 	Uvn( 0, 255 ),
	3668, 	Uvn( 0, 255 ),
	3670, 	Uvn( 0, 255 ),
	3671, 	Uvn( 0, 255 ),
	3644, 	Uvn( 0, 255 ),
	3669, 	Uvn( 0, 255 ),
	3637, 	Uvn( 0, 255 ),
	3660, 	Uvn( 0, 255 ),
	3635, 	Uvn( 0, 255 ),
	3664, 	Uvn( 0, 255 ),
	3639, 	Uvn( 0, 255 ),
	3651, 	Uvn( 0, 255 ),
	StripL(3),  
	3735, 	Uvn( 0, 255 ),
	3732, 	Uvn( 0, 255 ),
	3746, 	Uvn( 0, 255 ),
	StripL(3),  
	3739, 	Uvn( 0, 255 ),
	3720, 	Uvn( 0, 255 ),
	3737, 	Uvn( 0, 255 ),
	StripL(7),  
	3761, 	Uvn( 0, 255 ),
	3758, 	Uvn( 0, 255 ),
	3745, 	Uvn( 0, 255 ),
	3744, 	Uvn( 0, 255 ),
	3727, 	Uvn( 0, 255 ),
	3731, 	Uvn( 0, 255 ),
	3698, 	Uvn( 0, 255 ),
	StripR(6),  
	3792, 	Uvn( 0, 255 ),
	3783, 	Uvn( 0, 255 ),
	3795, 	Uvn( 0, 255 ),
	3777, 	Uvn( 0, 255 ),
	3808, 	Uvn( 0, 255 ),
	839, 	Uvn( 0, 255 ),
	StripL(12),  
	3806, 	Uvn( 0, 255 ),
	3815, 	Uvn( 0, 255 ),
	3794, 	Uvn( 0, 255 ),
	3796, 	Uvn( 0, 255 ),
	3797, 	Uvn( 0, 255 ),
	3800, 	Uvn( 0, 255 ),
	3821, 	Uvn( 0, 255 ),
	3822, 	Uvn( 0, 255 ),
	3852, 	Uvn( 0, 255 ),
	3848, 	Uvn( 0, 255 ),
	3864, 	Uvn( 0, 255 ),
	3865, 	Uvn( 0, 255 ),
	StripL(7),  
	3778, 	Uvn( 0, 255 ),
	3768, 	Uvn( 0, 255 ),
	3779, 	Uvn( 0, 255 ),
	3765, 	Uvn( 0, 255 ),
	3762, 	Uvn( 0, 255 ),
	3756, 	Uvn( 0, 255 ),
	3767, 	Uvn( 0, 255 ),
	StripR(9),  
	3844, 	Uvn( 0, 255 ),
	3820, 	Uvn( 0, 255 ),
	3829, 	Uvn( 0, 255 ),
	3816, 	Uvn( 0, 255 ),
	3828, 	Uvn( 0, 255 ),
	3817, 	Uvn( 0, 255 ),
	3825, 	Uvn( 0, 255 ),
	3814, 	Uvn( 0, 255 ),
	3807, 	Uvn( 0, 255 ),
	StripL(4),  
	3873, 	Uvn( 0, 255 ),
	3885, 	Uvn( 0, 255 ),
	3872, 	Uvn( 0, 255 ),
	3889, 	Uvn( 0, 255 ),
	StripR(5),  
	3917, 	Uvn( 0, 255 ),
	3907, 	Uvn( 0, 255 ),
	3922, 	Uvn( 0, 255 ),
	3937, 	Uvn( 0, 255 ),
	3944, 	Uvn( 0, 255 ),
	StripR(12),  
	3986, 	Uvn( 0, 255 ),
	3978, 	Uvn( 0, 255 ),
	3951, 	Uvn( 0, 255 ),
	3958, 	Uvn( 0, 255 ),
	3941, 	Uvn( 0, 255 ),
	3934, 	Uvn( 0, 255 ),
	3947, 	Uvn( 0, 255 ),
	3946, 	Uvn( 0, 255 ),
	3966, 	Uvn( 0, 255 ),
	3962, 	Uvn( 0, 255 ),
	3992, 	Uvn( 0, 255 ),
	3977, 	Uvn( 0, 255 ),
	StripR(5),  
	4001, 	Uvn( 0, 255 ),
	4002, 	Uvn( 0, 255 ),
	4006, 	Uvn( 0, 255 ),
	891, 	Uvn( 0, 255 ),
	889, 	Uvn( 0, 255 ),
	StripR(15),  
	3997, 	Uvn( 0, 255 ),
	3998, 	Uvn( 0, 255 ),
	3993, 	Uvn( 0, 255 ),
	3994, 	Uvn( 0, 255 ),
	3967, 	Uvn( 0, 255 ),
	3968, 	Uvn( 0, 255 ),
	3945, 	Uvn( 0, 255 ),
	3935, 	Uvn( 0, 255 ),
	3913, 	Uvn( 0, 255 ),
	3915, 	Uvn( 0, 255 ),
	3895, 	Uvn( 0, 255 ),
	3897, 	Uvn( 0, 255 ),
	3871, 	Uvn( 0, 255 ),
	3878, 	Uvn( 0, 255 ),
	3848, 	Uvn( 0, 255 ),
	StripR(25),  
	3984, 	Uvn( 0, 255 ),
	3997, 	Uvn( 0, 255 ),
	3996, 	Uvn( 0, 255 ),
	3992, 	Uvn( 0, 255 ),
	3989, 	Uvn( 0, 255 ),
	3977, 	Uvn( 0, 255 ),
	3956, 	Uvn( 0, 255 ),
	3957, 	Uvn( 0, 255 ),
	3925, 	Uvn( 0, 255 ),
	3940, 	Uvn( 0, 255 ),
	3928, 	Uvn( 0, 255 ),
	3932, 	Uvn( 0, 255 ),
	3948, 	Uvn( 0, 255 ),
	3952, 	Uvn( 0, 255 ),
	3971, 	Uvn( 0, 255 ),
	3976, 	Uvn( 0, 255 ),
	3988, 	Uvn( 0, 255 ),
	4001, 	Uvn( 0, 255 ),
	4005, 	Uvn( 0, 255 ),
	4006, 	Uvn( 0, 255 ),
	4003, 	Uvn( 0, 255 ),
	889, 	Uvn( 0, 255 ),
	877, 	Uvn( 0, 255 ),
	878, 	Uvn( 0, 255 ),
	869, 	Uvn( 0, 255 ),
	StripR(9),  
	3970, 	Uvn( 0, 255 ),
	3981, 	Uvn( 0, 255 ),
	3972, 	Uvn( 0, 255 ),
	3983, 	Uvn( 0, 255 ),
	3969, 	Uvn( 0, 255 ),
	3979, 	Uvn( 0, 255 ),
	3975, 	Uvn( 0, 255 ),
	3991, 	Uvn( 0, 255 ),
	3985, 	Uvn( 0, 255 ),
	StripL(3),  
	3909, 	Uvn( 0, 255 ),
	3919, 	Uvn( 0, 255 ),
	3893, 	Uvn( 0, 255 ),
	StripL(6),  
	3873, 	Uvn( 0, 255 ),
	3879, 	Uvn( 0, 255 ),
	3885, 	Uvn( 0, 255 ),
	3894, 	Uvn( 0, 255 ),
	3889, 	Uvn( 0, 255 ),
	3903, 	Uvn( 0, 255 ),
	StripR(9),  
	3880, 	Uvn( 0, 255 ),
	3867, 	Uvn( 0, 255 ),
	3869, 	Uvn( 0, 255 ),
	3870, 	Uvn( 0, 255 ),
	3871, 	Uvn( 0, 255 ),
	3896, 	Uvn( 0, 255 ),
	3895, 	Uvn( 0, 255 ),
	3923, 	Uvn( 0, 255 ),
	3913, 	Uvn( 0, 255 ),
	StripL(3),  
	3829, 	Uvn( 0, 255 ),
	3844, 	Uvn( 0, 255 ),
	3828, 	Uvn( 0, 255 ),
	StripL(5),  
	3793, 	Uvn( 0, 255 ),
	3787, 	Uvn( 0, 255 ),
	3794, 	Uvn( 0, 255 ),
	3803, 	Uvn( 0, 255 ),
	3806, 	Uvn( 0, 255 ),
	StripR(5),  
	3783, 	Uvn( 0, 255 ),
	3753, 	Uvn( 0, 255 ),
	3777, 	Uvn( 0, 255 ),
	3757, 	Uvn( 0, 255 ),
	839, 	Uvn( 0, 255 ),
	StripR(13),  
	3739, 	Uvn( 0, 255 ),
	3754, 	Uvn( 0, 255 ),
	3737, 	Uvn( 0, 255 ),
	3760, 	Uvn( 0, 255 ),
	3752, 	Uvn( 0, 255 ),
	3755, 	Uvn( 0, 255 ),
	3736, 	Uvn( 0, 255 ),
	3743, 	Uvn( 0, 255 ),
	3730, 	Uvn( 0, 255 ),
	3731, 	Uvn( 0, 255 ),
	3705, 	Uvn( 0, 255 ),
	3698, 	Uvn( 0, 255 ),
	3681, 	Uvn( 0, 255 ),
	StripR(6),  
	3760, 	Uvn( 0, 255 ),
	3758, 	Uvn( 0, 255 ),
	3755, 	Uvn( 0, 255 ),
	3744, 	Uvn( 0, 255 ),
	3743, 	Uvn( 0, 255 ),
	3731, 	Uvn( 0, 255 ),
	StripR(9),  
	3752, 	Uvn( 0, 255 ),
	3736, 	Uvn( 0, 255 ),
	3737, 	Uvn( 0, 255 ),
	3703, 	Uvn( 0, 255 ),
	3720, 	Uvn( 0, 255 ),
	3680, 	Uvn( 0, 255 ),
	3694, 	Uvn( 0, 255 ),
	3699, 	Uvn( 0, 255 ),
	3715, 	Uvn( 0, 255 ),
	StripL(7),  
	3704, 	Uvn( 0, 255 ),
	3692, 	Uvn( 0, 255 ),
	3705, 	Uvn( 0, 255 ),
	3688, 	Uvn( 0, 255 ),
	3681, 	Uvn( 0, 255 ),
	3679, 	Uvn( 0, 255 ),
	3690, 	Uvn( 0, 255 ),
	StripL(3),  
	3686, 	Uvn( 0, 255 ),
	3684, 	Uvn( 0, 255 ),
	3659, 	Uvn( 0, 255 ),
	StripR(5),  
	3662, 	Uvn( 0, 255 ),
	3647, 	Uvn( 0, 255 ),
	3667, 	Uvn( 0, 255 ),
	3641, 	Uvn( 0, 255 ),
	3674, 	Uvn( 0, 255 ),
	StripL(21),  
	596, 	Uvn( 0, 255 ),
	609, 	Uvn( 0, 255 ),
	614, 	Uvn( 0, 255 ),
	620, 	Uvn( 0, 255 ),
	621, 	Uvn( 0, 255 ),
	613, 	Uvn( 0, 255 ),
	623, 	Uvn( 0, 255 ),
	619, 	Uvn( 0, 255 ),
	625, 	Uvn( 0, 255 ),
	600, 	Uvn( 0, 255 ),
	601, 	Uvn( 0, 255 ),
	584, 	Uvn( 0, 255 ),
	577, 	Uvn( 0, 255 ),
	553, 	Uvn( 0, 255 ),
	552, 	Uvn( 0, 255 ),
	527, 	Uvn( 0, 255 ),
	520, 	Uvn( 0, 255 ),
	497, 	Uvn( 0, 255 ),
	494, 	Uvn( 0, 255 ),
	485, 	Uvn( 0, 255 ),
	483, 	Uvn( 0, 255 ),
	StripL(6),  
	3648, 	Uvn( 0, 255 ),
	3643, 	Uvn( 0, 255 ),
	3670, 	Uvn( 0, 255 ),
	3666, 	Uvn( 0, 255 ),
	3712, 	Uvn( 0, 255 ),
	3713, 	Uvn( 0, 255 ),
	StripL(6),  
	821, 	Uvn( 0, 255 ),
	823, 	Uvn( 0, 255 ),
	816, 	Uvn( 0, 255 ),
	825, 	Uvn( 0, 255 ),
	820, 	Uvn( 0, 255 ),
	827, 	Uvn( 0, 255 ),
	StripL(3),  
	3643, 	Uvn( 0, 255 ),
	3645, 	Uvn( 0, 255 ),
	3666, 	Uvn( 0, 255 ),
	StripL(4),  
	3848, 	Uvn( 0, 255 ),
	3871, 	Uvn( 0, 255 ),
	3865, 	Uvn( 0, 255 ),
	3869, 	Uvn( 0, 255 ),
	StripR(5),  
	3876, 	Uvn( 0, 255 ),
	852, 	Uvn( 0, 255 ),
	862, 	Uvn( 0, 255 ),
	4106, 	Uvn( 0, 255 ),
	4113, 	Uvn( 0, 255 ),
	StripL(4),  
	842, 	Uvn( 0, 255 ),
	4090, 	Uvn( 0, 255 ),
	836, 	Uvn( 0, 255 ),
	4095, 	Uvn( 0, 255 ),
	StripL(9),  
	4120, 	Uvn( 0, 255 ),
	868, 	Uvn( 0, 255 ),
	4124, 	Uvn( 0, 255 ),
	876, 	Uvn( 0, 255 ),
	4132, 	Uvn( 0, 255 ),
	882, 	Uvn( 0, 255 ),
	4144, 	Uvn( 0, 255 ),
	885, 	Uvn( 0, 255 ),
	890, 	Uvn( 0, 255 ),
	StripR(10),  
	4122, 	Uvn( 0, 255 ),
	880, 	Uvn( 0, 255 ),
	4134, 	Uvn( 0, 255 ),
	4141, 	Uvn( 0, 255 ),
	4136, 	Uvn( 0, 255 ),
	4142, 	Uvn( 0, 255 ),
	4147, 	Uvn( 0, 255 ),
	4150, 	Uvn( 0, 255 ),
	4151, 	Uvn( 0, 255 ),
	4156, 	Uvn( 0, 255 ),
	StripR(6),  
	555, 	Uvn( 0, 255 ),
	526, 	Uvn( 0, 255 ),
	554, 	Uvn( 0, 255 ),
	521, 	Uvn( 0, 255 ),
	551, 	Uvn( 0, 255 ),
	511, 	Uvn( 0, 255 ),
	StripL(17),  
	859, 	Uvn( 0, 255 ),
	865, 	Uvn( 0, 255 ),
	861, 	Uvn( 0, 255 ),
	866, 	Uvn( 0, 255 ),
	863, 	Uvn( 0, 255 ),
	869, 	Uvn( 0, 255 ),
	864, 	Uvn( 0, 255 ),
	870, 	Uvn( 0, 255 ),
	3943, 	Uvn( 0, 255 ),
	3973, 	Uvn( 0, 255 ),
	3965, 	Uvn( 0, 255 ),
	4000, 	Uvn( 0, 255 ),
	3995, 	Uvn( 0, 255 ),
	4004, 	Uvn( 0, 255 ),
	3999, 	Uvn( 0, 255 ),
	3987, 	Uvn( 0, 255 ),
	3990, 	Uvn( 0, 255 ),
	StripL(3),  
	841, 	Uvn( 0, 255 ),
	833, 	Uvn( 0, 255 ),
	4075, 	Uvn( 0, 255 ),
	StripL(3),  
	867, 	Uvn( 0, 255 ),
	854, 	Uvn( 0, 255 ),
	856, 	Uvn( 0, 255 ),
	StripL(4),  
	829, 	Uvn( 0, 255 ),
	828, 	Uvn( 0, 255 ),
	3697, 	Uvn( 0, 255 ),
	3673, 	Uvn( 0, 255 ),
	StripR(12),  
	3207, 	Uvn( 0, 255 ),
	3286, 	Uvn( 0, 255 ),
	3287, 	Uvn( 0, 255 ),
	3292, 	Uvn( 0, 255 ),
	3289, 	Uvn( 0, 255 ),
	3294, 	Uvn( 0, 255 ),
	3218, 	Uvn( 0, 255 ),
	3296, 	Uvn( 0, 255 ),
	3222, 	Uvn( 0, 255 ),
	3232, 	Uvn( 0, 255 ),
	3237, 	Uvn( 0, 255 ),
	3245, 	Uvn( 0, 255 ),
	StripR(21),  
	3266, 	Uvn( 0, 255 ),
	3253, 	Uvn( 0, 255 ),
	3257, 	Uvn( 0, 255 ),
	3247, 	Uvn( 0, 255 ),
	3249, 	Uvn( 0, 255 ),
	3233, 	Uvn( 0, 255 ),
	3240, 	Uvn( 0, 255 ),
	3219, 	Uvn( 0, 255 ),
	3223, 	Uvn( 0, 255 ),
	3198, 	Uvn( 0, 255 ),
	3201, 	Uvn( 0, 255 ),
	3179, 	Uvn( 0, 255 ),
	3183, 	Uvn( 0, 255 ),
	469, 	Uvn( 0, 255 ),
	471, 	Uvn( 0, 255 ),
	451, 	Uvn( 0, 255 ),
	454, 	Uvn( 0, 255 ),
	3162, 	Uvn( 0, 255 ),
	3161, 	Uvn( 0, 255 ),
	3140, 	Uvn( 0, 255 ),
	3136, 	Uvn( 0, 255 ),
	StripR(5),  
	3213, 	Uvn( 0, 255 ),
	3225, 	Uvn( 0, 255 ),
	3295, 	Uvn( 0, 255 ),
	3242, 	Uvn( 0, 255 ),
	3306, 	Uvn( 0, 255 ),
	StripR(6),  
	3206, 	Uvn( 0, 255 ),
	3213, 	Uvn( 0, 255 ),
	3290, 	Uvn( 0, 255 ),
	3295, 	Uvn( 0, 255 ),
	3298, 	Uvn( 0, 255 ),
	3306, 	Uvn( 0, 255 ),
	StripL(4),  
	3311, 	Uvn( 0, 255 ),
	3606, 	Uvn( 0, 255 ),
	3608, 	Uvn( 0, 255 ),
	3317, 	Uvn( 0, 255 ),
	StripR(67),  
	3100, 	Uvn( 0, 255 ),
	3113, 	Uvn( 0, 255 ),
	3108, 	Uvn( 0, 255 ),
	3128, 	Uvn( 0, 255 ),
	3123, 	Uvn( 0, 255 ),
	3145, 	Uvn( 0, 255 ),
	3143, 	Uvn( 0, 255 ),
	3165, 	Uvn( 0, 255 ),
	3160, 	Uvn( 0, 255 ),
	457, 	Uvn( 0, 255 ),
	456, 	Uvn( 0, 255 ),
	474, 	Uvn( 0, 255 ),
	473, 	Uvn( 0, 255 ),
	3186, 	Uvn( 0, 255 ),
	3185, 	Uvn( 0, 255 ),
	3209, 	Uvn( 0, 255 ),
	3205, 	Uvn( 0, 255 ),
	3220, 	Uvn( 0, 255 ),
	3226, 	Uvn( 0, 255 ),
	3229, 	Uvn( 0, 255 ),
	3236, 	Uvn( 0, 255 ),
	3235, 	Uvn( 0, 255 ),
	3244, 	Uvn( 0, 255 ),
	3243, 	Uvn( 0, 255 ),
	3252, 	Uvn( 0, 255 ),
	3254, 	Uvn( 0, 255 ),
	3260, 	Uvn( 0, 255 ),
	3262, 	Uvn( 0, 255 ),
	3268, 	Uvn( 0, 255 ),
	3275, 	Uvn( 0, 255 ),
	3278, 	Uvn( 0, 255 ),
	800, 	Uvn( 0, 255 ),
	801, 	Uvn( 0, 255 ),
	803, 	Uvn( 0, 255 ),
	806, 	Uvn( 0, 255 ),
	811, 	Uvn( 0, 255 ),
	4164, 	Uvn( 0, 255 ),
	4166, 	Uvn( 0, 255 ),
	4167, 	Uvn( 0, 255 ),
	4176, 	Uvn( 0, 255 ),
	4171, 	Uvn( 0, 255 ),
	4180, 	Uvn( 0, 255 ),
	4175, 	Uvn( 0, 255 ),
	4183, 	Uvn( 0, 255 ),
	3345, 	Uvn( 0, 255 ),
	4188, 	Uvn( 0, 255 ),
	3350, 	Uvn( 0, 255 ),
	4190, 	Uvn( 0, 255 ),
	3351, 	Uvn( 0, 255 ),
	1908, 	Uvn( 0, 255 ),
	1909, 	Uvn( 0, 255 ),
	4191, 	Uvn( 0, 255 ),
	4193, 	Uvn( 0, 255 ),
	1357, 	Uvn( 0, 255 ),
	1397, 	Uvn( 0, 255 ),
	1347, 	Uvn( 0, 255 ),
	1378, 	Uvn( 0, 255 ),
	1341, 	Uvn( 0, 255 ),
	1366, 	Uvn( 0, 255 ),
	1338, 	Uvn( 0, 255 ),
	1363, 	Uvn( 0, 255 ),
	1343, 	Uvn( 0, 255 ),
	1361, 	Uvn( 0, 255 ),
	1335, 	Uvn( 0, 255 ),
	1360, 	Uvn( 0, 255 ),
	1345, 	Uvn( 0, 255 ),
	1364, 	Uvn( 0, 255 ),
	StripR(8),  
	3111, 	Uvn( 0, 255 ),
	3114, 	Uvn( 0, 255 ),
	3096, 	Uvn( 0, 255 ),
	3103, 	Uvn( 0, 255 ),
	3093, 	Uvn( 0, 255 ),
	3107, 	Uvn( 0, 255 ),
	3091, 	Uvn( 0, 255 ),
	3101, 	Uvn( 0, 255 ),
	StripL(3),  
	3105, 	Uvn( 0, 255 ),
	3085, 	Uvn( 0, 255 ),
	3124, 	Uvn( 0, 255 ),
	StripR(6),  
	3101, 	Uvn( 0, 255 ),
	3119, 	Uvn( 0, 255 ),
	3112, 	Uvn( 0, 255 ),
	3127, 	Uvn( 0, 255 ),
	3121, 	Uvn( 0, 255 ),
	3132, 	Uvn( 0, 255 ),
	StripL(3),  
	3079, 	Uvn( 0, 255 ),
	3091, 	Uvn( 0, 255 ),
	3093, 	Uvn( 0, 255 ),
	StripL(3),  
	3062, 	Uvn( 0, 255 ),
	3057, 	Uvn( 0, 255 ),
	3051, 	Uvn( 0, 255 ),
	StripL(10),  
	3051, 	Uvn( 0, 255 ),
	3067, 	Uvn( 0, 255 ),
	3062, 	Uvn( 0, 255 ),
	3075, 	Uvn( 0, 255 ),
	3057, 	Uvn( 0, 255 ),
	3063, 	Uvn( 0, 255 ),
	3056, 	Uvn( 0, 255 ),
	3054, 	Uvn( 0, 255 ),
	3047, 	Uvn( 0, 255 ),
	3055, 	Uvn( 0, 255 ),
	StripL(46),  
	3048, 	Uvn( 0, 255 ),
	3044, 	Uvn( 0, 255 ),
	3043, 	Uvn( 0, 255 ),
	3038, 	Uvn( 0, 255 ),
	3039, 	Uvn( 0, 255 ),
	417, 	Uvn( 0, 255 ),
	415, 	Uvn( 0, 255 ),
	408, 	Uvn( 0, 255 ),
	405, 	Uvn( 0, 255 ),
	396, 	Uvn( 0, 255 ),
	3009, 	Uvn( 0, 255 ),
	2993, 	Uvn( 0, 255 ),
	2998, 	Uvn( 0, 255 ),
	2986, 	Uvn( 0, 255 ),
	2991, 	Uvn( 0, 255 ),
	2987, 	Uvn( 0, 255 ),
	2997, 	Uvn( 0, 255 ),
	2982, 	Uvn( 0, 255 ),
	2994, 	Uvn( 0, 255 ),
	2973, 	Uvn( 0, 255 ),
	2984, 	Uvn( 0, 255 ),
	261, 	Uvn( 0, 255 ),
	269, 	Uvn( 0, 255 ),
	251, 	Uvn( 0, 255 ),
	259, 	Uvn( 0, 255 ),
	211, 	Uvn( 0, 255 ),
	218, 	Uvn( 0, 255 ),
	199, 	Uvn( 0, 255 ),
	200, 	Uvn( 0, 255 ),
	2858, 	Uvn( 0, 255 ),
	2863, 	Uvn( 0, 255 ),
	2849, 	Uvn( 0, 255 ),
	2852, 	Uvn( 0, 255 ),
	2845, 	Uvn( 0, 255 ),
	2842, 	Uvn( 0, 255 ),
	2953, 	Uvn( 0, 255 ),
	2926, 	Uvn( 0, 255 ),
	2806, 	Uvn( 0, 255 ),
	313, 	Uvn( 0, 255 ),
	311, 	Uvn( 0, 255 ),
	2766, 	Uvn( 0, 255 ),
	2755, 	Uvn( 0, 255 ),
	2756, 	Uvn( 0, 255 ),
	34, 	Uvn( 0, 255 ),
	2761, 	Uvn( 0, 255 ),
	2758, 	Uvn( 0, 255 ),
	StripR(10),  
	3071, 	Uvn( 0, 255 ),
	3060, 	Uvn( 0, 255 ),
	3076, 	Uvn( 0, 255 ),
	3053, 	Uvn( 0, 255 ),
	3065, 	Uvn( 0, 255 ),
	3046, 	Uvn( 0, 255 ),
	3059, 	Uvn( 0, 255 ),
	3045, 	Uvn( 0, 255 ),
	3052, 	Uvn( 0, 255 ),
	429, 	Uvn( 0, 255 ),
	StripL(3),  
	3026, 	Uvn( 0, 255 ),
	3030, 	Uvn( 0, 255 ),
	3033, 	Uvn( 0, 255 ),
	StripR(5),  
	3096, 	Uvn( 0, 255 ),
	3093, 	Uvn( 0, 255 ),
	3080, 	Uvn( 0, 255 ),
	3079, 	Uvn( 0, 255 ),
	3066, 	Uvn( 0, 255 ),
	StripR(20),  
	411, 	Uvn( 0, 255 ),
	420, 	Uvn( 0, 255 ),
	424, 	Uvn( 0, 255 ),
	3042, 	Uvn( 0, 255 ),
	3050, 	Uvn( 0, 255 ),
	3051, 	Uvn( 0, 255 ),
	3066, 	Uvn( 0, 255 ),
	3067, 	Uvn( 0, 255 ),
	3080, 	Uvn( 0, 255 ),
	3075, 	Uvn( 0, 255 ),
	3096, 	Uvn( 0, 255 ),
	3084, 	Uvn( 0, 255 ),
	3090, 	Uvn( 0, 255 ),
	3086, 	Uvn( 0, 255 ),
	3095, 	Uvn( 0, 255 ),
	3083, 	Uvn( 0, 255 ),
	3094, 	Uvn( 0, 255 ),
	3077, 	Uvn( 0, 255 ),
	3082, 	Uvn( 0, 255 ),
	3068, 	Uvn( 0, 255 ),
	StripL(7),  
	3117, 	Uvn( 0, 255 ),
	3104, 	Uvn( 0, 255 ),
	3110, 	Uvn( 0, 255 ),
	3095, 	Uvn( 0, 255 ),
	3098, 	Uvn( 0, 255 ),
	3090, 	Uvn( 0, 255 ),
	3096, 	Uvn( 0, 255 ),
	StripL(6),  
	3086, 	Uvn( 0, 255 ),
	3083, 	Uvn( 0, 255 ),
	3074, 	Uvn( 0, 255 ),
	3070, 	Uvn( 0, 255 ),
	3063, 	Uvn( 0, 255 ),
	3054, 	Uvn( 0, 255 ),
	StripR(5),  
	3086, 	Uvn( 0, 255 ),
	3084, 	Uvn( 0, 255 ),
	3074, 	Uvn( 0, 255 ),
	3075, 	Uvn( 0, 255 ),
	3063, 	Uvn( 0, 255 ),
	StripR(10),  
	3050, 	Uvn( 0, 255 ),
	3058, 	Uvn( 0, 255 ),
	430, 	Uvn( 0, 255 ),
	431, 	Uvn( 0, 255 ),
	416, 	Uvn( 0, 255 ),
	422, 	Uvn( 0, 255 ),
	3033, 	Uvn( 0, 255 ),
	3034, 	Uvn( 0, 255 ),
	3030, 	Uvn( 0, 255 ),
	3036, 	Uvn( 0, 255 ),
	StripR(5),  
	3054, 	Uvn( 0, 255 ),
	3055, 	Uvn( 0, 255 ),
	3070, 	Uvn( 0, 255 ),
	3068, 	Uvn( 0, 255 ),
	3077, 	Uvn( 0, 255 ),
	StripL(12),  
	2986, 	Uvn( 0, 255 ),
	2993, 	Uvn( 0, 255 ),
	2979, 	Uvn( 0, 255 ),
	2988, 	Uvn( 0, 255 ),
	2980, 	Uvn( 0, 255 ),
	2990, 	Uvn( 0, 255 ),
	3001, 	Uvn( 0, 255 ),
	397, 	Uvn( 0, 255 ),
	398, 	Uvn( 0, 255 ),
	408, 	Uvn( 0, 255 ),
	409, 	Uvn( 0, 255 ),
	417, 	Uvn( 0, 255 ),
	StripR(17),  
	3158, 	Uvn( 0, 255 ),
	3151, 	Uvn( 0, 255 ),
	3155, 	Uvn( 0, 255 ),
	3139, 	Uvn( 0, 255 ),
	3146, 	Uvn( 0, 255 ),
	3124, 	Uvn( 0, 255 ),
	3133, 	Uvn( 0, 255 ),
	3105, 	Uvn( 0, 255 ),
	3118, 	Uvn( 0, 255 ),
	3087, 	Uvn( 0, 255 ),
	3088, 	Uvn( 0, 255 ),
	436, 	Uvn( 0, 255 ),
	437, 	Uvn( 0, 255 ),
	428, 	Uvn( 0, 255 ),
	427, 	Uvn( 0, 255 ),
	3037, 	Uvn( 0, 255 ),
	3036, 	Uvn( 0, 255 ),
	StripL(3),  
	3083, 	Uvn( 0, 255 ),
	3077, 	Uvn( 0, 255 ),
	3070, 	Uvn( 0, 255 ),
	StripR(5),  
	3433, 	Uvn( 0, 255 ),
	480, 	Uvn( 0, 255 ),
	492, 	Uvn( 0, 255 ),
	483, 	Uvn( 0, 255 ),
	494, 	Uvn( 0, 255 ),
	StripR(6),  
	552, 	Uvn( 0, 255 ),
	577, 	Uvn( 0, 255 ),
	569, 	Uvn( 0, 255 ),
	604, 	Uvn( 0, 255 ),
	603, 	Uvn( 0, 255 ),
	624, 	Uvn( 0, 255 ),
	StripL(3),  
	538, 	Uvn( 0, 255 ),
	502, 	Uvn( 0, 255 ),
	546, 	Uvn( 0, 255 ),
	StripR(6),  
	3425, 	Uvn( 0, 255 ),
	3426, 	Uvn( 0, 255 ),
	3422, 	Uvn( 0, 255 ),
	487, 	Uvn( 0, 255 ),
	481, 	Uvn( 0, 255 ),
	491, 	Uvn( 0, 255 ),
	StripL(28),  
	488, 	Uvn( 0, 255 ),
	493, 	Uvn( 0, 255 ),
	500, 	Uvn( 0, 255 ),
	501, 	Uvn( 0, 255 ),
	516, 	Uvn( 0, 255 ),
	506, 	Uvn( 0, 255 ),
	522, 	Uvn( 0, 255 ),
	513, 	Uvn( 0, 255 ),
	524, 	Uvn( 0, 255 ),
	515, 	Uvn( 0, 255 ),
	528, 	Uvn( 0, 255 ),
	518, 	Uvn( 0, 255 ),
	531, 	Uvn( 0, 255 ),
	4042, 	Uvn( 0, 255 ),
	4046, 	Uvn( 0, 255 ),
	4041, 	Uvn( 0, 255 ),
	4045, 	Uvn( 0, 255 ),
	726, 	Uvn( 0, 255 ),
	731, 	Uvn( 0, 255 ),
	717, 	Uvn( 0, 255 ),
	727, 	Uvn( 0, 255 ),
	713, 	Uvn( 0, 255 ),
	724, 	Uvn( 0, 255 ),
	716, 	Uvn( 0, 255 ),
	725, 	Uvn( 0, 255 ),
	723, 	Uvn( 0, 255 ),
	730, 	Uvn( 0, 255 ),
	4073, 	Uvn( 0, 255 ),
	StripL(11),  
	3466, 	Uvn( 0, 255 ),
	3452, 	Uvn( 0, 255 ),
	3462, 	Uvn( 0, 255 ),
	3455, 	Uvn( 0, 255 ),
	3555, 	Uvn( 0, 255 ),
	567, 	Uvn( 0, 255 ),
	597, 	Uvn( 0, 255 ),
	570, 	Uvn( 0, 255 ),
	599, 	Uvn( 0, 255 ),
	571, 	Uvn( 0, 255 ),
	596, 	Uvn( 0, 255 ),
	StripL(3),  
	3466, 	Uvn( 0, 255 ),
	3462, 	Uvn( 0, 255 ),
	3563, 	Uvn( 0, 255 ),
	StripL(3),  
	3073, 	Uvn( 0, 255 ),
	3064, 	Uvn( 0, 255 ),
	433, 	Uvn( 0, 255 ),
	StripR(9),  
	3435, 	Uvn( 0, 255 ),
	977, 	Uvn( 0, 255 ),
	3441, 	Uvn( 0, 255 ),
	3444, 	Uvn( 0, 255 ),
	3453, 	Uvn( 0, 255 ),
	3454, 	Uvn( 0, 255 ),
	3463, 	Uvn( 0, 255 ),
	3465, 	Uvn( 0, 255 ),
	3474, 	Uvn( 0, 255 ),
	StripL(5),  
	3435, 	Uvn( 0, 255 ),
	638, 	Uvn( 0, 255 ),
	3441, 	Uvn( 0, 255 ),
	3449, 	Uvn( 0, 255 ),
	3453, 	Uvn( 0, 255 ),
	StripL(5),  
	3548, 	Uvn( 0, 255 ),
	3552, 	Uvn( 0, 255 ),
	634, 	Uvn( 0, 255 ),
	3550, 	Uvn( 0, 255 ),
	635, 	Uvn( 0, 255 ),
	StripR(5),  
	4907, 	Uvn( 0, 255 ),
	4886, 	Uvn( 0, 255 ),
	4877, 	Uvn( 0, 255 ),
	4865, 	Uvn( 0, 255 ),
	4861, 	Uvn( 0, 255 ),
	StripL(4),  
	2315, 	Uvn( 0, 255 ),
	2297, 	Uvn( 0, 255 ),
	2300, 	Uvn( 0, 255 ),
	4955, 	Uvn( 0, 255 ),
	StripL(3),  
	4891, 	Uvn( 0, 255 ),
	4901, 	Uvn( 0, 255 ),
	4875, 	Uvn( 0, 255 ),
	StripR(9),  
	1473, 	Uvn( 0, 255 ),
	1487, 	Uvn( 0, 255 ),
	1472, 	Uvn( 0, 255 ),
	1475, 	Uvn( 0, 255 ),
	1439, 	Uvn( 0, 255 ),
	1474, 	Uvn( 0, 255 ),
	1436, 	Uvn( 0, 255 ),
	1435, 	Uvn( 0, 255 ),
	1426, 	Uvn( 0, 255 ),
	StripR(6),  
	1501, 	Uvn( 0, 255 ),
	1483, 	Uvn( 0, 255 ),
	1502, 	Uvn( 0, 255 ),
	1481, 	Uvn( 0, 255 ),
	1497, 	Uvn( 0, 255 ),
	1486, 	Uvn( 0, 255 ),
	StripL(77),  
	4916, 	Uvn( 0, 255 ),
	4934, 	Uvn( 0, 255 ),
	4927, 	Uvn( 0, 255 ),
	4945, 	Uvn( 0, 255 ),
	4940, 	Uvn( 0, 255 ),
	4956, 	Uvn( 0, 255 ),
	4963, 	Uvn( 0, 255 ),
	4968, 	Uvn( 0, 255 ),
	4972, 	Uvn( 0, 255 ),
	4973, 	Uvn( 0, 255 ),
	4978, 	Uvn( 0, 255 ),
	4977, 	Uvn( 0, 255 ),
	2312, 	Uvn( 0, 255 ),
	2314, 	Uvn( 0, 255 ),
	2321, 	Uvn( 0, 255 ),
	2324, 	Uvn( 0, 255 ),
	2333, 	Uvn( 0, 255 ),
	5008, 	Uvn( 0, 255 ),
	5024, 	Uvn( 0, 255 ),
	5019, 	Uvn( 0, 255 ),
	5031, 	Uvn( 0, 255 ),
	5026, 	Uvn( 0, 255 ),
	5030, 	Uvn( 0, 255 ),
	5020, 	Uvn( 0, 255 ),
	5035, 	Uvn( 0, 255 ),
	5023, 	Uvn( 0, 255 ),
	5044, 	Uvn( 0, 255 ),
	5033, 	Uvn( 0, 255 ),
	2382, 	Uvn( 0, 255 ),
	2374, 	Uvn( 0, 255 ),
	2392, 	Uvn( 0, 255 ),
	2384, 	Uvn( 0, 255 ),
	2432, 	Uvn( 0, 255 ),
	2425, 	Uvn( 0, 255 ),
	2444, 	Uvn( 0, 255 ),
	2443, 	Uvn( 0, 255 ),
	5107, 	Uvn( 0, 255 ),
	2449, 	Uvn( 0, 255 ),
	5118, 	Uvn( 0, 255 ),
	5116, 	Uvn( 0, 255 ),
	5128, 	Uvn( 0, 255 ),
	5134, 	Uvn( 0, 255 ),
	5202, 	Uvn( 0, 255 ),
	5204, 	Uvn( 0, 255 ),
	2600, 	Uvn( 0, 255 ),
	5247, 	Uvn( 0, 255 ),
	5249, 	Uvn( 0, 255 ),
	5248, 	Uvn( 0, 255 ),
	5259, 	Uvn( 0, 255 ),
	5254, 	Uvn( 0, 255 ),
	2664, 	Uvn( 0, 255 ),
	5257, 	Uvn( 0, 255 ),
	2665, 	Uvn( 0, 255 ),
	5255, 	Uvn( 0, 255 ),
	2662, 	Uvn( 0, 255 ),
	2661, 	Uvn( 0, 255 ),
	2666, 	Uvn( 0, 255 ),
	5278, 	Uvn( 0, 255 ),
	5282, 	Uvn( 0, 255 ),
	2674, 	Uvn( 0, 255 ),
	5287, 	Uvn( 0, 255 ),
	2681, 	Uvn( 0, 255 ),
	2684, 	Uvn( 0, 255 ),
	2682, 	Uvn( 0, 255 ),
	2691, 	Uvn( 0, 255 ),
	2696, 	Uvn( 0, 255 ),
	2692, 	Uvn( 0, 255 ),
	2698, 	Uvn( 0, 255 ),
	2693, 	Uvn( 0, 255 ),
	2690, 	Uvn( 0, 255 ),
	2694, 	Uvn( 0, 255 ),
	2689, 	Uvn( 0, 255 ),
	2676, 	Uvn( 0, 255 ),
	2675, 	Uvn( 0, 255 ),
	2671, 	Uvn( 0, 255 ),
	2665, 	Uvn( 0, 255 ),
	2662, 	Uvn( 0, 255 ),
	StripL(3),  
	3483, 	Uvn( 0, 255 ),
	3587, 	Uvn( 0, 255 ),
	3573, 	Uvn( 0, 255 ),
	StripL(7),  
	4990, 	Uvn( 0, 255 ),
	4992, 	Uvn( 0, 255 ),
	4985, 	Uvn( 0, 255 ),
	4998, 	Uvn( 0, 255 ),
	4987, 	Uvn( 0, 255 ),
	4991, 	Uvn( 0, 255 ),
	4984, 	Uvn( 0, 255 ),
	StripL(37),  
	4289, 	Uvn( 0, 255 ),
	2153, 	Uvn( 0, 255 ),
	4280, 	Uvn( 0, 255 ),
	4277, 	Uvn( 0, 255 ),
	4276, 	Uvn( 0, 255 ),
	4274, 	Uvn( 0, 255 ),
	4270, 	Uvn( 0, 255 ),
	4269, 	Uvn( 0, 255 ),
	4266, 	Uvn( 0, 255 ),
	4267, 	Uvn( 0, 255 ),
	2083, 	Uvn( 0, 255 ),
	2087, 	Uvn( 0, 255 ),
	2071, 	Uvn( 0, 255 ),
	2085, 	Uvn( 0, 255 ),
	2069, 	Uvn( 0, 255 ),
	2080, 	Uvn( 0, 255 ),
	2068, 	Uvn( 0, 255 ),
	2078, 	Uvn( 0, 255 ),
	2070, 	Uvn( 0, 255 ),
	2081, 	Uvn( 0, 255 ),
	2075, 	Uvn( 0, 255 ),
	2084, 	Uvn( 0, 255 ),
	2073, 	Uvn( 0, 255 ),
	2082, 	Uvn( 0, 255 ),
	4233, 	Uvn( 0, 255 ),
	4236, 	Uvn( 0, 255 ),
	4232, 	Uvn( 0, 255 ),
	4235, 	Uvn( 0, 255 ),
	1929, 	Uvn( 0, 255 ),
	1942, 	Uvn( 0, 255 ),
	1926, 	Uvn( 0, 255 ),
	1938, 	Uvn( 0, 255 ),
	1928, 	Uvn( 0, 255 ),
	1934, 	Uvn( 0, 255 ),
	1924, 	Uvn( 0, 255 ),
	1935, 	Uvn( 0, 255 ),
	1930, 	Uvn( 0, 255 ),
	StripL(3),  
	4277, 	Uvn( 0, 255 ),
	4271, 	Uvn( 0, 255 ),
	4274, 	Uvn( 0, 255 ),
	StripR(8),  
	2153, 	Uvn( 0, 255 ),
	4277, 	Uvn( 0, 255 ),
	2155, 	Uvn( 0, 255 ),
	4271, 	Uvn( 0, 255 ),
	2154, 	Uvn( 0, 255 ),
	2151, 	Uvn( 0, 255 ),
	2152, 	Uvn( 0, 255 ),
	2150, 	Uvn( 0, 255 ),
	StripL(16),  
	1914, 	Uvn( 0, 255 ),
	2232, 	Uvn( 0, 255 ),
	1913, 	Uvn( 0, 255 ),
	3367, 	Uvn( 0, 255 ),
	1905, 	Uvn( 0, 255 ),
	3369, 	Uvn( 0, 255 ),
	1904, 	Uvn( 0, 255 ),
	3619, 	Uvn( 0, 255 ),
	1898, 	Uvn( 0, 255 ),
	3618, 	Uvn( 0, 255 ),
	3616, 	Uvn( 0, 255 ),
	935, 	Uvn( 0, 255 ),
	927, 	Uvn( 0, 255 ),
	4020, 	Uvn( 0, 255 ),
	4016, 	Uvn( 0, 255 ),
	994, 	Uvn( 0, 255 ),
	StripL(7),  
	951, 	Uvn( 0, 255 ),
	940, 	Uvn( 0, 255 ),
	4026, 	Uvn( 0, 255 ),
	936, 	Uvn( 0, 255 ),
	931, 	Uvn( 0, 255 ),
	932, 	Uvn( 0, 255 ),
	930, 	Uvn( 0, 255 ),
	StripL(6),  
	4029, 	Uvn( 0, 255 ),
	1002, 	Uvn( 0, 255 ),
	4028, 	Uvn( 0, 255 ),
	1000, 	Uvn( 0, 255 ),
	4024, 	Uvn( 0, 255 ),
	4025, 	Uvn( 0, 255 ),
	StripL(3),  
	3618, 	Uvn( 0, 255 ),
	3619, 	Uvn( 0, 255 ),
	935, 	Uvn( 0, 255 ),
	StripL(3),  
	1012, 	Uvn( 0, 255 ),
	1006, 	Uvn( 0, 255 ),
	3601, 	Uvn( 0, 255 ),
	StripL(11),  
	1003, 	Uvn( 0, 255 ),
	1006, 	Uvn( 0, 255 ),
	1008, 	Uvn( 0, 255 ),
	1012, 	Uvn( 0, 255 ),
	1011, 	Uvn( 0, 255 ),
	1013, 	Uvn( 0, 255 ),
	1014, 	Uvn( 0, 255 ),
	1007, 	Uvn( 0, 255 ),
	4033, 	Uvn( 0, 255 ),
	4031, 	Uvn( 0, 255 ),
	4032, 	Uvn( 0, 255 ),
	StripR(13),  
	4941, 	Uvn( 0, 255 ),
	4949, 	Uvn( 0, 255 ),
	4936, 	Uvn( 0, 255 ),
	4950, 	Uvn( 0, 255 ),
	4937, 	Uvn( 0, 255 ),
	4958, 	Uvn( 0, 255 ),
	4952, 	Uvn( 0, 255 ),
	2298, 	Uvn( 0, 255 ),
	2296, 	Uvn( 0, 255 ),
	2307, 	Uvn( 0, 255 ),
	2303, 	Uvn( 0, 255 ),
	4983, 	Uvn( 0, 255 ),
	4981, 	Uvn( 0, 255 ),
	StripL(5),  
	4880, 	Uvn( 0, 255 ),
	4905, 	Uvn( 0, 255 ),
	4906, 	Uvn( 0, 255 ),
	4920, 	Uvn( 0, 255 ),
	4918, 	Uvn( 0, 255 ),
	StripL(4),  
	4902, 	Uvn( 0, 255 ),
	4896, 	Uvn( 0, 255 ),
	4913, 	Uvn( 0, 255 ),
	4909, 	Uvn( 0, 255 ),
	StripR(8),  
	4858, 	Uvn( 0, 255 ),
	4875, 	Uvn( 0, 255 ),
	4867, 	Uvn( 0, 255 ),
	4891, 	Uvn( 0, 255 ),
	4879, 	Uvn( 0, 255 ),
	4900, 	Uvn( 0, 255 ),
	4885, 	Uvn( 0, 255 ),
	4910, 	Uvn( 0, 255 ),
	StripR(5),  
	4860, 	Uvn( 0, 255 ),
	4864, 	Uvn( 0, 255 ),
	4847, 	Uvn( 0, 255 ),
	2287, 	Uvn( 0, 255 ),
	2279, 	Uvn( 0, 255 ),
	StripR(6),  
	1577, 	Uvn( 0, 255 ),
	1683, 	Uvn( 0, 255 ),
	1576, 	Uvn( 0, 255 ),
	1690, 	Uvn( 0, 255 ),
	1575, 	Uvn( 0, 255 ),
	1693, 	Uvn( 0, 255 ),
	StripR(7),  
	1598, 	Uvn( 0, 255 ),
	4201, 	Uvn( 0, 255 ),
	4199, 	Uvn( 0, 255 ),
	1912, 	Uvn( 0, 255 ),
	1911, 	Uvn( 0, 255 ),
	3356, 	Uvn( 0, 255 ),
	3354, 	Uvn( 0, 255 ),
	StripL(234),  
	1435, 	Uvn( 0, 255 ),
	1482, 	Uvn( 0, 255 ),
	1474, 	Uvn( 0, 255 ),
	1494, 	Uvn( 0, 255 ),
	1475, 	Uvn( 0, 255 ),
	1501, 	Uvn( 0, 255 ),
	1487, 	Uvn( 0, 255 ),
	1483, 	Uvn( 0, 255 ),
	1473, 	Uvn( 0, 255 ),
	1477, 	Uvn( 0, 255 ),
	1471, 	Uvn( 0, 255 ),
	1476, 	Uvn( 0, 255 ),
	1434, 	Uvn( 0, 255 ),
	1433, 	Uvn( 0, 255 ),
	1429, 	Uvn( 0, 255 ),
	1424, 	Uvn( 0, 255 ),
	1427, 	Uvn( 0, 255 ),
	1423, 	Uvn( 0, 255 ),
	1419, 	Uvn( 0, 255 ),
	1414, 	Uvn( 0, 255 ),
	1403, 	Uvn( 0, 255 ),
	1396, 	Uvn( 0, 255 ),
	1398, 	Uvn( 0, 255 ),
	1383, 	Uvn( 0, 255 ),
	1399, 	Uvn( 0, 255 ),
	1382, 	Uvn( 0, 255 ),
	1406, 	Uvn( 0, 255 ),
	1367, 	Uvn( 0, 255 ),
	1387, 	Uvn( 0, 255 ),
	1354, 	Uvn( 0, 255 ),
	1351, 	Uvn( 0, 255 ),
	1300, 	Uvn( 0, 255 ),
	1308, 	Uvn( 0, 255 ),
	1292, 	Uvn( 0, 255 ),
	1294, 	Uvn( 0, 255 ),
	1277, 	Uvn( 0, 255 ),
	1276, 	Uvn( 0, 255 ),
	1223, 	Uvn( 0, 255 ),
	1240, 	Uvn( 0, 255 ),
	1193, 	Uvn( 0, 255 ),
	1206, 	Uvn( 0, 255 ),
	1178, 	Uvn( 0, 255 ),
	1189, 	Uvn( 0, 255 ),
	1168, 	Uvn( 0, 255 ),
	1180, 	Uvn( 0, 255 ),
	1165, 	Uvn( 0, 255 ),
	1181, 	Uvn( 0, 255 ),
	1200, 	Uvn( 0, 255 ),
	1214, 	Uvn( 0, 255 ),
	1221, 	Uvn( 0, 255 ),
	1246, 	Uvn( 0, 255 ),
	1235, 	Uvn( 0, 255 ),
	4177, 	Uvn( 0, 255 ),
	4172, 	Uvn( 0, 255 ),
	4176, 	Uvn( 0, 255 ),
	4173, 	Uvn( 0, 255 ),
	4166, 	Uvn( 0, 255 ),
	4179, 	Uvn( 0, 255 ),
	4169, 	Uvn( 0, 255 ),
	4184, 	Uvn( 0, 255 ),
	4182, 	Uvn( 0, 255 ),
	1310, 	Uvn( 0, 255 ),
	4187, 	Uvn( 0, 255 ),
	1375, 	Uvn( 0, 255 ),
	4192, 	Uvn( 0, 255 ),
	1462, 	Uvn( 0, 255 ),
	4196, 	Uvn( 0, 255 ),
	4198, 	Uvn( 0, 255 ),
	1914, 	Uvn( 0, 255 ),
	4205, 	Uvn( 0, 255 ),
	2232, 	Uvn( 0, 255 ),
	2236, 	Uvn( 0, 255 ),
	3371, 	Uvn( 0, 255 ),
	3375, 	Uvn( 0, 255 ),
	3377, 	Uvn( 0, 255 ),
	3381, 	Uvn( 0, 255 ),
	3383, 	Uvn( 0, 255 ),
	3390, 	Uvn( 0, 255 ),
	3625, 	Uvn( 0, 255 ),
	3624, 	Uvn( 0, 255 ),
	970, 	Uvn( 0, 255 ),
	971, 	Uvn( 0, 255 ),
	4032, 	Uvn( 0, 255 ),
	4034, 	Uvn( 0, 255 ),
	4033, 	Uvn( 0, 255 ),
	4036, 	Uvn( 0, 255 ),
	1014, 	Uvn( 0, 255 ),
	4035, 	Uvn( 0, 255 ),
	1011, 	Uvn( 0, 255 ),
	1009, 	Uvn( 0, 255 ),
	1008, 	Uvn( 0, 255 ),
	4030, 	Uvn( 0, 255 ),
	1003, 	Uvn( 0, 255 ),
	4027, 	Uvn( 0, 255 ),
	1004, 	Uvn( 0, 255 ),
	999, 	Uvn( 0, 255 ),
	1001, 	Uvn( 0, 255 ),
	998, 	Uvn( 0, 255 ),
	3589, 	Uvn( 0, 255 ),
	3586, 	Uvn( 0, 255 ),
	686, 	Uvn( 0, 255 ),
	680, 	Uvn( 0, 255 ),
	682, 	Uvn( 0, 255 ),
	677, 	Uvn( 0, 255 ),
	675, 	Uvn( 0, 255 ),
	671, 	Uvn( 0, 255 ),
	678, 	Uvn( 0, 255 ),
	679, 	Uvn( 0, 255 ),
	684, 	Uvn( 0, 255 ),
	681, 	Uvn( 0, 255 ),
	688, 	Uvn( 0, 255 ),
	685, 	Uvn( 0, 255 ),
	693, 	Uvn( 0, 255 ),
	691, 	Uvn( 0, 255 ),
	694, 	Uvn( 0, 255 ),
	3495, 	Uvn( 0, 255 ),
	700, 	Uvn( 0, 255 ),
	3505, 	Uvn( 0, 255 ),
	701, 	Uvn( 0, 255 ),
	3513, 	Uvn( 0, 255 ),
	3521, 	Uvn( 0, 255 ),
	3514, 	Uvn( 0, 255 ),
	3516, 	Uvn( 0, 255 ),
	3504, 	Uvn( 0, 255 ),
	3512, 	Uvn( 0, 255 ),
	3498, 	Uvn( 0, 255 ),
	3502, 	Uvn( 0, 255 ),
	3584, 	Uvn( 0, 255 ),
	3581, 	Uvn( 0, 255 ),
	1916, 	Uvn( 0, 255 ),
	1917, 	Uvn( 0, 255 ),
	1919, 	Uvn( 0, 255 ),
	1921, 	Uvn( 0, 255 ),
	1925, 	Uvn( 0, 255 ),
	1931, 	Uvn( 0, 255 ),
	1946, 	Uvn( 0, 255 ),
	1951, 	Uvn( 0, 255 ),
	1964, 	Uvn( 0, 255 ),
	1950, 	Uvn( 0, 255 ),
	1963, 	Uvn( 0, 255 ),
	1949, 	Uvn( 0, 255 ),
	1965, 	Uvn( 0, 255 ),
	1952, 	Uvn( 0, 255 ),
	1962, 	Uvn( 0, 255 ),
	1953, 	Uvn( 0, 255 ),
	1961, 	Uvn( 0, 255 ),
	1957, 	Uvn( 0, 255 ),
	1966, 	Uvn( 0, 255 ),
	4239, 	Uvn( 0, 255 ),
	4242, 	Uvn( 0, 255 ),
	4240, 	Uvn( 0, 255 ),
	4243, 	Uvn( 0, 255 ),
	2090, 	Uvn( 0, 255 ),
	2103, 	Uvn( 0, 255 ),
	2088, 	Uvn( 0, 255 ),
	2101, 	Uvn( 0, 255 ),
	2089, 	Uvn( 0, 255 ),
	2099, 	Uvn( 0, 255 ),
	2091, 	Uvn( 0, 255 ),
	2100, 	Uvn( 0, 255 ),
	2094, 	Uvn( 0, 255 ),
	2102, 	Uvn( 0, 255 ),
	4273, 	Uvn( 0, 255 ),
	4288, 	Uvn( 0, 255 ),
	4278, 	Uvn( 0, 255 ),
	4290, 	Uvn( 0, 255 ),
	4282, 	Uvn( 0, 255 ),
	4291, 	Uvn( 0, 255 ),
	4292, 	Uvn( 0, 255 ),
	4302, 	Uvn( 0, 255 ),
	4305, 	Uvn( 0, 255 ),
	4314, 	Uvn( 0, 255 ),
	2167, 	Uvn( 0, 255 ),
	2180, 	Uvn( 0, 255 ),
	2185, 	Uvn( 0, 255 ),
	2195, 	Uvn( 0, 255 ),
	2189, 	Uvn( 0, 255 ),
	2197, 	Uvn( 0, 255 ),
	2191, 	Uvn( 0, 255 ),
	2199, 	Uvn( 0, 255 ),
	2192, 	Uvn( 0, 255 ),
	2201, 	Uvn( 0, 255 ),
	2200, 	Uvn( 0, 255 ),
	2209, 	Uvn( 0, 255 ),
	2206, 	Uvn( 0, 255 ),
	2215, 	Uvn( 0, 255 ),
	2208, 	Uvn( 0, 255 ),
	2220, 	Uvn( 0, 255 ),
	4688, 	Uvn( 0, 255 ),
	2227, 	Uvn( 0, 255 ),
	2228, 	Uvn( 0, 255 ),
	2229, 	Uvn( 0, 255 ),
	2226, 	Uvn( 0, 255 ),
	2219, 	Uvn( 0, 255 ),
	2221, 	Uvn( 0, 255 ),
	2212, 	Uvn( 0, 255 ),
	2217, 	Uvn( 0, 255 ),
	2204, 	Uvn( 0, 255 ),
	2211, 	Uvn( 0, 255 ),
	2207, 	Uvn( 0, 255 ),
	4642, 	Uvn( 0, 255 ),
	4620, 	Uvn( 0, 255 ),
	4638, 	Uvn( 0, 255 ),
	4636, 	Uvn( 0, 255 ),
	4634, 	Uvn( 0, 255 ),
	4635, 	Uvn( 0, 255 ),
	4613, 	Uvn( 0, 255 ),
	4645, 	Uvn( 0, 255 ),
	4618, 	Uvn( 0, 255 ),
	4622, 	Uvn( 0, 255 ),
	4596, 	Uvn( 0, 255 ),
	4597, 	Uvn( 0, 255 ),
	4585, 	Uvn( 0, 255 ),
	4612, 	Uvn( 0, 255 ),
	4599, 	Uvn( 0, 255 ),
	4615, 	Uvn( 0, 255 ),
	4602, 	Uvn( 0, 255 ),
	4616, 	Uvn( 0, 255 ),
	4605, 	Uvn( 0, 255 ),
	4617, 	Uvn( 0, 255 ),
	4624, 	Uvn( 0, 255 ),
	4630, 	Uvn( 0, 255 ),
	4656, 	Uvn( 0, 255 ),
	4655, 	Uvn( 0, 255 ),
	4668, 	Uvn( 0, 255 ),
	4672, 	Uvn( 0, 255 ),
	4654, 	Uvn( 0, 255 ),
	4657, 	Uvn( 0, 255 ),
	4624, 	Uvn( 0, 255 ),
	4623, 	Uvn( 0, 255 ),
	4608, 	Uvn( 0, 255 ),
	4600, 	Uvn( 0, 255 ),
	4605, 	Uvn( 0, 255 ),
	4602, 	Uvn( 0, 255 ),
	StripR(9),  
	1494, 	Uvn( 0, 255 ),
	1518, 	Uvn( 0, 255 ),
	1533, 	Uvn( 0, 255 ),
	1517, 	Uvn( 0, 255 ),
	1531, 	Uvn( 0, 255 ),
	1504, 	Uvn( 0, 255 ),
	1505, 	Uvn( 0, 255 ),
	1480, 	Uvn( 0, 255 ),
	1488, 	Uvn( 0, 255 ),
	StripR(7),  
	1811, 	Uvn( 0, 255 ),
	1798, 	Uvn( 0, 255 ),
	1784, 	Uvn( 0, 255 ),
	1775, 	Uvn( 0, 255 ),
	1776, 	Uvn( 0, 255 ),
	1758, 	Uvn( 0, 255 ),
	1770, 	Uvn( 0, 255 ),
	StripL(7),  
	1791, 	Uvn( 0, 255 ),
	1794, 	Uvn( 0, 255 ),
	1796, 	Uvn( 0, 255 ),
	1802, 	Uvn( 0, 255 ),
	1780, 	Uvn( 0, 255 ),
	1797, 	Uvn( 0, 255 ),
	1756, 	Uvn( 0, 255 ),
	StripR(6),  
	1510, 	Uvn( 0, 255 ),
	1443, 	Uvn( 0, 255 ),
	1508, 	Uvn( 0, 255 ),
	1442, 	Uvn( 0, 255 ),
	1512, 	Uvn( 0, 255 ),
	1450, 	Uvn( 0, 255 ),
	StripL(10),  
	1454, 	Uvn( 0, 255 ),
	1506, 	Uvn( 0, 255 ),
	1564, 	Uvn( 0, 255 ),
	1586, 	Uvn( 0, 255 ),
	1634, 	Uvn( 0, 255 ),
	1626, 	Uvn( 0, 255 ),
	1664, 	Uvn( 0, 255 ),
	1656, 	Uvn( 0, 255 ),
	1704, 	Uvn( 0, 255 ),
	1695, 	Uvn( 0, 255 ),
	StripL(15),  
	1722, 	Uvn( 0, 255 ),
	1707, 	Uvn( 0, 255 ),
	1694, 	Uvn( 0, 255 ),
	1660, 	Uvn( 0, 255 ),
	1641, 	Uvn( 0, 255 ),
	1610, 	Uvn( 0, 255 ),
	1607, 	Uvn( 0, 255 ),
	1593, 	Uvn( 0, 255 ),
	1557, 	Uvn( 0, 255 ),
	1565, 	Uvn( 0, 255 ),
	1539, 	Uvn( 0, 255 ),
	1540, 	Uvn( 0, 255 ),
	1514, 	Uvn( 0, 255 ),
	1519, 	Uvn( 0, 255 ),
	1489, 	Uvn( 0, 255 ),
	StripL(4),  
	1441, 	Uvn( 0, 255 ),
	1484, 	Uvn( 0, 255 ),
	1493, 	Uvn( 0, 255 ),
	1523, 	Uvn( 0, 255 ),
	StripR(6),  
	1593, 	Uvn( 0, 255 ),
	1565, 	Uvn( 0, 255 ),
	1555, 	Uvn( 0, 255 ),
	1540, 	Uvn( 0, 255 ),
	1536, 	Uvn( 0, 255 ),
	1519, 	Uvn( 0, 255 ),
	StripR(8),  
	1919, 	Uvn( 0, 255 ),
	1918, 	Uvn( 0, 255 ),
	1916, 	Uvn( 0, 255 ),
	1920, 	Uvn( 0, 255 ),
	3577, 	Uvn( 0, 255 ),
	3580, 	Uvn( 0, 255 ),
	3579, 	Uvn( 0, 255 ),
	3578, 	Uvn( 0, 255 ),
	StripL(10),  
	3534, 	Uvn( 0, 255 ),
	3535, 	Uvn( 0, 255 ),
	3530, 	Uvn( 0, 255 ),
	708, 	Uvn( 0, 255 ),
	705, 	Uvn( 0, 255 ),
	3601, 	Uvn( 0, 255 ),
	3599, 	Uvn( 0, 255 ),
	1006, 	Uvn( 0, 255 ),
	1004, 	Uvn( 0, 255 ),
	1003, 	Uvn( 0, 255 ),
	StripR(53),  
	1972, 	Uvn( 0, 255 ),
	1970, 	Uvn( 0, 255 ),
	1954, 	Uvn( 0, 255 ),
	1971, 	Uvn( 0, 255 ),
	1956, 	Uvn( 0, 255 ),
	1968, 	Uvn( 0, 255 ),
	1955, 	Uvn( 0, 255 ),
	1969, 	Uvn( 0, 255 ),
	1958, 	Uvn( 0, 255 ),
	4244, 	Uvn( 0, 255 ),
	4238, 	Uvn( 0, 255 ),
	4245, 	Uvn( 0, 255 ),
	4241, 	Uvn( 0, 255 ),
	2104, 	Uvn( 0, 255 ),
	2095, 	Uvn( 0, 255 ),
	2105, 	Uvn( 0, 255 ),
	2096, 	Uvn( 0, 255 ),
	2106, 	Uvn( 0, 255 ),
	2092, 	Uvn( 0, 255 ),
	2107, 	Uvn( 0, 255 ),
	2093, 	Uvn( 0, 255 ),
	2108, 	Uvn( 0, 255 ),
	2097, 	Uvn( 0, 255 ),
	2109, 	Uvn( 0, 255 ),
	2098, 	Uvn( 0, 255 ),
	4298, 	Uvn( 0, 255 ),
	4275, 	Uvn( 0, 255 ),
	4297, 	Uvn( 0, 255 ),
	4281, 	Uvn( 0, 255 ),
	4296, 	Uvn( 0, 255 ),
	4284, 	Uvn( 0, 255 ),
	4294, 	Uvn( 0, 255 ),
	4286, 	Uvn( 0, 255 ),
	4293, 	Uvn( 0, 255 ),
	4283, 	Uvn( 0, 255 ),
	4295, 	Uvn( 0, 255 ),
	4285, 	Uvn( 0, 255 ),
	2161, 	Uvn( 0, 255 ),
	2157, 	Uvn( 0, 255 ),
	4358, 	Uvn( 0, 255 ),
	2150, 	Uvn( 0, 255 ),
	4354, 	Uvn( 0, 255 ),
	2152, 	Uvn( 0, 255 ),
	4357, 	Uvn( 0, 255 ),
	2166, 	Uvn( 0, 255 ),
	4387, 	Uvn( 0, 255 ),
	2174, 	Uvn( 0, 255 ),
	4417, 	Uvn( 0, 255 ),
	2181, 	Uvn( 0, 255 ),
	4463, 	Uvn( 0, 255 ),
	2188, 	Uvn( 0, 255 ),
	4482, 	Uvn( 0, 255 ),
	4502, 	Uvn( 0, 255 ),
	StripR(5),  
	1920, 	Uvn( 0, 255 ),
	3588, 	Uvn( 0, 255 ),
	3580, 	Uvn( 0, 255 ),
	3583, 	Uvn( 0, 255 ),
	3578, 	Uvn( 0, 255 ),
	StripL(10),  
	1946, 	Uvn( 0, 255 ),
	1925, 	Uvn( 0, 255 ),
	1944, 	Uvn( 0, 255 ),
	1919, 	Uvn( 0, 255 ),
	1943, 	Uvn( 0, 255 ),
	1918, 	Uvn( 0, 255 ),
	1940, 	Uvn( 0, 255 ),
	1920, 	Uvn( 0, 255 ),
	1941, 	Uvn( 0, 255 ),
	3588, 	Uvn( 0, 255 ),
	StripR(9),  
	676, 	Uvn( 0, 255 ),
	670, 	Uvn( 0, 255 ),
	671, 	Uvn( 0, 255 ),
	665, 	Uvn( 0, 255 ),
	662, 	Uvn( 0, 255 ),
	660, 	Uvn( 0, 255 ),
	657, 	Uvn( 0, 255 ),
	653, 	Uvn( 0, 255 ),
	658, 	Uvn( 0, 255 ),
	StripR(13),  
	671, 	Uvn( 0, 255 ),
	679, 	Uvn( 0, 255 ),
	676, 	Uvn( 0, 255 ),
	681, 	Uvn( 0, 255 ),
	670, 	Uvn( 0, 255 ),
	669, 	Uvn( 0, 255 ),
	660, 	Uvn( 0, 255 ),
	672, 	Uvn( 0, 255 ),
	656, 	Uvn( 0, 255 ),
	3469, 	Uvn( 0, 255 ),
	650, 	Uvn( 0, 255 ),
	647, 	Uvn( 0, 255 ),
	648, 	Uvn( 0, 255 ),
	StripR(9),  
	3495, 	Uvn( 0, 255 ),
	3492, 	Uvn( 0, 255 ),
	3479, 	Uvn( 0, 255 ),
	3489, 	Uvn( 0, 255 ),
	3480, 	Uvn( 0, 255 ),
	3481, 	Uvn( 0, 255 ),
	3475, 	Uvn( 0, 255 ),
	3476, 	Uvn( 0, 255 ),
	3467, 	Uvn( 0, 255 ),
	StripR(15),  
	697, 	Uvn( 0, 255 ),
	3597, 	Uvn( 0, 255 ),
	702, 	Uvn( 0, 255 ),
	704, 	Uvn( 0, 255 ),
	701, 	Uvn( 0, 255 ),
	705, 	Uvn( 0, 255 ),
	3521, 	Uvn( 0, 255 ),
	3524, 	Uvn( 0, 255 ),
	3516, 	Uvn( 0, 255 ),
	3525, 	Uvn( 0, 255 ),
	3519, 	Uvn( 0, 255 ),
	3527, 	Uvn( 0, 255 ),
	2006, 	Uvn( 0, 255 ),
	2042, 	Uvn( 0, 255 ),
	1998, 	Uvn( 0, 255 ),
	StripL(33),  
	5034, 	Uvn( 0, 255 ),
	5025, 	Uvn( 0, 255 ),
	5022, 	Uvn( 0, 255 ),
	5021, 	Uvn( 0, 255 ),
	5018, 	Uvn( 0, 255 ),
	5014, 	Uvn( 0, 255 ),
	5010, 	Uvn( 0, 255 ),
	5003, 	Uvn( 0, 255 ),
	4999, 	Uvn( 0, 255 ),
	4989, 	Uvn( 0, 255 ),
	2322, 	Uvn( 0, 255 ),
	4982, 	Uvn( 0, 255 ),
	2304, 	Uvn( 0, 255 ),
	2301, 	Uvn( 0, 255 ),
	2293, 	Uvn( 0, 255 ),
	2292, 	Uvn( 0, 255 ),
	4928, 	Uvn( 0, 255 ),
	4938, 	Uvn( 0, 255 ),
	4904, 	Uvn( 0, 255 ),
	4915, 	Uvn( 0, 255 ),
	4897, 	Uvn( 0, 255 ),
	4909, 	Uvn( 0, 255 ),
	4887, 	Uvn( 0, 255 ),
	4896, 	Uvn( 0, 255 ),
	4890, 	Uvn( 0, 255 ),
	4902, 	Uvn( 0, 255 ),
	4878, 	Uvn( 0, 255 ),
	4876, 	Uvn( 0, 255 ),
	4854, 	Uvn( 0, 255 ),
	4855, 	Uvn( 0, 255 ),
	2274, 	Uvn( 0, 255 ),
	2272, 	Uvn( 0, 255 ),
	2255, 	Uvn( 0, 255 ),
	StripL(25),  
	5006, 	Uvn( 0, 255 ),
	4997, 	Uvn( 0, 255 ),
	4994, 	Uvn( 0, 255 ),
	4990, 	Uvn( 0, 255 ),
	4986, 	Uvn( 0, 255 ),
	4985, 	Uvn( 0, 255 ),
	4981, 	Uvn( 0, 255 ),
	4987, 	Uvn( 0, 255 ),
	4983, 	Uvn( 0, 255 ),
	4984, 	Uvn( 0, 255 ),
	2307, 	Uvn( 0, 255 ),
	2313, 	Uvn( 0, 255 ),
	2298, 	Uvn( 0, 255 ),
	2299, 	Uvn( 0, 255 ),
	4958, 	Uvn( 0, 255 ),
	4966, 	Uvn( 0, 255 ),
	4950, 	Uvn( 0, 255 ),
	4965, 	Uvn( 0, 255 ),
	4949, 	Uvn( 0, 255 ),
	4954, 	Uvn( 0, 255 ),
	4941, 	Uvn( 0, 255 ),
	4959, 	Uvn( 0, 255 ),
	4953, 	Uvn( 0, 255 ),
	4960, 	Uvn( 0, 255 ),
	4962, 	Uvn( 0, 255 ),
	StripL(7),  
	2345, 	Uvn( 0, 255 ),
	2341, 	Uvn( 0, 255 ),
	2357, 	Uvn( 0, 255 ),
	2337, 	Uvn( 0, 255 ),
	2339, 	Uvn( 0, 255 ),
	2348, 	Uvn( 0, 255 ),
	2349, 	Uvn( 0, 255 ),
	StripL(6),  
	5152, 	Uvn( 0, 255 ),
	5145, 	Uvn( 0, 255 ),
	5140, 	Uvn( 0, 255 ),
	2468, 	Uvn( 0, 255 ),
	5131, 	Uvn( 0, 255 ),
	2462, 	Uvn( 0, 255 ),
	StripL(3),  
	5276, 	Uvn( 0, 255 ),
	2704, 	Uvn( 0, 255 ),
	5277, 	Uvn( 0, 255 ),
	StripR(16),  
	5277, 	Uvn( 0, 255 ),
	2710, 	Uvn( 0, 255 ),
	2704, 	Uvn( 0, 255 ),
	2703, 	Uvn( 0, 255 ),
	5276, 	Uvn( 0, 255 ),
	5272, 	Uvn( 0, 255 ),
	5277, 	Uvn( 0, 255 ),
	5275, 	Uvn( 0, 255 ),
	2707, 	Uvn( 0, 255 ),
	2705, 	Uvn( 0, 255 ),
	2721, 	Uvn( 0, 255 ),
	2708, 	Uvn( 0, 255 ),
	2718, 	Uvn( 0, 255 ),
	2706, 	Uvn( 0, 255 ),
	2716, 	Uvn( 0, 255 ),
	2701, 	Uvn( 0, 255 ),
	StripL(4),  
	5270, 	Uvn( 0, 255 ),
	2700, 	Uvn( 0, 255 ),
	5272, 	Uvn( 0, 255 ),
	2703, 	Uvn( 0, 255 ),
	StripL(11),  
	2461, 	Uvn( 0, 255 ),
	2462, 	Uvn( 0, 255 ),
	2466, 	Uvn( 0, 255 ),
	2468, 	Uvn( 0, 255 ),
	2470, 	Uvn( 0, 255 ),
	5145, 	Uvn( 0, 255 ),
	2472, 	Uvn( 0, 255 ),
	5152, 	Uvn( 0, 255 ),
	2474, 	Uvn( 0, 255 ),
	5159, 	Uvn( 0, 255 ),
	2475, 	Uvn( 0, 255 ),
	StripL(3),  
	2669, 	Uvn( 0, 255 ),
	5286, 	Uvn( 0, 255 ),
	2672, 	Uvn( 0, 255 ),
	StripL(3),  
	2631, 	Uvn( 0, 255 ),
	2638, 	Uvn( 0, 255 ),
	2634, 	Uvn( 0, 255 ),
	StripL(3),  
	2573, 	Uvn( 0, 255 ),
	2586, 	Uvn( 0, 255 ),
	2571, 	Uvn( 0, 255 ),
	StripR(10),  
	2573, 	Uvn( 0, 255 ),
	2563, 	Uvn( 0, 255 ),
	2571, 	Uvn( 0, 255 ),
	5192, 	Uvn( 0, 255 ),
	5194, 	Uvn( 0, 255 ),
	5191, 	Uvn( 0, 255 ),
	5193, 	Uvn( 0, 255 ),
	5190, 	Uvn( 0, 255 ),
	5185, 	Uvn( 0, 255 ),
	2534, 	Uvn( 0, 255 ),
	StripL(6),  
	2577, 	Uvn( 0, 255 ),
	2568, 	Uvn( 0, 255 ),
	2572, 	Uvn( 0, 255 ),
	2564, 	Uvn( 0, 255 ),
	2569, 	Uvn( 0, 255 ),
	2558, 	Uvn( 0, 255 ),
	StripL(5),  
	2570, 	Uvn( 0, 255 ),
	2576, 	Uvn( 0, 255 ),
	2566, 	Uvn( 0, 255 ),
	2582, 	Uvn( 0, 255 ),
	2591, 	Uvn( 0, 255 ),
	StripL(8),  
	5068, 	Uvn( 0, 255 ),
	5071, 	Uvn( 0, 255 ),
	5073, 	Uvn( 0, 255 ),
	5079, 	Uvn( 0, 255 ),
	5072, 	Uvn( 0, 255 ),
	5076, 	Uvn( 0, 255 ),
	5066, 	Uvn( 0, 255 ),
	2481, 	Uvn( 0, 255 ),
	StripR(11),  
	2486, 	Uvn( 0, 255 ),
	2485, 	Uvn( 0, 255 ),
	2492, 	Uvn( 0, 255 ),
	2490, 	Uvn( 0, 255 ),
	2497, 	Uvn( 0, 255 ),
	2496, 	Uvn( 0, 255 ),
	2501, 	Uvn( 0, 255 ),
	2500, 	Uvn( 0, 255 ),
	2507, 	Uvn( 0, 255 ),
	2506, 	Uvn( 0, 255 ),
	2512, 	Uvn( 0, 255 ),
	StripL(3),  
	2367, 	Uvn( 0, 255 ),
	2369, 	Uvn( 0, 255 ),
	2360, 	Uvn( 0, 255 ),
	StripR(68),  
	5078, 	Uvn( 0, 255 ),
	2482, 	Uvn( 0, 255 ),
	5081, 	Uvn( 0, 255 ),
	2491, 	Uvn( 0, 255 ),
	2509, 	Uvn( 0, 255 ),
	2499, 	Uvn( 0, 255 ),
	2514, 	Uvn( 0, 255 ),
	2502, 	Uvn( 0, 255 ),
	2508, 	Uvn( 0, 255 ),
	2497, 	Uvn( 0, 255 ),
	2511, 	Uvn( 0, 255 ),
	2501, 	Uvn( 0, 255 ),
	2515, 	Uvn( 0, 255 ),
	2507, 	Uvn( 0, 255 ),
	2517, 	Uvn( 0, 255 ),
	2512, 	Uvn( 0, 255 ),
	2518, 	Uvn( 0, 255 ),
	2513, 	Uvn( 0, 255 ),
	2510, 	Uvn( 0, 255 ),
	2505, 	Uvn( 0, 255 ),
	5167, 	Uvn( 0, 255 ),
	2494, 	Uvn( 0, 255 ),
	5075, 	Uvn( 0, 255 ),
	5166, 	Uvn( 0, 255 ),
	5074, 	Uvn( 0, 255 ),
	5069, 	Uvn( 0, 255 ),
	5065, 	Uvn( 0, 255 ),
	2480, 	Uvn( 0, 255 ),
	5063, 	Uvn( 0, 255 ),
	2478, 	Uvn( 0, 255 ),
	2477, 	Uvn( 0, 255 ),
	5162, 	Uvn( 0, 255 ),
	2479, 	Uvn( 0, 255 ),
	2482, 	Uvn( 0, 255 ),
	2481, 	Uvn( 0, 255 ),
	5078, 	Uvn( 0, 255 ),
	5076, 	Uvn( 0, 255 ),
	5080, 	Uvn( 0, 255 ),
	5079, 	Uvn( 0, 255 ),
	5074, 	Uvn( 0, 255 ),
	5071, 	Uvn( 0, 255 ),
	5065, 	Uvn( 0, 255 ),
	5068, 	Uvn( 0, 255 ),
	5062, 	Uvn( 0, 255 ),
	5056, 	Uvn( 0, 255 ),
	5058, 	Uvn( 0, 255 ),
	5055, 	Uvn( 0, 255 ),
	5057, 	Uvn( 0, 255 ),
	5052, 	Uvn( 0, 255 ),
	2476, 	Uvn( 0, 255 ),
	2372, 	Uvn( 0, 255 ),
	5061, 	Uvn( 0, 255 ),
	2369, 	Uvn( 0, 255 ),
	2378, 	Uvn( 0, 255 ),
	2367, 	Uvn( 0, 255 ),
	2379, 	Uvn( 0, 255 ),
	2358, 	Uvn( 0, 255 ),
	2377, 	Uvn( 0, 255 ),
	2349, 	Uvn( 0, 255 ),
	2376, 	Uvn( 0, 255 ),
	2348, 	Uvn( 0, 255 ),
	2364, 	Uvn( 0, 255 ),
	2343, 	Uvn( 0, 255 ),
	2356, 	Uvn( 0, 255 ),
	2336, 	Uvn( 0, 255 ),
	2344, 	Uvn( 0, 255 ),
	5011, 	Uvn( 0, 255 ),
	2346, 	Uvn( 0, 255 ),
	StripL(10),  
	2491, 	Uvn( 0, 255 ),
	2499, 	Uvn( 0, 255 ),
	2484, 	Uvn( 0, 255 ),
	2486, 	Uvn( 0, 255 ),
	5163, 	Uvn( 0, 255 ),
	2485, 	Uvn( 0, 255 ),
	5164, 	Uvn( 0, 255 ),
	5165, 	Uvn( 0, 255 ),
	5166, 	Uvn( 0, 255 ),
	2494, 	Uvn( 0, 255 ),
	StripR(12),  
	5074, 	Uvn( 0, 255 ),
	5080, 	Uvn( 0, 255 ),
	5075, 	Uvn( 0, 255 ),
	5083, 	Uvn( 0, 255 ),
	5167, 	Uvn( 0, 255 ),
	5168, 	Uvn( 0, 255 ),
	2510, 	Uvn( 0, 255 ),
	2516, 	Uvn( 0, 255 ),
	2518, 	Uvn( 0, 255 ),
	2514, 	Uvn( 0, 255 ),
	2517, 	Uvn( 0, 255 ),
	2515, 	Uvn( 0, 255 ),
	StripL(6),  
	2522, 	Uvn( 0, 255 ),
	5090, 	Uvn( 0, 255 ),
	5096, 	Uvn( 0, 255 ),
	5086, 	Uvn( 0, 255 ),
	5089, 	Uvn( 0, 255 ),
	5077, 	Uvn( 0, 255 ),
	StripR(6),  
	2529, 	Uvn( 0, 255 ),
	2524, 	Uvn( 0, 255 ),
	2521, 	Uvn( 0, 255 ),
	2520, 	Uvn( 0, 255 ),
	5170, 	Uvn( 0, 255 ),
	5092, 	Uvn( 0, 255 ),
	StripL(7),  
	5176, 	Uvn( 0, 255 ),
	2535, 	Uvn( 0, 255 ),
	5183, 	Uvn( 0, 255 ),
	5180, 	Uvn( 0, 255 ),
	5184, 	Uvn( 0, 255 ),
	5182, 	Uvn( 0, 255 ),
	2557, 	Uvn( 0, 255 ),
	StripL(6),  
	2537, 	Uvn( 0, 255 ),
	2532, 	Uvn( 0, 255 ),
	2536, 	Uvn( 0, 255 ),
	2528, 	Uvn( 0, 255 ),
	2533, 	Uvn( 0, 255 ),
	5101, 	Uvn( 0, 255 ),
	StripL(11),  
	2634, 	Uvn( 0, 255 ),
	2629, 	Uvn( 0, 255 ),
	2631, 	Uvn( 0, 255 ),
	2637, 	Uvn( 0, 255 ),
	2638, 	Uvn( 0, 255 ),
	2641, 	Uvn( 0, 255 ),
	2634, 	Uvn( 0, 255 ),
	2647, 	Uvn( 0, 255 ),
	2653, 	Uvn( 0, 255 ),
	2649, 	Uvn( 0, 255 ),
	2652, 	Uvn( 0, 255 ),
	StripL(3),  
	2676, 	Uvn( 0, 255 ),
	2672, 	Uvn( 0, 255 ),
	2694, 	Uvn( 0, 255 ),
	StripR(10),  
	5248, 	Uvn( 0, 255 ),
	5254, 	Uvn( 0, 255 ),
	2603, 	Uvn( 0, 255 ),
	5251, 	Uvn( 0, 255 ),
	2601, 	Uvn( 0, 255 ),
	5250, 	Uvn( 0, 255 ),
	2598, 	Uvn( 0, 255 ),
	5230, 	Uvn( 0, 255 ),
	5210, 	Uvn( 0, 255 ),
	5235, 	Uvn( 0, 255 ),
	StripL(13),  
	2610, 	Uvn( 0, 255 ),
	2606, 	Uvn( 0, 255 ),
	2604, 	Uvn( 0, 255 ),
	5155, 	Uvn( 0, 255 ),
	5153, 	Uvn( 0, 255 ),
	5148, 	Uvn( 0, 255 ),
	5146, 	Uvn( 0, 255 ),
	5137, 	Uvn( 0, 255 ),
	5147, 	Uvn( 0, 255 ),
	5138, 	Uvn( 0, 255 ),
	5150, 	Uvn( 0, 255 ),
	5144, 	Uvn( 0, 255 ),
	5156, 	Uvn( 0, 255 ),
	StripL(3),  
	2711, 	Uvn( 0, 255 ),
	2709, 	Uvn( 0, 255 ),
	2702, 	Uvn( 0, 255 ),
	StripR(5),  
	2376, 	Uvn( 0, 255 ),
	2402, 	Uvn( 0, 255 ),
	2380, 	Uvn( 0, 255 ),
	2394, 	Uvn( 0, 255 ),
	2375, 	Uvn( 0, 255 ),
	StripL(9),  
	2435, 	Uvn( 0, 255 ),
	2415, 	Uvn( 0, 255 ),
	2442, 	Uvn( 0, 255 ),
	2404, 	Uvn( 0, 255 ),
	2446, 	Uvn( 0, 255 ),
	2407, 	Uvn( 0, 255 ),
	2451, 	Uvn( 0, 255 ),
	2412, 	Uvn( 0, 255 ),
	2454, 	Uvn( 0, 255 ),
	StripL(6),  
	5011, 	Uvn( 0, 255 ),
	2336, 	Uvn( 0, 255 ),
	5000, 	Uvn( 0, 255 ),
	2334, 	Uvn( 0, 255 ),
	4993, 	Uvn( 0, 255 ),
	4996, 	Uvn( 0, 255 ),
	StripR(9),  
	2340, 	Uvn( 0, 255 ),
	2345, 	Uvn( 0, 255 ),
	2338, 	Uvn( 0, 255 ),
	2341, 	Uvn( 0, 255 ),
	2335, 	Uvn( 0, 255 ),
	2337, 	Uvn( 0, 255 ),
	2334, 	Uvn( 0, 255 ),
	2343, 	Uvn( 0, 255 ),
	2336, 	Uvn( 0, 255 ),
	StripL(9),  
	2417, 	Uvn( 0, 255 ),
	2410, 	Uvn( 0, 255 ),
	2387, 	Uvn( 0, 255 ),
	2399, 	Uvn( 0, 255 ),
	2389, 	Uvn( 0, 255 ),
	2397, 	Uvn( 0, 255 ),
	2398, 	Uvn( 0, 255 ),
	5060, 	Uvn( 0, 255 ),
	5064, 	Uvn( 0, 255 ),
	StripL(11),  
	2454, 	Uvn( 0, 255 ),
	2461, 	Uvn( 0, 255 ),
	2464, 	Uvn( 0, 255 ),
	2466, 	Uvn( 0, 255 ),
	2469, 	Uvn( 0, 255 ),
	2470, 	Uvn( 0, 255 ),
	2471, 	Uvn( 0, 255 ),
	2472, 	Uvn( 0, 255 ),
	2473, 	Uvn( 0, 255 ),
	2474, 	Uvn( 0, 255 ),
	2475, 	Uvn( 0, 255 ),
	StripL(3),  
	2608, 	Uvn( 0, 255 ),
	2617, 	Uvn( 0, 255 ),
	2613, 	Uvn( 0, 255 ),
	StripR(19),  
	2664, 	Uvn( 0, 255 ),
	5259, 	Uvn( 0, 255 ),
	5260, 	Uvn( 0, 255 ),
	5249, 	Uvn( 0, 255 ),
	2602, 	Uvn( 0, 255 ),
	2600, 	Uvn( 0, 255 ),
	5209, 	Uvn( 0, 255 ),
	5202, 	Uvn( 0, 255 ),
	5198, 	Uvn( 0, 255 ),
	5128, 	Uvn( 0, 255 ),
	5125, 	Uvn( 0, 255 ),
	5118, 	Uvn( 0, 255 ),
	5121, 	Uvn( 0, 255 ),
	5107, 	Uvn( 0, 255 ),
	5112, 	Uvn( 0, 255 ),
	2444, 	Uvn( 0, 255 ),
	2448, 	Uvn( 0, 255 ),
	2434, 	Uvn( 0, 255 ),
	2450, 	Uvn( 0, 255 ),
	StripR(10),  
	2675, 	Uvn( 0, 255 ),
	2665, 	Uvn( 0, 255 ),
	2668, 	Uvn( 0, 255 ),
	2664, 	Uvn( 0, 255 ),
	5261, 	Uvn( 0, 255 ),
	5260, 	Uvn( 0, 255 ),
	5256, 	Uvn( 0, 255 ),
	2602, 	Uvn( 0, 255 ),
	5213, 	Uvn( 0, 255 ),
	5209, 	Uvn( 0, 255 ),
	StripL(6),  
	5129, 	Uvn( 0, 255 ),
	5133, 	Uvn( 0, 255 ),
	5141, 	Uvn( 0, 255 ),
	5203, 	Uvn( 0, 255 ),
	5244, 	Uvn( 0, 255 ),
	2599, 	Uvn( 0, 255 ),
	StripL(5),  
	2688, 	Uvn( 0, 255 ),
	2687, 	Uvn( 0, 255 ),
	2679, 	Uvn( 0, 255 ),
	2680, 	Uvn( 0, 255 ),
	5285, 	Uvn( 0, 255 ),
	StripL(3),  
	5241, 	Uvn( 0, 255 ),
	5279, 	Uvn( 0, 255 ),
	5242, 	Uvn( 0, 255 ),
	StripL(5),  
	2649, 	Uvn( 0, 255 ),
	2647, 	Uvn( 0, 255 ),
	2642, 	Uvn( 0, 255 ),
	2641, 	Uvn( 0, 255 ),
	2637, 	Uvn( 0, 255 ),
	StripL(364),  
	5221, 	Uvn( 0, 255 ),
	5227, 	Uvn( 0, 255 ),
	2630, 	Uvn( 0, 255 ),
	2635, 	Uvn( 0, 255 ),
	2644, 	Uvn( 0, 255 ),
	5284, 	Uvn( 0, 255 ),
	2655, 	Uvn( 0, 255 ),
	5283, 	Uvn( 0, 255 ),
	2657, 	Uvn( 0, 255 ),
	2650, 	Uvn( 0, 255 ),
	2658, 	Uvn( 0, 255 ),
	2652, 	Uvn( 0, 255 ),
	2654, 	Uvn( 0, 255 ),
	2649, 	Uvn( 0, 255 ),
	2645, 	Uvn( 0, 255 ),
	2642, 	Uvn( 0, 255 ),
	2640, 	Uvn( 0, 255 ),
	2637, 	Uvn( 0, 255 ),
	2633, 	Uvn( 0, 255 ),
	2629, 	Uvn( 0, 255 ),
	2628, 	Uvn( 0, 255 ),
	5228, 	Uvn( 0, 255 ),
	5221, 	Uvn( 0, 255 ),
	5218, 	Uvn( 0, 255 ),
	5227, 	Uvn( 0, 255 ),
	5223, 	Uvn( 0, 255 ),
	5236, 	Uvn( 0, 255 ),
	5231, 	Uvn( 0, 255 ),
	5243, 	Uvn( 0, 255 ),
	5240, 	Uvn( 0, 255 ),
	5242, 	Uvn( 0, 255 ),
	5238, 	Uvn( 0, 255 ),
	5241, 	Uvn( 0, 255 ),
	5229, 	Uvn( 0, 255 ),
	5225, 	Uvn( 0, 255 ),
	5219, 	Uvn( 0, 255 ),
	5222, 	Uvn( 0, 255 ),
	5216, 	Uvn( 0, 255 ),
	5218, 	Uvn( 0, 255 ),
	5217, 	Uvn( 0, 255 ),
	5223, 	Uvn( 0, 255 ),
	5220, 	Uvn( 0, 255 ),
	5231, 	Uvn( 0, 255 ),
	5226, 	Uvn( 0, 255 ),
	5240, 	Uvn( 0, 255 ),
	5237, 	Uvn( 0, 255 ),
	5238, 	Uvn( 0, 255 ),
	5234, 	Uvn( 0, 255 ),
	5224, 	Uvn( 0, 255 ),
	5214, 	Uvn( 0, 255 ),
	2551, 	Uvn( 0, 255 ),
	5211, 	Uvn( 0, 255 ),
	2547, 	Uvn( 0, 255 ),
	5207, 	Uvn( 0, 255 ),
	2542, 	Uvn( 0, 255 ),
	5123, 	Uvn( 0, 255 ),
	5117, 	Uvn( 0, 255 ),
	5116, 	Uvn( 0, 255 ),
	5106, 	Uvn( 0, 255 ),
	2449, 	Uvn( 0, 255 ),
	2438, 	Uvn( 0, 255 ),
	2436, 	Uvn( 0, 255 ),
	2433, 	Uvn( 0, 255 ),
	2425, 	Uvn( 0, 255 ),
	2427, 	Uvn( 0, 255 ),
	2418, 	Uvn( 0, 255 ),
	2423, 	Uvn( 0, 255 ),
	2409, 	Uvn( 0, 255 ),
	2422, 	Uvn( 0, 255 ),
	2419, 	Uvn( 0, 255 ),
	5087, 	Uvn( 0, 255 ),
	2411, 	Uvn( 0, 255 ),
	5084, 	Uvn( 0, 255 ),
	5082, 	Uvn( 0, 255 ),
	5088, 	Uvn( 0, 255 ),
	5085, 	Uvn( 0, 255 ),
	5092, 	Uvn( 0, 255 ),
	5090, 	Uvn( 0, 255 ),
	2520, 	Uvn( 0, 255 ),
	2522, 	Uvn( 0, 255 ),
	2524, 	Uvn( 0, 255 ),
	2532, 	Uvn( 0, 255 ),
	2534, 	Uvn( 0, 255 ),
	2537, 	Uvn( 0, 255 ),
	5190, 	Uvn( 0, 255 ),
	5189, 	Uvn( 0, 255 ),
	5191, 	Uvn( 0, 255 ),
	5183, 	Uvn( 0, 255 ),
	5186, 	Uvn( 0, 255 ),
	5184, 	Uvn( 0, 255 ),
	5192, 	Uvn( 0, 255 ),
	5188, 	Uvn( 0, 255 ),
	2563, 	Uvn( 0, 255 ),
	2560, 	Uvn( 0, 255 ),
	2566, 	Uvn( 0, 255 ),
	2562, 	Uvn( 0, 255 ),
	2570, 	Uvn( 0, 255 ),
	2568, 	Uvn( 0, 255 ),
	2576, 	Uvn( 0, 255 ),
	2577, 	Uvn( 0, 255 ),
	2582, 	Uvn( 0, 255 ),
	2583, 	Uvn( 0, 255 ),
	2591, 	Uvn( 0, 255 ),
	2590, 	Uvn( 0, 255 ),
	2587, 	Uvn( 0, 255 ),
	2594, 	Uvn( 0, 255 ),
	2595, 	Uvn( 0, 255 ),
	2592, 	Uvn( 0, 255 ),
	2585, 	Uvn( 0, 255 ),
	2584, 	Uvn( 0, 255 ),
	2574, 	Uvn( 0, 255 ),
	2567, 	Uvn( 0, 255 ),
	2559, 	Uvn( 0, 255 ),
	2556, 	Uvn( 0, 255 ),
	2555, 	Uvn( 0, 255 ),
	5179, 	Uvn( 0, 255 ),
	5177, 	Uvn( 0, 255 ),
	5178, 	Uvn( 0, 255 ),
	2527, 	Uvn( 0, 255 ),
	2531, 	Uvn( 0, 255 ),
	2526, 	Uvn( 0, 255 ),
	2530, 	Uvn( 0, 255 ),
	5172, 	Uvn( 0, 255 ),
	5175, 	Uvn( 0, 255 ),
	5174, 	Uvn( 0, 255 ),
	2533, 	Uvn( 0, 255 ),
	5105, 	Uvn( 0, 255 ),
	5101, 	Uvn( 0, 255 ),
	5097, 	Uvn( 0, 255 ),
	5089, 	Uvn( 0, 255 ),
	2421, 	Uvn( 0, 255 ),
	5077, 	Uvn( 0, 255 ),
	2400, 	Uvn( 0, 255 ),
	5082, 	Uvn( 0, 255 ),
	2403, 	Uvn( 0, 255 ),
	2411, 	Uvn( 0, 255 ),
	2383, 	Uvn( 0, 255 ),
	2395, 	Uvn( 0, 255 ),
	2357, 	Uvn( 0, 255 ),
	2361, 	Uvn( 0, 255 ),
	2345, 	Uvn( 0, 255 ),
	2351, 	Uvn( 0, 255 ),
	2340, 	Uvn( 0, 255 ),
	2347, 	Uvn( 0, 255 ),
	5005, 	Uvn( 0, 255 ),
	5013, 	Uvn( 0, 255 ),
	5001, 	Uvn( 0, 255 ),
	5009, 	Uvn( 0, 255 ),
	4991, 	Uvn( 0, 255 ),
	4995, 	Uvn( 0, 255 ),
	4984, 	Uvn( 0, 255 ),
	2325, 	Uvn( 0, 255 ),
	2313, 	Uvn( 0, 255 ),
	2316, 	Uvn( 0, 255 ),
	2299, 	Uvn( 0, 255 ),
	2305, 	Uvn( 0, 255 ),
	4966, 	Uvn( 0, 255 ),
	4974, 	Uvn( 0, 255 ),
	4965, 	Uvn( 0, 255 ),
	4967, 	Uvn( 0, 255 ),
	4960, 	Uvn( 0, 255 ),
	4969, 	Uvn( 0, 255 ),
	4962, 	Uvn( 0, 255 ),
	4961, 	Uvn( 0, 255 ),
	4946, 	Uvn( 0, 255 ),
	4948, 	Uvn( 0, 255 ),
	4939, 	Uvn( 0, 255 ),
	4934, 	Uvn( 0, 255 ),
	4922, 	Uvn( 0, 255 ),
	4916, 	Uvn( 0, 255 ),
	4903, 	Uvn( 0, 255 ),
	4910, 	Uvn( 0, 255 ),
	4894, 	Uvn( 0, 255 ),
	4885, 	Uvn( 0, 255 ),
	4881, 	Uvn( 0, 255 ),
	4868, 	Uvn( 0, 255 ),
	2290, 	Uvn( 0, 255 ),
	2288, 	Uvn( 0, 255 ),
	2280, 	Uvn( 0, 255 ),
	2281, 	Uvn( 0, 255 ),
	2263, 	Uvn( 0, 255 ),
	2264, 	Uvn( 0, 255 ),
	4839, 	Uvn( 0, 255 ),
	4844, 	Uvn( 0, 255 ),
	4817, 	Uvn( 0, 255 ),
	4822, 	Uvn( 0, 255 ),
	3420, 	Uvn( 0, 255 ),
	4810, 	Uvn( 0, 255 ),
	3421, 	Uvn( 0, 255 ),
	4820, 	Uvn( 0, 255 ),
	4811, 	Uvn( 0, 255 ),
	4827, 	Uvn( 0, 255 ),
	4818, 	Uvn( 0, 255 ),
	4814, 	Uvn( 0, 255 ),
	4802, 	Uvn( 0, 255 ),
	4800, 	Uvn( 0, 255 ),
	4786, 	Uvn( 0, 255 ),
	4783, 	Uvn( 0, 255 ),
	4771, 	Uvn( 0, 255 ),
	4767, 	Uvn( 0, 255 ),
	4758, 	Uvn( 0, 255 ),
	4756, 	Uvn( 0, 255 ),
	4748, 	Uvn( 0, 255 ),
	4746, 	Uvn( 0, 255 ),
	4741, 	Uvn( 0, 255 ),
	4740, 	Uvn( 0, 255 ),
	4735, 	Uvn( 0, 255 ),
	4733, 	Uvn( 0, 255 ),
	4732, 	Uvn( 0, 255 ),
	2242, 	Uvn( 0, 255 ),
	2238, 	Uvn( 0, 255 ),
	4222, 	Uvn( 0, 255 ),
	4220, 	Uvn( 0, 255 ),
	4215, 	Uvn( 0, 255 ),
	4216, 	Uvn( 0, 255 ),
	3362, 	Uvn( 0, 255 ),
	3363, 	Uvn( 0, 255 ),
	3357, 	Uvn( 0, 255 ),
	3358, 	Uvn( 0, 255 ),
	3355, 	Uvn( 0, 255 ),
	1903, 	Uvn( 0, 255 ),
	3353, 	Uvn( 0, 255 ),
	1895, 	Uvn( 0, 255 ),
	1888, 	Uvn( 0, 255 ),
	1889, 	Uvn( 0, 255 ),
	3348, 	Uvn( 0, 255 ),
	3347, 	Uvn( 0, 255 ),
	3342, 	Uvn( 0, 255 ),
	3341, 	Uvn( 0, 255 ),
	3335, 	Uvn( 0, 255 ),
	3331, 	Uvn( 0, 255 ),
	3327, 	Uvn( 0, 255 ),
	3325, 	Uvn( 0, 255 ),
	3321, 	Uvn( 0, 255 ),
	3319, 	Uvn( 0, 255 ),
	3312, 	Uvn( 0, 255 ),
	3314, 	Uvn( 0, 255 ),
	3304, 	Uvn( 0, 255 ),
	3307, 	Uvn( 0, 255 ),
	3293, 	Uvn( 0, 255 ),
	3297, 	Uvn( 0, 255 ),
	3288, 	Uvn( 0, 255 ),
	3291, 	Uvn( 0, 255 ),
	3206, 	Uvn( 0, 255 ),
	3286, 	Uvn( 0, 255 ),
	3197, 	Uvn( 0, 255 ),
	3207, 	Uvn( 0, 255 ),
	3187, 	Uvn( 0, 255 ),
	3195, 	Uvn( 0, 255 ),
	3173, 	Uvn( 0, 255 ),
	3200, 	Uvn( 0, 255 ),
	3178, 	Uvn( 0, 255 ),
	3180, 	Uvn( 0, 255 ),
	465, 	Uvn( 0, 255 ),
	463, 	Uvn( 0, 255 ),
	448, 	Uvn( 0, 255 ),
	444, 	Uvn( 0, 255 ),
	438, 	Uvn( 0, 255 ),
	3153, 	Uvn( 0, 255 ),
	3135, 	Uvn( 0, 255 ),
	3128, 	Uvn( 0, 255 ),
	3122, 	Uvn( 0, 255 ),
	3113, 	Uvn( 0, 255 ),
	3106, 	Uvn( 0, 255 ),
	3100, 	Uvn( 0, 255 ),
	3089, 	Uvn( 0, 255 ),
	3082, 	Uvn( 0, 255 ),
	3071, 	Uvn( 0, 255 ),
	3068, 	Uvn( 0, 255 ),
	3060, 	Uvn( 0, 255 ),
	3055, 	Uvn( 0, 255 ),
	3048, 	Uvn( 0, 255 ),
	3047, 	Uvn( 0, 255 ),
	3043, 	Uvn( 0, 255 ),
	3049, 	Uvn( 0, 255 ),
	3039, 	Uvn( 0, 255 ),
	3041, 	Uvn( 0, 255 ),
	418, 	Uvn( 0, 255 ),
	420, 	Uvn( 0, 255 ),
	410, 	Uvn( 0, 255 ),
	411, 	Uvn( 0, 255 ),
	400, 	Uvn( 0, 255 ),
	402, 	Uvn( 0, 255 ),
	3013, 	Uvn( 0, 255 ),
	3022, 	Uvn( 0, 255 ),
	3002, 	Uvn( 0, 255 ),
	3008, 	Uvn( 0, 255 ),
	3000, 	Uvn( 0, 255 ),
	3004, 	Uvn( 0, 255 ),
	289, 	Uvn( 0, 255 ),
	296, 	Uvn( 0, 255 ),
	284, 	Uvn( 0, 255 ),
	292, 	Uvn( 0, 255 ),
	278, 	Uvn( 0, 255 ),
	282, 	Uvn( 0, 255 ),
	234, 	Uvn( 0, 255 ),
	248, 	Uvn( 0, 255 ),
	232, 	Uvn( 0, 255 ),
	260, 	Uvn( 0, 255 ),
	240, 	Uvn( 0, 255 ),
	252, 	Uvn( 0, 255 ),
	243, 	Uvn( 0, 255 ),
	238, 	Uvn( 0, 255 ),
	230, 	Uvn( 0, 255 ),
	237, 	Uvn( 0, 255 ),
	223, 	Uvn( 0, 255 ),
	217, 	Uvn( 0, 255 ),
	212, 	Uvn( 0, 255 ),
	213, 	Uvn( 0, 255 ),
	204, 	Uvn( 0, 255 ),
	198, 	Uvn( 0, 255 ),
	186, 	Uvn( 0, 255 ),
	2850, 	Uvn( 0, 255 ),
	2835, 	Uvn( 0, 255 ),
	2834, 	Uvn( 0, 255 ),
	2831, 	Uvn( 0, 255 ),
	2827, 	Uvn( 0, 255 ),
	2770, 	Uvn( 0, 255 ),
	2771, 	Uvn( 0, 255 ),
	2769, 	Uvn( 0, 255 ),
	314, 	Uvn( 0, 255 ),
	2767, 	Uvn( 0, 255 ),
	310, 	Uvn( 0, 255 ),
	2761, 	Uvn( 0, 255 ),
	2764, 	Uvn( 0, 255 ),
	2758, 	Uvn( 0, 255 ),
	2760, 	Uvn( 0, 255 ),
	33, 	Uvn( 0, 255 ),
	36, 	Uvn( 0, 255 ),
	27, 	Uvn( 0, 255 ),
	32, 	Uvn( 0, 255 ),
	26, 	Uvn( 0, 255 ),
	29, 	Uvn( 0, 255 ),
	2731, 	Uvn( 0, 255 ),
	2732, 	Uvn( 0, 255 ),
	18, 	Uvn( 0, 255 ),
	19, 	Uvn( 0, 255 ),
	11, 	Uvn( 0, 255 ),
	10, 	Uvn( 0, 255 ),
	4, 	Uvn( 0, 255 ),
	5, 	Uvn( 0, 255 ),
	8, 	Uvn( 0, 255 ),
	0, 	Uvn( 0, 255 ),
	1, 	Uvn( 0, 255 ),
	3, 	Uvn( 0, 255 ),
	12, 	Uvn( 0, 255 ),
	13, 	Uvn( 0, 255 ),
	21, 	Uvn( 0, 255 ),
	25, 	Uvn( 0, 255 ),
	35, 	Uvn( 0, 255 ),
	38, 	Uvn( 0, 255 ),
	2763, 	Uvn( 0, 255 ),
	2782, 	Uvn( 0, 255 ),
	2785, 	Uvn( 0, 255 ),
	2765, 	Uvn( 0, 255 ),
	315, 	Uvn( 0, 255 ),
	312, 	Uvn( 0, 255 ),
	316, 	Uvn( 0, 255 ),
	314, 	Uvn( 0, 255 ),
	2925, 	Uvn( 0, 255 ),
	2771, 	Uvn( 0, 255 ),
	2829, 	Uvn( 0, 255 ),
	2827, 	Uvn( 0, 255 ),
	2834, 	Uvn( 0, 255 ),
	StripL(3),  
	2578, 	Uvn( 0, 255 ),
	2572, 	Uvn( 0, 255 ),
	2569, 	Uvn( 0, 255 ),
	StripL(8),  
	2476, 	Uvn( 0, 255 ),
	2479, 	Uvn( 0, 255 ),
	5057, 	Uvn( 0, 255 ),
	2477, 	Uvn( 0, 255 ),
	5058, 	Uvn( 0, 255 ),
	5063, 	Uvn( 0, 255 ),
	5062, 	Uvn( 0, 255 ),
	5065, 	Uvn( 0, 255 ),
	StripL(3),  
	5059, 	Uvn( 0, 255 ),
	5060, 	Uvn( 0, 255 ),
	2397, 	Uvn( 0, 255 ),
	StripR(14),  
	2555, 	Uvn( 0, 255 ),
	5181, 	Uvn( 0, 255 ),
	5177, 	Uvn( 0, 255 ),
	2525, 	Uvn( 0, 255 ),
	2527, 	Uvn( 0, 255 ),
	2523, 	Uvn( 0, 255 ),
	2526, 	Uvn( 0, 255 ),
	5171, 	Uvn( 0, 255 ),
	5172, 	Uvn( 0, 255 ),
	5094, 	Uvn( 0, 255 ),
	5098, 	Uvn( 0, 255 ),
	5091, 	Uvn( 0, 255 ),
	5104, 	Uvn( 0, 255 ),
	5099, 	Uvn( 0, 255 ),
	StripR(7),  
	2581, 	Uvn( 0, 255 ),
	2580, 	Uvn( 0, 255 ),
	2588, 	Uvn( 0, 255 ),
	2589, 	Uvn( 0, 255 ),
	2593, 	Uvn( 0, 255 ),
	2594, 	Uvn( 0, 255 ),
	2592, 	Uvn( 0, 255 ),
	StripL(6),  
	5089, 	Uvn( 0, 255 ),
	5101, 	Uvn( 0, 255 ),
	5096, 	Uvn( 0, 255 ),
	2528, 	Uvn( 0, 255 ),
	2522, 	Uvn( 0, 255 ),
	2532, 	Uvn( 0, 255 ),
	StripL(8),  
	5174, 	Uvn( 0, 255 ),
	5105, 	Uvn( 0, 255 ),
	5104, 	Uvn( 0, 255 ),
	5108, 	Uvn( 0, 255 ),
	5099, 	Uvn( 0, 255 ),
	5109, 	Uvn( 0, 255 ),
	5100, 	Uvn( 0, 255 ),
	5110, 	Uvn( 0, 255 ),
	StripL(5),  
	5244, 	Uvn( 0, 255 ),
	5143, 	Uvn( 0, 255 ),
	5141, 	Uvn( 0, 255 ),
	5136, 	Uvn( 0, 255 ),
	5129, 	Uvn( 0, 255 ),
	StripR(15),  
	2614, 	Uvn( 0, 255 ),
	2619, 	Uvn( 0, 255 ),
	2616, 	Uvn( 0, 255 ),
	2623, 	Uvn( 0, 255 ),
	2620, 	Uvn( 0, 255 ),
	2626, 	Uvn( 0, 255 ),
	2625, 	Uvn( 0, 255 ),
	5274, 	Uvn( 0, 255 ),
	2624, 	Uvn( 0, 255 ),
	5271, 	Uvn( 0, 255 ),
	5268, 	Uvn( 0, 255 ),
	5266, 	Uvn( 0, 255 ),
	2617, 	Uvn( 0, 255 ),
	2612, 	Uvn( 0, 255 ),
	2608, 	Uvn( 0, 255 ),
	StripL(3),  
	5137, 	Uvn( 0, 255 ),
	5124, 	Uvn( 0, 255 ),
	5138, 	Uvn( 0, 255 ),
	StripL(9),  
	2606, 	Uvn( 0, 255 ),
	5157, 	Uvn( 0, 255 ),
	5155, 	Uvn( 0, 255 ),
	5152, 	Uvn( 0, 255 ),
	5148, 	Uvn( 0, 255 ),
	5140, 	Uvn( 0, 255 ),
	5137, 	Uvn( 0, 255 ),
	5131, 	Uvn( 0, 255 ),
	5124, 	Uvn( 0, 255 ),
	StripL(3),  
	2473, 	Uvn( 0, 255 ),
	2475, 	Uvn( 0, 255 ),
	5149, 	Uvn( 0, 255 ),
	StripR(8),  
	2384, 	Uvn( 0, 255 ),
	2425, 	Uvn( 0, 255 ),
	2373, 	Uvn( 0, 255 ),
	2418, 	Uvn( 0, 255 ),
	2365, 	Uvn( 0, 255 ),
	2409, 	Uvn( 0, 255 ),
	2361, 	Uvn( 0, 255 ),
	2395, 	Uvn( 0, 255 ),
	StripL(6),  
	5005, 	Uvn( 0, 255 ),
	5002, 	Uvn( 0, 255 ),
	2338, 	Uvn( 0, 255 ),
	4996, 	Uvn( 0, 255 ),
	2335, 	Uvn( 0, 255 ),
	2334, 	Uvn( 0, 255 ),
	StripR(5),  
	2254, 	Uvn( 0, 255 ),
	2253, 	Uvn( 0, 255 ),
	2271, 	Uvn( 0, 255 ),
	2269, 	Uvn( 0, 255 ),
	4851, 	Uvn( 0, 255 ),
	StripR(16),  
	4831, 	Uvn( 0, 255 ),
	4832, 	Uvn( 0, 255 ),
	4808, 	Uvn( 0, 255 ),
	4812, 	Uvn( 0, 255 ),
	4797, 	Uvn( 0, 255 ),
	4791, 	Uvn( 0, 255 ),
	4788, 	Uvn( 0, 255 ),
	4781, 	Uvn( 0, 255 ),
	4782, 	Uvn( 0, 255 ),
	4773, 	Uvn( 0, 255 ),
	4774, 	Uvn( 0, 255 ),
	4765, 	Uvn( 0, 255 ),
	4763, 	Uvn( 0, 255 ),
	4757, 	Uvn( 0, 255 ),
	4755, 	Uvn( 0, 255 ),
	4749, 	Uvn( 0, 255 ),
	StripL(6),  
	4740, 	Uvn( 0, 255 ),
	4738, 	Uvn( 0, 255 ),
	2245, 	Uvn( 0, 255 ),
	4739, 	Uvn( 0, 255 ),
	2246, 	Uvn( 0, 255 ),
	4742, 	Uvn( 0, 255 ),
	StripL(8),  
	2260, 	Uvn( 0, 255 ),
	2262, 	Uvn( 0, 255 ),
	2278, 	Uvn( 0, 255 ),
	2275, 	Uvn( 0, 255 ),
	2286, 	Uvn( 0, 255 ),
	2285, 	Uvn( 0, 255 ),
	4857, 	Uvn( 0, 255 ),
	4852, 	Uvn( 0, 255 ),
	StripL(11),  
	4845, 	Uvn( 0, 255 ),
	4844, 	Uvn( 0, 255 ),
	2266, 	Uvn( 0, 255 ),
	2264, 	Uvn( 0, 255 ),
	2279, 	Uvn( 0, 255 ),
	2281, 	Uvn( 0, 255 ),
	2287, 	Uvn( 0, 255 ),
	2288, 	Uvn( 0, 255 ),
	4864, 	Uvn( 0, 255 ),
	4868, 	Uvn( 0, 255 ),
	4885, 	Uvn( 0, 255 ),
	StripR(5),  
	4835, 	Uvn( 0, 255 ),
	4833, 	Uvn( 0, 255 ),
	4829, 	Uvn( 0, 255 ),
	4827, 	Uvn( 0, 255 ),
	4814, 	Uvn( 0, 255 ),
	StripL(3),  
	2258, 	Uvn( 0, 255 ),
	2273, 	Uvn( 0, 255 ),
	2261, 	Uvn( 0, 255 ),
	StripR(16),  
	4834, 	Uvn( 0, 255 ),
	4838, 	Uvn( 0, 255 ),
	4816, 	Uvn( 0, 255 ),
	4819, 	Uvn( 0, 255 ),
	4794, 	Uvn( 0, 255 ),
	4798, 	Uvn( 0, 255 ),
	4777, 	Uvn( 0, 255 ),
	4784, 	Uvn( 0, 255 ),
	4768, 	Uvn( 0, 255 ),
	4770, 	Uvn( 0, 255 ),
	4760, 	Uvn( 0, 255 ),
	4764, 	Uvn( 0, 255 ),
	4751, 	Uvn( 0, 255 ),
	4754, 	Uvn( 0, 255 ),
	4745, 	Uvn( 0, 255 ),
	4746, 	Uvn( 0, 255 ),
	StripR(11),  
	4843, 	Uvn( 0, 255 ),
	4842, 	Uvn( 0, 255 ),
	4824, 	Uvn( 0, 255 ),
	4826, 	Uvn( 0, 255 ),
	4803, 	Uvn( 0, 255 ),
	4806, 	Uvn( 0, 255 ),
	4790, 	Uvn( 0, 255 ),
	4793, 	Uvn( 0, 255 ),
	4779, 	Uvn( 0, 255 ),
	4783, 	Uvn( 0, 255 ),
	4767, 	Uvn( 0, 255 ),
	StripL(7),  
	4800, 	Uvn( 0, 255 ),
	4814, 	Uvn( 0, 255 ),
	4809, 	Uvn( 0, 255 ),
	4829, 	Uvn( 0, 255 ),
	4828, 	Uvn( 0, 255 ),
	4835, 	Uvn( 0, 255 ),
	4840, 	Uvn( 0, 255 ),
	StripR(7),  
	3384, 	Uvn( 0, 255 ),
	3392, 	Uvn( 0, 255 ),
	3394, 	Uvn( 0, 255 ),
	3401, 	Uvn( 0, 255 ),
	3402, 	Uvn( 0, 255 ),
	3409, 	Uvn( 0, 255 ),
	3414, 	Uvn( 0, 255 ),
	StripR(5),  
	4836, 	Uvn( 0, 255 ),
	4837, 	Uvn( 0, 255 ),
	2265, 	Uvn( 0, 255 ),
	2263, 	Uvn( 0, 255 ),
	2280, 	Uvn( 0, 255 ),
	StripL(3),  
	4823, 	Uvn( 0, 255 ),
	4813, 	Uvn( 0, 255 ),
	4805, 	Uvn( 0, 255 ),
	StripL(9),  
	4893, 	Uvn( 0, 255 ),
	4871, 	Uvn( 0, 255 ),
	4873, 	Uvn( 0, 255 ),
	4851, 	Uvn( 0, 255 ),
	4856, 	Uvn( 0, 255 ),
	2271, 	Uvn( 0, 255 ),
	2272, 	Uvn( 0, 255 ),
	2254, 	Uvn( 0, 255 ),
	2255, 	Uvn( 0, 255 ),
	StripL(34),  
	4881, 	Uvn( 0, 255 ),
	2290, 	Uvn( 0, 255 ),
	4863, 	Uvn( 0, 255 ),
	2284, 	Uvn( 0, 255 ),
	2289, 	Uvn( 0, 255 ),
	2267, 	Uvn( 0, 255 ),
	2269, 	Uvn( 0, 255 ),
	2252, 	Uvn( 0, 255 ),
	2253, 	Uvn( 0, 255 ),
	4825, 	Uvn( 0, 255 ),
	2254, 	Uvn( 0, 255 ),
	4831, 	Uvn( 0, 255 ),
	2255, 	Uvn( 0, 255 ),
	4832, 	Uvn( 0, 255 ),
	2257, 	Uvn( 0, 255 ),
	4834, 	Uvn( 0, 255 ),
	2259, 	Uvn( 0, 255 ),
	4838, 	Uvn( 0, 255 ),
	2260, 	Uvn( 0, 255 ),
	4841, 	Uvn( 0, 255 ),
	2262, 	Uvn( 0, 255 ),
	4843, 	Uvn( 0, 255 ),
	2261, 	Uvn( 0, 255 ),
	4842, 	Uvn( 0, 255 ),
	2258, 	Uvn( 0, 255 ),
	4840, 	Uvn( 0, 255 ),
	2256, 	Uvn( 0, 255 ),
	4835, 	Uvn( 0, 255 ),
	4845, 	Uvn( 0, 255 ),
	4833, 	Uvn( 0, 255 ),
	4844, 	Uvn( 0, 255 ),
	4830, 	Uvn( 0, 255 ),
	4822, 	Uvn( 0, 255 ),
	4810, 	Uvn( 0, 255 ),
	StripR(19),  
	4857, 	Uvn( 0, 255 ),
	4866, 	Uvn( 0, 255 ),
	4852, 	Uvn( 0, 255 ),
	4862, 	Uvn( 0, 255 ),
	4861, 	Uvn( 0, 255 ),
	4870, 	Uvn( 0, 255 ),
	4877, 	Uvn( 0, 255 ),
	4892, 	Uvn( 0, 255 ),
	4907, 	Uvn( 0, 255 ),
	4917, 	Uvn( 0, 255 ),
	4935, 	Uvn( 0, 255 ),
	4947, 	Uvn( 0, 255 ),
	4957, 	Uvn( 0, 255 ),
	4964, 	Uvn( 0, 255 ),
	4971, 	Uvn( 0, 255 ),
	2300, 	Uvn( 0, 255 ),
	2306, 	Uvn( 0, 255 ),
	2315, 	Uvn( 0, 255 ),
	2317, 	Uvn( 0, 255 ),
	StripL(15),  
	4746, 	Uvn( 0, 255 ),
	4756, 	Uvn( 0, 255 ),
	4754, 	Uvn( 0, 255 ),
	4766, 	Uvn( 0, 255 ),
	4764, 	Uvn( 0, 255 ),
	4776, 	Uvn( 0, 255 ),
	4770, 	Uvn( 0, 255 ),
	4787, 	Uvn( 0, 255 ),
	4784, 	Uvn( 0, 255 ),
	4801, 	Uvn( 0, 255 ),
	4798, 	Uvn( 0, 255 ),
	4821, 	Uvn( 0, 255 ),
	4819, 	Uvn( 0, 255 ),
	4841, 	Uvn( 0, 255 ),
	4838, 	Uvn( 0, 255 ),
	StripL(4),  
	3400, 	Uvn( 0, 255 ),
	3393, 	Uvn( 0, 255 ),
	3391, 	Uvn( 0, 255 ),
	3388, 	Uvn( 0, 255 ),
	StripL(3),  
	3415, 	Uvn( 0, 255 ),
	3416, 	Uvn( 0, 255 ),
	3404, 	Uvn( 0, 255 ),
	StripL(17),  
	3389, 	Uvn( 0, 255 ),
	3385, 	Uvn( 0, 255 ),
	3398, 	Uvn( 0, 255 ),
	2250, 	Uvn( 0, 255 ),
	3407, 	Uvn( 0, 255 ),
	4759, 	Uvn( 0, 255 ),
	4772, 	Uvn( 0, 255 ),
	2249, 	Uvn( 0, 255 ),
	4755, 	Uvn( 0, 255 ),
	4742, 	Uvn( 0, 255 ),
	4749, 	Uvn( 0, 255 ),
	4739, 	Uvn( 0, 255 ),
	4747, 	Uvn( 0, 255 ),
	4738, 	Uvn( 0, 255 ),
	4745, 	Uvn( 0, 255 ),
	4740, 	Uvn( 0, 255 ),
	4746, 	Uvn( 0, 255 ),
	StripL(3),  
	3385, 	Uvn( 0, 255 ),
	2248, 	Uvn( 0, 255 ),
	2250, 	Uvn( 0, 255 ),
	StripR(8),  
	3380, 	Uvn( 0, 255 ),
	3384, 	Uvn( 0, 255 ),
	3386, 	Uvn( 0, 255 ),
	3394, 	Uvn( 0, 255 ),
	3395, 	Uvn( 0, 255 ),
	3402, 	Uvn( 0, 255 ),
	3403, 	Uvn( 0, 255 ),
	3414, 	Uvn( 0, 255 ),
	StripR(5),  
	3358, 	Uvn( 0, 255 ),
	3359, 	Uvn( 0, 255 ),
	1903, 	Uvn( 0, 255 ),
	1902, 	Uvn( 0, 255 ),
	1895, 	Uvn( 0, 255 ),
	StripL(3),  
	3368, 	Uvn( 0, 255 ),
	3374, 	Uvn( 0, 255 ),
	3366, 	Uvn( 0, 255 ),
	StripR(9),  
	971, 	Uvn( 0, 255 ),
	974, 	Uvn( 0, 255 ),
	3626, 	Uvn( 0, 255 ),
	973, 	Uvn( 0, 255 ),
	3387, 	Uvn( 0, 255 ),
	3623, 	Uvn( 0, 255 ),
	3382, 	Uvn( 0, 255 ),
	3621, 	Uvn( 0, 255 ),
	3373, 	Uvn( 0, 255 ),
	StripR(7),  
	2243, 	Uvn( 0, 255 ),
	2240, 	Uvn( 0, 255 ),
	2235, 	Uvn( 0, 255 ),
	4226, 	Uvn( 0, 255 ),
	4224, 	Uvn( 0, 255 ),
	4223, 	Uvn( 0, 255 ),
	4214, 	Uvn( 0, 255 ),
	StripR(9),  
	1898, 	Uvn( 0, 255 ),
	1904, 	Uvn( 0, 255 ),
	1897, 	Uvn( 0, 255 ),
	1905, 	Uvn( 0, 255 ),
	1896, 	Uvn( 0, 255 ),
	1913, 	Uvn( 0, 255 ),
	1910, 	Uvn( 0, 255 ),
	1914, 	Uvn( 0, 255 ),
	4196, 	Uvn( 0, 255 ),
	StripL(3),  
	2244, 	Uvn( 0, 255 ),
	3375, 	Uvn( 0, 255 ),
	2236, 	Uvn( 0, 255 ),
	StripL(3),  
	3359, 	Uvn( 0, 255 ),
	1902, 	Uvn( 0, 255 ),
	3360, 	Uvn( 0, 255 ),
	StripL(3),  
	3365, 	Uvn( 0, 255 ),
	3366, 	Uvn( 0, 255 ),
	3372, 	Uvn( 0, 255 ),
	StripR(7),  
	3390, 	Uvn( 0, 255 ),
	3624, 	Uvn( 0, 255 ),
	3627, 	Uvn( 0, 255 ),
	3628, 	Uvn( 0, 255 ),
	3396, 	Uvn( 0, 255 ),
	3399, 	Uvn( 0, 255 ),
	3408, 	Uvn( 0, 255 ),
	StripL(7),  
	4817, 	Uvn( 0, 255 ),
	3420, 	Uvn( 0, 255 ),
	3418, 	Uvn( 0, 255 ),
	3415, 	Uvn( 0, 255 ),
	3413, 	Uvn( 0, 255 ),
	3404, 	Uvn( 0, 255 ),
	3405, 	Uvn( 0, 255 ),
	StripL(3),  
	4910, 	Uvn( 0, 255 ),
	4916, 	Uvn( 0, 255 ),
	4927, 	Uvn( 0, 255 ),
	StripL(6),  
	4971, 	Uvn( 0, 255 ),
	2310, 	Uvn( 0, 255 ),
	2306, 	Uvn( 0, 255 ),
	2320, 	Uvn( 0, 255 ),
	2317, 	Uvn( 0, 255 ),
	2331, 	Uvn( 0, 255 ),
	StripL(6),  
	4939, 	Uvn( 0, 255 ),
	4922, 	Uvn( 0, 255 ),
	4933, 	Uvn( 0, 255 ),
	4921, 	Uvn( 0, 255 ),
	4930, 	Uvn( 0, 255 ),
	4926, 	Uvn( 0, 255 ),
	StripR(19),  
	2314, 	Uvn( 0, 255 ),
	2324, 	Uvn( 0, 255 ),
	2323, 	Uvn( 0, 255 ),
	5008, 	Uvn( 0, 255 ),
	2330, 	Uvn( 0, 255 ),
	5019, 	Uvn( 0, 255 ),
	2329, 	Uvn( 0, 255 ),
	5012, 	Uvn( 0, 255 ),
	5004, 	Uvn( 0, 255 ),
	5015, 	Uvn( 0, 255 ),
	5009, 	Uvn( 0, 255 ),
	5017, 	Uvn( 0, 255 ),
	5013, 	Uvn( 0, 255 ),
	2354, 	Uvn( 0, 255 ),
	2347, 	Uvn( 0, 255 ),
	2359, 	Uvn( 0, 255 ),
	2351, 	Uvn( 0, 255 ),
	2365, 	Uvn( 0, 255 ),
	2361, 	Uvn( 0, 255 ),
	StripL(4),  
	4982, 	Uvn( 0, 255 ),
	4989, 	Uvn( 0, 255 ),
	4988, 	Uvn( 0, 255 ),
	5003, 	Uvn( 0, 255 ),
	StripR(20),  
	4934, 	Uvn( 0, 255 ),
	4945, 	Uvn( 0, 255 ),
	4948, 	Uvn( 0, 255 ),
	4956, 	Uvn( 0, 255 ),
	4961, 	Uvn( 0, 255 ),
	4968, 	Uvn( 0, 255 ),
	4969, 	Uvn( 0, 255 ),
	4973, 	Uvn( 0, 255 ),
	4967, 	Uvn( 0, 255 ),
	4977, 	Uvn( 0, 255 ),
	4975, 	Uvn( 0, 255 ),
	2311, 	Uvn( 0, 255 ),
	2309, 	Uvn( 0, 255 ),
	2319, 	Uvn( 0, 255 ),
	2318, 	Uvn( 0, 255 ),
	2329, 	Uvn( 0, 255 ),
	2327, 	Uvn( 0, 255 ),
	5004, 	Uvn( 0, 255 ),
	4995, 	Uvn( 0, 255 ),
	5009, 	Uvn( 0, 255 ),
	StripL(3),  
	2332, 	Uvn( 0, 255 ),
	2321, 	Uvn( 0, 255 ),
	2333, 	Uvn( 0, 255 ),
	StripL(4),  
	4911, 	Uvn( 0, 255 ),
	4883, 	Uvn( 0, 255 ),
	4892, 	Uvn( 0, 255 ),
	4870, 	Uvn( 0, 255 ),
	StripL(7),  
	2329, 	Uvn( 0, 255 ),
	2330, 	Uvn( 0, 255 ),
	2319, 	Uvn( 0, 255 ),
	2323, 	Uvn( 0, 255 ),
	2311, 	Uvn( 0, 255 ),
	2314, 	Uvn( 0, 255 ),
	4977, 	Uvn( 0, 255 ),
	StripL(7),  
	4926, 	Uvn( 0, 255 ),
	4932, 	Uvn( 0, 255 ),
	4930, 	Uvn( 0, 255 ),
	4942, 	Uvn( 0, 255 ),
	4933, 	Uvn( 0, 255 ),
	4946, 	Uvn( 0, 255 ),
	4939, 	Uvn( 0, 255 ),
	StripL(5),  
	5024, 	Uvn( 0, 255 ),
	5029, 	Uvn( 0, 255 ),
	2333, 	Uvn( 0, 255 ),
	5027, 	Uvn( 0, 255 ),
	2332, 	Uvn( 0, 255 ),
	StripR(10),  
	4967, 	Uvn( 0, 255 ),
	4975, 	Uvn( 0, 255 ),
	4974, 	Uvn( 0, 255 ),
	2309, 	Uvn( 0, 255 ),
	2305, 	Uvn( 0, 255 ),
	2318, 	Uvn( 0, 255 ),
	2316, 	Uvn( 0, 255 ),
	2327, 	Uvn( 0, 255 ),
	2325, 	Uvn( 0, 255 ),
	4995, 	Uvn( 0, 255 ),
	StripL(7),  
	4892, 	Uvn( 0, 255 ),
	4917, 	Uvn( 0, 255 ),
	4931, 	Uvn( 0, 255 ),
	4947, 	Uvn( 0, 255 ),
	4955, 	Uvn( 0, 255 ),
	4964, 	Uvn( 0, 255 ),
	2300, 	Uvn( 0, 255 ),
	StripR(6),  
	4921, 	Uvn( 0, 255 ),
	4912, 	Uvn( 0, 255 ),
	4922, 	Uvn( 0, 255 ),
	4908, 	Uvn( 0, 255 ),
	4903, 	Uvn( 0, 255 ),
	4888, 	Uvn( 0, 255 ),
	StripL(10),  
	3418, 	Uvn( 0, 255 ),
	3413, 	Uvn( 0, 255 ),
	4799, 	Uvn( 0, 255 ),
	3411, 	Uvn( 0, 255 ),
	4795, 	Uvn( 0, 255 ),
	4785, 	Uvn( 0, 255 ),
	4780, 	Uvn( 0, 255 ),
	4772, 	Uvn( 0, 255 ),
	4763, 	Uvn( 0, 255 ),
	4755, 	Uvn( 0, 255 ),
	StripL(3),  
	3411, 	Uvn( 0, 255 ),
	3406, 	Uvn( 0, 255 ),
	4785, 	Uvn( 0, 255 ),
	StripL(7),  
	4772, 	Uvn( 0, 255 ),
	4785, 	Uvn( 0, 255 ),
	3407, 	Uvn( 0, 255 ),
	3406, 	Uvn( 0, 255 ),
	3398, 	Uvn( 0, 255 ),
	3397, 	Uvn( 0, 255 ),
	3389, 	Uvn( 0, 255 ),
	StripL(7),  
	3417, 	Uvn( 0, 255 ),
	3419, 	Uvn( 0, 255 ),
	4811, 	Uvn( 0, 255 ),
	3416, 	Uvn( 0, 255 ),
	3421, 	Uvn( 0, 255 ),
	3415, 	Uvn( 0, 255 ),
	3420, 	Uvn( 0, 255 ),
	StripL(15),  
	4771, 	Uvn( 0, 255 ),
	4758, 	Uvn( 0, 255 ),
	4762, 	Uvn( 0, 255 ),
	4750, 	Uvn( 0, 255 ),
	4752, 	Uvn( 0, 255 ),
	4743, 	Uvn( 0, 255 ),
	4744, 	Uvn( 0, 255 ),
	4736, 	Uvn( 0, 255 ),
	4737, 	Uvn( 0, 255 ),
	3378, 	Uvn( 0, 255 ),
	3379, 	Uvn( 0, 255 ),
	3370, 	Uvn( 0, 255 ),
	3372, 	Uvn( 0, 255 ),
	3364, 	Uvn( 0, 255 ),
	3365, 	Uvn( 0, 255 ),
	StripL(4),  
	2185, 	Uvn( 0, 255 ),
	2169, 	Uvn( 0, 255 ),
	2167, 	Uvn( 0, 255 ),
	2163, 	Uvn( 0, 255 ),
	StripR(8),  
	2189, 	Uvn( 0, 255 ),
	2185, 	Uvn( 0, 255 ),
	2177, 	Uvn( 0, 255 ),
	2169, 	Uvn( 0, 255 ),
	2170, 	Uvn( 0, 255 ),
	2163, 	Uvn( 0, 255 ),
	2162, 	Uvn( 0, 255 ),
	2158, 	Uvn( 0, 255 ),
	StripL(4),  
	2204, 	Uvn( 0, 255 ),
	2212, 	Uvn( 0, 255 ),
	2210, 	Uvn( 0, 255 ),
	2219, 	Uvn( 0, 255 ),
	StripL(5),  
	4688, 	Uvn( 0, 255 ),
	4653, 	Uvn( 0, 255 ),
	2208, 	Uvn( 0, 255 ),
	4627, 	Uvn( 0, 255 ),
	4609, 	Uvn( 0, 255 ),
	StripL(7),  
	4695, 	Uvn( 0, 255 ),
	4715, 	Uvn( 0, 255 ),
	4694, 	Uvn( 0, 255 ),
	4717, 	Uvn( 0, 255 ),
	4690, 	Uvn( 0, 255 ),
	4712, 	Uvn( 0, 255 ),
	4716, 	Uvn( 0, 255 ),
	StripL(4),  
	4656, 	Uvn( 0, 255 ),
	4668, 	Uvn( 0, 255 ),
	4624, 	Uvn( 0, 255 ),
	4654, 	Uvn( 0, 255 ),
	StripL(8),  
	4590, 	Uvn( 0, 255 ),
	4586, 	Uvn( 0, 255 ),
	4570, 	Uvn( 0, 255 ),
	4550, 	Uvn( 0, 255 ),
	4547, 	Uvn( 0, 255 ),
	4524, 	Uvn( 0, 255 ),
	4521, 	Uvn( 0, 255 ),
	4507, 	Uvn( 0, 255 ),
	StripR(8),  
	4409, 	Uvn( 0, 255 ),
	4419, 	Uvn( 0, 255 ),
	4402, 	Uvn( 0, 255 ),
	4426, 	Uvn( 0, 255 ),
	4408, 	Uvn( 0, 255 ),
	4428, 	Uvn( 0, 255 ),
	4412, 	Uvn( 0, 255 ),
	4432, 	Uvn( 0, 255 ),
	StripR(13),  
	4504, 	Uvn( 0, 255 ),
	4485, 	Uvn( 0, 255 ),
	4486, 	Uvn( 0, 255 ),
	4472, 	Uvn( 0, 255 ),
	4479, 	Uvn( 0, 255 ),
	4459, 	Uvn( 0, 255 ),
	4461, 	Uvn( 0, 255 ),
	4455, 	Uvn( 0, 255 ),
	4478, 	Uvn( 0, 255 ),
	4458, 	Uvn( 0, 255 ),
	4476, 	Uvn( 0, 255 ),
	4467, 	Uvn( 0, 255 ),
	4492, 	Uvn( 0, 255 ),
	StripL(161),  
	4509, 	Uvn( 0, 255 ),
	4497, 	Uvn( 0, 255 ),
	4517, 	Uvn( 0, 255 ),
	4498, 	Uvn( 0, 255 ),
	4492, 	Uvn( 0, 255 ),
	4483, 	Uvn( 0, 255 ),
	4467, 	Uvn( 0, 255 ),
	4480, 	Uvn( 0, 255 ),
	4462, 	Uvn( 0, 255 ),
	4474, 	Uvn( 0, 255 ),
	4460, 	Uvn( 0, 255 ),
	4468, 	Uvn( 0, 255 ),
	4450, 	Uvn( 0, 255 ),
	4431, 	Uvn( 0, 255 ),
	4441, 	Uvn( 0, 255 ),
	4429, 	Uvn( 0, 255 ),
	4451, 	Uvn( 0, 255 ),
	4436, 	Uvn( 0, 255 ),
	4458, 	Uvn( 0, 255 ),
	4440, 	Uvn( 0, 255 ),
	4455, 	Uvn( 0, 255 ),
	4439, 	Uvn( 0, 255 ),
	4456, 	Uvn( 0, 255 ),
	4446, 	Uvn( 0, 255 ),
	4457, 	Uvn( 0, 255 ),
	4466, 	Uvn( 0, 255 ),
	4471, 	Uvn( 0, 255 ),
	4475, 	Uvn( 0, 255 ),
	4488, 	Uvn( 0, 255 ),
	4487, 	Uvn( 0, 255 ),
	4514, 	Uvn( 0, 255 ),
	4501, 	Uvn( 0, 255 ),
	4526, 	Uvn( 0, 255 ),
	4515, 	Uvn( 0, 255 ),
	4518, 	Uvn( 0, 255 ),
	4481, 	Uvn( 0, 255 ),
	4509, 	Uvn( 0, 255 ),
	4477, 	Uvn( 0, 255 ),
	4497, 	Uvn( 0, 255 ),
	4473, 	Uvn( 0, 255 ),
	4494, 	Uvn( 0, 255 ),
	4469, 	Uvn( 0, 255 ),
	4464, 	Uvn( 0, 255 ),
	4437, 	Uvn( 0, 255 ),
	4465, 	Uvn( 0, 255 ),
	4447, 	Uvn( 0, 255 ),
	4445, 	Uvn( 0, 255 ),
	4425, 	Uvn( 0, 255 ),
	4417, 	Uvn( 0, 255 ),
	4395, 	Uvn( 0, 255 ),
	4387, 	Uvn( 0, 255 ),
	4360, 	Uvn( 0, 255 ),
	4357, 	Uvn( 0, 255 ),
	4355, 	Uvn( 0, 255 ),
	4354, 	Uvn( 0, 255 ),
	4359, 	Uvn( 0, 255 ),
	4358, 	Uvn( 0, 255 ),
	4374, 	Uvn( 0, 255 ),
	2161, 	Uvn( 0, 255 ),
	2168, 	Uvn( 0, 255 ),
	4295, 	Uvn( 0, 255 ),
	4303, 	Uvn( 0, 255 ),
	4293, 	Uvn( 0, 255 ),
	4300, 	Uvn( 0, 255 ),
	4294, 	Uvn( 0, 255 ),
	4304, 	Uvn( 0, 255 ),
	4296, 	Uvn( 0, 255 ),
	4308, 	Uvn( 0, 255 ),
	4307, 	Uvn( 0, 255 ),
	4318, 	Uvn( 0, 255 ),
	4313, 	Uvn( 0, 255 ),
	4321, 	Uvn( 0, 255 ),
	4316, 	Uvn( 0, 255 ),
	4327, 	Uvn( 0, 255 ),
	2117, 	Uvn( 0, 255 ),
	2124, 	Uvn( 0, 255 ),
	2118, 	Uvn( 0, 255 ),
	2126, 	Uvn( 0, 255 ),
	2116, 	Uvn( 0, 255 ),
	2125, 	Uvn( 0, 255 ),
	2115, 	Uvn( 0, 255 ),
	2123, 	Uvn( 0, 255 ),
	2113, 	Uvn( 0, 255 ),
	4255, 	Uvn( 0, 255 ),
	4249, 	Uvn( 0, 255 ),
	4253, 	Uvn( 0, 255 ),
	4247, 	Uvn( 0, 255 ),
	4252, 	Uvn( 0, 255 ),
	4246, 	Uvn( 0, 255 ),
	2001, 	Uvn( 0, 255 ),
	1987, 	Uvn( 0, 255 ),
	2005, 	Uvn( 0, 255 ),
	1986, 	Uvn( 0, 255 ),
	2007, 	Uvn( 0, 255 ),
	1988, 	Uvn( 0, 255 ),
	2008, 	Uvn( 0, 255 ),
	1989, 	Uvn( 0, 255 ),
	2014, 	Uvn( 0, 255 ),
	2018, 	Uvn( 0, 255 ),
	2049, 	Uvn( 0, 255 ),
	2053, 	Uvn( 0, 255 ),
	2060, 	Uvn( 0, 255 ),
	2063, 	Uvn( 0, 255 ),
	2065, 	Uvn( 0, 255 ),
	2066, 	Uvn( 0, 255 ),
	2064, 	Uvn( 0, 255 ),
	3540, 	Uvn( 0, 255 ),
	3531, 	Uvn( 0, 255 ),
	3532, 	Uvn( 0, 255 ),
	3528, 	Uvn( 0, 255 ),
	979, 	Uvn( 0, 255 ),
	3522, 	Uvn( 0, 255 ),
	978, 	Uvn( 0, 255 ),
	3520, 	Uvn( 0, 255 ),
	3523, 	Uvn( 0, 255 ),
	3511, 	Uvn( 0, 255 ),
	3515, 	Uvn( 0, 255 ),
	3507, 	Uvn( 0, 255 ),
	698, 	Uvn( 0, 255 ),
	3500, 	Uvn( 0, 255 ),
	695, 	Uvn( 0, 255 ),
	3496, 	Uvn( 0, 255 ),
	689, 	Uvn( 0, 255 ),
	674, 	Uvn( 0, 255 ),
	690, 	Uvn( 0, 255 ),
	673, 	Uvn( 0, 255 ),
	3576, 	Uvn( 0, 255 ),
	651, 	Uvn( 0, 255 ),
	3558, 	Uvn( 0, 255 ),
	3554, 	Uvn( 0, 255 ),
	3557, 	Uvn( 0, 255 ),
	3553, 	Uvn( 0, 255 ),
	994, 	Uvn( 0, 255 ),
	992, 	Uvn( 0, 255 ),
	4016, 	Uvn( 0, 255 ),
	4015, 	Uvn( 0, 255 ),
	924, 	Uvn( 0, 255 ),
	917, 	Uvn( 0, 255 ),
	914, 	Uvn( 0, 255 ),
	900, 	Uvn( 0, 255 ),
	904, 	Uvn( 0, 255 ),
	3324, 	Uvn( 0, 255 ),
	3330, 	Uvn( 0, 255 ),
	3326, 	Uvn( 0, 255 ),
	3332, 	Uvn( 0, 255 ),
	3322, 	Uvn( 0, 255 ),
	798, 	Uvn( 0, 255 ),
	796, 	Uvn( 0, 255 ),
	797, 	Uvn( 0, 255 ),
	3258, 	Uvn( 0, 255 ),
	3245, 	Uvn( 0, 255 ),
	3300, 	Uvn( 0, 255 ),
	3232, 	Uvn( 0, 255 ),
	3301, 	Uvn( 0, 255 ),
	3296, 	Uvn( 0, 255 ),
	3302, 	Uvn( 0, 255 ),
	3294, 	Uvn( 0, 255 ),
	3303, 	Uvn( 0, 255 ),
	3292, 	Uvn( 0, 255 ),
	3291, 	Uvn( 0, 255 ),
	3286, 	Uvn( 0, 255 ),
	StripR(8),  
	4490, 	Uvn( 0, 255 ),
	4491, 	Uvn( 0, 255 ),
	4489, 	Uvn( 0, 255 ),
	4495, 	Uvn( 0, 255 ),
	4512, 	Uvn( 0, 255 ),
	4496, 	Uvn( 0, 255 ),
	4508, 	Uvn( 0, 255 ),
	4520, 	Uvn( 0, 255 ),
	StripL(8),  
	4579, 	Uvn( 0, 255 ),
	4588, 	Uvn( 0, 255 ),
	4561, 	Uvn( 0, 255 ),
	4562, 	Uvn( 0, 255 ),
	4548, 	Uvn( 0, 255 ),
	4544, 	Uvn( 0, 255 ),
	4540, 	Uvn( 0, 255 ),
	4531, 	Uvn( 0, 255 ),
	StripL(4),  
	4582, 	Uvn( 0, 255 ),
	4592, 	Uvn( 0, 255 ),
	4553, 	Uvn( 0, 255 ),
	4580, 	Uvn( 0, 255 ),
	StripL(14),  
	4618, 	Uvn( 0, 255 ),
	4596, 	Uvn( 0, 255 ),
	4587, 	Uvn( 0, 255 ),
	4574, 	Uvn( 0, 255 ),
	4578, 	Uvn( 0, 255 ),
	4600, 	Uvn( 0, 255 ),
	4606, 	Uvn( 0, 255 ),
	4623, 	Uvn( 0, 255 ),
	4621, 	Uvn( 0, 255 ),
	4640, 	Uvn( 0, 255 ),
	4614, 	Uvn( 0, 255 ),
	4628, 	Uvn( 0, 255 ),
	4625, 	Uvn( 0, 255 ),
	4649, 	Uvn( 0, 255 ),
	StripL(3),  
	4608, 	Uvn( 0, 255 ),
	4605, 	Uvn( 0, 255 ),
	4624, 	Uvn( 0, 255 ),
	StripL(15),  
	4649, 	Uvn( 0, 255 ),
	4628, 	Uvn( 0, 255 ),
	4666, 	Uvn( 0, 255 ),
	4640, 	Uvn( 0, 255 ),
	4680, 	Uvn( 0, 255 ),
	4657, 	Uvn( 0, 255 ),
	4681, 	Uvn( 0, 255 ),
	4672, 	Uvn( 0, 255 ),
	4679, 	Uvn( 0, 255 ),
	4655, 	Uvn( 0, 255 ),
	4662, 	Uvn( 0, 255 ),
	4629, 	Uvn( 0, 255 ),
	4633, 	Uvn( 0, 255 ),
	4616, 	Uvn( 0, 255 ),
	4615, 	Uvn( 0, 255 ),
	StripL(17),  
	4685, 	Uvn( 0, 255 ),
	4702, 	Uvn( 0, 255 ),
	4675, 	Uvn( 0, 255 ),
	4677, 	Uvn( 0, 255 ),
	4674, 	Uvn( 0, 255 ),
	4701, 	Uvn( 0, 255 ),
	4676, 	Uvn( 0, 255 ),
	4698, 	Uvn( 0, 255 ),
	4693, 	Uvn( 0, 255 ),
	4713, 	Uvn( 0, 255 ),
	4719, 	Uvn( 0, 255 ),
	4727, 	Uvn( 0, 255 ),
	4705, 	Uvn( 0, 255 ),
	4722, 	Uvn( 0, 255 ),
	2225, 	Uvn( 0, 255 ),
	4726, 	Uvn( 0, 255 ),
	2230, 	Uvn( 0, 255 ),
	StripL(5),  
	4711, 	Uvn( 0, 255 ),
	4720, 	Uvn( 0, 255 ),
	4718, 	Uvn( 0, 255 ),
	4728, 	Uvn( 0, 255 ),
	4730, 	Uvn( 0, 255 ),
	StripL(6),  
	2225, 	Uvn( 0, 255 ),
	4687, 	Uvn( 0, 255 ),
	4705, 	Uvn( 0, 255 ),
	4686, 	Uvn( 0, 255 ),
	4719, 	Uvn( 0, 255 ),
	4693, 	Uvn( 0, 255 ),
	StripL(16),  
	2166, 	Uvn( 0, 255 ),
	2152, 	Uvn( 0, 255 ),
	2165, 	Uvn( 0, 255 ),
	2154, 	Uvn( 0, 255 ),
	2164, 	Uvn( 0, 255 ),
	2155, 	Uvn( 0, 255 ),
	2159, 	Uvn( 0, 255 ),
	2153, 	Uvn( 0, 255 ),
	2162, 	Uvn( 0, 255 ),
	4289, 	Uvn( 0, 255 ),
	2158, 	Uvn( 0, 255 ),
	2156, 	Uvn( 0, 255 ),
	2163, 	Uvn( 0, 255 ),
	2160, 	Uvn( 0, 255 ),
	2167, 	Uvn( 0, 255 ),
	4305, 	Uvn( 0, 255 ),
	StripR(38),  
	4300, 	Uvn( 0, 255 ),
	4304, 	Uvn( 0, 255 ),
	4310, 	Uvn( 0, 255 ),
	4308, 	Uvn( 0, 255 ),
	4317, 	Uvn( 0, 255 ),
	4318, 	Uvn( 0, 255 ),
	4331, 	Uvn( 0, 255 ),
	4321, 	Uvn( 0, 255 ),
	4346, 	Uvn( 0, 255 ),
	4327, 	Uvn( 0, 255 ),
	4353, 	Uvn( 0, 255 ),
	2124, 	Uvn( 0, 255 ),
	2136, 	Uvn( 0, 255 ),
	2126, 	Uvn( 0, 255 ),
	2137, 	Uvn( 0, 255 ),
	2125, 	Uvn( 0, 255 ),
	2134, 	Uvn( 0, 255 ),
	2123, 	Uvn( 0, 255 ),
	2131, 	Uvn( 0, 255 ),
	4255, 	Uvn( 0, 255 ),
	4258, 	Uvn( 0, 255 ),
	4253, 	Uvn( 0, 255 ),
	4257, 	Uvn( 0, 255 ),
	4252, 	Uvn( 0, 255 ),
	2013, 	Uvn( 0, 255 ),
	2001, 	Uvn( 0, 255 ),
	2016, 	Uvn( 0, 255 ),
	2005, 	Uvn( 0, 255 ),
	2020, 	Uvn( 0, 255 ),
	2007, 	Uvn( 0, 255 ),
	2022, 	Uvn( 0, 255 ),
	2008, 	Uvn( 0, 255 ),
	2028, 	Uvn( 0, 255 ),
	2014, 	Uvn( 0, 255 ),
	2044, 	Uvn( 0, 255 ),
	2049, 	Uvn( 0, 255 ),
	2056, 	Uvn( 0, 255 ),
	2060, 	Uvn( 0, 255 ),
	StripL(15),  
	2160, 	Uvn( 0, 255 ),
	2156, 	Uvn( 0, 255 ),
	4292, 	Uvn( 0, 255 ),
	4287, 	Uvn( 0, 255 ),
	4282, 	Uvn( 0, 255 ),
	4279, 	Uvn( 0, 255 ),
	4278, 	Uvn( 0, 255 ),
	4272, 	Uvn( 0, 255 ),
	4273, 	Uvn( 0, 255 ),
	4268, 	Uvn( 0, 255 ),
	2094, 	Uvn( 0, 255 ),
	2086, 	Uvn( 0, 255 ),
	2077, 	Uvn( 0, 255 ),
	2083, 	Uvn( 0, 255 ),
	2071, 	Uvn( 0, 255 ),
	StripL(6),  
	2171, 	Uvn( 0, 255 ),
	2172, 	Uvn( 0, 255 ),
	2164, 	Uvn( 0, 255 ),
	2175, 	Uvn( 0, 255 ),
	2165, 	Uvn( 0, 255 ),
	2166, 	Uvn( 0, 255 ),
	StripL(5),  
	2214, 	Uvn( 0, 255 ),
	2224, 	Uvn( 0, 255 ),
	2222, 	Uvn( 0, 255 ),
	2227, 	Uvn( 0, 255 ),
	2220, 	Uvn( 0, 255 ),
	StripL(9),  
	2194, 	Uvn( 0, 255 ),
	2187, 	Uvn( 0, 255 ),
	2190, 	Uvn( 0, 255 ),
	2184, 	Uvn( 0, 255 ),
	2186, 	Uvn( 0, 255 ),
	2179, 	Uvn( 0, 255 ),
	2177, 	Uvn( 0, 255 ),
	2173, 	Uvn( 0, 255 ),
	2170, 	Uvn( 0, 255 ),
	StripL(41),  
	2150, 	Uvn( 0, 255 ),
	2157, 	Uvn( 0, 255 ),
	2151, 	Uvn( 0, 255 ),
	4285, 	Uvn( 0, 255 ),
	4271, 	Uvn( 0, 255 ),
	4283, 	Uvn( 0, 255 ),
	4274, 	Uvn( 0, 255 ),
	4286, 	Uvn( 0, 255 ),
	4269, 	Uvn( 0, 255 ),
	4284, 	Uvn( 0, 255 ),
	4267, 	Uvn( 0, 255 ),
	4281, 	Uvn( 0, 255 ),
	2087, 	Uvn( 0, 255 ),
	4275, 	Uvn( 0, 255 ),
	2085, 	Uvn( 0, 255 ),
	2098, 	Uvn( 0, 255 ),
	2080, 	Uvn( 0, 255 ),
	2097, 	Uvn( 0, 255 ),
	2078, 	Uvn( 0, 255 ),
	2093, 	Uvn( 0, 255 ),
	2081, 	Uvn( 0, 255 ),
	2092, 	Uvn( 0, 255 ),
	2084, 	Uvn( 0, 255 ),
	2096, 	Uvn( 0, 255 ),
	2082, 	Uvn( 0, 255 ),
	2095, 	Uvn( 0, 255 ),
	4236, 	Uvn( 0, 255 ),
	4241, 	Uvn( 0, 255 ),
	4235, 	Uvn( 0, 255 ),
	4238, 	Uvn( 0, 255 ),
	1942, 	Uvn( 0, 255 ),
	1958, 	Uvn( 0, 255 ),
	1938, 	Uvn( 0, 255 ),
	1955, 	Uvn( 0, 255 ),
	1934, 	Uvn( 0, 255 ),
	1956, 	Uvn( 0, 255 ),
	1935, 	Uvn( 0, 255 ),
	1954, 	Uvn( 0, 255 ),
	1948, 	Uvn( 0, 255 ),
	1972, 	Uvn( 0, 255 ),
	1973, 	Uvn( 0, 255 ),
	StripL(52),  
	2228, 	Uvn( 0, 255 ),
	2226, 	Uvn( 0, 255 ),
	4715, 	Uvn( 0, 255 ),
	2230, 	Uvn( 0, 255 ),
	4717, 	Uvn( 0, 255 ),
	4726, 	Uvn( 0, 255 ),
	4712, 	Uvn( 0, 255 ),
	4722, 	Uvn( 0, 255 ),
	4716, 	Uvn( 0, 255 ),
	4727, 	Uvn( 0, 255 ),
	4723, 	Uvn( 0, 255 ),
	4729, 	Uvn( 0, 255 ),
	4725, 	Uvn( 0, 255 ),
	4730, 	Uvn( 0, 255 ),
	4721, 	Uvn( 0, 255 ),
	4728, 	Uvn( 0, 255 ),
	4724, 	Uvn( 0, 255 ),
	4720, 	Uvn( 0, 255 ),
	4707, 	Uvn( 0, 255 ),
	4714, 	Uvn( 0, 255 ),
	4708, 	Uvn( 0, 255 ),
	4702, 	Uvn( 0, 255 ),
	4703, 	Uvn( 0, 255 ),
	4685, 	Uvn( 0, 255 ),
	4699, 	Uvn( 0, 255 ),
	4682, 	Uvn( 0, 255 ),
	4704, 	Uvn( 0, 255 ),
	4683, 	Uvn( 0, 255 ),
	4684, 	Uvn( 0, 255 ),
	4678, 	Uvn( 0, 255 ),
	4696, 	Uvn( 0, 255 ),
	4669, 	Uvn( 0, 255 ),
	4700, 	Uvn( 0, 255 ),
	4665, 	Uvn( 0, 255 ),
	4691, 	Uvn( 0, 255 ),
	4652, 	Uvn( 0, 255 ),
	4689, 	Uvn( 0, 255 ),
	4650, 	Uvn( 0, 255 ),
	4648, 	Uvn( 0, 255 ),
	4639, 	Uvn( 0, 255 ),
	4647, 	Uvn( 0, 255 ),
	4637, 	Uvn( 0, 255 ),
	4642, 	Uvn( 0, 255 ),
	4658, 	Uvn( 0, 255 ),
	4663, 	Uvn( 0, 255 ),
	4687, 	Uvn( 0, 255 ),
	2218, 	Uvn( 0, 255 ),
	2225, 	Uvn( 0, 255 ),
	2223, 	Uvn( 0, 255 ),
	2230, 	Uvn( 0, 255 ),
	2221, 	Uvn( 0, 255 ),
	2226, 	Uvn( 0, 255 ),
	StripL(4),  
	4699, 	Uvn( 0, 255 ),
	4707, 	Uvn( 0, 255 ),
	4703, 	Uvn( 0, 255 ),
	4708, 	Uvn( 0, 255 ),
	StripR(10),  
	4614, 	Uvn( 0, 255 ),
	4621, 	Uvn( 0, 255 ),
	4594, 	Uvn( 0, 255 ),
	4606, 	Uvn( 0, 255 ),
	4571, 	Uvn( 0, 255 ),
	4578, 	Uvn( 0, 255 ),
	4589, 	Uvn( 0, 255 ),
	4587, 	Uvn( 0, 255 ),
	4613, 	Uvn( 0, 255 ),
	4618, 	Uvn( 0, 255 ),
	StripR(6),  
	4576, 	Uvn( 0, 255 ),
	4572, 	Uvn( 0, 255 ),
	4611, 	Uvn( 0, 255 ),
	4610, 	Uvn( 0, 255 ),
	4631, 	Uvn( 0, 255 ),
	4634, 	Uvn( 0, 255 ),
	StripR(38),  
	4552, 	Uvn( 0, 255 ),
	2193, 	Uvn( 0, 255 ),
	2204, 	Uvn( 0, 255 ),
	4334, 	Uvn( 0, 255 ),
	2210, 	Uvn( 0, 255 ),
	4329, 	Uvn( 0, 255 ),
	4350, 	Uvn( 0, 255 ),
	4323, 	Uvn( 0, 255 ),
	4330, 	Uvn( 0, 255 ),
	4328, 	Uvn( 0, 255 ),
	4337, 	Uvn( 0, 255 ),
	4341, 	Uvn( 0, 255 ),
	4336, 	Uvn( 0, 255 ),
	4352, 	Uvn( 0, 255 ),
	4348, 	Uvn( 0, 255 ),
	2141, 	Uvn( 0, 255 ),
	2132, 	Uvn( 0, 255 ),
	2147, 	Uvn( 0, 255 ),
	2139, 	Uvn( 0, 255 ),
	2149, 	Uvn( 0, 255 ),
	2143, 	Uvn( 0, 255 ),
	2146, 	Uvn( 0, 255 ),
	2142, 	Uvn( 0, 255 ),
	2140, 	Uvn( 0, 255 ),
	2133, 	Uvn( 0, 255 ),
	4265, 	Uvn( 0, 255 ),
	4263, 	Uvn( 0, 255 ),
	4264, 	Uvn( 0, 255 ),
	4260, 	Uvn( 0, 255 ),
	2032, 	Uvn( 0, 255 ),
	2025, 	Uvn( 0, 255 ),
	2037, 	Uvn( 0, 255 ),
	2027, 	Uvn( 0, 255 ),
	2039, 	Uvn( 0, 255 ),
	2030, 	Uvn( 0, 255 ),
	2041, 	Uvn( 0, 255 ),
	2036, 	Uvn( 0, 255 ),
	2046, 	Uvn( 0, 255 ),
	StripL(18),  
	4542, 	Uvn( 0, 255 ),
	4539, 	Uvn( 0, 255 ),
	4567, 	Uvn( 0, 255 ),
	4563, 	Uvn( 0, 255 ),
	4566, 	Uvn( 0, 255 ),
	4564, 	Uvn( 0, 255 ),
	4545, 	Uvn( 0, 255 ),
	4565, 	Uvn( 0, 255 ),
	4552, 	Uvn( 0, 255 ),
	4583, 	Uvn( 0, 255 ),
	2207, 	Uvn( 0, 255 ),
	4603, 	Uvn( 0, 255 ),
	4620, 	Uvn( 0, 255 ),
	4625, 	Uvn( 0, 255 ),
	4636, 	Uvn( 0, 255 ),
	4649, 	Uvn( 0, 255 ),
	4635, 	Uvn( 0, 255 ),
	4645, 	Uvn( 0, 255 ),
	StripR(13),  
	4586, 	Uvn( 0, 255 ),
	4550, 	Uvn( 0, 255 ),
	4556, 	Uvn( 0, 255 ),
	4528, 	Uvn( 0, 255 ),
	4540, 	Uvn( 0, 255 ),
	4516, 	Uvn( 0, 255 ),
	4531, 	Uvn( 0, 255 ),
	4532, 	Uvn( 0, 255 ),
	4544, 	Uvn( 0, 255 ),
	4543, 	Uvn( 0, 255 ),
	4562, 	Uvn( 0, 255 ),
	4558, 	Uvn( 0, 255 ),
	4588, 	Uvn( 0, 255 ),
	StripL(3),  
	4505, 	Uvn( 0, 255 ),
	4500, 	Uvn( 0, 255 ),
	4522, 	Uvn( 0, 255 ),
	StripR(5),  
	4430, 	Uvn( 0, 255 ),
	4401, 	Uvn( 0, 255 ),
	2176, 	Uvn( 0, 255 ),
	2168, 	Uvn( 0, 255 ),
	4303, 	Uvn( 0, 255 ),
	StripR(7),  
	4386, 	Uvn( 0, 255 ),
	4411, 	Uvn( 0, 255 ),
	4397, 	Uvn( 0, 255 ),
	4423, 	Uvn( 0, 255 ),
	4399, 	Uvn( 0, 255 ),
	4400, 	Uvn( 0, 255 ),
	4380, 	Uvn( 0, 255 ),
	StripL(5),  
	4453, 	Uvn( 0, 255 ),
	4423, 	Uvn( 0, 255 ),
	4438, 	Uvn( 0, 255 ),
	4416, 	Uvn( 0, 255 ),
	4434, 	Uvn( 0, 255 ),
	StripL(3),  
	4427, 	Uvn( 0, 255 ),
	4443, 	Uvn( 0, 255 ),
	4422, 	Uvn( 0, 255 ),
	StripL(7),  
	4391, 	Uvn( 0, 255 ),
	4410, 	Uvn( 0, 255 ),
	4388, 	Uvn( 0, 255 ),
	4406, 	Uvn( 0, 255 ),
	4390, 	Uvn( 0, 255 ),
	4405, 	Uvn( 0, 255 ),
	4379, 	Uvn( 0, 255 ),
	StripL(3),  
	4377, 	Uvn( 0, 255 ),
	4379, 	Uvn( 0, 255 ),
	4376, 	Uvn( 0, 255 ),
	StripR(5),  
	4375, 	Uvn( 0, 255 ),
	4404, 	Uvn( 0, 255 ),
	4371, 	Uvn( 0, 255 ),
	4383, 	Uvn( 0, 255 ),
	4368, 	Uvn( 0, 255 ),
	StripL(5),  
	4519, 	Uvn( 0, 255 ),
	4479, 	Uvn( 0, 255 ),
	4506, 	Uvn( 0, 255 ),
	4486, 	Uvn( 0, 255 ),
	4504, 	Uvn( 0, 255 ),
	StripL(7),  
	4497, 	Uvn( 0, 255 ),
	4494, 	Uvn( 0, 255 ),
	4498, 	Uvn( 0, 255 ),
	4490, 	Uvn( 0, 255 ),
	4493, 	Uvn( 0, 255 ),
	4491, 	Uvn( 0, 255 ),
	4480, 	Uvn( 0, 255 ),
	StripL(4),  
	4510, 	Uvn( 0, 255 ),
	4499, 	Uvn( 0, 255 ),
	4520, 	Uvn( 0, 255 ),
	4496, 	Uvn( 0, 255 ),
	StripL(5),  
	4596, 	Uvn( 0, 255 ),
	4585, 	Uvn( 0, 255 ),
	4574, 	Uvn( 0, 255 ),
	4602, 	Uvn( 0, 255 ),
	4600, 	Uvn( 0, 255 ),
	StripR(5),  
	4616, 	Uvn( 0, 255 ),
	4617, 	Uvn( 0, 255 ),
	4629, 	Uvn( 0, 255 ),
	4630, 	Uvn( 0, 255 ),
	4655, 	Uvn( 0, 255 ),
	StripL(9),  
	4634, 	Uvn( 0, 255 ),
	4613, 	Uvn( 0, 255 ),
	4610, 	Uvn( 0, 255 ),
	4589, 	Uvn( 0, 255 ),
	4572, 	Uvn( 0, 255 ),
	4568, 	Uvn( 0, 255 ),
	4576, 	Uvn( 0, 255 ),
	4565, 	Uvn( 0, 255 ),
	4564, 	Uvn( 0, 255 ),
	StripL(4),  
	2166, 	Uvn( 0, 255 ),
	2175, 	Uvn( 0, 255 ),
	2174, 	Uvn( 0, 255 ),
	2181, 	Uvn( 0, 255 ),
	StripL(22),  
	2206, 	Uvn( 0, 255 ),
	2208, 	Uvn( 0, 255 ),
	2198, 	Uvn( 0, 255 ),
	4609, 	Uvn( 0, 255 ),
	4575, 	Uvn( 0, 255 ),
	4576, 	Uvn( 0, 255 ),
	4555, 	Uvn( 0, 255 ),
	4560, 	Uvn( 0, 255 ),
	4538, 	Uvn( 0, 255 ),
	4539, 	Uvn( 0, 255 ),
	4508, 	Uvn( 0, 255 ),
	4542, 	Uvn( 0, 255 ),
	4520, 	Uvn( 0, 255 ),
	4521, 	Uvn( 0, 255 ),
	4510, 	Uvn( 0, 255 ),
	4507, 	Uvn( 0, 255 ),
	4530, 	Uvn( 0, 255 ),
	4532, 	Uvn( 0, 255 ),
	4535, 	Uvn( 0, 255 ),
	4543, 	Uvn( 0, 255 ),
	4546, 	Uvn( 0, 255 ),
	4558, 	Uvn( 0, 255 ),
	StripR(5),  
	2229, 	Uvn( 0, 255 ),
	2219, 	Uvn( 0, 255 ),
	2216, 	Uvn( 0, 255 ),
	2210, 	Uvn( 0, 255 ),
	4350, 	Uvn( 0, 255 ),
	StripL(6),  
	2187, 	Uvn( 0, 255 ),
	2182, 	Uvn( 0, 255 ),
	2184, 	Uvn( 0, 255 ),
	2178, 	Uvn( 0, 255 ),
	2179, 	Uvn( 0, 255 ),
	2173, 	Uvn( 0, 255 ),
	StripL(3),  
	2176, 	Uvn( 0, 255 ),
	4430, 	Uvn( 0, 255 ),
	2183, 	Uvn( 0, 255 ),
	StripR(35),  
	2015, 	Uvn( 0, 255 ),
	1997, 	Uvn( 0, 255 ),
	2012, 	Uvn( 0, 255 ),
	1995, 	Uvn( 0, 255 ),
	2011, 	Uvn( 0, 255 ),
	1994, 	Uvn( 0, 255 ),
	2009, 	Uvn( 0, 255 ),
	4251, 	Uvn( 0, 255 ),
	4256, 	Uvn( 0, 255 ),
	4254, 	Uvn( 0, 255 ),
	4259, 	Uvn( 0, 255 ),
	2121, 	Uvn( 0, 255 ),
	2130, 	Uvn( 0, 255 ),
	2122, 	Uvn( 0, 255 ),
	2129, 	Uvn( 0, 255 ),
	2120, 	Uvn( 0, 255 ),
	2128, 	Uvn( 0, 255 ),
	2119, 	Uvn( 0, 255 ),
	2127, 	Uvn( 0, 255 ),
	4315, 	Uvn( 0, 255 ),
	4324, 	Uvn( 0, 255 ),
	4309, 	Uvn( 0, 255 ),
	4320, 	Uvn( 0, 255 ),
	4311, 	Uvn( 0, 255 ),
	4322, 	Uvn( 0, 255 ),
	4326, 	Uvn( 0, 255 ),
	4345, 	Uvn( 0, 255 ),
	4338, 	Uvn( 0, 255 ),
	4339, 	Uvn( 0, 255 ),
	4347, 	Uvn( 0, 255 ),
	4349, 	Uvn( 0, 255 ),
	2205, 	Uvn( 0, 255 ),
	2213, 	Uvn( 0, 255 ),
	2209, 	Uvn( 0, 255 ),
	2215, 	Uvn( 0, 255 ),
	StripR(36),  
	2036, 	Uvn( 0, 255 ),
	2015, 	Uvn( 0, 255 ),
	2030, 	Uvn( 0, 255 ),
	2012, 	Uvn( 0, 255 ),
	2027, 	Uvn( 0, 255 ),
	2011, 	Uvn( 0, 255 ),
	2025, 	Uvn( 0, 255 ),
	2009, 	Uvn( 0, 255 ),
	4260, 	Uvn( 0, 255 ),
	4256, 	Uvn( 0, 255 ),
	4263, 	Uvn( 0, 255 ),
	4259, 	Uvn( 0, 255 ),
	2133, 	Uvn( 0, 255 ),
	2130, 	Uvn( 0, 255 ),
	2142, 	Uvn( 0, 255 ),
	2129, 	Uvn( 0, 255 ),
	2143, 	Uvn( 0, 255 ),
	2128, 	Uvn( 0, 255 ),
	2139, 	Uvn( 0, 255 ),
	2127, 	Uvn( 0, 255 ),
	2132, 	Uvn( 0, 255 ),
	4324, 	Uvn( 0, 255 ),
	4348, 	Uvn( 0, 255 ),
	4320, 	Uvn( 0, 255 ),
	4336, 	Uvn( 0, 255 ),
	4340, 	Uvn( 0, 255 ),
	4337, 	Uvn( 0, 255 ),
	4343, 	Uvn( 0, 255 ),
	4330, 	Uvn( 0, 255 ),
	4342, 	Uvn( 0, 255 ),
	4350, 	Uvn( 0, 255 ),
	2214, 	Uvn( 0, 255 ),
	2216, 	Uvn( 0, 255 ),
	2224, 	Uvn( 0, 255 ),
	2229, 	Uvn( 0, 255 ),
	2227, 	Uvn( 0, 255 ),
	StripL(4),  
	941, 	Uvn( 0, 255 ),
	945, 	Uvn( 0, 255 ),
	943, 	Uvn( 0, 255 ),
	950, 	Uvn( 0, 255 ),
	StripL(3),  
	948, 	Uvn( 0, 255 ),
	963, 	Uvn( 0, 255 ),
	953, 	Uvn( 0, 255 ),
	StripR(6),  
	3361, 	Uvn( 0, 255 ),
	1901, 	Uvn( 0, 255 ),
	1900, 	Uvn( 0, 255 ),
	1893, 	Uvn( 0, 255 ),
	1899, 	Uvn( 0, 255 ),
	1894, 	Uvn( 0, 255 ),
	StripL(4),  
	4220, 	Uvn( 0, 255 ),
	4216, 	Uvn( 0, 255 ),
	2237, 	Uvn( 0, 255 ),
	3363, 	Uvn( 0, 255 ),
	StripL(3),  
	3625, 	Uvn( 0, 255 ),
	970, 	Uvn( 0, 255 ),
	3383, 	Uvn( 0, 255 ),
	StripL(3),  
	3373, 	Uvn( 0, 255 ),
	3382, 	Uvn( 0, 255 ),
	3376, 	Uvn( 0, 255 ),
	StripR(5),  
	3382, 	Uvn( 0, 255 ),
	3388, 	Uvn( 0, 255 ),
	3387, 	Uvn( 0, 255 ),
	3391, 	Uvn( 0, 255 ),
	3626, 	Uvn( 0, 255 ),
	StripR(6),  
	2244, 	Uvn( 0, 255 ),
	2234, 	Uvn( 0, 255 ),
	2236, 	Uvn( 0, 255 ),
	4212, 	Uvn( 0, 255 ),
	4205, 	Uvn( 0, 255 ),
	4203, 	Uvn( 0, 255 ),
	StripL(6),  
	4205, 	Uvn( 0, 255 ),
	4198, 	Uvn( 0, 255 ),
	4203, 	Uvn( 0, 255 ),
	1525, 	Uvn( 0, 255 ),
	1590, 	Uvn( 0, 255 ),
	1579, 	Uvn( 0, 255 ),
	StripL(4),  
	4736, 	Uvn( 0, 255 ),
	4734, 	Uvn( 0, 255 ),
	3378, 	Uvn( 0, 255 ),
	3370, 	Uvn( 0, 255 ),
	StripL(23),  
	3363, 	Uvn( 0, 255 ),
	3358, 	Uvn( 0, 255 ),
	3364, 	Uvn( 0, 255 ),
	3359, 	Uvn( 0, 255 ),
	3365, 	Uvn( 0, 255 ),
	3360, 	Uvn( 0, 255 ),
	3366, 	Uvn( 0, 255 ),
	3361, 	Uvn( 0, 255 ),
	3368, 	Uvn( 0, 255 ),
	3620, 	Uvn( 0, 255 ),
	944, 	Uvn( 0, 255 ),
	938, 	Uvn( 0, 255 ),
	937, 	Uvn( 0, 255 ),
	933, 	Uvn( 0, 255 ),
	932, 	Uvn( 0, 255 ),
	929, 	Uvn( 0, 255 ),
	930, 	Uvn( 0, 255 ),
	926, 	Uvn( 0, 255 ),
	4018, 	Uvn( 0, 255 ),
	915, 	Uvn( 0, 255 ),
	4014, 	Uvn( 0, 255 ),
	985, 	Uvn( 0, 255 ),
	986, 	Uvn( 0, 255 ),
	StripL(9),  
	971, 	Uvn( 0, 255 ),
	3624, 	Uvn( 0, 255 ),
	3626, 	Uvn( 0, 255 ),
	3628, 	Uvn( 0, 255 ),
	3391, 	Uvn( 0, 255 ),
	3399, 	Uvn( 0, 255 ),
	3400, 	Uvn( 0, 255 ),
	3408, 	Uvn( 0, 255 ),
	3410, 	Uvn( 0, 255 ),
	StripL(6),  
	3620, 	Uvn( 0, 255 ),
	3361, 	Uvn( 0, 255 ),
	938, 	Uvn( 0, 255 ),
	1901, 	Uvn( 0, 255 ),
	3617, 	Uvn( 0, 255 ),
	1893, 	Uvn( 0, 255 ),
	StripL(3),  
	3369, 	Uvn( 0, 255 ),
	952, 	Uvn( 0, 255 ),
	3619, 	Uvn( 0, 255 ),
	StripL(4),  
	938, 	Uvn( 0, 255 ),
	3617, 	Uvn( 0, 255 ),
	934, 	Uvn( 0, 255 ),
	928, 	Uvn( 0, 255 ),
	StripR(5),  
	3364, 	Uvn( 0, 255 ),
	3363, 	Uvn( 0, 255 ),
	3370, 	Uvn( 0, 255 ),
	2237, 	Uvn( 0, 255 ),
	4734, 	Uvn( 0, 255 ),
	StripL(5),  
	3397, 	Uvn( 0, 255 ),
	3406, 	Uvn( 0, 255 ),
	3405, 	Uvn( 0, 255 ),
	3411, 	Uvn( 0, 255 ),
	3413, 	Uvn( 0, 255 ),
	StripR(12),  
	4758, 	Uvn( 0, 255 ),
	4750, 	Uvn( 0, 255 ),
	4748, 	Uvn( 0, 255 ),
	4743, 	Uvn( 0, 255 ),
	4741, 	Uvn( 0, 255 ),
	4736, 	Uvn( 0, 255 ),
	4735, 	Uvn( 0, 255 ),
	4734, 	Uvn( 0, 255 ),
	4732, 	Uvn( 0, 255 ),
	2237, 	Uvn( 0, 255 ),
	2238, 	Uvn( 0, 255 ),
	4220, 	Uvn( 0, 255 ),
	StripL(34),  
	4762, 	Uvn( 0, 255 ),
	4752, 	Uvn( 0, 255 ),
	3401, 	Uvn( 0, 255 ),
	4744, 	Uvn( 0, 255 ),
	3392, 	Uvn( 0, 255 ),
	4737, 	Uvn( 0, 255 ),
	3384, 	Uvn( 0, 255 ),
	3379, 	Uvn( 0, 255 ),
	3380, 	Uvn( 0, 255 ),
	3372, 	Uvn( 0, 255 ),
	3376, 	Uvn( 0, 255 ),
	3366, 	Uvn( 0, 255 ),
	3373, 	Uvn( 0, 255 ),
	3374, 	Uvn( 0, 255 ),
	3621, 	Uvn( 0, 255 ),
	3622, 	Uvn( 0, 255 ),
	3623, 	Uvn( 0, 255 ),
	969, 	Uvn( 0, 255 ),
	968, 	Uvn( 0, 255 ),
	965, 	Uvn( 0, 255 ),
	967, 	Uvn( 0, 255 ),
	960, 	Uvn( 0, 255 ),
	951, 	Uvn( 0, 255 ),
	946, 	Uvn( 0, 255 ),
	940, 	Uvn( 0, 255 ),
	941, 	Uvn( 0, 255 ),
	937, 	Uvn( 0, 255 ),
	943, 	Uvn( 0, 255 ),
	944, 	Uvn( 0, 255 ),
	950, 	Uvn( 0, 255 ),
	3368, 	Uvn( 0, 255 ),
	961, 	Uvn( 0, 255 ),
	3374, 	Uvn( 0, 255 ),
	3622, 	Uvn( 0, 255 ),
	StripL(8),  
	4858, 	Uvn( 0, 255 ),
	4849, 	Uvn( 0, 255 ),
	4848, 	Uvn( 0, 255 ),
	2283, 	Uvn( 0, 255 ),
	2282, 	Uvn( 0, 255 ),
	2268, 	Uvn( 0, 255 ),
	2266, 	Uvn( 0, 255 ),
	4845, 	Uvn( 0, 255 ),
	StripR(5),  
	4863, 	Uvn( 0, 255 ),
	4881, 	Uvn( 0, 255 ),
	4888, 	Uvn( 0, 255 ),
	4894, 	Uvn( 0, 255 ),
	4903, 	Uvn( 0, 255 ),
	StripL(3),  
	4899, 	Uvn( 0, 255 ),
	4893, 	Uvn( 0, 255 ),
	4873, 	Uvn( 0, 255 ),
	StripL(5),  
	4774, 	Uvn( 0, 255 ),
	4782, 	Uvn( 0, 255 ),
	4789, 	Uvn( 0, 255 ),
	4788, 	Uvn( 0, 255 ),
	4796, 	Uvn( 0, 255 ),
	StripL(18),  
	4759, 	Uvn( 0, 255 ),
	2250, 	Uvn( 0, 255 ),
	2249, 	Uvn( 0, 255 ),
	2248, 	Uvn( 0, 255 ),
	2247, 	Uvn( 0, 255 ),
	2239, 	Uvn( 0, 255 ),
	2243, 	Uvn( 0, 255 ),
	2233, 	Uvn( 0, 255 ),
	2235, 	Uvn( 0, 255 ),
	4221, 	Uvn( 0, 255 ),
	4224, 	Uvn( 0, 255 ),
	4211, 	Uvn( 0, 255 ),
	4217, 	Uvn( 0, 255 ),
	4231, 	Uvn( 0, 255 ),
	4218, 	Uvn( 0, 255 ),
	1665, 	Uvn( 0, 255 ),
	4213, 	Uvn( 0, 255 ),
	1654, 	Uvn( 0, 255 ),
	StripL(29),  
	2259, 	Uvn( 0, 255 ),
	2260, 	Uvn( 0, 255 ),
	2276, 	Uvn( 0, 255 ),
	2278, 	Uvn( 0, 255 ),
	4850, 	Uvn( 0, 255 ),
	2286, 	Uvn( 0, 255 ),
	4859, 	Uvn( 0, 255 ),
	4857, 	Uvn( 0, 255 ),
	4882, 	Uvn( 0, 255 ),
	4866, 	Uvn( 0, 255 ),
	4874, 	Uvn( 0, 255 ),
	4862, 	Uvn( 0, 255 ),
	4872, 	Uvn( 0, 255 ),
	4870, 	Uvn( 0, 255 ),
	4884, 	Uvn( 0, 255 ),
	4883, 	Uvn( 0, 255 ),
	4898, 	Uvn( 0, 255 ),
	4911, 	Uvn( 0, 255 ),
	4929, 	Uvn( 0, 255 ),
	4944, 	Uvn( 0, 255 ),
	2294, 	Uvn( 0, 255 ),
	2297, 	Uvn( 0, 255 ),
	2308, 	Uvn( 0, 255 ),
	2315, 	Uvn( 0, 255 ),
	2326, 	Uvn( 0, 255 ),
	2317, 	Uvn( 0, 255 ),
	2328, 	Uvn( 0, 255 ),
	2331, 	Uvn( 0, 255 ),
	5016, 	Uvn( 0, 255 ),
	StripR(16),  
	4832, 	Uvn( 0, 255 ),
	4834, 	Uvn( 0, 255 ),
	4812, 	Uvn( 0, 255 ),
	4816, 	Uvn( 0, 255 ),
	4791, 	Uvn( 0, 255 ),
	4794, 	Uvn( 0, 255 ),
	4781, 	Uvn( 0, 255 ),
	4777, 	Uvn( 0, 255 ),
	4773, 	Uvn( 0, 255 ),
	4769, 	Uvn( 0, 255 ),
	4765, 	Uvn( 0, 255 ),
	4761, 	Uvn( 0, 255 ),
	4757, 	Uvn( 0, 255 ),
	4753, 	Uvn( 0, 255 ),
	4749, 	Uvn( 0, 255 ),
	4747, 	Uvn( 0, 255 ),
	StripL(5),  
	4856, 	Uvn( 0, 255 ),
	4880, 	Uvn( 0, 255 ),
	4873, 	Uvn( 0, 255 ),
	4906, 	Uvn( 0, 255 ),
	4899, 	Uvn( 0, 255 ),
	StripL(5),  
	4846, 	Uvn( 0, 255 ),
	2273, 	Uvn( 0, 255 ),
	2270, 	Uvn( 0, 255 ),
	2258, 	Uvn( 0, 255 ),
	2256, 	Uvn( 0, 255 ),
	StripL(7),  
	4849, 	Uvn( 0, 255 ),
	4846, 	Uvn( 0, 255 ),
	2283, 	Uvn( 0, 255 ),
	2270, 	Uvn( 0, 255 ),
	2268, 	Uvn( 0, 255 ),
	2256, 	Uvn( 0, 255 ),
	4845, 	Uvn( 0, 255 ),
	StripL(3),  
	4805, 	Uvn( 0, 255 ),
	4789, 	Uvn( 0, 255 ),
	4796, 	Uvn( 0, 255 ),
	StripR(21),  
	2269, 	Uvn( 0, 255 ),
	2289, 	Uvn( 0, 255 ),
	4851, 	Uvn( 0, 255 ),
	4863, 	Uvn( 0, 255 ),
	4871, 	Uvn( 0, 255 ),
	4888, 	Uvn( 0, 255 ),
	4893, 	Uvn( 0, 255 ),
	4908, 	Uvn( 0, 255 ),
	4899, 	Uvn( 0, 255 ),
	4912, 	Uvn( 0, 255 ),
	4906, 	Uvn( 0, 255 ),
	4921, 	Uvn( 0, 255 ),
	4918, 	Uvn( 0, 255 ),
	4926, 	Uvn( 0, 255 ),
	4920, 	Uvn( 0, 255 ),
	4932, 	Uvn( 0, 255 ),
	4941, 	Uvn( 0, 255 ),
	4942, 	Uvn( 0, 255 ),
	4953, 	Uvn( 0, 255 ),
	4946, 	Uvn( 0, 255 ),
	4962, 	Uvn( 0, 255 ),
	StripR(7),  
	2252, 	Uvn( 0, 255 ),
	4836, 	Uvn( 0, 255 ),
	2267, 	Uvn( 0, 255 ),
	2265, 	Uvn( 0, 255 ),
	2284, 	Uvn( 0, 255 ),
	2280, 	Uvn( 0, 255 ),
	2290, 	Uvn( 0, 255 ),
	StripL(14),  
	2263, 	Uvn( 0, 255 ),
	4839, 	Uvn( 0, 255 ),
	4837, 	Uvn( 0, 255 ),
	4817, 	Uvn( 0, 255 ),
	4815, 	Uvn( 0, 255 ),
	3418, 	Uvn( 0, 255 ),
	4813, 	Uvn( 0, 255 ),
	4799, 	Uvn( 0, 255 ),
	4805, 	Uvn( 0, 255 ),
	4795, 	Uvn( 0, 255 ),
	4789, 	Uvn( 0, 255 ),
	4780, 	Uvn( 0, 255 ),
	4774, 	Uvn( 0, 255 ),
	4763, 	Uvn( 0, 255 ),
	StripR(5),  
	4818, 	Uvn( 0, 255 ),
	4811, 	Uvn( 0, 255 ),
	4804, 	Uvn( 0, 255 ),
	3417, 	Uvn( 0, 255 ),
	3412, 	Uvn( 0, 255 ),
	StripL(6),  
	4818, 	Uvn( 0, 255 ),
	4802, 	Uvn( 0, 255 ),
	4804, 	Uvn( 0, 255 ),
	4792, 	Uvn( 0, 255 ),
	3412, 	Uvn( 0, 255 ),
	4775, 	Uvn( 0, 255 ),
	StripR(9),  
	4842, 	Uvn( 0, 255 ),
	4840, 	Uvn( 0, 255 ),
	4826, 	Uvn( 0, 255 ),
	4828, 	Uvn( 0, 255 ),
	4806, 	Uvn( 0, 255 ),
	4809, 	Uvn( 0, 255 ),
	4793, 	Uvn( 0, 255 ),
	4800, 	Uvn( 0, 255 ),
	4783, 	Uvn( 0, 255 ),
	StripL(9),  
	4777, 	Uvn( 0, 255 ),
	4769, 	Uvn( 0, 255 ),
	4768, 	Uvn( 0, 255 ),
	4761, 	Uvn( 0, 255 ),
	4760, 	Uvn( 0, 255 ),
	4753, 	Uvn( 0, 255 ),
	4751, 	Uvn( 0, 255 ),
	4747, 	Uvn( 0, 255 ),
	4745, 	Uvn( 0, 255 ),
	StripL(11),  
	4740, 	Uvn( 0, 255 ),
	2245, 	Uvn( 0, 255 ),
	4733, 	Uvn( 0, 255 ),
	2241, 	Uvn( 0, 255 ),
	2242, 	Uvn( 0, 255 ),
	4225, 	Uvn( 0, 255 ),
	4222, 	Uvn( 0, 255 ),
	4219, 	Uvn( 0, 255 ),
	4215, 	Uvn( 0, 255 ),
	4210, 	Uvn( 0, 255 ),
	4207, 	Uvn( 0, 255 ),
	StripR(27),  
	2272, 	Uvn( 0, 255 ),
	4856, 	Uvn( 0, 255 ),
	4855, 	Uvn( 0, 255 ),
	4880, 	Uvn( 0, 255 ),
	4876, 	Uvn( 0, 255 ),
	4905, 	Uvn( 0, 255 ),
	4902, 	Uvn( 0, 255 ),
	4920, 	Uvn( 0, 255 ),
	4913, 	Uvn( 0, 255 ),
	4923, 	Uvn( 0, 255 ),
	4909, 	Uvn( 0, 255 ),
	4925, 	Uvn( 0, 255 ),
	4915, 	Uvn( 0, 255 ),
	4943, 	Uvn( 0, 255 ),
	4938, 	Uvn( 0, 255 ),
	2295, 	Uvn( 0, 255 ),
	2292, 	Uvn( 0, 255 ),
	2302, 	Uvn( 0, 255 ),
	2301, 	Uvn( 0, 255 ),
	4980, 	Uvn( 0, 255 ),
	4982, 	Uvn( 0, 255 ),
	4986, 	Uvn( 0, 255 ),
	4988, 	Uvn( 0, 255 ),
	4994, 	Uvn( 0, 255 ),
	5003, 	Uvn( 0, 255 ),
	5006, 	Uvn( 0, 255 ),
	5014, 	Uvn( 0, 255 ),
	StripL(9),  
	2257, 	Uvn( 0, 255 ),
	2259, 	Uvn( 0, 255 ),
	2277, 	Uvn( 0, 255 ),
	2276, 	Uvn( 0, 255 ),
	4853, 	Uvn( 0, 255 ),
	4850, 	Uvn( 0, 255 ),
	4869, 	Uvn( 0, 255 ),
	4859, 	Uvn( 0, 255 ),
	4882, 	Uvn( 0, 255 ),
	StripL(35),  
	2262, 	Uvn( 0, 255 ),
	2261, 	Uvn( 0, 255 ),
	2275, 	Uvn( 0, 255 ),
	2273, 	Uvn( 0, 255 ),
	2285, 	Uvn( 0, 255 ),
	4846, 	Uvn( 0, 255 ),
	4852, 	Uvn( 0, 255 ),
	4849, 	Uvn( 0, 255 ),
	4861, 	Uvn( 0, 255 ),
	4858, 	Uvn( 0, 255 ),
	4865, 	Uvn( 0, 255 ),
	4875, 	Uvn( 0, 255 ),
	4886, 	Uvn( 0, 255 ),
	4901, 	Uvn( 0, 255 ),
	4907, 	Uvn( 0, 255 ),
	4924, 	Uvn( 0, 255 ),
	4935, 	Uvn( 0, 255 ),
	4951, 	Uvn( 0, 255 ),
	4957, 	Uvn( 0, 255 ),
	4970, 	Uvn( 0, 255 ),
	4971, 	Uvn( 0, 255 ),
	4976, 	Uvn( 0, 255 ),
	2310, 	Uvn( 0, 255 ),
	2312, 	Uvn( 0, 255 ),
	2320, 	Uvn( 0, 255 ),
	2321, 	Uvn( 0, 255 ),
	2331, 	Uvn( 0, 255 ),
	2332, 	Uvn( 0, 255 ),
	5016, 	Uvn( 0, 255 ),
	5027, 	Uvn( 0, 255 ),
	5037, 	Uvn( 0, 255 ),
	5029, 	Uvn( 0, 255 ),
	5038, 	Uvn( 0, 255 ),
	5024, 	Uvn( 0, 255 ),
	5031, 	Uvn( 0, 255 ),
	StripL(11),  
	3410, 	Uvn( 0, 255 ),
	3414, 	Uvn( 0, 255 ),
	3400, 	Uvn( 0, 255 ),
	3403, 	Uvn( 0, 255 ),
	3393, 	Uvn( 0, 255 ),
	3395, 	Uvn( 0, 255 ),
	3388, 	Uvn( 0, 255 ),
	3386, 	Uvn( 0, 255 ),
	3382, 	Uvn( 0, 255 ),
	3380, 	Uvn( 0, 255 ),
	3376, 	Uvn( 0, 255 ),
	StripR(5),  
	4810, 	Uvn( 0, 255 ),
	4820, 	Uvn( 0, 255 ),
	4830, 	Uvn( 0, 255 ),
	4827, 	Uvn( 0, 255 ),
	4833, 	Uvn( 0, 255 ),
	StripL(10),  
	4796, 	Uvn( 0, 255 ),
	4807, 	Uvn( 0, 255 ),
	4805, 	Uvn( 0, 255 ),
	4825, 	Uvn( 0, 255 ),
	4823, 	Uvn( 0, 255 ),
	2252, 	Uvn( 0, 255 ),
	4813, 	Uvn( 0, 255 ),
	4836, 	Uvn( 0, 255 ),
	4815, 	Uvn( 0, 255 ),
	4837, 	Uvn( 0, 255 ),
	StripL(7),  
	4788, 	Uvn( 0, 255 ),
	4797, 	Uvn( 0, 255 ),
	4796, 	Uvn( 0, 255 ),
	4808, 	Uvn( 0, 255 ),
	4807, 	Uvn( 0, 255 ),
	4831, 	Uvn( 0, 255 ),
	4825, 	Uvn( 0, 255 ),
	StripL(38),  
	5042, 	Uvn( 0, 255 ),
	5041, 	Uvn( 0, 255 ),
	5045, 	Uvn( 0, 255 ),
	5043, 	Uvn( 0, 255 ),
	5049, 	Uvn( 0, 255 ),
	5048, 	Uvn( 0, 255 ),
	2393, 	Uvn( 0, 255 ),
	2386, 	Uvn( 0, 255 ),
	2408, 	Uvn( 0, 255 ),
	2401, 	Uvn( 0, 255 ),
	2440, 	Uvn( 0, 255 ),
	2434, 	Uvn( 0, 255 ),
	2455, 	Uvn( 0, 255 ),
	2450, 	Uvn( 0, 255 ),
	5114, 	Uvn( 0, 255 ),
	2456, 	Uvn( 0, 255 ),
	5127, 	Uvn( 0, 255 ),
	5121, 	Uvn( 0, 255 ),
	5130, 	Uvn( 0, 255 ),
	5125, 	Uvn( 0, 255 ),
	5201, 	Uvn( 0, 255 ),
	5200, 	Uvn( 0, 255 ),
	2596, 	Uvn( 0, 255 ),
	5198, 	Uvn( 0, 255 ),
	5206, 	Uvn( 0, 255 ),
	5209, 	Uvn( 0, 255 ),
	5210, 	Uvn( 0, 255 ),
	5213, 	Uvn( 0, 255 ),
	5235, 	Uvn( 0, 255 ),
	5256, 	Uvn( 0, 255 ),
	5258, 	Uvn( 0, 255 ),
	5261, 	Uvn( 0, 255 ),
	2670, 	Uvn( 0, 255 ),
	2668, 	Uvn( 0, 255 ),
	2678, 	Uvn( 0, 255 ),
	2675, 	Uvn( 0, 255 ),
	2690, 	Uvn( 0, 255 ),
	2689, 	Uvn( 0, 255 ),
	StripL(7),  
	5041, 	Uvn( 0, 255 ),
	5036, 	Uvn( 0, 255 ),
	5043, 	Uvn( 0, 255 ),
	5040, 	Uvn( 0, 255 ),
	5048, 	Uvn( 0, 255 ),
	5046, 	Uvn( 0, 255 ),
	2386, 	Uvn( 0, 255 ),
	StripR(20),  
	5001, 	Uvn( 0, 255 ),
	5005, 	Uvn( 0, 255 ),
	4998, 	Uvn( 0, 255 ),
	5002, 	Uvn( 0, 255 ),
	4992, 	Uvn( 0, 255 ),
	4996, 	Uvn( 0, 255 ),
	4990, 	Uvn( 0, 255 ),
	4993, 	Uvn( 0, 255 ),
	4997, 	Uvn( 0, 255 ),
	5000, 	Uvn( 0, 255 ),
	5006, 	Uvn( 0, 255 ),
	5011, 	Uvn( 0, 255 ),
	5014, 	Uvn( 0, 255 ),
	2346, 	Uvn( 0, 255 ),
	5021, 	Uvn( 0, 255 ),
	2355, 	Uvn( 0, 255 ),
	5025, 	Uvn( 0, 255 ),
	5032, 	Uvn( 0, 255 ),
	5034, 	Uvn( 0, 255 ),
	5039, 	Uvn( 0, 255 ),
	StripL(3),  
	2340, 	Uvn( 0, 255 ),
	5005, 	Uvn( 0, 255 ),
	2338, 	Uvn( 0, 255 ),
	StripL(13),  
	2365, 	Uvn( 0, 255 ),
	2373, 	Uvn( 0, 255 ),
	2359, 	Uvn( 0, 255 ),
	2366, 	Uvn( 0, 255 ),
	2354, 	Uvn( 0, 255 ),
	5033, 	Uvn( 0, 255 ),
	5017, 	Uvn( 0, 255 ),
	5023, 	Uvn( 0, 255 ),
	5015, 	Uvn( 0, 255 ),
	5020, 	Uvn( 0, 255 ),
	5012, 	Uvn( 0, 255 ),
	5026, 	Uvn( 0, 255 ),
	5019, 	Uvn( 0, 255 ),
	StripL(5),  
	2455, 	Uvn( 0, 255 ),
	2453, 	Uvn( 0, 255 ),
	2440, 	Uvn( 0, 255 ),
	2441, 	Uvn( 0, 255 ),
	2408, 	Uvn( 0, 255 ),
	StripL(15),  
	2379, 	Uvn( 0, 255 ),
	2377, 	Uvn( 0, 255 ),
	2387, 	Uvn( 0, 255 ),
	2376, 	Uvn( 0, 255 ),
	2417, 	Uvn( 0, 255 ),
	2402, 	Uvn( 0, 255 ),
	2415, 	Uvn( 0, 255 ),
	2394, 	Uvn( 0, 255 ),
	2404, 	Uvn( 0, 255 ),
	2375, 	Uvn( 0, 255 ),
	2381, 	Uvn( 0, 255 ),
	2362, 	Uvn( 0, 255 ),
	2368, 	Uvn( 0, 255 ),
	5032, 	Uvn( 0, 255 ),
	5039, 	Uvn( 0, 255 ),
	StripR(11),  
	2424, 	Uvn( 0, 255 ),
	2417, 	Uvn( 0, 255 ),
	2426, 	Uvn( 0, 255 ),
	2410, 	Uvn( 0, 255 ),
	2406, 	Uvn( 0, 255 ),
	2399, 	Uvn( 0, 255 ),
	2405, 	Uvn( 0, 255 ),
	2397, 	Uvn( 0, 255 ),
	2391, 	Uvn( 0, 255 ),
	5059, 	Uvn( 0, 255 ),
	2383, 	Uvn( 0, 255 ),
	StripL(6),  
	2446, 	Uvn( 0, 255 ),
	2459, 	Uvn( 0, 255 ),
	2442, 	Uvn( 0, 255 ),
	2452, 	Uvn( 0, 255 ),
	2435, 	Uvn( 0, 255 ),
	2445, 	Uvn( 0, 255 ),
	StripR(5),  
	5136, 	Uvn( 0, 255 ),
	5149, 	Uvn( 0, 255 ),
	5142, 	Uvn( 0, 255 ),
	2473, 	Uvn( 0, 255 ),
	2471, 	Uvn( 0, 255 ),
	StripR(14),  
	5270, 	Uvn( 0, 255 ),
	5267, 	Uvn( 0, 255 ),
	5272, 	Uvn( 0, 255 ),
	5269, 	Uvn( 0, 255 ),
	5275, 	Uvn( 0, 255 ),
	5271, 	Uvn( 0, 255 ),
	2705, 	Uvn( 0, 255 ),
	5274, 	Uvn( 0, 255 ),
	2708, 	Uvn( 0, 255 ),
	2626, 	Uvn( 0, 255 ),
	2706, 	Uvn( 0, 255 ),
	2623, 	Uvn( 0, 255 ),
	2701, 	Uvn( 0, 255 ),
	2619, 	Uvn( 0, 255 ),
	StripR(16),  
	2614, 	Uvn( 0, 255 ),
	5265, 	Uvn( 0, 255 ),
	2619, 	Uvn( 0, 255 ),
	5273, 	Uvn( 0, 255 ),
	2701, 	Uvn( 0, 255 ),
	2713, 	Uvn( 0, 255 ),
	2716, 	Uvn( 0, 255 ),
	2724, 	Uvn( 0, 255 ),
	2718, 	Uvn( 0, 255 ),
	2728, 	Uvn( 0, 255 ),
	2721, 	Uvn( 0, 255 ),
	2729, 	Uvn( 0, 255 ),
	2726, 	Uvn( 0, 255 ),
	2725, 	Uvn( 0, 255 ),
	2720, 	Uvn( 0, 255 ),
	2714, 	Uvn( 0, 255 ),
	StripR(10),  
	2614, 	Uvn( 0, 255 ),
	2616, 	Uvn( 0, 255 ),
	2609, 	Uvn( 0, 255 ),
	2611, 	Uvn( 0, 255 ),
	5262, 	Uvn( 0, 255 ),
	2605, 	Uvn( 0, 255 ),
	5151, 	Uvn( 0, 255 ),
	5154, 	Uvn( 0, 255 ),
	5147, 	Uvn( 0, 255 ),
	5150, 	Uvn( 0, 255 ),
	StripL(4),  
	2464, 	Uvn( 0, 255 ),
	2469, 	Uvn( 0, 255 ),
	2463, 	Uvn( 0, 255 ),
	2467, 	Uvn( 0, 255 ),
	StripR(5),  
	5203, 	Uvn( 0, 255 ),
	2599, 	Uvn( 0, 255 ),
	2597, 	Uvn( 0, 255 ),
	2601, 	Uvn( 0, 255 ),
	2598, 	Uvn( 0, 255 ),
	StripL(10),  
	2686, 	Uvn( 0, 255 ),
	2685, 	Uvn( 0, 255 ),
	2677, 	Uvn( 0, 255 ),
	2673, 	Uvn( 0, 255 ),
	2663, 	Uvn( 0, 255 ),
	2660, 	Uvn( 0, 255 ),
	5252, 	Uvn( 0, 255 ),
	5233, 	Uvn( 0, 255 ),
	5230, 	Uvn( 0, 255 ),
	5250, 	Uvn( 0, 255 ),
	StripL(3),  
	5135, 	Uvn( 0, 255 ),
	5139, 	Uvn( 0, 255 ),
	5126, 	Uvn( 0, 255 ),
	StripR(5),  
	2692, 	Uvn( 0, 255 ),
	2691, 	Uvn( 0, 255 ),
	2683, 	Uvn( 0, 255 ),
	2684, 	Uvn( 0, 255 ),
	5287, 	Uvn( 0, 255 ),
	StripL(3),  
	5200, 	Uvn( 0, 255 ),
	5125, 	Uvn( 0, 255 ),
	5198, 	Uvn( 0, 255 ),
	StripL(13),  
	2630, 	Uvn( 0, 255 ),
	2644, 	Uvn( 0, 255 ),
	2636, 	Uvn( 0, 255 ),
	2643, 	Uvn( 0, 255 ),
	2640, 	Uvn( 0, 255 ),
	2646, 	Uvn( 0, 255 ),
	2645, 	Uvn( 0, 255 ),
	2651, 	Uvn( 0, 255 ),
	2654, 	Uvn( 0, 255 ),
	2656, 	Uvn( 0, 255 ),
	2658, 	Uvn( 0, 255 ),
	2655, 	Uvn( 0, 255 ),
	2657, 	Uvn( 0, 255 ),
	StripR(21),  
	5220, 	Uvn( 0, 255 ),
	5226, 	Uvn( 0, 255 ),
	2548, 	Uvn( 0, 255 ),
	2552, 	Uvn( 0, 255 ),
	2543, 	Uvn( 0, 255 ),
	2550, 	Uvn( 0, 255 ),
	5197, 	Uvn( 0, 255 ),
	5199, 	Uvn( 0, 255 ),
	5115, 	Uvn( 0, 255 ),
	5122, 	Uvn( 0, 255 ),
	5111, 	Uvn( 0, 255 ),
	5126, 	Uvn( 0, 255 ),
	5102, 	Uvn( 0, 255 ),
	2457, 	Uvn( 0, 255 ),
	2439, 	Uvn( 0, 255 ),
	2445, 	Uvn( 0, 255 ),
	2430, 	Uvn( 0, 255 ),
	2435, 	Uvn( 0, 255 ),
	2424, 	Uvn( 0, 255 ),
	2415, 	Uvn( 0, 255 ),
	2417, 	Uvn( 0, 255 ),
	StripL(3),  
	2423, 	Uvn( 0, 255 ),
	2422, 	Uvn( 0, 255 ),
	5093, 	Uvn( 0, 255 ),
	StripL(3),  
	2413, 	Uvn( 0, 255 ),
	2421, 	Uvn( 0, 255 ),
	2400, 	Uvn( 0, 255 ),
	StripR(5),  
	2536, 	Uvn( 0, 255 ),
	2537, 	Uvn( 0, 255 ),
	5176, 	Uvn( 0, 255 ),
	5189, 	Uvn( 0, 255 ),
	5183, 	Uvn( 0, 255 ),
	StripL(3),  
	5191, 	Uvn( 0, 255 ),
	5186, 	Uvn( 0, 255 ),
	5192, 	Uvn( 0, 255 ),
	StripR(8),  
	5179, 	Uvn( 0, 255 ),
	2554, 	Uvn( 0, 255 ),
	2556, 	Uvn( 0, 255 ),
	2561, 	Uvn( 0, 255 ),
	2567, 	Uvn( 0, 255 ),
	2579, 	Uvn( 0, 255 ),
	2584, 	Uvn( 0, 255 ),
	2592, 	Uvn( 0, 255 ),
	StripR(6),  
	5184, 	Uvn( 0, 255 ),
	5188, 	Uvn( 0, 255 ),
	2557, 	Uvn( 0, 255 ),
	2560, 	Uvn( 0, 255 ),
	2558, 	Uvn( 0, 255 ),
	2564, 	Uvn( 0, 255 ),
	StripL(3),  
	5070, 	Uvn( 0, 255 ),
	2398, 	Uvn( 0, 255 ),
	5064, 	Uvn( 0, 255 ),
	StripL(17),  
	2505, 	Uvn( 0, 255 ),
	2494, 	Uvn( 0, 255 ),
	2495, 	Uvn( 0, 255 ),
	5165, 	Uvn( 0, 255 ),
	2488, 	Uvn( 0, 255 ),
	2485, 	Uvn( 0, 255 ),
	2487, 	Uvn( 0, 255 ),
	2489, 	Uvn( 0, 255 ),
	2488, 	Uvn( 0, 255 ),
	2493, 	Uvn( 0, 255 ),
	2498, 	Uvn( 0, 255 ),
	2500, 	Uvn( 0, 255 ),
	2504, 	Uvn( 0, 255 ),
	2506, 	Uvn( 0, 255 ),
	2505, 	Uvn( 0, 255 ),
	2512, 	Uvn( 0, 255 ),
	2513, 	Uvn( 0, 255 ),
	StripL(6),  
	5061, 	Uvn( 0, 255 ),
	2378, 	Uvn( 0, 255 ),
	2390, 	Uvn( 0, 255 ),
	2379, 	Uvn( 0, 255 ),
	2389, 	Uvn( 0, 255 ),
	2387, 	Uvn( 0, 255 ),
	StripL(9),  
	2372, 	Uvn( 0, 255 ),
	5052, 	Uvn( 0, 255 ),
	2369, 	Uvn( 0, 255 ),
	5051, 	Uvn( 0, 255 ),
	2360, 	Uvn( 0, 255 ),
	5054, 	Uvn( 0, 255 ),
	5050, 	Uvn( 0, 255 ),
	5053, 	Uvn( 0, 255 ),
	2370, 	Uvn( 0, 255 ),
	StripR(24),  
	2479, 	Uvn( 0, 255 ),
	2481, 	Uvn( 0, 255 ),
	2476, 	Uvn( 0, 255 ),
	5066, 	Uvn( 0, 255 ),
	5061, 	Uvn( 0, 255 ),
	5072, 	Uvn( 0, 255 ),
	5067, 	Uvn( 0, 255 ),
	5073, 	Uvn( 0, 255 ),
	5070, 	Uvn( 0, 255 ),
	5068, 	Uvn( 0, 255 ),
	5064, 	Uvn( 0, 255 ),
	5056, 	Uvn( 0, 255 ),
	5060, 	Uvn( 0, 255 ),
	5054, 	Uvn( 0, 255 ),
	5059, 	Uvn( 0, 255 ),
	5053, 	Uvn( 0, 255 ),
	2383, 	Uvn( 0, 255 ),
	2370, 	Uvn( 0, 255 ),
	2371, 	Uvn( 0, 255 ),
	2352, 	Uvn( 0, 255 ),
	2342, 	Uvn( 0, 255 ),
	2350, 	Uvn( 0, 255 ),
	2358, 	Uvn( 0, 255 ),
	2367, 	Uvn( 0, 255 ),
	StripL(5),  
	2497, 	Uvn( 0, 255 ),
	2492, 	Uvn( 0, 255 ),
	2502, 	Uvn( 0, 255 ),
	2486, 	Uvn( 0, 255 ),
	2499, 	Uvn( 0, 255 ),
	StripR(6),  
	2500, 	Uvn( 0, 255 ),
	2496, 	Uvn( 0, 255 ),
	2493, 	Uvn( 0, 255 ),
	2490, 	Uvn( 0, 255 ),
	2489, 	Uvn( 0, 255 ),
	2485, 	Uvn( 0, 255 ),
	StripR(7),  
	2498, 	Uvn( 0, 255 ),
	2488, 	Uvn( 0, 255 ),
	2504, 	Uvn( 0, 255 ),
	2495, 	Uvn( 0, 255 ),
	2503, 	Uvn( 0, 255 ),
	2505, 	Uvn( 0, 255 ),
	2504, 	Uvn( 0, 255 ),
	StripL(10),  
	5166, 	Uvn( 0, 255 ),
	5069, 	Uvn( 0, 255 ),
	5164, 	Uvn( 0, 255 ),
	2480, 	Uvn( 0, 255 ),
	5163, 	Uvn( 0, 255 ),
	2478, 	Uvn( 0, 255 ),
	2484, 	Uvn( 0, 255 ),
	5162, 	Uvn( 0, 255 ),
	2491, 	Uvn( 0, 255 ),
	2482, 	Uvn( 0, 255 ),
	StripR(5),  
	2581, 	Uvn( 0, 255 ),
	2588, 	Uvn( 0, 255 ),
	2579, 	Uvn( 0, 255 ),
	2593, 	Uvn( 0, 255 ),
	2592, 	Uvn( 0, 255 ),
	StripR(8),  
	2595, 	Uvn( 0, 255 ),
	2587, 	Uvn( 0, 255 ),
	2585, 	Uvn( 0, 255 ),
	2575, 	Uvn( 0, 255 ),
	2574, 	Uvn( 0, 255 ),
	2565, 	Uvn( 0, 255 ),
	2559, 	Uvn( 0, 255 ),
	5187, 	Uvn( 0, 255 ),
	StripL(3),  
	5087, 	Uvn( 0, 255 ),
	5084, 	Uvn( 0, 255 ),
	5088, 	Uvn( 0, 255 ),
	StripR(8),  
	5217, 	Uvn( 0, 255 ),
	5220, 	Uvn( 0, 255 ),
	2545, 	Uvn( 0, 255 ),
	2548, 	Uvn( 0, 255 ),
	2540, 	Uvn( 0, 255 ),
	2543, 	Uvn( 0, 255 ),
	2539, 	Uvn( 0, 255 ),
	5197, 	Uvn( 0, 255 ),
	StripL(6),  
	5221, 	Uvn( 0, 255 ),
	2630, 	Uvn( 0, 255 ),
	2628, 	Uvn( 0, 255 ),
	2636, 	Uvn( 0, 255 ),
	2633, 	Uvn( 0, 255 ),
	2640, 	Uvn( 0, 255 ),
	StripR(5),  
	2646, 	Uvn( 0, 255 ),
	2651, 	Uvn( 0, 255 ),
	2644, 	Uvn( 0, 255 ),
	2656, 	Uvn( 0, 255 ),
	2655, 	Uvn( 0, 255 ),
	StripL(7),  
	5225, 	Uvn( 0, 255 ),
	5232, 	Uvn( 0, 255 ),
	5241, 	Uvn( 0, 255 ),
	2632, 	Uvn( 0, 255 ),
	5279, 	Uvn( 0, 255 ),
	2639, 	Uvn( 0, 255 ),
	2648, 	Uvn( 0, 255 ),
	StripR(13),  
	5226, 	Uvn( 0, 255 ),
	5237, 	Uvn( 0, 255 ),
	2552, 	Uvn( 0, 255 ),
	5215, 	Uvn( 0, 255 ),
	2550, 	Uvn( 0, 255 ),
	5212, 	Uvn( 0, 255 ),
	5199, 	Uvn( 0, 255 ),
	5208, 	Uvn( 0, 255 ),
	5122, 	Uvn( 0, 255 ),
	5132, 	Uvn( 0, 255 ),
	5126, 	Uvn( 0, 255 ),
	5116, 	Uvn( 0, 255 ),
	5134, 	Uvn( 0, 255 ),
	StripL(8),  
	5135, 	Uvn( 0, 255 ),
	5136, 	Uvn( 0, 255 ),
	5139, 	Uvn( 0, 255 ),
	5143, 	Uvn( 0, 255 ),
	5245, 	Uvn( 0, 255 ),
	5244, 	Uvn( 0, 255 ),
	5246, 	Uvn( 0, 255 ),
	2599, 	Uvn( 0, 255 ),
	StripL(5),  
	2450, 	Uvn( 0, 255 ),
	2448, 	Uvn( 0, 255 ),
	2456, 	Uvn( 0, 255 ),
	5112, 	Uvn( 0, 255 ),
	5121, 	Uvn( 0, 255 ),
	StripL(9),  
	2614, 	Uvn( 0, 255 ),
	2610, 	Uvn( 0, 255 ),
	2609, 	Uvn( 0, 255 ),
	2604, 	Uvn( 0, 255 ),
	5262, 	Uvn( 0, 255 ),
	5153, 	Uvn( 0, 255 ),
	5151, 	Uvn( 0, 255 ),
	5146, 	Uvn( 0, 255 ),
	5147, 	Uvn( 0, 255 ),
	StripR(5),  
	2613, 	Uvn( 0, 255 ),
	2621, 	Uvn( 0, 255 ),
	2617, 	Uvn( 0, 255 ),
	2624, 	Uvn( 0, 255 ),
	5268, 	Uvn( 0, 255 ),
	StripL(11),  
	2430, 	Uvn( 0, 255 ),
	2431, 	Uvn( 0, 255 ),
	2426, 	Uvn( 0, 255 ),
	2420, 	Uvn( 0, 255 ),
	2406, 	Uvn( 0, 255 ),
	2413, 	Uvn( 0, 255 ),
	2405, 	Uvn( 0, 255 ),
	2400, 	Uvn( 0, 255 ),
	2391, 	Uvn( 0, 255 ),
	2403, 	Uvn( 0, 255 ),
	2383, 	Uvn( 0, 255 ),
	StripL(3),  
	2426, 	Uvn( 0, 255 ),
	2424, 	Uvn( 0, 255 ),
	2430, 	Uvn( 0, 255 ),
	StripL(7),  
	2380, 	Uvn( 0, 255 ),
	2363, 	Uvn( 0, 255 ),
	2375, 	Uvn( 0, 255 ),
	2353, 	Uvn( 0, 255 ),
	2362, 	Uvn( 0, 255 ),
	2355, 	Uvn( 0, 255 ),
	5032, 	Uvn( 0, 255 ),
	StripR(5),  
	2404, 	Uvn( 0, 255 ),
	2407, 	Uvn( 0, 255 ),
	2381, 	Uvn( 0, 255 ),
	2385, 	Uvn( 0, 255 ),
	2368, 	Uvn( 0, 255 ),
	StripL(5),  
	965, 	Uvn( 0, 255 ),
	963, 	Uvn( 0, 255 ),
	960, 	Uvn( 0, 255 ),
	948, 	Uvn( 0, 255 ),
	946, 	Uvn( 0, 255 ),
	StripL(3),  
	1001, 	Uvn( 0, 255 ),
	3589, 	Uvn( 0, 255 ),
	696, 	Uvn( 0, 255 ),
	StripR(11),  
	2083, 	Uvn( 0, 255 ),
	4266, 	Uvn( 0, 255 ),
	4268, 	Uvn( 0, 255 ),
	4270, 	Uvn( 0, 255 ),
	4272, 	Uvn( 0, 255 ),
	4276, 	Uvn( 0, 255 ),
	4279, 	Uvn( 0, 255 ),
	4280, 	Uvn( 0, 255 ),
	4287, 	Uvn( 0, 255 ),
	4289, 	Uvn( 0, 255 ),
	2156, 	Uvn( 0, 255 ),
	StripR(21),  
	1981, 	Uvn( 0, 255 ),
	4242, 	Uvn( 0, 255 ),
	1982, 	Uvn( 0, 255 ),
	4243, 	Uvn( 0, 255 ),
	4248, 	Uvn( 0, 255 ),
	2103, 	Uvn( 0, 255 ),
	4250, 	Uvn( 0, 255 ),
	2101, 	Uvn( 0, 255 ),
	2114, 	Uvn( 0, 255 ),
	2099, 	Uvn( 0, 255 ),
	2112, 	Uvn( 0, 255 ),
	2100, 	Uvn( 0, 255 ),
	2111, 	Uvn( 0, 255 ),
	2102, 	Uvn( 0, 255 ),
	2110, 	Uvn( 0, 255 ),
	4288, 	Uvn( 0, 255 ),
	4301, 	Uvn( 0, 255 ),
	4290, 	Uvn( 0, 255 ),
	4299, 	Uvn( 0, 255 ),
	4291, 	Uvn( 0, 255 ),
	4302, 	Uvn( 0, 255 ),
	StripL(8),  
	2076, 	Uvn( 0, 255 ),
	2088, 	Uvn( 0, 255 ),
	2072, 	Uvn( 0, 255 ),
	2089, 	Uvn( 0, 255 ),
	2074, 	Uvn( 0, 255 ),
	2077, 	Uvn( 0, 255 ),
	2069, 	Uvn( 0, 255 ),
	2071, 	Uvn( 0, 255 ),
	StripL(4),  
	2089, 	Uvn( 0, 255 ),
	2091, 	Uvn( 0, 255 ),
	2077, 	Uvn( 0, 255 ),
	2094, 	Uvn( 0, 255 ),
	StripR(16),  
	5039, 	Uvn( 0, 255 ),
	2368, 	Uvn( 0, 255 ),
	5047, 	Uvn( 0, 255 ),
	2385, 	Uvn( 0, 255 ),
	2388, 	Uvn( 0, 255 ),
	2412, 	Uvn( 0, 255 ),
	2416, 	Uvn( 0, 255 ),
	2454, 	Uvn( 0, 255 ),
	2447, 	Uvn( 0, 255 ),
	2461, 	Uvn( 0, 255 ),
	2458, 	Uvn( 0, 255 ),
	2462, 	Uvn( 0, 255 ),
	2460, 	Uvn( 0, 255 ),
	5131, 	Uvn( 0, 255 ),
	5119, 	Uvn( 0, 255 ),
	5124, 	Uvn( 0, 255 ),
	StripR(7),  
	2358, 	Uvn( 0, 255 ),
	2349, 	Uvn( 0, 255 ),
	2342, 	Uvn( 0, 255 ),
	2339, 	Uvn( 0, 255 ),
	2371, 	Uvn( 0, 255 ),
	2357, 	Uvn( 0, 255 ),
	2383, 	Uvn( 0, 255 ),
	StripL(4),  
	2425, 	Uvn( 0, 255 ),
	2436, 	Uvn( 0, 255 ),
	2443, 	Uvn( 0, 255 ),
	2449, 	Uvn( 0, 255 ),
	StripL(9),  
	2376, 	Uvn( 0, 255 ),
	2364, 	Uvn( 0, 255 ),
	2380, 	Uvn( 0, 255 ),
	2356, 	Uvn( 0, 255 ),
	2363, 	Uvn( 0, 255 ),
	2344, 	Uvn( 0, 255 ),
	2353, 	Uvn( 0, 255 ),
	2346, 	Uvn( 0, 255 ),
	2355, 	Uvn( 0, 255 ),
	StripL(4),  
	2395, 	Uvn( 0, 255 ),
	2411, 	Uvn( 0, 255 ),
	2409, 	Uvn( 0, 255 ),
	2419, 	Uvn( 0, 255 ),
	StripR(20),  
	2444, 	Uvn( 0, 255 ),
	2432, 	Uvn( 0, 255 ),
	2434, 	Uvn( 0, 255 ),
	2392, 	Uvn( 0, 255 ),
	2401, 	Uvn( 0, 255 ),
	2382, 	Uvn( 0, 255 ),
	2386, 	Uvn( 0, 255 ),
	5044, 	Uvn( 0, 255 ),
	5046, 	Uvn( 0, 255 ),
	5035, 	Uvn( 0, 255 ),
	5040, 	Uvn( 0, 255 ),
	5030, 	Uvn( 0, 255 ),
	5036, 	Uvn( 0, 255 ),
	5031, 	Uvn( 0, 255 ),
	5041, 	Uvn( 0, 255 ),
	5038, 	Uvn( 0, 255 ),
	5042, 	Uvn( 0, 255 ),
	5037, 	Uvn( 0, 255 ),
	5028, 	Uvn( 0, 255 ),
	5016, 	Uvn( 0, 255 ),
	StripL(9),  
	2430, 	Uvn( 0, 255 ),
	2439, 	Uvn( 0, 255 ),
	2431, 	Uvn( 0, 255 ),
	5102, 	Uvn( 0, 255 ),
	2437, 	Uvn( 0, 255 ),
	5111, 	Uvn( 0, 255 ),
	5108, 	Uvn( 0, 255 ),
	5115, 	Uvn( 0, 255 ),
	5109, 	Uvn( 0, 255 ),
	StripL(3),  
	5159, 	Uvn( 0, 255 ),
	5152, 	Uvn( 0, 255 ),
	5157, 	Uvn( 0, 255 ),
	StripR(7),  
	2625, 	Uvn( 0, 255 ),
	2624, 	Uvn( 0, 255 ),
	2622, 	Uvn( 0, 255 ),
	2621, 	Uvn( 0, 255 ),
	2615, 	Uvn( 0, 255 ),
	2613, 	Uvn( 0, 255 ),
	5160, 	Uvn( 0, 255 ),
	StripL(3),  
	5271, 	Uvn( 0, 255 ),
	5266, 	Uvn( 0, 255 ),
	5269, 	Uvn( 0, 255 ),
	StripR(8),  
	2728, 	Uvn( 0, 255 ),
	2724, 	Uvn( 0, 255 ),
	2729, 	Uvn( 0, 255 ),
	2727, 	Uvn( 0, 255 ),
	2725, 	Uvn( 0, 255 ),
	2722, 	Uvn( 0, 255 ),
	2714, 	Uvn( 0, 255 ),
	2715, 	Uvn( 0, 255 ),
	StripR(5),  
	2715, 	Uvn( 0, 255 ),
	2722, 	Uvn( 0, 255 ),
	2713, 	Uvn( 0, 255 ),
	2727, 	Uvn( 0, 255 ),
	2724, 	Uvn( 0, 255 ),
	StripL(94),  
	5270, 	Uvn( 0, 255 ),
	2702, 	Uvn( 0, 255 ),
	2700, 	Uvn( 0, 255 ),
	2709, 	Uvn( 0, 255 ),
	2703, 	Uvn( 0, 255 ),
	2712, 	Uvn( 0, 255 ),
	2710, 	Uvn( 0, 255 ),
	2717, 	Uvn( 0, 255 ),
	5277, 	Uvn( 0, 255 ),
	2723, 	Uvn( 0, 255 ),
	2707, 	Uvn( 0, 255 ),
	2719, 	Uvn( 0, 255 ),
	2721, 	Uvn( 0, 255 ),
	2723, 	Uvn( 0, 255 ),
	2726, 	Uvn( 0, 255 ),
	2717, 	Uvn( 0, 255 ),
	2720, 	Uvn( 0, 255 ),
	2712, 	Uvn( 0, 255 ),
	2714, 	Uvn( 0, 255 ),
	2709, 	Uvn( 0, 255 ),
	2715, 	Uvn( 0, 255 ),
	2711, 	Uvn( 0, 255 ),
	2713, 	Uvn( 0, 255 ),
	2702, 	Uvn( 0, 255 ),
	5273, 	Uvn( 0, 255 ),
	5270, 	Uvn( 0, 255 ),
	5265, 	Uvn( 0, 255 ),
	5267, 	Uvn( 0, 255 ),
	2614, 	Uvn( 0, 255 ),
	5264, 	Uvn( 0, 255 ),
	2610, 	Uvn( 0, 255 ),
	2612, 	Uvn( 0, 255 ),
	2606, 	Uvn( 0, 255 ),
	2608, 	Uvn( 0, 255 ),
	5157, 	Uvn( 0, 255 ),
	2613, 	Uvn( 0, 255 ),
	5159, 	Uvn( 0, 255 ),
	5160, 	Uvn( 0, 255 ),
	2475, 	Uvn( 0, 255 ),
	5156, 	Uvn( 0, 255 ),
	5149, 	Uvn( 0, 255 ),
	5144, 	Uvn( 0, 255 ),
	5136, 	Uvn( 0, 255 ),
	5138, 	Uvn( 0, 255 ),
	5129, 	Uvn( 0, 255 ),
	5124, 	Uvn( 0, 255 ),
	5114, 	Uvn( 0, 255 ),
	5119, 	Uvn( 0, 255 ),
	2455, 	Uvn( 0, 255 ),
	2460, 	Uvn( 0, 255 ),
	2453, 	Uvn( 0, 255 ),
	2458, 	Uvn( 0, 255 ),
	2441, 	Uvn( 0, 255 ),
	2447, 	Uvn( 0, 255 ),
	2408, 	Uvn( 0, 255 ),
	2414, 	Uvn( 0, 255 ),
	2393, 	Uvn( 0, 255 ),
	2396, 	Uvn( 0, 255 ),
	5049, 	Uvn( 0, 255 ),
	5047, 	Uvn( 0, 255 ),
	5045, 	Uvn( 0, 255 ),
	5039, 	Uvn( 0, 255 ),
	5042, 	Uvn( 0, 255 ),
	5034, 	Uvn( 0, 255 ),
	5028, 	Uvn( 0, 255 ),
	5022, 	Uvn( 0, 255 ),
	5016, 	Uvn( 0, 255 ),
	5007, 	Uvn( 0, 255 ),
	2328, 	Uvn( 0, 255 ),
	4999, 	Uvn( 0, 255 ),
	2326, 	Uvn( 0, 255 ),
	2322, 	Uvn( 0, 255 ),
	2308, 	Uvn( 0, 255 ),
	2304, 	Uvn( 0, 255 ),
	2294, 	Uvn( 0, 255 ),
	2293, 	Uvn( 0, 255 ),
	4929, 	Uvn( 0, 255 ),
	4928, 	Uvn( 0, 255 ),
	4898, 	Uvn( 0, 255 ),
	4895, 	Uvn( 0, 255 ),
	4884, 	Uvn( 0, 255 ),
	4889, 	Uvn( 0, 255 ),
	4874, 	Uvn( 0, 255 ),
	4887, 	Uvn( 0, 255 ),
	4882, 	Uvn( 0, 255 ),
	4890, 	Uvn( 0, 255 ),
	4869, 	Uvn( 0, 255 ),
	4878, 	Uvn( 0, 255 ),
	4853, 	Uvn( 0, 255 ),
	4854, 	Uvn( 0, 255 ),
	2277, 	Uvn( 0, 255 ),
	2274, 	Uvn( 0, 255 ),
	2257, 	Uvn( 0, 255 ),
	2255, 	Uvn( 0, 255 ),
	StripR(10),  
	2616, 	Uvn( 0, 255 ),
	2620, 	Uvn( 0, 255 ),
	2611, 	Uvn( 0, 255 ),
	2618, 	Uvn( 0, 255 ),
	2605, 	Uvn( 0, 255 ),
	2607, 	Uvn( 0, 255 ),
	5154, 	Uvn( 0, 255 ),
	5158, 	Uvn( 0, 255 ),
	5150, 	Uvn( 0, 255 ),
	5156, 	Uvn( 0, 255 ),
	StripL(10),  
	2469, 	Uvn( 0, 255 ),
	2471, 	Uvn( 0, 255 ),
	2467, 	Uvn( 0, 255 ),
	5142, 	Uvn( 0, 255 ),
	2465, 	Uvn( 0, 255 ),
	5136, 	Uvn( 0, 255 ),
	5120, 	Uvn( 0, 255 ),
	5135, 	Uvn( 0, 255 ),
	2457, 	Uvn( 0, 255 ),
	5126, 	Uvn( 0, 255 ),
	StripR(12),  
	5114, 	Uvn( 0, 255 ),
	5129, 	Uvn( 0, 255 ),
	5127, 	Uvn( 0, 255 ),
	5133, 	Uvn( 0, 255 ),
	5130, 	Uvn( 0, 255 ),
	5203, 	Uvn( 0, 255 ),
	5201, 	Uvn( 0, 255 ),
	2597, 	Uvn( 0, 255 ),
	2596, 	Uvn( 0, 255 ),
	2598, 	Uvn( 0, 255 ),
	5206, 	Uvn( 0, 255 ),
	5210, 	Uvn( 0, 255 ),
	StripL(10),  
	2690, 	Uvn( 0, 255 ),
	2686, 	Uvn( 0, 255 ),
	2678, 	Uvn( 0, 255 ),
	2677, 	Uvn( 0, 255 ),
	2670, 	Uvn( 0, 255 ),
	2663, 	Uvn( 0, 255 ),
	5258, 	Uvn( 0, 255 ),
	5252, 	Uvn( 0, 255 ),
	5235, 	Uvn( 0, 255 ),
	5230, 	Uvn( 0, 255 ),
	StripR(18),  
	2698, 	Uvn( 0, 255 ),
	2690, 	Uvn( 0, 255 ),
	2697, 	Uvn( 0, 255 ),
	2686, 	Uvn( 0, 255 ),
	2695, 	Uvn( 0, 255 ),
	2685, 	Uvn( 0, 255 ),
	2682, 	Uvn( 0, 255 ),
	2673, 	Uvn( 0, 255 ),
	2667, 	Uvn( 0, 255 ),
	2660, 	Uvn( 0, 255 ),
	5239, 	Uvn( 0, 255 ),
	5233, 	Uvn( 0, 255 ),
	2661, 	Uvn( 0, 255 ),
	5253, 	Uvn( 0, 255 ),
	5255, 	Uvn( 0, 255 ),
	5251, 	Uvn( 0, 255 ),
	5257, 	Uvn( 0, 255 ),
	5254, 	Uvn( 0, 255 ),
	StripL(3),  
	2671, 	Uvn( 0, 255 ),
	2662, 	Uvn( 0, 255 ),
	2666, 	Uvn( 0, 255 ),
	StripL(6),  
	2650, 	Uvn( 0, 255 ),
	5283, 	Uvn( 0, 255 ),
	5280, 	Uvn( 0, 255 ),
	5281, 	Uvn( 0, 255 ),
	5243, 	Uvn( 0, 255 ),
	5236, 	Uvn( 0, 255 ),
	StripL(3),  
	2652, 	Uvn( 0, 255 ),
	2650, 	Uvn( 0, 255 ),
	2653, 	Uvn( 0, 255 ),
	StripL(3),  
	2644, 	Uvn( 0, 255 ),
	2646, 	Uvn( 0, 255 ),
	2643, 	Uvn( 0, 255 ),
	StripL(3),  
	5222, 	Uvn( 0, 255 ),
	5218, 	Uvn( 0, 255 ),
	5228, 	Uvn( 0, 255 ),
	StripR(13),  
	5219, 	Uvn( 0, 255 ),
	5216, 	Uvn( 0, 255 ),
	2549, 	Uvn( 0, 255 ),
	2546, 	Uvn( 0, 255 ),
	2544, 	Uvn( 0, 255 ),
	2541, 	Uvn( 0, 255 ),
	5196, 	Uvn( 0, 255 ),
	2538, 	Uvn( 0, 255 ),
	5110, 	Uvn( 0, 255 ),
	2539, 	Uvn( 0, 255 ),
	5109, 	Uvn( 0, 255 ),
	5197, 	Uvn( 0, 255 ),
	5115, 	Uvn( 0, 255 ),
	StripR(5),  
	2423, 	Uvn( 0, 255 ),
	2427, 	Uvn( 0, 255 ),
	5093, 	Uvn( 0, 255 ),
	5095, 	Uvn( 0, 255 ),
	5103, 	Uvn( 0, 255 ),
	StripL(3),  
	2074, 	Uvn( 0, 255 ),
	2069, 	Uvn( 0, 255 ),
	2072, 	Uvn( 0, 255 ),
	StripL(6),  
	2079, 	Uvn( 0, 255 ),
	2076, 	Uvn( 0, 255 ),
	2070, 	Uvn( 0, 255 ),
	2072, 	Uvn( 0, 255 ),
	2068, 	Uvn( 0, 255 ),
	2069, 	Uvn( 0, 255 ),
	StripL(6),  
	4234, 	Uvn( 0, 255 ),
	4237, 	Uvn( 0, 255 ),
	2073, 	Uvn( 0, 255 ),
	2079, 	Uvn( 0, 255 ),
	2075, 	Uvn( 0, 255 ),
	2070, 	Uvn( 0, 255 ),
	StripR(10),  
	1871, 	Uvn( 0, 255 ),
	1853, 	Uvn( 0, 255 ),
	1843, 	Uvn( 0, 255 ),
	1852, 	Uvn( 0, 255 ),
	1830, 	Uvn( 0, 255 ),
	1857, 	Uvn( 0, 255 ),
	1826, 	Uvn( 0, 255 ),
	1828, 	Uvn( 0, 255 ),
	1842, 	Uvn( 0, 255 ),
	1833, 	Uvn( 0, 255 ),
	StripL(5),  
	1842, 	Uvn( 0, 255 ),
	1816, 	Uvn( 0, 255 ),
	1833, 	Uvn( 0, 255 ),
	1815, 	Uvn( 0, 255 ),
	1828, 	Uvn( 0, 255 ),
	StripL(7),  
	1803, 	Uvn( 0, 255 ),
	1834, 	Uvn( 0, 255 ),
	1798, 	Uvn( 0, 255 ),
	1841, 	Uvn( 0, 255 ),
	1811, 	Uvn( 0, 255 ),
	1825, 	Uvn( 0, 255 ),
	1784, 	Uvn( 0, 255 ),
	StripL(4),  
	1660, 	Uvn( 0, 255 ),
	1624, 	Uvn( 0, 255 ),
	1610, 	Uvn( 0, 255 ),
	1606, 	Uvn( 0, 255 ),
	StripL(3),  
	1608, 	Uvn( 0, 255 ),
	1623, 	Uvn( 0, 255 ),
	1600, 	Uvn( 0, 255 ),
	StripL(4),  
	1678, 	Uvn( 0, 255 ),
	1725, 	Uvn( 0, 255 ),
	1698, 	Uvn( 0, 255 ),
	1730, 	Uvn( 0, 255 ),
	StripR(15),  
	1716, 	Uvn( 0, 255 ),
	1730, 	Uvn( 0, 255 ),
	1701, 	Uvn( 0, 255 ),
	1698, 	Uvn( 0, 255 ),
	1682, 	Uvn( 0, 255 ),
	1678, 	Uvn( 0, 255 ),
	1655, 	Uvn( 0, 255 ),
	1652, 	Uvn( 0, 255 ),
	1639, 	Uvn( 0, 255 ),
	1644, 	Uvn( 0, 255 ),
	1619, 	Uvn( 0, 255 ),
	1617, 	Uvn( 0, 255 ),
	1604, 	Uvn( 0, 255 ),
	1605, 	Uvn( 0, 255 ),
	1595, 	Uvn( 0, 255 ),
	StripR(20),  
	1567, 	Uvn( 0, 255 ),
	1602, 	Uvn( 0, 255 ),
	1584, 	Uvn( 0, 255 ),
	1603, 	Uvn( 0, 255 ),
	1563, 	Uvn( 0, 255 ),
	1601, 	Uvn( 0, 255 ),
	1589, 	Uvn( 0, 255 ),
	1615, 	Uvn( 0, 255 ),
	1620, 	Uvn( 0, 255 ),
	1643, 	Uvn( 0, 255 ),
	1650, 	Uvn( 0, 255 ),
	1659, 	Uvn( 0, 255 ),
	1684, 	Uvn( 0, 255 ),
	1678, 	Uvn( 0, 255 ),
	1713, 	Uvn( 0, 255 ),
	1725, 	Uvn( 0, 255 ),
	1726, 	Uvn( 0, 255 ),
	1743, 	Uvn( 0, 255 ),
	1723, 	Uvn( 0, 255 ),
	1739, 	Uvn( 0, 255 ),
	StripL(8),  
	1764, 	Uvn( 0, 255 ),
	1791, 	Uvn( 0, 255 ),
	1766, 	Uvn( 0, 255 ),
	1796, 	Uvn( 0, 255 ),
	1769, 	Uvn( 0, 255 ),
	1780, 	Uvn( 0, 255 ),
	1767, 	Uvn( 0, 255 ),
	1756, 	Uvn( 0, 255 ),
	StripR(9),  
	1707, 	Uvn( 0, 255 ),
	1660, 	Uvn( 0, 255 ),
	1677, 	Uvn( 0, 255 ),
	1624, 	Uvn( 0, 255 ),
	1623, 	Uvn( 0, 255 ),
	1606, 	Uvn( 0, 255 ),
	1608, 	Uvn( 0, 255 ),
	1592, 	Uvn( 0, 255 ),
	1600, 	Uvn( 0, 255 ),
	StripR(22),  
	1647, 	Uvn( 0, 255 ),
	1637, 	Uvn( 0, 255 ),
	1658, 	Uvn( 0, 255 ),
	1675, 	Uvn( 0, 255 ),
	1705, 	Uvn( 0, 255 ),
	1699, 	Uvn( 0, 255 ),
	1714, 	Uvn( 0, 255 ),
	1697, 	Uvn( 0, 255 ),
	1709, 	Uvn( 0, 255 ),
	1703, 	Uvn( 0, 255 ),
	1728, 	Uvn( 0, 255 ),
	1727, 	Uvn( 0, 255 ),
	1737, 	Uvn( 0, 255 ),
	1747, 	Uvn( 0, 255 ),
	1760, 	Uvn( 0, 255 ),
	1740, 	Uvn( 0, 255 ),
	1763, 	Uvn( 0, 255 ),
	1736, 	Uvn( 0, 255 ),
	1745, 	Uvn( 0, 255 ),
	1718, 	Uvn( 0, 255 ),
	1734, 	Uvn( 0, 255 ),
	1721, 	Uvn( 0, 255 ),
	StripR(9),  
	4201, 	Uvn( 0, 255 ),
	4202, 	Uvn( 0, 255 ),
	4200, 	Uvn( 0, 255 ),
	3357, 	Uvn( 0, 255 ),
	3356, 	Uvn( 0, 255 ),
	3355, 	Uvn( 0, 255 ),
	3354, 	Uvn( 0, 255 ),
	3353, 	Uvn( 0, 255 ),
	3352, 	Uvn( 0, 255 ),
	StripR(5),  
	4213, 	Uvn( 0, 255 ),
	4218, 	Uvn( 0, 255 ),
	4214, 	Uvn( 0, 255 ),
	4217, 	Uvn( 0, 255 ),
	4224, 	Uvn( 0, 255 ),
	StripL(4),  
	4201, 	Uvn( 0, 255 ),
	1912, 	Uvn( 0, 255 ),
	4200, 	Uvn( 0, 255 ),
	3356, 	Uvn( 0, 255 ),
	StripL(3),  
	1836, 	Uvn( 0, 255 ),
	1825, 	Uvn( 0, 255 ),
	1860, 	Uvn( 0, 255 ),
	StripL(4),  
	1808, 	Uvn( 0, 255 ),
	1799, 	Uvn( 0, 255 ),
	1778, 	Uvn( 0, 255 ),
	1773, 	Uvn( 0, 255 ),
	StripL(35),  
	1779, 	Uvn( 0, 255 ),
	1818, 	Uvn( 0, 255 ),
	1827, 	Uvn( 0, 255 ),
	1847, 	Uvn( 0, 255 ),
	1844, 	Uvn( 0, 255 ),
	1851, 	Uvn( 0, 255 ),
	1850, 	Uvn( 0, 255 ),
	1865, 	Uvn( 0, 255 ),
	1815, 	Uvn( 0, 255 ),
	1832, 	Uvn( 0, 255 ),
	1828, 	Uvn( 0, 255 ),
	1865, 	Uvn( 0, 255 ),
	1864, 	Uvn( 0, 255 ),
	1872, 	Uvn( 0, 255 ),
	1857, 	Uvn( 0, 255 ),
	1868, 	Uvn( 0, 255 ),
	1852, 	Uvn( 0, 255 ),
	1856, 	Uvn( 0, 255 ),
	1853, 	Uvn( 0, 255 ),
	1862, 	Uvn( 0, 255 ),
	1871, 	Uvn( 0, 255 ),
	1877, 	Uvn( 0, 255 ),
	1883, 	Uvn( 0, 255 ),
	1884, 	Uvn( 0, 255 ),
	1879, 	Uvn( 0, 255 ),
	1878, 	Uvn( 0, 255 ),
	1855, 	Uvn( 0, 255 ),
	1874, 	Uvn( 0, 255 ),
	1846, 	Uvn( 0, 255 ),
	1848, 	Uvn( 0, 255 ),
	1823, 	Uvn( 0, 255 ),
	1837, 	Uvn( 0, 255 ),
	1800, 	Uvn( 0, 255 ),
	1821, 	Uvn( 0, 255 ),
	1786, 	Uvn( 0, 255 ),
	StripR(5),  
	1815, 	Uvn( 0, 255 ),
	1850, 	Uvn( 0, 255 ),
	1831, 	Uvn( 0, 255 ),
	1844, 	Uvn( 0, 255 ),
	1827, 	Uvn( 0, 255 ),
	StripL(3),  
	1851, 	Uvn( 0, 255 ),
	1847, 	Uvn( 0, 255 ),
	1859, 	Uvn( 0, 255 ),
	StripL(9),  
	1602, 	Uvn( 0, 255 ),
	1603, 	Uvn( 0, 255 ),
	1616, 	Uvn( 0, 255 ),
	1618, 	Uvn( 0, 255 ),
	1635, 	Uvn( 0, 255 ),
	1642, 	Uvn( 0, 255 ),
	1652, 	Uvn( 0, 255 ),
	1643, 	Uvn( 0, 255 ),
	1659, 	Uvn( 0, 255 ),
	StripR(21),  
	1777, 	Uvn( 0, 255 ),
	1668, 	Uvn( 0, 255 ),
	1771, 	Uvn( 0, 255 ),
	1667, 	Uvn( 0, 255 ),
	1772, 	Uvn( 0, 255 ),
	1662, 	Uvn( 0, 255 ),
	1765, 	Uvn( 0, 255 ),
	1661, 	Uvn( 0, 255 ),
	1757, 	Uvn( 0, 255 ),
	1672, 	Uvn( 0, 255 ),
	1774, 	Uvn( 0, 255 ),
	1670, 	Uvn( 0, 255 ),
	1710, 	Uvn( 0, 255 ),
	1671, 	Uvn( 0, 255 ),
	1674, 	Uvn( 0, 255 ),
	1580, 	Uvn( 0, 255 ),
	1579, 	Uvn( 0, 255 ),
	1461, 	Uvn( 0, 255 ),
	1525, 	Uvn( 0, 255 ),
	1462, 	Uvn( 0, 255 ),
	4198, 	Uvn( 0, 255 ),
	StripL(18),  
	1670, 	Uvn( 0, 255 ),
	1671, 	Uvn( 0, 255 ),
	1581, 	Uvn( 0, 255 ),
	1580, 	Uvn( 0, 255 ),
	1463, 	Uvn( 0, 255 ),
	1461, 	Uvn( 0, 255 ),
	1320, 	Uvn( 0, 255 ),
	1321, 	Uvn( 0, 255 ),
	1226, 	Uvn( 0, 255 ),
	1253, 	Uvn( 0, 255 ),
	1242, 	Uvn( 0, 255 ),
	1263, 	Uvn( 0, 255 ),
	1225, 	Uvn( 0, 255 ),
	1249, 	Uvn( 0, 255 ),
	1227, 	Uvn( 0, 255 ),
	4228, 	Uvn( 0, 255 ),
	1235, 	Uvn( 0, 255 ),
	4172, 	Uvn( 0, 255 ),
	StripL(3),  
	1749, 	Uvn( 0, 255 ),
	1729, 	Uvn( 0, 255 ),
	1717, 	Uvn( 0, 255 ),
	StripL(8),  
	1560, 	Uvn( 0, 255 ),
	1594, 	Uvn( 0, 255 ),
	1628, 	Uvn( 0, 255 ),
	1630, 	Uvn( 0, 255 ),
	1681, 	Uvn( 0, 255 ),
	1687, 	Uvn( 0, 255 ),
	1721, 	Uvn( 0, 255 ),
	1718, 	Uvn( 0, 255 ),
	StripL(11),  
	1752, 	Uvn( 0, 255 ),
	1770, 	Uvn( 0, 255 ),
	1787, 	Uvn( 0, 255 ),
	1776, 	Uvn( 0, 255 ),
	1795, 	Uvn( 0, 255 ),
	1784, 	Uvn( 0, 255 ),
	1810, 	Uvn( 0, 255 ),
	1825, 	Uvn( 0, 255 ),
	1820, 	Uvn( 0, 255 ),
	1836, 	Uvn( 0, 255 ),
	1819, 	Uvn( 0, 255 ),
	StripR(12),  
	1476, 	Uvn( 0, 255 ),
	1433, 	Uvn( 0, 255 ),
	1480, 	Uvn( 0, 255 ),
	1430, 	Uvn( 0, 255 ),
	1488, 	Uvn( 0, 255 ),
	1431, 	Uvn( 0, 255 ),
	1432, 	Uvn( 0, 255 ),
	1412, 	Uvn( 0, 255 ),
	1409, 	Uvn( 0, 255 ),
	1395, 	Uvn( 0, 255 ),
	1389, 	Uvn( 0, 255 ),
	1369, 	Uvn( 0, 255 ),
	StripL(11),  
	1512, 	Uvn( 0, 255 ),
	1508, 	Uvn( 0, 255 ),
	1570, 	Uvn( 0, 255 ),
	1554, 	Uvn( 0, 255 ),
	1612, 	Uvn( 0, 255 ),
	1558, 	Uvn( 0, 255 ),
	1613, 	Uvn( 0, 255 ),
	1611, 	Uvn( 0, 255 ),
	1638, 	Uvn( 0, 255 ),
	1632, 	Uvn( 0, 255 ),
	1653, 	Uvn( 0, 255 ),
	StripR(6),  
	1656, 	Uvn( 0, 255 ),
	1614, 	Uvn( 0, 255 ),
	1626, 	Uvn( 0, 255 ),
	1573, 	Uvn( 0, 255 ),
	1586, 	Uvn( 0, 255 ),
	1506, 	Uvn( 0, 255 ),
	StripL(13),  
	1712, 	Uvn( 0, 255 ),
	1731, 	Uvn( 0, 255 ),
	1688, 	Uvn( 0, 255 ),
	1715, 	Uvn( 0, 255 ),
	1645, 	Uvn( 0, 255 ),
	1646, 	Uvn( 0, 255 ),
	1585, 	Uvn( 0, 255 ),
	1572, 	Uvn( 0, 255 ),
	1457, 	Uvn( 0, 255 ),
	1458, 	Uvn( 0, 255 ),
	1328, 	Uvn( 0, 255 ),
	1326, 	Uvn( 0, 255 ),
	1264, 	Uvn( 0, 255 ),
	StripL(5),  
	1492, 	Uvn( 0, 255 ),
	1520, 	Uvn( 0, 255 ),
	1515, 	Uvn( 0, 255 ),
	1524, 	Uvn( 0, 255 ),
	1552, 	Uvn( 0, 255 ),
	StripR(6),  
	1767, 	Uvn( 0, 255 ),
	1769, 	Uvn( 0, 255 ),
	1730, 	Uvn( 0, 255 ),
	1766, 	Uvn( 0, 255 ),
	1725, 	Uvn( 0, 255 ),
	1743, 	Uvn( 0, 255 ),
	StripL(3),  
	1678, 	Uvn( 0, 255 ),
	1652, 	Uvn( 0, 255 ),
	1659, 	Uvn( 0, 255 ),
	StripR(5),  
	1439, 	Uvn( 0, 255 ),
	1438, 	Uvn( 0, 255 ),
	1472, 	Uvn( 0, 255 ),
	1471, 	Uvn( 0, 255 ),
	1473, 	Uvn( 0, 255 ),
	StripR(59),  
	1533, 	Uvn( 0, 255 ),
	1560, 	Uvn( 0, 255 ),
	1546, 	Uvn( 0, 255 ),
	1594, 	Uvn( 0, 255 ),
	1600, 	Uvn( 0, 255 ),
	1630, 	Uvn( 0, 255 ),
	1623, 	Uvn( 0, 255 ),
	1687, 	Uvn( 0, 255 ),
	1677, 	Uvn( 0, 255 ),
	1718, 	Uvn( 0, 255 ),
	1707, 	Uvn( 0, 255 ),
	1736, 	Uvn( 0, 255 ),
	1722, 	Uvn( 0, 255 ),
	1740, 	Uvn( 0, 255 ),
	1732, 	Uvn( 0, 255 ),
	1747, 	Uvn( 0, 255 ),
	1735, 	Uvn( 0, 255 ),
	1727, 	Uvn( 0, 255 ),
	1700, 	Uvn( 0, 255 ),
	1703, 	Uvn( 0, 255 ),
	1679, 	Uvn( 0, 255 ),
	1697, 	Uvn( 0, 255 ),
	1665, 	Uvn( 0, 255 ),
	1673, 	Uvn( 0, 255 ),
	4231, 	Uvn( 0, 255 ),
	1651, 	Uvn( 0, 255 ),
	4211, 	Uvn( 0, 255 ),
	4206, 	Uvn( 0, 255 ),
	4221, 	Uvn( 0, 255 ),
	4208, 	Uvn( 0, 255 ),
	2233, 	Uvn( 0, 255 ),
	2234, 	Uvn( 0, 255 ),
	2239, 	Uvn( 0, 255 ),
	2244, 	Uvn( 0, 255 ),
	2248, 	Uvn( 0, 255 ),
	3375, 	Uvn( 0, 255 ),
	3385, 	Uvn( 0, 255 ),
	3381, 	Uvn( 0, 255 ),
	3389, 	Uvn( 0, 255 ),
	3390, 	Uvn( 0, 255 ),
	3397, 	Uvn( 0, 255 ),
	3629, 	Uvn( 0, 255 ),
	3405, 	Uvn( 0, 255 ),
	3396, 	Uvn( 0, 255 ),
	3404, 	Uvn( 0, 255 ),
	3408, 	Uvn( 0, 255 ),
	3416, 	Uvn( 0, 255 ),
	3410, 	Uvn( 0, 255 ),
	3419, 	Uvn( 0, 255 ),
	3414, 	Uvn( 0, 255 ),
	3417, 	Uvn( 0, 255 ),
	3409, 	Uvn( 0, 255 ),
	3412, 	Uvn( 0, 255 ),
	3401, 	Uvn( 0, 255 ),
	4775, 	Uvn( 0, 255 ),
	4762, 	Uvn( 0, 255 ),
	4778, 	Uvn( 0, 255 ),
	4771, 	Uvn( 0, 255 ),
	4786, 	Uvn( 0, 255 ),
	StripR(12),  
	1665, 	Uvn( 0, 255 ),
	1654, 	Uvn( 0, 255 ),
	1679, 	Uvn( 0, 255 ),
	1686, 	Uvn( 0, 255 ),
	1700, 	Uvn( 0, 255 ),
	1719, 	Uvn( 0, 255 ),
	1735, 	Uvn( 0, 255 ),
	1720, 	Uvn( 0, 255 ),
	1732, 	Uvn( 0, 255 ),
	1711, 	Uvn( 0, 255 ),
	1722, 	Uvn( 0, 255 ),
	1694, 	Uvn( 0, 255 ),
	StripL(13),  
	1641, 	Uvn( 0, 255 ),
	1607, 	Uvn( 0, 255 ),
	1666, 	Uvn( 0, 255 ),
	1625, 	Uvn( 0, 255 ),
	1676, 	Uvn( 0, 255 ),
	1631, 	Uvn( 0, 255 ),
	1689, 	Uvn( 0, 255 ),
	1640, 	Uvn( 0, 255 ),
	1685, 	Uvn( 0, 255 ),
	1633, 	Uvn( 0, 255 ),
	4230, 	Uvn( 0, 255 ),
	4204, 	Uvn( 0, 255 ),
	4209, 	Uvn( 0, 255 ),
	StripL(3),  
	1644, 	Uvn( 0, 255 ),
	1617, 	Uvn( 0, 255 ),
	1627, 	Uvn( 0, 255 ),
	StripR(6),  
	1765, 	Uvn( 0, 255 ),
	1757, 	Uvn( 0, 255 ),
	1781, 	Uvn( 0, 255 ),
	1774, 	Uvn( 0, 255 ),
	1759, 	Uvn( 0, 255 ),
	1710, 	Uvn( 0, 255 ),
	StripR(11),  
	1856, 	Uvn( 0, 255 ),
	1862, 	Uvn( 0, 255 ),
	1868, 	Uvn( 0, 255 ),
	1866, 	Uvn( 0, 255 ),
	1870, 	Uvn( 0, 255 ),
	1881, 	Uvn( 0, 255 ),
	1880, 	Uvn( 0, 255 ),
	1882, 	Uvn( 0, 255 ),
	1876, 	Uvn( 0, 255 ),
	1874, 	Uvn( 0, 255 ),
	1848, 	Uvn( 0, 255 ),
	StripR(5),  
	1792, 	Uvn( 0, 255 ),
	1807, 	Uvn( 0, 255 ),
	1804, 	Uvn( 0, 255 ),
	1816, 	Uvn( 0, 255 ),
	1801, 	Uvn( 0, 255 ),
	StripR(5),  
	1860, 	Uvn( 0, 255 ),
	1875, 	Uvn( 0, 255 ),
	1825, 	Uvn( 0, 255 ),
	1858, 	Uvn( 0, 255 ),
	1841, 	Uvn( 0, 255 ),
	StripL(6),  
	1753, 	Uvn( 0, 255 ),
	1783, 	Uvn( 0, 255 ),
	1823, 	Uvn( 0, 255 ),
	1806, 	Uvn( 0, 255 ),
	1846, 	Uvn( 0, 255 ),
	1855, 	Uvn( 0, 255 ),
	StripL(5),  
	1806, 	Uvn( 0, 255 ),
	1812, 	Uvn( 0, 255 ),
	1855, 	Uvn( 0, 255 ),
	1822, 	Uvn( 0, 255 ),
	1863, 	Uvn( 0, 255 ),
	StripL(3),  
	1855, 	Uvn( 0, 255 ),
	1863, 	Uvn( 0, 255 ),
	1879, 	Uvn( 0, 255 ),
	StripR(6),  
	1810, 	Uvn( 0, 255 ),
	1817, 	Uvn( 0, 255 ),
	1820, 	Uvn( 0, 255 ),
	1839, 	Uvn( 0, 255 ),
	1819, 	Uvn( 0, 255 ),
	1813, 	Uvn( 0, 255 ),
	StripR(142),  
	1779, 	Uvn( 0, 255 ),
	1754, 	Uvn( 0, 255 ),
	1792, 	Uvn( 0, 255 ),
	1775, 	Uvn( 0, 255 ),
	1807, 	Uvn( 0, 255 ),
	1803, 	Uvn( 0, 255 ),
	1816, 	Uvn( 0, 255 ),
	1824, 	Uvn( 0, 255 ),
	1842, 	Uvn( 0, 255 ),
	1845, 	Uvn( 0, 255 ),
	1830, 	Uvn( 0, 255 ),
	1854, 	Uvn( 0, 255 ),
	1843, 	Uvn( 0, 255 ),
	1867, 	Uvn( 0, 255 ),
	1871, 	Uvn( 0, 255 ),
	1875, 	Uvn( 0, 255 ),
	1883, 	Uvn( 0, 255 ),
	1860, 	Uvn( 0, 255 ),
	1873, 	Uvn( 0, 255 ),
	1836, 	Uvn( 0, 255 ),
	1849, 	Uvn( 0, 255 ),
	1819, 	Uvn( 0, 255 ),
	1814, 	Uvn( 0, 255 ),
	1813, 	Uvn( 0, 255 ),
	1822, 	Uvn( 0, 255 ),
	1789, 	Uvn( 0, 255 ),
	1812, 	Uvn( 0, 255 ),
	1790, 	Uvn( 0, 255 ),
	1806, 	Uvn( 0, 255 ),
	1749, 	Uvn( 0, 255 ),
	1783, 	Uvn( 0, 255 ),
	1729, 	Uvn( 0, 255 ),
	1753, 	Uvn( 0, 255 ),
	1746, 	Uvn( 0, 255 ),
	1800, 	Uvn( 0, 255 ),
	1748, 	Uvn( 0, 255 ),
	1786, 	Uvn( 0, 255 ),
	1778, 	Uvn( 0, 255 ),
	1821, 	Uvn( 0, 255 ),
	1808, 	Uvn( 0, 255 ),
	1840, 	Uvn( 0, 255 ),
	1799, 	Uvn( 0, 255 ),
	1818, 	Uvn( 0, 255 ),
	1773, 	Uvn( 0, 255 ),
	1779, 	Uvn( 0, 255 ),
	1738, 	Uvn( 0, 255 ),
	1754, 	Uvn( 0, 255 ),
	1751, 	Uvn( 0, 255 ),
	1758, 	Uvn( 0, 255 ),
	1768, 	Uvn( 0, 255 ),
	1770, 	Uvn( 0, 255 ),
	1762, 	Uvn( 0, 255 ),
	1752, 	Uvn( 0, 255 ),
	1744, 	Uvn( 0, 255 ),
	1739, 	Uvn( 0, 255 ),
	1734, 	Uvn( 0, 255 ),
	1723, 	Uvn( 0, 255 ),
	1721, 	Uvn( 0, 255 ),
	1702, 	Uvn( 0, 255 ),
	1681, 	Uvn( 0, 255 ),
	1669, 	Uvn( 0, 255 ),
	1628, 	Uvn( 0, 255 ),
	1621, 	Uvn( 0, 255 ),
	1560, 	Uvn( 0, 255 ),
	1568, 	Uvn( 0, 255 ),
	1533, 	Uvn( 0, 255 ),
	1535, 	Uvn( 0, 255 ),
	1531, 	Uvn( 0, 255 ),
	1532, 	Uvn( 0, 255 ),
	1511, 	Uvn( 0, 255 ),
	1550, 	Uvn( 0, 255 ),
	1538, 	Uvn( 0, 255 ),
	1589, 	Uvn( 0, 255 ),
	1527, 	Uvn( 0, 255 ),
	1542, 	Uvn( 0, 255 ),
	1521, 	Uvn( 0, 255 ),
	1530, 	Uvn( 0, 255 ),
	1524, 	Uvn( 0, 255 ),
	1551, 	Uvn( 0, 255 ),
	1552, 	Uvn( 0, 255 ),
	1583, 	Uvn( 0, 255 ),
	1569, 	Uvn( 0, 255 ),
	1604, 	Uvn( 0, 255 ),
	1609, 	Uvn( 0, 255 ),
	1619, 	Uvn( 0, 255 ),
	1632, 	Uvn( 0, 255 ),
	1639, 	Uvn( 0, 255 ),
	1653, 	Uvn( 0, 255 ),
	1682, 	Uvn( 0, 255 ),
	1657, 	Uvn( 0, 255 ),
	1692, 	Uvn( 0, 255 ),
	1680, 	Uvn( 0, 255 ),
	1706, 	Uvn( 0, 255 ),
	1695, 	Uvn( 0, 255 ),
	1724, 	Uvn( 0, 255 ),
	1704, 	Uvn( 0, 255 ),
	1733, 	Uvn( 0, 255 ),
	1712, 	Uvn( 0, 255 ),
	1741, 	Uvn( 0, 255 ),
	1731, 	Uvn( 0, 255 ),
	1756, 	Uvn( 0, 255 ),
	1761, 	Uvn( 0, 255 ),
	1797, 	Uvn( 0, 255 ),
	1793, 	Uvn( 0, 255 ),
	1802, 	Uvn( 0, 255 ),
	1805, 	Uvn( 0, 255 ),
	1838, 	Uvn( 0, 255 ),
	1785, 	Uvn( 0, 255 ),
	1835, 	Uvn( 0, 255 ),
	1788, 	Uvn( 0, 255 ),
	1782, 	Uvn( 0, 255 ),
	1690, 	Uvn( 0, 255 ),
	1777, 	Uvn( 0, 255 ),
	1683, 	Uvn( 0, 255 ),
	1668, 	Uvn( 0, 255 ),
	1577, 	Uvn( 0, 255 ),
	1571, 	Uvn( 0, 255 ),
	1467, 	Uvn( 0, 255 ),
	1578, 	Uvn( 0, 255 ),
	1469, 	Uvn( 0, 255 ),
	1587, 	Uvn( 0, 255 ),
	1470, 	Uvn( 0, 255 ),
	1588, 	Uvn( 0, 255 ),
	1468, 	Uvn( 0, 255 ),
	1582, 	Uvn( 0, 255 ),
	1466, 	Uvn( 0, 255 ),
	1465, 	Uvn( 0, 255 ),
	1318, 	Uvn( 0, 255 ),
	1319, 	Uvn( 0, 255 ),
	1230, 	Uvn( 0, 255 ),
	1229, 	Uvn( 0, 255 ),
	1190, 	Uvn( 0, 255 ),
	1226, 	Uvn( 0, 255 ),
	1183, 	Uvn( 0, 255 ),
	1242, 	Uvn( 0, 255 ),
	1195, 	Uvn( 0, 255 ),
	1225, 	Uvn( 0, 255 ),
	1201, 	Uvn( 0, 255 ),
	1227, 	Uvn( 0, 255 ),
	1203, 	Uvn( 0, 255 ),
	1235, 	Uvn( 0, 255 ),
	1221, 	Uvn( 0, 255 ),
	StripL(3),  
	1826, 	Uvn( 0, 255 ),
	1830, 	Uvn( 0, 255 ),
	1842, 	Uvn( 0, 255 ),
	StripR(8),  
	1779, 	Uvn( 0, 255 ),
	1792, 	Uvn( 0, 255 ),
	1827, 	Uvn( 0, 255 ),
	1804, 	Uvn( 0, 255 ),
	1831, 	Uvn( 0, 255 ),
	1801, 	Uvn( 0, 255 ),
	1815, 	Uvn( 0, 255 ),
	1816, 	Uvn( 0, 255 ),
	StripL(6),  
	1872, 	Uvn( 0, 255 ),
	1861, 	Uvn( 0, 255 ),
	1870, 	Uvn( 0, 255 ),
	1869, 	Uvn( 0, 255 ),
	1880, 	Uvn( 0, 255 ),
	1876, 	Uvn( 0, 255 ),
	StripL(5),  
	1632, 	Uvn( 0, 255 ),
	1611, 	Uvn( 0, 255 ),
	1609, 	Uvn( 0, 255 ),
	1566, 	Uvn( 0, 255 ),
	1569, 	Uvn( 0, 255 ),
	StripR(11),  
	1682, 	Uvn( 0, 255 ),
	1692, 	Uvn( 0, 255 ),
	1701, 	Uvn( 0, 255 ),
	1706, 	Uvn( 0, 255 ),
	1716, 	Uvn( 0, 255 ),
	1742, 	Uvn( 0, 255 ),
	1730, 	Uvn( 0, 255 ),
	1750, 	Uvn( 0, 255 ),
	1767, 	Uvn( 0, 255 ),
	1741, 	Uvn( 0, 255 ),
	1756, 	Uvn( 0, 255 ),
	StripL(6),  
	1771, 	Uvn( 0, 255 ),
	1777, 	Uvn( 0, 255 ),
	1809, 	Uvn( 0, 255 ),
	1829, 	Uvn( 0, 255 ),
	1813, 	Uvn( 0, 255 ),
	1839, 	Uvn( 0, 255 ),
	StripR(10),  
	1599, 	Uvn( 0, 255 ),
	1598, 	Uvn( 0, 255 ),
	1543, 	Uvn( 0, 255 ),
	4199, 	Uvn( 0, 255 ),
	4197, 	Uvn( 0, 255 ),
	1911, 	Uvn( 0, 255 ),
	4195, 	Uvn( 0, 255 ),
	3354, 	Uvn( 0, 255 ),
	1909, 	Uvn( 0, 255 ),
	3351, 	Uvn( 0, 255 ),
	StripL(3),  
	1451, 	Uvn( 0, 255 ),
	1489, 	Uvn( 0, 255 ),
	1449, 	Uvn( 0, 255 ),
	StripL(13),  
	1536, 	Uvn( 0, 255 ),
	1523, 	Uvn( 0, 255 ),
	1519, 	Uvn( 0, 255 ),
	1484, 	Uvn( 0, 255 ),
	1489, 	Uvn( 0, 255 ),
	1478, 	Uvn( 0, 255 ),
	1449, 	Uvn( 0, 255 ),
	1484, 	Uvn( 0, 255 ),
	1448, 	Uvn( 0, 255 ),
	1441, 	Uvn( 0, 255 ),
	1416, 	Uvn( 0, 255 ),
	1407, 	Uvn( 0, 255 ),
	1377, 	Uvn( 0, 255 ),
	StripR(15),  
	1734, 	Uvn( 0, 255 ),
	1744, 	Uvn( 0, 255 ),
	1745, 	Uvn( 0, 255 ),
	1762, 	Uvn( 0, 255 ),
	1763, 	Uvn( 0, 255 ),
	1768, 	Uvn( 0, 255 ),
	1760, 	Uvn( 0, 255 ),
	1751, 	Uvn( 0, 255 ),
	1737, 	Uvn( 0, 255 ),
	1738, 	Uvn( 0, 255 ),
	1728, 	Uvn( 0, 255 ),
	1773, 	Uvn( 0, 255 ),
	1755, 	Uvn( 0, 255 ),
	1778, 	Uvn( 0, 255 ),
	1748, 	Uvn( 0, 255 ),
	StripL(13),  
	1723, 	Uvn( 0, 255 ),
	1726, 	Uvn( 0, 255 ),
	1702, 	Uvn( 0, 255 ),
	1696, 	Uvn( 0, 255 ),
	1669, 	Uvn( 0, 255 ),
	1663, 	Uvn( 0, 255 ),
	1621, 	Uvn( 0, 255 ),
	1622, 	Uvn( 0, 255 ),
	1568, 	Uvn( 0, 255 ),
	1591, 	Uvn( 0, 255 ),
	1535, 	Uvn( 0, 255 ),
	1550, 	Uvn( 0, 255 ),
	1532, 	Uvn( 0, 255 ),
	StripL(11),  
	1726, 	Uvn( 0, 255 ),
	1713, 	Uvn( 0, 255 ),
	1696, 	Uvn( 0, 255 ),
	1684, 	Uvn( 0, 255 ),
	1663, 	Uvn( 0, 255 ),
	1650, 	Uvn( 0, 255 ),
	1622, 	Uvn( 0, 255 ),
	1620, 	Uvn( 0, 255 ),
	1591, 	Uvn( 0, 255 ),
	1589, 	Uvn( 0, 255 ),
	1550, 	Uvn( 0, 255 ),
	StripL(6),  
	1643, 	Uvn( 0, 255 ),
	1642, 	Uvn( 0, 255 ),
	1615, 	Uvn( 0, 255 ),
	1618, 	Uvn( 0, 255 ),
	1601, 	Uvn( 0, 255 ),
	1603, 	Uvn( 0, 255 ),
	StripL(3),  
	1655, 	Uvn( 0, 255 ),
	1682, 	Uvn( 0, 255 ),
	1639, 	Uvn( 0, 255 ),
	StripL(68),  
	1731, 	Uvn( 0, 255 ),
	1761, 	Uvn( 0, 255 ),
	1715, 	Uvn( 0, 255 ),
	1708, 	Uvn( 0, 255 ),
	1646, 	Uvn( 0, 255 ),
	1636, 	Uvn( 0, 255 ),
	1572, 	Uvn( 0, 255 ),
	1574, 	Uvn( 0, 255 ),
	1458, 	Uvn( 0, 255 ),
	1459, 	Uvn( 0, 255 ),
	1326, 	Uvn( 0, 255 ),
	1325, 	Uvn( 0, 255 ),
	1207, 	Uvn( 0, 255 ),
	1210, 	Uvn( 0, 255 ),
	1112, 	Uvn( 0, 255 ),
	1118, 	Uvn( 0, 255 ),
	1065, 	Uvn( 0, 255 ),
	1071, 	Uvn( 0, 255 ),
	1061, 	Uvn( 0, 255 ),
	1087, 	Uvn( 0, 255 ),
	1081, 	Uvn( 0, 255 ),
	1086, 	Uvn( 0, 255 ),
	1051, 	Uvn( 0, 255 ),
	1037, 	Uvn( 0, 255 ),
	1021, 	Uvn( 0, 255 ),
	1045, 	Uvn( 0, 255 ),
	1022, 	Uvn( 0, 255 ),
	1026, 	Uvn( 0, 255 ),
	1018, 	Uvn( 0, 255 ),
	1024, 	Uvn( 0, 255 ),
	1020, 	Uvn( 0, 255 ),
	1031, 	Uvn( 0, 255 ),
	1030, 	Uvn( 0, 255 ),
	1039, 	Uvn( 0, 255 ),
	1028, 	Uvn( 0, 255 ),
	1035, 	Uvn( 0, 255 ),
	1036, 	Uvn( 0, 255 ),
	1072, 	Uvn( 0, 255 ),
	1043, 	Uvn( 0, 255 ),
	1074, 	Uvn( 0, 255 ),
	1070, 	Uvn( 0, 255 ),
	1058, 	Uvn( 0, 255 ),
	1055, 	Uvn( 0, 255 ),
	1076, 	Uvn( 0, 255 ),
	1066, 	Uvn( 0, 255 ),
	1097, 	Uvn( 0, 255 ),
	1102, 	Uvn( 0, 255 ),
	1125, 	Uvn( 0, 255 ),
	1116, 	Uvn( 0, 255 ),
	1124, 	Uvn( 0, 255 ),
	1105, 	Uvn( 0, 255 ),
	1113, 	Uvn( 0, 255 ),
	1109, 	Uvn( 0, 255 ),
	1136, 	Uvn( 0, 255 ),
	1134, 	Uvn( 0, 255 ),
	1157, 	Uvn( 0, 255 ),
	1175, 	Uvn( 0, 255 ),
	1174, 	Uvn( 0, 255 ),
	1187, 	Uvn( 0, 255 ),
	1204, 	Uvn( 0, 255 ),
	1216, 	Uvn( 0, 255 ),
	1237, 	Uvn( 0, 255 ),
	1250, 	Uvn( 0, 255 ),
	1278, 	Uvn( 0, 255 ),
	1280, 	Uvn( 0, 255 ),
	1309, 	Uvn( 0, 255 ),
	1311, 	Uvn( 0, 255 ),
	1350, 	Uvn( 0, 255 ),
	StripL(7),  
	1508, 	Uvn( 0, 255 ),
	1510, 	Uvn( 0, 255 ),
	1554, 	Uvn( 0, 255 ),
	1529, 	Uvn( 0, 255 ),
	1558, 	Uvn( 0, 255 ),
	1566, 	Uvn( 0, 255 ),
	1611, 	Uvn( 0, 255 ),
	StripL(3),  
	1529, 	Uvn( 0, 255 ),
	1510, 	Uvn( 0, 255 ),
	1500, 	Uvn( 0, 255 ),
	StripR(6),  
	1524, 	Uvn( 0, 255 ),
	1521, 	Uvn( 0, 255 ),
	1520, 	Uvn( 0, 255 ),
	1495, 	Uvn( 0, 255 ),
	1492, 	Uvn( 0, 255 ),
	1446, 	Uvn( 0, 255 ),
	StripR(6),  
	1589, 	Uvn( 0, 255 ),
	1542, 	Uvn( 0, 255 ),
	1563, 	Uvn( 0, 255 ),
	1530, 	Uvn( 0, 255 ),
	1584, 	Uvn( 0, 255 ),
	1567, 	Uvn( 0, 255 ),
	StripL(3),  
	1511, 	Uvn( 0, 255 ),
	1505, 	Uvn( 0, 255 ),
	1531, 	Uvn( 0, 255 ),
	StripR(5),  
	1483, 	Uvn( 0, 255 ),
	1477, 	Uvn( 0, 255 ),
	1481, 	Uvn( 0, 255 ),
	1476, 	Uvn( 0, 255 ),
	1486, 	Uvn( 0, 255 ),
	StripL(5),  
	1533, 	Uvn( 0, 255 ),
	1494, 	Uvn( 0, 255 ),
	1513, 	Uvn( 0, 255 ),
	1482, 	Uvn( 0, 255 ),
	1509, 	Uvn( 0, 255 ),
	StripR(14),  
	1641, 	Uvn( 0, 255 ),
	1694, 	Uvn( 0, 255 ),
	1666, 	Uvn( 0, 255 ),
	1711, 	Uvn( 0, 255 ),
	1676, 	Uvn( 0, 255 ),
	1720, 	Uvn( 0, 255 ),
	1689, 	Uvn( 0, 255 ),
	1719, 	Uvn( 0, 255 ),
	1685, 	Uvn( 0, 255 ),
	1686, 	Uvn( 0, 255 ),
	4230, 	Uvn( 0, 255 ),
	1654, 	Uvn( 0, 255 ),
	4209, 	Uvn( 0, 255 ),
	4213, 	Uvn( 0, 255 ),
	StripL(11),  
	1522, 	Uvn( 0, 255 ),
	1507, 	Uvn( 0, 255 ),
	1479, 	Uvn( 0, 255 ),
	1485, 	Uvn( 0, 255 ),
	1453, 	Uvn( 0, 255 ),
	1452, 	Uvn( 0, 255 ),
	1415, 	Uvn( 0, 255 ),
	1410, 	Uvn( 0, 255 ),
	1384, 	Uvn( 0, 255 ),
	1386, 	Uvn( 0, 255 ),
	1361, 	Uvn( 0, 255 ),
	StripL(4),  
	5174, 	Uvn( 0, 255 ),
	5104, 	Uvn( 0, 255 ),
	5172, 	Uvn( 0, 255 ),
	5098, 	Uvn( 0, 255 ),
	StripL(7),  
	5105, 	Uvn( 0, 255 ),
	5097, 	Uvn( 0, 255 ),
	5108, 	Uvn( 0, 255 ),
	2428, 	Uvn( 0, 255 ),
	2437, 	Uvn( 0, 255 ),
	2420, 	Uvn( 0, 255 ),
	2431, 	Uvn( 0, 255 ),
	StripR(5),  
	2580, 	Uvn( 0, 255 ),
	2583, 	Uvn( 0, 255 ),
	2589, 	Uvn( 0, 255 ),
	2590, 	Uvn( 0, 255 ),
	2594, 	Uvn( 0, 255 ),
	StripR(5),  
	5067, 	Uvn( 0, 255 ),
	5070, 	Uvn( 0, 255 ),
	2390, 	Uvn( 0, 255 ),
	2398, 	Uvn( 0, 255 ),
	2389, 	Uvn( 0, 255 ),
	StripR(8),  
	2514, 	Uvn( 0, 255 ),
	2516, 	Uvn( 0, 255 ),
	2509, 	Uvn( 0, 255 ),
	5168, 	Uvn( 0, 255 ),
	5081, 	Uvn( 0, 255 ),
	5083, 	Uvn( 0, 255 ),
	5078, 	Uvn( 0, 255 ),
	5080, 	Uvn( 0, 255 ),
	StripL(4),  
	2515, 	Uvn( 0, 255 ),
	2511, 	Uvn( 0, 255 ),
	2514, 	Uvn( 0, 255 ),
	2508, 	Uvn( 0, 255 ),
	StripR(5),  
	5052, 	Uvn( 0, 255 ),
	5051, 	Uvn( 0, 255 ),
	5055, 	Uvn( 0, 255 ),
	5054, 	Uvn( 0, 255 ),
	5056, 	Uvn( 0, 255 ),
	StripL(3),  
	5061, 	Uvn( 0, 255 ),
	2390, 	Uvn( 0, 255 ),
	5067, 	Uvn( 0, 255 ),
	StripL(8),  
	2524, 	Uvn( 0, 255 ),
	2534, 	Uvn( 0, 255 ),
	2529, 	Uvn( 0, 255 ),
	5185, 	Uvn( 0, 255 ),
	5181, 	Uvn( 0, 255 ),
	5187, 	Uvn( 0, 255 ),
	2555, 	Uvn( 0, 255 ),
	2559, 	Uvn( 0, 255 ),
	StripL(4),  
	2564, 	Uvn( 0, 255 ),
	2568, 	Uvn( 0, 255 ),
	2560, 	Uvn( 0, 255 ),
	2562, 	Uvn( 0, 255 ),
	StripL(13),  
	2563, 	Uvn( 0, 255 ),
	2566, 	Uvn( 0, 255 ),
	2573, 	Uvn( 0, 255 ),
	2591, 	Uvn( 0, 255 ),
	2586, 	Uvn( 0, 255 ),
	2587, 	Uvn( 0, 255 ),
	2571, 	Uvn( 0, 255 ),
	2575, 	Uvn( 0, 255 ),
	5194, 	Uvn( 0, 255 ),
	2565, 	Uvn( 0, 255 ),
	5193, 	Uvn( 0, 255 ),
	5187, 	Uvn( 0, 255 ),
	5185, 	Uvn( 0, 255 ),
	StripR(23),  
	2533, 	Uvn( 0, 255 ),
	2536, 	Uvn( 0, 255 ),
	5175, 	Uvn( 0, 255 ),
	5176, 	Uvn( 0, 255 ),
	2530, 	Uvn( 0, 255 ),
	2535, 	Uvn( 0, 255 ),
	2531, 	Uvn( 0, 255 ),
	5180, 	Uvn( 0, 255 ),
	5178, 	Uvn( 0, 255 ),
	5182, 	Uvn( 0, 255 ),
	5179, 	Uvn( 0, 255 ),
	2557, 	Uvn( 0, 255 ),
	2554, 	Uvn( 0, 255 ),
	2558, 	Uvn( 0, 255 ),
	2561, 	Uvn( 0, 255 ),
	2569, 	Uvn( 0, 255 ),
	2579, 	Uvn( 0, 255 ),
	2578, 	Uvn( 0, 255 ),
	2581, 	Uvn( 0, 255 ),
	2572, 	Uvn( 0, 255 ),
	2580, 	Uvn( 0, 255 ),
	2577, 	Uvn( 0, 255 ),
	2583, 	Uvn( 0, 255 ),
	StripL(5),  
	5082, 	Uvn( 0, 255 ),
	5077, 	Uvn( 0, 255 ),
	5085, 	Uvn( 0, 255 ),
	5086, 	Uvn( 0, 255 ),
	5090, 	Uvn( 0, 255 ),
	StripR(5),  
	5097, 	Uvn( 0, 255 ),
	2428, 	Uvn( 0, 255 ),
	2421, 	Uvn( 0, 255 ),
	2420, 	Uvn( 0, 255 ),
	2413, 	Uvn( 0, 255 ),
	StripR(18),  
	5087, 	Uvn( 0, 255 ),
	2422, 	Uvn( 0, 255 ),
	2429, 	Uvn( 0, 255 ),
	5093, 	Uvn( 0, 255 ),
	5100, 	Uvn( 0, 255 ),
	5103, 	Uvn( 0, 255 ),
	5110, 	Uvn( 0, 255 ),
	5113, 	Uvn( 0, 255 ),
	5196, 	Uvn( 0, 255 ),
	2542, 	Uvn( 0, 255 ),
	2544, 	Uvn( 0, 255 ),
	2547, 	Uvn( 0, 255 ),
	2549, 	Uvn( 0, 255 ),
	2551, 	Uvn( 0, 255 ),
	5219, 	Uvn( 0, 255 ),
	5224, 	Uvn( 0, 255 ),
	5229, 	Uvn( 0, 255 ),
	5238, 	Uvn( 0, 255 ),
	StripR(9),  
	2427, 	Uvn( 0, 255 ),
	2433, 	Uvn( 0, 255 ),
	5095, 	Uvn( 0, 255 ),
	2438, 	Uvn( 0, 255 ),
	5103, 	Uvn( 0, 255 ),
	5106, 	Uvn( 0, 255 ),
	5113, 	Uvn( 0, 255 ),
	5117, 	Uvn( 0, 255 ),
	2542, 	Uvn( 0, 255 ),
	StripL(15),  
	5100, 	Uvn( 0, 255 ),
	2429, 	Uvn( 0, 255 ),
	5099, 	Uvn( 0, 255 ),
	5087, 	Uvn( 0, 255 ),
	5091, 	Uvn( 0, 255 ),
	5088, 	Uvn( 0, 255 ),
	5094, 	Uvn( 0, 255 ),
	5092, 	Uvn( 0, 255 ),
	5171, 	Uvn( 0, 255 ),
	5170, 	Uvn( 0, 255 ),
	2523, 	Uvn( 0, 255 ),
	2521, 	Uvn( 0, 255 ),
	2525, 	Uvn( 0, 255 ),
	2529, 	Uvn( 0, 255 ),
	5181, 	Uvn( 0, 255 ),
	StripR(8),  
	5216, 	Uvn( 0, 255 ),
	5217, 	Uvn( 0, 255 ),
	2546, 	Uvn( 0, 255 ),
	2545, 	Uvn( 0, 255 ),
	2541, 	Uvn( 0, 255 ),
	2540, 	Uvn( 0, 255 ),
	2538, 	Uvn( 0, 255 ),
	2539, 	Uvn( 0, 255 ),
	StripR(15),  
	5222, 	Uvn( 0, 255 ),
	5225, 	Uvn( 0, 255 ),
	5228, 	Uvn( 0, 255 ),
	5232, 	Uvn( 0, 255 ),
	2629, 	Uvn( 0, 255 ),
	2632, 	Uvn( 0, 255 ),
	2634, 	Uvn( 0, 255 ),
	2639, 	Uvn( 0, 255 ),
	2653, 	Uvn( 0, 255 ),
	2648, 	Uvn( 0, 255 ),
	2650, 	Uvn( 0, 255 ),
	5279, 	Uvn( 0, 255 ),
	5280, 	Uvn( 0, 255 ),
	5242, 	Uvn( 0, 255 ),
	5243, 	Uvn( 0, 255 ),
	StripL(11),  
	5116, 	Uvn( 0, 255 ),
	5123, 	Uvn( 0, 255 ),
	5132, 	Uvn( 0, 255 ),
	5207, 	Uvn( 0, 255 ),
	5208, 	Uvn( 0, 255 ),
	5211, 	Uvn( 0, 255 ),
	5212, 	Uvn( 0, 255 ),
	5214, 	Uvn( 0, 255 ),
	5215, 	Uvn( 0, 255 ),
	5234, 	Uvn( 0, 255 ),
	5237, 	Uvn( 0, 255 ),
	StripL(6),  
	5283, 	Uvn( 0, 255 ),
	5284, 	Uvn( 0, 255 ),
	5281, 	Uvn( 0, 255 ),
	2635, 	Uvn( 0, 255 ),
	5236, 	Uvn( 0, 255 ),
	5227, 	Uvn( 0, 255 ),
	StripL(3),  
	1455, 	Uvn( 0, 255 ),
	4194, 	Uvn( 0, 255 ),
	1503, 	Uvn( 0, 255 ),
	StripR(6),  
	1674, 	Uvn( 0, 255 ),
	1717, 	Uvn( 0, 255 ),
	1710, 	Uvn( 0, 255 ),
	1749, 	Uvn( 0, 255 ),
	1759, 	Uvn( 0, 255 ),
	1790, 	Uvn( 0, 255 ),
	StripL(10),  
	1668, 	Uvn( 0, 255 ),
	1667, 	Uvn( 0, 255 ),
	1571, 	Uvn( 0, 255 ),
	1662, 	Uvn( 0, 255 ),
	1578, 	Uvn( 0, 255 ),
	1661, 	Uvn( 0, 255 ),
	1587, 	Uvn( 0, 255 ),
	1629, 	Uvn( 0, 255 ),
	1588, 	Uvn( 0, 255 ),
	1582, 	Uvn( 0, 255 ),
	StripL(12),  
	1661, 	Uvn( 0, 255 ),
	1672, 	Uvn( 0, 255 ),
	1629, 	Uvn( 0, 255 ),
	1670, 	Uvn( 0, 255 ),
	1582, 	Uvn( 0, 255 ),
	1581, 	Uvn( 0, 255 ),
	1465, 	Uvn( 0, 255 ),
	1463, 	Uvn( 0, 255 ),
	1319, 	Uvn( 0, 255 ),
	1320, 	Uvn( 0, 255 ),
	1229, 	Uvn( 0, 255 ),
	1226, 	Uvn( 0, 255 ),
	StripL(3),  
	1793, 	Uvn( 0, 255 ),
	1708, 	Uvn( 0, 255 ),
	1761, 	Uvn( 0, 255 ),
	StripL(3),  
	1772, 	Uvn( 0, 255 ),
	1771, 	Uvn( 0, 255 ),
	1809, 	Uvn( 0, 255 ),
	StripL(11),  
	1488, 	Uvn( 0, 255 ),
	1491, 	Uvn( 0, 255 ),
	1432, 	Uvn( 0, 255 ),
	1499, 	Uvn( 0, 255 ),
	1437, 	Uvn( 0, 255 ),
	1496, 	Uvn( 0, 255 ),
	1440, 	Uvn( 0, 255 ),
	1498, 	Uvn( 0, 255 ),
	1445, 	Uvn( 0, 255 ),
	1495, 	Uvn( 0, 255 ),
	1446, 	Uvn( 0, 255 ),
	StripR(10),  
	1476, 	Uvn( 0, 255 ),
	1480, 	Uvn( 0, 255 ),
	1486, 	Uvn( 0, 255 ),
	1504, 	Uvn( 0, 255 ),
	1497, 	Uvn( 0, 255 ),
	1517, 	Uvn( 0, 255 ),
	1502, 	Uvn( 0, 255 ),
	1518, 	Uvn( 0, 255 ),
	1501, 	Uvn( 0, 255 ),
	1494, 	Uvn( 0, 255 ),
	StripL(9),  
	1593, 	Uvn( 0, 255 ),
	1610, 	Uvn( 0, 255 ),
	1555, 	Uvn( 0, 255 ),
	1606, 	Uvn( 0, 255 ),
	1556, 	Uvn( 0, 255 ),
	1592, 	Uvn( 0, 255 ),
	1549, 	Uvn( 0, 255 ),
	1600, 	Uvn( 0, 255 ),
	1546, 	Uvn( 0, 255 ),
	StripL(6),  
	1528, 	Uvn( 0, 255 ),
	1547, 	Uvn( 0, 255 ),
	1549, 	Uvn( 0, 255 ),
	1548, 	Uvn( 0, 255 ),
	1556, 	Uvn( 0, 255 ),
	1555, 	Uvn( 0, 255 ),
	StripL(3),  
	1541, 	Uvn( 0, 255 ),
	1515, 	Uvn( 0, 255 ),
	1552, 	Uvn( 0, 255 ),
	StripL(9),  
	1803, 	Uvn( 0, 255 ),
	1824, 	Uvn( 0, 255 ),
	1834, 	Uvn( 0, 255 ),
	1845, 	Uvn( 0, 255 ),
	1841, 	Uvn( 0, 255 ),
	1854, 	Uvn( 0, 255 ),
	1858, 	Uvn( 0, 255 ),
	1867, 	Uvn( 0, 255 ),
	1875, 	Uvn( 0, 255 ),
	StripL(3),  
	1840, 	Uvn( 0, 255 ),
	1847, 	Uvn( 0, 255 ),
	1818, 	Uvn( 0, 255 ),
	StripL(4),  
	5251, 	Uvn( 0, 255 ),
	5250, 	Uvn( 0, 255 ),
	5253, 	Uvn( 0, 255 ),
	5233, 	Uvn( 0, 255 ),
	StripL(8),  
	2666, 	Uvn( 0, 255 ),
	5282, 	Uvn( 0, 255 ),
	5285, 	Uvn( 0, 255 ),
	5287, 	Uvn( 0, 255 ),
	2679, 	Uvn( 0, 255 ),
	2683, 	Uvn( 0, 255 ),
	2688, 	Uvn( 0, 255 ),
	2692, 	Uvn( 0, 255 ),
	StripR(7),  
	2681, 	Uvn( 0, 255 ),
	2682, 	Uvn( 0, 255 ),
	2674, 	Uvn( 0, 255 ),
	2667, 	Uvn( 0, 255 ),
	5278, 	Uvn( 0, 255 ),
	5239, 	Uvn( 0, 255 ),
	2661, 	Uvn( 0, 255 ),
	StripR(11),  
	5126, 	Uvn( 0, 255 ),
	5134, 	Uvn( 0, 255 ),
	5139, 	Uvn( 0, 255 ),
	5204, 	Uvn( 0, 255 ),
	5245, 	Uvn( 0, 255 ),
	5247, 	Uvn( 0, 255 ),
	5246, 	Uvn( 0, 255 ),
	5248, 	Uvn( 0, 255 ),
	2599, 	Uvn( 0, 255 ),
	2603, 	Uvn( 0, 255 ),
	2601, 	Uvn( 0, 255 ),
	StripL(14),  
	2676, 	Uvn( 0, 255 ),
	2671, 	Uvn( 0, 255 ),
	2672, 	Uvn( 0, 255 ),
	2666, 	Uvn( 0, 255 ),
	2669, 	Uvn( 0, 255 ),
	5285, 	Uvn( 0, 255 ),
	5286, 	Uvn( 0, 255 ),
	2680, 	Uvn( 0, 255 ),
	2672, 	Uvn( 0, 255 ),
	2687, 	Uvn( 0, 255 ),
	2694, 	Uvn( 0, 255 ),
	2688, 	Uvn( 0, 255 ),
	2693, 	Uvn( 0, 255 ),
	2692, 	Uvn( 0, 255 ),
	StripR(5),  
	2682, 	Uvn( 0, 255 ),
	2696, 	Uvn( 0, 255 ),
	2695, 	Uvn( 0, 255 ),
	2698, 	Uvn( 0, 255 ),
	2697, 	Uvn( 0, 255 ),
	StripL(5),  
	2612, 	Uvn( 0, 255 ),
	5264, 	Uvn( 0, 255 ),
	5266, 	Uvn( 0, 255 ),
	5267, 	Uvn( 0, 255 ),
	5269, 	Uvn( 0, 255 ),
	StripR(9),  
	2620, 	Uvn( 0, 255 ),
	2625, 	Uvn( 0, 255 ),
	2618, 	Uvn( 0, 255 ),
	2622, 	Uvn( 0, 255 ),
	2607, 	Uvn( 0, 255 ),
	2615, 	Uvn( 0, 255 ),
	5158, 	Uvn( 0, 255 ),
	5160, 	Uvn( 0, 255 ),
	5156, 	Uvn( 0, 255 ),
	StripL(12),  
	2454, 	Uvn( 0, 255 ),
	2464, 	Uvn( 0, 255 ),
	2451, 	Uvn( 0, 255 ),
	2463, 	Uvn( 0, 255 ),
	2446, 	Uvn( 0, 255 ),
	2467, 	Uvn( 0, 255 ),
	2459, 	Uvn( 0, 255 ),
	2465, 	Uvn( 0, 255 ),
	2452, 	Uvn( 0, 255 ),
	5120, 	Uvn( 0, 255 ),
	2445, 	Uvn( 0, 255 ),
	2457, 	Uvn( 0, 255 ),
	StripR(6),  
	2367, 	Uvn( 0, 255 ),
	2350, 	Uvn( 0, 255 ),
	2360, 	Uvn( 0, 255 ),
	2352, 	Uvn( 0, 255 ),
	5050, 	Uvn( 0, 255 ),
	2370, 	Uvn( 0, 255 ),
	StripL(3),  
	2343, 	Uvn( 0, 255 ),
	2348, 	Uvn( 0, 255 ),
	2337, 	Uvn( 0, 255 ),
	StripL(3),  
	2407, 	Uvn( 0, 255 ),
	2385, 	Uvn( 0, 255 ),
	2412, 	Uvn( 0, 255 ),
	StripR(6),  
	5047, 	Uvn( 0, 255 ),
	2388, 	Uvn( 0, 255 ),
	2396, 	Uvn( 0, 255 ),
	2416, 	Uvn( 0, 255 ),
	2414, 	Uvn( 0, 255 ),
	2447, 	Uvn( 0, 255 ),
	StripR(5),  
	5033, 	Uvn( 0, 255 ),
	2374, 	Uvn( 0, 255 ),
	2366, 	Uvn( 0, 255 ),
	2384, 	Uvn( 0, 255 ),
	2373, 	Uvn( 0, 255 ),
	StripR(5),  
	1452, 	Uvn( 0, 255 ),
	1490, 	Uvn( 0, 255 ),
	1485, 	Uvn( 0, 255 ),
	1516, 	Uvn( 0, 255 ),
	1507, 	Uvn( 0, 255 ),
	StripR(5),  
	1553, 	Uvn( 0, 255 ),
	1503, 	Uvn( 0, 255 ),
	1522, 	Uvn( 0, 255 ),
	1455, 	Uvn( 0, 255 ),
	1479, 	Uvn( 0, 255 ),
	StripL(7),  
	1872, 	Uvn( 0, 255 ),
	1865, 	Uvn( 0, 255 ),
	1861, 	Uvn( 0, 255 ),
	1851, 	Uvn( 0, 255 ),
	1869, 	Uvn( 0, 255 ),
	1859, 	Uvn( 0, 255 ),
	1876, 	Uvn( 0, 255 ),
	StripR(7),  
	1883, 	Uvn( 0, 255 ),
	1873, 	Uvn( 0, 255 ),
	1879, 	Uvn( 0, 255 ),
	1849, 	Uvn( 0, 255 ),
	1863, 	Uvn( 0, 255 ),
	1814, 	Uvn( 0, 255 ),
	1822, 	Uvn( 0, 255 ),
	StripL(3),  
	1800, 	Uvn( 0, 255 ),
	1753, 	Uvn( 0, 255 ),
	1823, 	Uvn( 0, 255 ),
	StripL(8),  
	1874, 	Uvn( 0, 255 ),
	1878, 	Uvn( 0, 255 ),
	1882, 	Uvn( 0, 255 ),
	1884, 	Uvn( 0, 255 ),
	1881, 	Uvn( 0, 255 ),
	1877, 	Uvn( 0, 255 ),
	1866, 	Uvn( 0, 255 ),
	1862, 	Uvn( 0, 255 ),
	StripL(3),  
	1754, 	Uvn( 0, 255 ),
	1775, 	Uvn( 0, 255 ),
	1758, 	Uvn( 0, 255 ),
	StripR(8),  
	1772, 	Uvn( 0, 255 ),
	1765, 	Uvn( 0, 255 ),
	1809, 	Uvn( 0, 255 ),
	1781, 	Uvn( 0, 255 ),
	1813, 	Uvn( 0, 255 ),
	1759, 	Uvn( 0, 255 ),
	1789, 	Uvn( 0, 255 ),
	1790, 	Uvn( 0, 255 ),
	StripR(6),  
	1690, 	Uvn( 0, 255 ),
	1788, 	Uvn( 0, 255 ),
	1693, 	Uvn( 0, 255 ),
	1785, 	Uvn( 0, 255 ),
	1691, 	Uvn( 0, 255 ),
	1805, 	Uvn( 0, 255 ),
	StripR(7),  
	1697, 	Uvn( 0, 255 ),
	1699, 	Uvn( 0, 255 ),
	1673, 	Uvn( 0, 255 ),
	1675, 	Uvn( 0, 255 ),
	1651, 	Uvn( 0, 255 ),
	1637, 	Uvn( 0, 255 ),
	4206, 	Uvn( 0, 255 ),
	StripR(9),  
	1516, 	Uvn( 0, 255 ),
	1537, 	Uvn( 0, 255 ),
	1507, 	Uvn( 0, 255 ),
	1534, 	Uvn( 0, 255 ),
	1522, 	Uvn( 0, 255 ),
	1559, 	Uvn( 0, 255 ),
	1553, 	Uvn( 0, 255 ),
	1597, 	Uvn( 0, 255 ),
	1599, 	Uvn( 0, 255 ),
	StripR(6),  
	1533, 	Uvn( 0, 255 ),
	1546, 	Uvn( 0, 255 ),
	1513, 	Uvn( 0, 255 ),
	1549, 	Uvn( 0, 255 ),
	1509, 	Uvn( 0, 255 ),
	1528, 	Uvn( 0, 255 ),
	StripL(4),  
	1739, 	Uvn( 0, 255 ),
	1764, 	Uvn( 0, 255 ),
	1743, 	Uvn( 0, 255 ),
	1766, 	Uvn( 0, 255 ),
	StripR(6),  
	1741, 	Uvn( 0, 255 ),
	1750, 	Uvn( 0, 255 ),
	1733, 	Uvn( 0, 255 ),
	1742, 	Uvn( 0, 255 ),
	1724, 	Uvn( 0, 255 ),
	1706, 	Uvn( 0, 255 ),
	StripR(7),  
	1612, 	Uvn( 0, 255 ),
	1649, 	Uvn( 0, 255 ),
	1613, 	Uvn( 0, 255 ),
	1648, 	Uvn( 0, 255 ),
	1638, 	Uvn( 0, 255 ),
	1657, 	Uvn( 0, 255 ),
	1653, 	Uvn( 0, 255 ),
	StripR(11),  
	1495, 	Uvn( 0, 255 ),
	1521, 	Uvn( 0, 255 ),
	1498, 	Uvn( 0, 255 ),
	1527, 	Uvn( 0, 255 ),
	1496, 	Uvn( 0, 255 ),
	1526, 	Uvn( 0, 255 ),
	1499, 	Uvn( 0, 255 ),
	1511, 	Uvn( 0, 255 ),
	1491, 	Uvn( 0, 255 ),
	1505, 	Uvn( 0, 255 ),
	1488, 	Uvn( 0, 255 ),
	StripL(9),  
	1567, 	Uvn( 0, 255 ),
	1545, 	Uvn( 0, 255 ),
	1530, 	Uvn( 0, 255 ),
	1544, 	Uvn( 0, 255 ),
	1551, 	Uvn( 0, 255 ),
	1561, 	Uvn( 0, 255 ),
	1583, 	Uvn( 0, 255 ),
	1595, 	Uvn( 0, 255 ),
	1604, 	Uvn( 0, 255 ),
	StripL(4),  
	1511, 	Uvn( 0, 255 ),
	1538, 	Uvn( 0, 255 ),
	1526, 	Uvn( 0, 255 ),
	1527, 	Uvn( 0, 255 ),
	StripL(6),  
	1537, 	Uvn( 0, 255 ),
	1534, 	Uvn( 0, 255 ),
	1562, 	Uvn( 0, 255 ),
	1559, 	Uvn( 0, 255 ),
	1596, 	Uvn( 0, 255 ),
	1597, 	Uvn( 0, 255 ),
	StripR(6),  
	1575, 	Uvn( 0, 255 ),
	1460, 	Uvn( 0, 255 ),
	1576, 	Uvn( 0, 255 ),
	1464, 	Uvn( 0, 255 ),
	1577, 	Uvn( 0, 255 ),
	1467, 	Uvn( 0, 255 ),
	StripL(16),  
	1777, 	Uvn( 0, 255 ),
	1782, 	Uvn( 0, 255 ),
	1829, 	Uvn( 0, 255 ),
	1835, 	Uvn( 0, 255 ),
	1839, 	Uvn( 0, 255 ),
	1838, 	Uvn( 0, 255 ),
	1817, 	Uvn( 0, 255 ),
	1802, 	Uvn( 0, 255 ),
	1810, 	Uvn( 0, 255 ),
	1794, 	Uvn( 0, 255 ),
	1795, 	Uvn( 0, 255 ),
	1791, 	Uvn( 0, 255 ),
	1787, 	Uvn( 0, 255 ),
	1764, 	Uvn( 0, 255 ),
	1752, 	Uvn( 0, 255 ),
	1739, 	Uvn( 0, 255 ),
	StripL(3),  
	1872, 	Uvn( 0, 255 ),
	1870, 	Uvn( 0, 255 ),
	1868, 	Uvn( 0, 255 ),
	StripR(7),  
	3533, 	Uvn( 0, 255 ),
	3537, 	Uvn( 0, 255 ),
	709, 	Uvn( 0, 255 ),
	711, 	Uvn( 0, 255 ),
	707, 	Uvn( 0, 255 ),
	3604, 	Uvn( 0, 255 ),
	3600, 	Uvn( 0, 255 ),
	StripR(5),  
	707, 	Uvn( 0, 255 ),
	706, 	Uvn( 0, 255 ),
	709, 	Uvn( 0, 255 ),
	3529, 	Uvn( 0, 255 ),
	3533, 	Uvn( 0, 255 ),
	StripR(15),  
	3511, 	Uvn( 0, 255 ),
	3507, 	Uvn( 0, 255 ),
	3503, 	Uvn( 0, 255 ),
	3500, 	Uvn( 0, 255 ),
	3494, 	Uvn( 0, 255 ),
	3496, 	Uvn( 0, 255 ),
	3486, 	Uvn( 0, 255 ),
	3487, 	Uvn( 0, 255 ),
	3468, 	Uvn( 0, 255 ),
	674, 	Uvn( 0, 255 ),
	652, 	Uvn( 0, 255 ),
	651, 	Uvn( 0, 255 ),
	646, 	Uvn( 0, 255 ),
	642, 	Uvn( 0, 255 ),
	643, 	Uvn( 0, 255 ),
	StripL(4),  
	3603, 	Uvn( 0, 255 ),
	708, 	Uvn( 0, 255 ),
	710, 	Uvn( 0, 255 ),
	3535, 	Uvn( 0, 255 ),
	StripL(3),  
	3487, 	Uvn( 0, 255 ),
	674, 	Uvn( 0, 255 ),
	3496, 	Uvn( 0, 255 ),
	StripL(3),  
	3524, 	Uvn( 0, 255 ),
	3530, 	Uvn( 0, 255 ),
	705, 	Uvn( 0, 255 ),
	StripR(5),  
	3497, 	Uvn( 0, 255 ),
	3504, 	Uvn( 0, 255 ),
	3488, 	Uvn( 0, 255 ),
	3493, 	Uvn( 0, 255 ),
	3585, 	Uvn( 0, 255 ),
	StripR(16),  
	978, 	Uvn( 0, 255 ),
	979, 	Uvn( 0, 255 ),
	3529, 	Uvn( 0, 255 ),
	3532, 	Uvn( 0, 255 ),
	3533, 	Uvn( 0, 255 ),
	3536, 	Uvn( 0, 255 ),
	3537, 	Uvn( 0, 255 ),
	3541, 	Uvn( 0, 255 ),
	3539, 	Uvn( 0, 255 ),
	3542, 	Uvn( 0, 255 ),
	3538, 	Uvn( 0, 255 ),
	2057, 	Uvn( 0, 255 ),
	2033, 	Uvn( 0, 255 ),
	2023, 	Uvn( 0, 255 ),
	1993, 	Uvn( 0, 255 ),
	1990, 	Uvn( 0, 255 ),
	StripL(3),  
	3517, 	Uvn( 0, 255 ),
	3518, 	Uvn( 0, 255 ),
	3510, 	Uvn( 0, 255 ),
	StripR(17),  
	3518, 	Uvn( 0, 255 ),
	3522, 	Uvn( 0, 255 ),
	3517, 	Uvn( 0, 255 ),
	3520, 	Uvn( 0, 255 ),
	3510, 	Uvn( 0, 255 ),
	3511, 	Uvn( 0, 255 ),
	3501, 	Uvn( 0, 255 ),
	3503, 	Uvn( 0, 255 ),
	3491, 	Uvn( 0, 255 ),
	3494, 	Uvn( 0, 255 ),
	3485, 	Uvn( 0, 255 ),
	3486, 	Uvn( 0, 255 ),
	3470, 	Uvn( 0, 255 ),
	3468, 	Uvn( 0, 255 ),
	3464, 	Uvn( 0, 255 ),
	646, 	Uvn( 0, 255 ),
	643, 	Uvn( 0, 255 ),
	StripL(5),  
	3505, 	Uvn( 0, 255 ),
	3497, 	Uvn( 0, 255 ),
	3513, 	Uvn( 0, 255 ),
	3504, 	Uvn( 0, 255 ),
	3514, 	Uvn( 0, 255 ),
	StripR(6),  
	701, 	Uvn( 0, 255 ),
	700, 	Uvn( 0, 255 ),
	702, 	Uvn( 0, 255 ),
	694, 	Uvn( 0, 255 ),
	697, 	Uvn( 0, 255 ),
	693, 	Uvn( 0, 255 ),
	StripL(4),  
	685, 	Uvn( 0, 255 ),
	681, 	Uvn( 0, 255 ),
	672, 	Uvn( 0, 255 ),
	669, 	Uvn( 0, 255 ),
	StripL(5),  
	687, 	Uvn( 0, 255 ),
	682, 	Uvn( 0, 255 ),
	683, 	Uvn( 0, 255 ),
	675, 	Uvn( 0, 255 ),
	678, 	Uvn( 0, 255 ),
	StripR(10),  
	708, 	Uvn( 0, 255 ),
	3601, 	Uvn( 0, 255 ),
	3603, 	Uvn( 0, 255 ),
	1012, 	Uvn( 0, 255 ),
	3602, 	Uvn( 0, 255 ),
	1013, 	Uvn( 0, 255 ),
	1010, 	Uvn( 0, 255 ),
	1007, 	Uvn( 0, 255 ),
	1005, 	Uvn( 0, 255 ),
	4031, 	Uvn( 0, 255 ),
	StripL(3),  
	3478, 	Uvn( 0, 255 ),
	3479, 	Uvn( 0, 255 ),
	3495, 	Uvn( 0, 255 ),
	StripR(5),  
	705, 	Uvn( 0, 255 ),
	704, 	Uvn( 0, 255 ),
	3599, 	Uvn( 0, 255 ),
	3597, 	Uvn( 0, 255 ),
	1004, 	Uvn( 0, 255 ),
	StripL(11),  
	691, 	Uvn( 0, 255 ),
	685, 	Uvn( 0, 255 ),
	3495, 	Uvn( 0, 255 ),
	672, 	Uvn( 0, 255 ),
	3478, 	Uvn( 0, 255 ),
	3469, 	Uvn( 0, 255 ),
	3479, 	Uvn( 0, 255 ),
	3472, 	Uvn( 0, 255 ),
	3475, 	Uvn( 0, 255 ),
	3459, 	Uvn( 0, 255 ),
	3467, 	Uvn( 0, 255 ),
	StripR(24),  
	3495, 	Uvn( 0, 255 ),
	3505, 	Uvn( 0, 255 ),
	3492, 	Uvn( 0, 255 ),
	3497, 	Uvn( 0, 255 ),
	3489, 	Uvn( 0, 255 ),
	3488, 	Uvn( 0, 255 ),
	3481, 	Uvn( 0, 255 ),
	3585, 	Uvn( 0, 255 ),
	3482, 	Uvn( 0, 255 ),
	3579, 	Uvn( 0, 255 ),
	3572, 	Uvn( 0, 255 ),
	3578, 	Uvn( 0, 255 ),
	3573, 	Uvn( 0, 255 ),
	3583, 	Uvn( 0, 255 ),
	3587, 	Uvn( 0, 255 ),
	3588, 	Uvn( 0, 255 ),
	3592, 	Uvn( 0, 255 ),
	1941, 	Uvn( 0, 255 ),
	3508, 	Uvn( 0, 255 ),
	1976, 	Uvn( 0, 255 ),
	2003, 	Uvn( 0, 255 ),
	1975, 	Uvn( 0, 255 ),
	1999, 	Uvn( 0, 255 ),
	1992, 	Uvn( 0, 255 ),
	StripL(4),  
	1921, 	Uvn( 0, 255 ),
	1922, 	Uvn( 0, 255 ),
	1917, 	Uvn( 0, 255 ),
	3581, 	Uvn( 0, 255 ),
	StripR(15),  
	3512, 	Uvn( 0, 255 ),
	3516, 	Uvn( 0, 255 ),
	3509, 	Uvn( 0, 255 ),
	3519, 	Uvn( 0, 255 ),
	1977, 	Uvn( 0, 255 ),
	2006, 	Uvn( 0, 255 ),
	1974, 	Uvn( 0, 255 ),
	1998, 	Uvn( 0, 255 ),
	1973, 	Uvn( 0, 255 ),
	1993, 	Uvn( 0, 255 ),
	1972, 	Uvn( 0, 255 ),
	1990, 	Uvn( 0, 255 ),
	1970, 	Uvn( 0, 255 ),
	1989, 	Uvn( 0, 255 ),
	1988, 	Uvn( 0, 255 ),
	StripL(11),  
	1964, 	Uvn( 0, 255 ),
	1946, 	Uvn( 0, 255 ),
	1959, 	Uvn( 0, 255 ),
	1944, 	Uvn( 0, 255 ),
	1960, 	Uvn( 0, 255 ),
	1943, 	Uvn( 0, 255 ),
	1967, 	Uvn( 0, 255 ),
	1940, 	Uvn( 0, 255 ),
	1975, 	Uvn( 0, 255 ),
	1941, 	Uvn( 0, 255 ),
	1976, 	Uvn( 0, 255 ),
	StripR(20),  
	2003, 	Uvn( 0, 255 ),
	3518, 	Uvn( 0, 255 ),
	3508, 	Uvn( 0, 255 ),
	3506, 	Uvn( 0, 255 ),
	3592, 	Uvn( 0, 255 ),
	3499, 	Uvn( 0, 255 ),
	3587, 	Uvn( 0, 255 ),
	3490, 	Uvn( 0, 255 ),
	3483, 	Uvn( 0, 255 ),
	3484, 	Uvn( 0, 255 ),
	3474, 	Uvn( 0, 255 ),
	3473, 	Uvn( 0, 255 ),
	3463, 	Uvn( 0, 255 ),
	3461, 	Uvn( 0, 255 ),
	3453, 	Uvn( 0, 255 ),
	3457, 	Uvn( 0, 255 ),
	3449, 	Uvn( 0, 255 ),
	643, 	Uvn( 0, 255 ),
	638, 	Uvn( 0, 255 ),
	642, 	Uvn( 0, 255 ),
	StripR(6),  
	3504, 	Uvn( 0, 255 ),
	3498, 	Uvn( 0, 255 ),
	3493, 	Uvn( 0, 255 ),
	3584, 	Uvn( 0, 255 ),
	3585, 	Uvn( 0, 255 ),
	3579, 	Uvn( 0, 255 ),
	StripR(31),  
	1993, 	Uvn( 0, 255 ),
	1998, 	Uvn( 0, 255 ),
	2033, 	Uvn( 0, 255 ),
	2042, 	Uvn( 0, 255 ),
	3538, 	Uvn( 0, 255 ),
	3534, 	Uvn( 0, 255 ),
	3539, 	Uvn( 0, 255 ),
	3535, 	Uvn( 0, 255 ),
	3537, 	Uvn( 0, 255 ),
	710, 	Uvn( 0, 255 ),
	711, 	Uvn( 0, 255 ),
	3603, 	Uvn( 0, 255 ),
	3604, 	Uvn( 0, 255 ),
	3602, 	Uvn( 0, 255 ),
	3600, 	Uvn( 0, 255 ),
	1010, 	Uvn( 0, 255 ),
	3596, 	Uvn( 0, 255 ),
	1005, 	Uvn( 0, 255 ),
	1002, 	Uvn( 0, 255 ),
	4031, 	Uvn( 0, 255 ),
	4029, 	Uvn( 0, 255 ),
	4032, 	Uvn( 0, 255 ),
	949, 	Uvn( 0, 255 ),
	966, 	Uvn( 0, 255 ),
	952, 	Uvn( 0, 255 ),
	962, 	Uvn( 0, 255 ),
	3369, 	Uvn( 0, 255 ),
	3377, 	Uvn( 0, 255 ),
	3367, 	Uvn( 0, 255 ),
	3371, 	Uvn( 0, 255 ),
	2232, 	Uvn( 0, 255 ),
	StripL(6),  
	2042, 	Uvn( 0, 255 ),
	3534, 	Uvn( 0, 255 ),
	3527, 	Uvn( 0, 255 ),
	3530, 	Uvn( 0, 255 ),
	3525, 	Uvn( 0, 255 ),
	3524, 	Uvn( 0, 255 ),
	StripL(7),  
	1840, 	Uvn( 0, 255 ),
	1821, 	Uvn( 0, 255 ),
	1847, 	Uvn( 0, 255 ),
	1837, 	Uvn( 0, 255 ),
	1859, 	Uvn( 0, 255 ),
	1848, 	Uvn( 0, 255 ),
	1876, 	Uvn( 0, 255 ),
	StripL(3),  
	1857, 	Uvn( 0, 255 ),
	1828, 	Uvn( 0, 255 ),
	1864, 	Uvn( 0, 255 ),
	StripR(5),  
	1728, 	Uvn( 0, 255 ),
	1755, 	Uvn( 0, 255 ),
	1709, 	Uvn( 0, 255 ),
	1748, 	Uvn( 0, 255 ),
	1714, 	Uvn( 0, 255 ),
	StripL(3),  
	1803, 	Uvn( 0, 255 ),
	1798, 	Uvn( 0, 255 ),
	1775, 	Uvn( 0, 255 ),
	StripL(12),  
	2073, 	Uvn( 0, 255 ),
	4233, 	Uvn( 0, 255 ),
	4234, 	Uvn( 0, 255 ),
	4232, 	Uvn( 0, 255 ),
	1939, 	Uvn( 0, 255 ),
	1929, 	Uvn( 0, 255 ),
	1936, 	Uvn( 0, 255 ),
	1926, 	Uvn( 0, 255 ),
	1933, 	Uvn( 0, 255 ),
	1928, 	Uvn( 0, 255 ),
	1937, 	Uvn( 0, 255 ),
	1932, 	Uvn( 0, 255 ),
	StripR(24),  
	2088, 	Uvn( 0, 255 ),
	2090, 	Uvn( 0, 255 ),
	2076, 	Uvn( 0, 255 ),
	4240, 	Uvn( 0, 255 ),
	2079, 	Uvn( 0, 255 ),
	4239, 	Uvn( 0, 255 ),
	4237, 	Uvn( 0, 255 ),
	1957, 	Uvn( 0, 255 ),
	4234, 	Uvn( 0, 255 ),
	1953, 	Uvn( 0, 255 ),
	1939, 	Uvn( 0, 255 ),
	1952, 	Uvn( 0, 255 ),
	1936, 	Uvn( 0, 255 ),
	1949, 	Uvn( 0, 255 ),
	1933, 	Uvn( 0, 255 ),
	1950, 	Uvn( 0, 255 ),
	1937, 	Uvn( 0, 255 ),
	1951, 	Uvn( 0, 255 ),
	1932, 	Uvn( 0, 255 ),
	1931, 	Uvn( 0, 255 ),
	1924, 	Uvn( 0, 255 ),
	1923, 	Uvn( 0, 255 ),
	1930, 	Uvn( 0, 255 ),
	1927, 	Uvn( 0, 255 ),
	StripL(18),  
	4242, 	Uvn( 0, 255 ),
	1966, 	Uvn( 0, 255 ),
	1981, 	Uvn( 0, 255 ),
	1983, 	Uvn( 0, 255 ),
	1997, 	Uvn( 0, 255 ),
	1996, 	Uvn( 0, 255 ),
	2015, 	Uvn( 0, 255 ),
	2019, 	Uvn( 0, 255 ),
	2036, 	Uvn( 0, 255 ),
	2040, 	Uvn( 0, 255 ),
	2046, 	Uvn( 0, 255 ),
	2054, 	Uvn( 0, 255 ),
	2051, 	Uvn( 0, 255 ),
	2058, 	Uvn( 0, 255 ),
	2056, 	Uvn( 0, 255 ),
	2062, 	Uvn( 0, 255 ),
	2060, 	Uvn( 0, 255 ),
	2065, 	Uvn( 0, 255 ),
	StripL(3),  
	2086, 	Uvn( 0, 255 ),
	4268, 	Uvn( 0, 255 ),
	2083, 	Uvn( 0, 255 ),
	StripR(6),  
	696, 	Uvn( 0, 255 ),
	692, 	Uvn( 0, 255 ),
	3589, 	Uvn( 0, 255 ),
	687, 	Uvn( 0, 255 ),
	686, 	Uvn( 0, 255 ),
	682, 	Uvn( 0, 255 ),
	StripL(12),  
	1004, 	Uvn( 0, 255 ),
	1001, 	Uvn( 0, 255 ),
	3597, 	Uvn( 0, 255 ),
	696, 	Uvn( 0, 255 ),
	697, 	Uvn( 0, 255 ),
	692, 	Uvn( 0, 255 ),
	693, 	Uvn( 0, 255 ),
	687, 	Uvn( 0, 255 ),
	688, 	Uvn( 0, 255 ),
	683, 	Uvn( 0, 255 ),
	684, 	Uvn( 0, 255 ),
	678, 	Uvn( 0, 255 ),
	StripL(4),  
	4027, 	Uvn( 0, 255 ),
	4021, 	Uvn( 0, 255 ),
	999, 	Uvn( 0, 255 ),
	998, 	Uvn( 0, 255 ),
	StripL(9),  
	3575, 	Uvn( 0, 255 ),
	4025, 	Uvn( 0, 255 ),
	3582, 	Uvn( 0, 255 ),
	1000, 	Uvn( 0, 255 ),
	3591, 	Uvn( 0, 255 ),
	3595, 	Uvn( 0, 255 ),
	3594, 	Uvn( 0, 255 ),
	3596, 	Uvn( 0, 255 ),
	3598, 	Uvn( 0, 255 ),
	StripR(11),  
	3586, 	Uvn( 0, 255 ),
	3571, 	Uvn( 0, 255 ),
	997, 	Uvn( 0, 255 ),
	3562, 	Uvn( 0, 255 ),
	996, 	Uvn( 0, 255 ),
	3559, 	Uvn( 0, 255 ),
	993, 	Uvn( 0, 255 ),
	645, 	Uvn( 0, 255 ),
	3551, 	Uvn( 0, 255 ),
	644, 	Uvn( 0, 255 ),
	639, 	Uvn( 0, 255 ),
	StripL(4),  
	3596, 	Uvn( 0, 255 ),
	3595, 	Uvn( 0, 255 ),
	1002, 	Uvn( 0, 255 ),
	1000, 	Uvn( 0, 255 ),
	StripL(4),  
	932, 	Uvn( 0, 255 ),
	936, 	Uvn( 0, 255 ),
	937, 	Uvn( 0, 255 ),
	940, 	Uvn( 0, 255 ),
	StripL(3),  
	3623, 	Uvn( 0, 255 ),
	968, 	Uvn( 0, 255 ),
	973, 	Uvn( 0, 255 ),
	StripL(6),  
	4024, 	Uvn( 0, 255 ),
	939, 	Uvn( 0, 255 ),
	4028, 	Uvn( 0, 255 ),
	942, 	Uvn( 0, 255 ),
	4029, 	Uvn( 0, 255 ),
	949, 	Uvn( 0, 255 ),
	StripR(5),  
	974, 	Uvn( 0, 255 ),
	972, 	Uvn( 0, 255 ),
	973, 	Uvn( 0, 255 ),
	967, 	Uvn( 0, 255 ),
	968, 	Uvn( 0, 255 ),
	StripL(4),  
	961, 	Uvn( 0, 255 ),
	964, 	Uvn( 0, 255 ),
	3622, 	Uvn( 0, 255 ),
	969, 	Uvn( 0, 255 ),
	StripR(17),  
	971, 	Uvn( 0, 255 ),
	4034, 	Uvn( 0, 255 ),
	974, 	Uvn( 0, 255 ),
	4036, 	Uvn( 0, 255 ),
	972, 	Uvn( 0, 255 ),
	4035, 	Uvn( 0, 255 ),
	967, 	Uvn( 0, 255 ),
	1009, 	Uvn( 0, 255 ),
	951, 	Uvn( 0, 255 ),
	4030, 	Uvn( 0, 255 ),
	4026, 	Uvn( 0, 255 ),
	4027, 	Uvn( 0, 255 ),
	931, 	Uvn( 0, 255 ),
	4021, 	Uvn( 0, 255 ),
	4017, 	Uvn( 0, 255 ),
	995, 	Uvn( 0, 255 ),
	990, 	Uvn( 0, 255 ),
	StripR(6),  
	4032, 	Uvn( 0, 255 ),
	970, 	Uvn( 0, 255 ),
	966, 	Uvn( 0, 255 ),
	3383, 	Uvn( 0, 255 ),
	962, 	Uvn( 0, 255 ),
	3377, 	Uvn( 0, 255 ),
	StripL(4),  
	955, 	Uvn( 0, 255 ),
	958, 	Uvn( 0, 255 ),
	956, 	Uvn( 0, 255 ),
	957, 	Uvn( 0, 255 ),
	StripR(7),  
	946, 	Uvn( 0, 255 ),
	941, 	Uvn( 0, 255 ),
	948, 	Uvn( 0, 255 ),
	945, 	Uvn( 0, 255 ),
	953, 	Uvn( 0, 255 ),
	947, 	Uvn( 0, 255 ),
	954, 	Uvn( 0, 255 ),
	StripL(13),  
	961, 	Uvn( 0, 255 ),
	950, 	Uvn( 0, 255 ),
	964, 	Uvn( 0, 255 ),
	957, 	Uvn( 0, 255 ),
	959, 	Uvn( 0, 255 ),
	958, 	Uvn( 0, 255 ),
	954, 	Uvn( 0, 255 ),
	955, 	Uvn( 0, 255 ),
	947, 	Uvn( 0, 255 ),
	956, 	Uvn( 0, 255 ),
	945, 	Uvn( 0, 255 ),
	957, 	Uvn( 0, 255 ),
	950, 	Uvn( 0, 255 ),
	StripR(7),  
	954, 	Uvn( 0, 255 ),
	959, 	Uvn( 0, 255 ),
	953, 	Uvn( 0, 255 ),
	964, 	Uvn( 0, 255 ),
	963, 	Uvn( 0, 255 ),
	969, 	Uvn( 0, 255 ),
	965, 	Uvn( 0, 255 ),
	StripR(34),  
	2051, 	Uvn( 0, 255 ),
	2046, 	Uvn( 0, 255 ),
	2043, 	Uvn( 0, 255 ),
	2041, 	Uvn( 0, 255 ),
	2038, 	Uvn( 0, 255 ),
	2039, 	Uvn( 0, 255 ),
	2031, 	Uvn( 0, 255 ),
	2037, 	Uvn( 0, 255 ),
	2029, 	Uvn( 0, 255 ),
	2032, 	Uvn( 0, 255 ),
	2026, 	Uvn( 0, 255 ),
	4264, 	Uvn( 0, 255 ),
	4261, 	Uvn( 0, 255 ),
	4265, 	Uvn( 0, 255 ),
	4262, 	Uvn( 0, 255 ),
	2140, 	Uvn( 0, 255 ),
	2135, 	Uvn( 0, 255 ),
	2146, 	Uvn( 0, 255 ),
	2144, 	Uvn( 0, 255 ),
	2149, 	Uvn( 0, 255 ),
	2148, 	Uvn( 0, 255 ),
	2147, 	Uvn( 0, 255 ),
	2145, 	Uvn( 0, 255 ),
	2141, 	Uvn( 0, 255 ),
	2138, 	Uvn( 0, 255 ),
	4352, 	Uvn( 0, 255 ),
	4351, 	Uvn( 0, 255 ),
	4341, 	Uvn( 0, 255 ),
	4335, 	Uvn( 0, 255 ),
	4328, 	Uvn( 0, 255 ),
	4325, 	Uvn( 0, 255 ),
	4323, 	Uvn( 0, 255 ),
	4317, 	Uvn( 0, 255 ),
	4310, 	Uvn( 0, 255 ),
	StripL(18),  
	1962, 	Uvn( 0, 255 ),
	1965, 	Uvn( 0, 255 ),
	1979, 	Uvn( 0, 255 ),
	1978, 	Uvn( 0, 255 ),
	2002, 	Uvn( 0, 255 ),
	2004, 	Uvn( 0, 255 ),
	2034, 	Uvn( 0, 255 ),
	2010, 	Uvn( 0, 255 ),
	2045, 	Uvn( 0, 255 ),
	2017, 	Uvn( 0, 255 ),
	2047, 	Uvn( 0, 255 ),
	2024, 	Uvn( 0, 255 ),
	2050, 	Uvn( 0, 255 ),
	2035, 	Uvn( 0, 255 ),
	2052, 	Uvn( 0, 255 ),
	3526, 	Uvn( 0, 255 ),
	3531, 	Uvn( 0, 255 ),
	3528, 	Uvn( 0, 255 ),
	StripL(18),  
	1965, 	Uvn( 0, 255 ),
	1963, 	Uvn( 0, 255 ),
	1978, 	Uvn( 0, 255 ),
	1980, 	Uvn( 0, 255 ),
	2004, 	Uvn( 0, 255 ),
	1985, 	Uvn( 0, 255 ),
	2010, 	Uvn( 0, 255 ),
	1991, 	Uvn( 0, 255 ),
	2017, 	Uvn( 0, 255 ),
	1992, 	Uvn( 0, 255 ),
	2024, 	Uvn( 0, 255 ),
	1999, 	Uvn( 0, 255 ),
	2035, 	Uvn( 0, 255 ),
	2003, 	Uvn( 0, 255 ),
	3526, 	Uvn( 0, 255 ),
	3518, 	Uvn( 0, 255 ),
	3528, 	Uvn( 0, 255 ),
	3522, 	Uvn( 0, 255 ),
	StripL(3),  
	1924, 	Uvn( 0, 255 ),
	1932, 	Uvn( 0, 255 ),
	1928, 	Uvn( 0, 255 ),
	StripL(18),  
	1961, 	Uvn( 0, 255 ),
	1962, 	Uvn( 0, 255 ),
	1984, 	Uvn( 0, 255 ),
	1979, 	Uvn( 0, 255 ),
	2000, 	Uvn( 0, 255 ),
	2002, 	Uvn( 0, 255 ),
	2021, 	Uvn( 0, 255 ),
	2034, 	Uvn( 0, 255 ),
	2048, 	Uvn( 0, 255 ),
	2045, 	Uvn( 0, 255 ),
	2055, 	Uvn( 0, 255 ),
	2047, 	Uvn( 0, 255 ),
	2059, 	Uvn( 0, 255 ),
	2050, 	Uvn( 0, 255 ),
	2061, 	Uvn( 0, 255 ),
	2052, 	Uvn( 0, 255 ),
	2064, 	Uvn( 0, 255 ),
	3531, 	Uvn( 0, 255 ),
	StripR(22),  
	1997, 	Uvn( 0, 255 ),
	1981, 	Uvn( 0, 255 ),
	1995, 	Uvn( 0, 255 ),
	1982, 	Uvn( 0, 255 ),
	1994, 	Uvn( 0, 255 ),
	4248, 	Uvn( 0, 255 ),
	4251, 	Uvn( 0, 255 ),
	4250, 	Uvn( 0, 255 ),
	4254, 	Uvn( 0, 255 ),
	2114, 	Uvn( 0, 255 ),
	2121, 	Uvn( 0, 255 ),
	2112, 	Uvn( 0, 255 ),
	2122, 	Uvn( 0, 255 ),
	2111, 	Uvn( 0, 255 ),
	2120, 	Uvn( 0, 255 ),
	2110, 	Uvn( 0, 255 ),
	2119, 	Uvn( 0, 255 ),
	4301, 	Uvn( 0, 255 ),
	4315, 	Uvn( 0, 255 ),
	4299, 	Uvn( 0, 255 ),
	4309, 	Uvn( 0, 255 ),
	4311, 	Uvn( 0, 255 ),
	StripL(18),  
	1966, 	Uvn( 0, 255 ),
	1961, 	Uvn( 0, 255 ),
	1983, 	Uvn( 0, 255 ),
	1984, 	Uvn( 0, 255 ),
	1996, 	Uvn( 0, 255 ),
	2000, 	Uvn( 0, 255 ),
	2019, 	Uvn( 0, 255 ),
	2021, 	Uvn( 0, 255 ),
	2040, 	Uvn( 0, 255 ),
	2048, 	Uvn( 0, 255 ),
	2054, 	Uvn( 0, 255 ),
	2055, 	Uvn( 0, 255 ),
	2058, 	Uvn( 0, 255 ),
	2059, 	Uvn( 0, 255 ),
	2062, 	Uvn( 0, 255 ),
	2061, 	Uvn( 0, 255 ),
	2065, 	Uvn( 0, 255 ),
	2064, 	Uvn( 0, 255 ),
	StripR(29),  
	1970, 	Uvn( 0, 255 ),
	1988, 	Uvn( 0, 255 ),
	1971, 	Uvn( 0, 255 ),
	1986, 	Uvn( 0, 255 ),
	1968, 	Uvn( 0, 255 ),
	1987, 	Uvn( 0, 255 ),
	1969, 	Uvn( 0, 255 ),
	4246, 	Uvn( 0, 255 ),
	4244, 	Uvn( 0, 255 ),
	4247, 	Uvn( 0, 255 ),
	4245, 	Uvn( 0, 255 ),
	4249, 	Uvn( 0, 255 ),
	2104, 	Uvn( 0, 255 ),
	2113, 	Uvn( 0, 255 ),
	2105, 	Uvn( 0, 255 ),
	2115, 	Uvn( 0, 255 ),
	2106, 	Uvn( 0, 255 ),
	2116, 	Uvn( 0, 255 ),
	2107, 	Uvn( 0, 255 ),
	2118, 	Uvn( 0, 255 ),
	2108, 	Uvn( 0, 255 ),
	2117, 	Uvn( 0, 255 ),
	2109, 	Uvn( 0, 255 ),
	4316, 	Uvn( 0, 255 ),
	4298, 	Uvn( 0, 255 ),
	4313, 	Uvn( 0, 255 ),
	4297, 	Uvn( 0, 255 ),
	4307, 	Uvn( 0, 255 ),
	4296, 	Uvn( 0, 255 ),
	StripR(8),  
	2195, 	Uvn( 0, 255 ),
	2197, 	Uvn( 0, 255 ),
	2202, 	Uvn( 0, 255 ),
	2199, 	Uvn( 0, 255 ),
	2203, 	Uvn( 0, 255 ),
	2201, 	Uvn( 0, 255 ),
	2205, 	Uvn( 0, 255 ),
	2209, 	Uvn( 0, 255 ),
	StripL(4),  
	2202, 	Uvn( 0, 255 ),
	2195, 	Uvn( 0, 255 ),
	2196, 	Uvn( 0, 255 ),
	2180, 	Uvn( 0, 255 ),
	StripL(9),  
	4300, 	Uvn( 0, 255 ),
	4303, 	Uvn( 0, 255 ),
	4306, 	Uvn( 0, 255 ),
	2176, 	Uvn( 0, 255 ),
	4312, 	Uvn( 0, 255 ),
	2183, 	Uvn( 0, 255 ),
	4319, 	Uvn( 0, 255 ),
	2193, 	Uvn( 0, 255 ),
	4334, 	Uvn( 0, 255 ),
	StripL(5),  
	4724, 	Uvn( 0, 255 ),
	4707, 	Uvn( 0, 255 ),
	4710, 	Uvn( 0, 255 ),
	4699, 	Uvn( 0, 255 ),
	4704, 	Uvn( 0, 255 ),
	StripL(3),  
	4702, 	Uvn( 0, 255 ),
	4701, 	Uvn( 0, 255 ),
	4677, 	Uvn( 0, 255 ),
	StripR(5),  
	4674, 	Uvn( 0, 255 ),
	4675, 	Uvn( 0, 255 ),
	4673, 	Uvn( 0, 255 ),
	4682, 	Uvn( 0, 255 ),
	4683, 	Uvn( 0, 255 ),
	StripL(15),  
	4687, 	Uvn( 0, 255 ),
	4658, 	Uvn( 0, 255 ),
	4686, 	Uvn( 0, 255 ),
	4667, 	Uvn( 0, 255 ),
	4660, 	Uvn( 0, 255 ),
	4639, 	Uvn( 0, 255 ),
	4641, 	Uvn( 0, 255 ),
	4650, 	Uvn( 0, 255 ),
	4644, 	Uvn( 0, 255 ),
	4652, 	Uvn( 0, 255 ),
	4643, 	Uvn( 0, 255 ),
	4665, 	Uvn( 0, 255 ),
	4646, 	Uvn( 0, 255 ),
	4669, 	Uvn( 0, 255 ),
	4678, 	Uvn( 0, 255 ),
	StripR(14),  
	4645, 	Uvn( 0, 255 ),
	4622, 	Uvn( 0, 255 ),
	4661, 	Uvn( 0, 255 ),
	4626, 	Uvn( 0, 255 ),
	4670, 	Uvn( 0, 255 ),
	4664, 	Uvn( 0, 255 ),
	4679, 	Uvn( 0, 255 ),
	4651, 	Uvn( 0, 255 ),
	4662, 	Uvn( 0, 255 ),
	4632, 	Uvn( 0, 255 ),
	4633, 	Uvn( 0, 255 ),
	4619, 	Uvn( 0, 255 ),
	4615, 	Uvn( 0, 255 ),
	4612, 	Uvn( 0, 255 ),
	StripR(5),  
	4619, 	Uvn( 0, 255 ),
	4632, 	Uvn( 0, 255 ),
	4626, 	Uvn( 0, 255 ),
	4651, 	Uvn( 0, 255 ),
	4664, 	Uvn( 0, 255 ),
	StripL(9),  
	4589, 	Uvn( 0, 255 ),
	4571, 	Uvn( 0, 255 ),
	4568, 	Uvn( 0, 255 ),
	4594, 	Uvn( 0, 255 ),
	4577, 	Uvn( 0, 255 ),
	4614, 	Uvn( 0, 255 ),
	4607, 	Uvn( 0, 255 ),
	4625, 	Uvn( 0, 255 ),
	4603, 	Uvn( 0, 255 ),
	StripR(8),  
	4525, 	Uvn( 0, 255 ),
	4554, 	Uvn( 0, 255 ),
	4533, 	Uvn( 0, 255 ),
	4557, 	Uvn( 0, 255 ),
	4541, 	Uvn( 0, 255 ),
	4569, 	Uvn( 0, 255 ),
	4549, 	Uvn( 0, 255 ),
	4551, 	Uvn( 0, 255 ),
	StripL(3),  
	4584, 	Uvn( 0, 255 ),
	4569, 	Uvn( 0, 255 ),
	4551, 	Uvn( 0, 255 ),
	StripL(6),  
	4532, 	Uvn( 0, 255 ),
	4507, 	Uvn( 0, 255 ),
	4516, 	Uvn( 0, 255 ),
	4524, 	Uvn( 0, 255 ),
	4528, 	Uvn( 0, 255 ),
	4550, 	Uvn( 0, 255 ),
	StripL(5),  
	4465, 	Uvn( 0, 255 ),
	4489, 	Uvn( 0, 255 ),
	4464, 	Uvn( 0, 255 ),
	4490, 	Uvn( 0, 255 ),
	4494, 	Uvn( 0, 255 ),
	StripR(12),  
	4480, 	Uvn( 0, 255 ),
	4474, 	Uvn( 0, 255 ),
	4491, 	Uvn( 0, 255 ),
	4503, 	Uvn( 0, 255 ),
	4495, 	Uvn( 0, 255 ),
	4511, 	Uvn( 0, 255 ),
	4496, 	Uvn( 0, 255 ),
	4523, 	Uvn( 0, 255 ),
	4499, 	Uvn( 0, 255 ),
	4534, 	Uvn( 0, 255 ),
	4510, 	Uvn( 0, 255 ),
	4530, 	Uvn( 0, 255 ),
	StripL(3),  
	4519, 	Uvn( 0, 255 ),
	4506, 	Uvn( 0, 255 ),
	4504, 	Uvn( 0, 255 ),
	StripL(3),  
	4479, 	Uvn( 0, 255 ),
	4478, 	Uvn( 0, 255 ),
	4461, 	Uvn( 0, 255 ),
	StripL(6),  
	4455, 	Uvn( 0, 255 ),
	4456, 	Uvn( 0, 255 ),
	4459, 	Uvn( 0, 255 ),
	4470, 	Uvn( 0, 255 ),
	4472, 	Uvn( 0, 255 ),
	4485, 	Uvn( 0, 255 ),
	StripL(7),  
	4460, 	Uvn( 0, 255 ),
	4450, 	Uvn( 0, 255 ),
	4462, 	Uvn( 0, 255 ),
	4441, 	Uvn( 0, 255 ),
	4467, 	Uvn( 0, 255 ),
	4451, 	Uvn( 0, 255 ),
	4458, 	Uvn( 0, 255 ),
	StripL(19),  
	4395, 	Uvn( 0, 255 ),
	4425, 	Uvn( 0, 255 ),
	4392, 	Uvn( 0, 255 ),
	4415, 	Uvn( 0, 255 ),
	4393, 	Uvn( 0, 255 ),
	4413, 	Uvn( 0, 255 ),
	4394, 	Uvn( 0, 255 ),
	4414, 	Uvn( 0, 255 ),
	4398, 	Uvn( 0, 255 ),
	4420, 	Uvn( 0, 255 ),
	4403, 	Uvn( 0, 255 ),
	4435, 	Uvn( 0, 255 ),
	4404, 	Uvn( 0, 255 ),
	4442, 	Uvn( 0, 255 ),
	4433, 	Uvn( 0, 255 ),
	4443, 	Uvn( 0, 255 ),
	4424, 	Uvn( 0, 255 ),
	4427, 	Uvn( 0, 255 ),
	4407, 	Uvn( 0, 255 ),
	StripL(4),  
	4407, 	Uvn( 0, 255 ),
	4404, 	Uvn( 0, 255 ),
	4424, 	Uvn( 0, 255 ),
	4433, 	Uvn( 0, 255 ),
	StripR(12),  
	4410, 	Uvn( 0, 255 ),
	4396, 	Uvn( 0, 255 ),
	4391, 	Uvn( 0, 255 ),
	4385, 	Uvn( 0, 255 ),
	4381, 	Uvn( 0, 255 ),
	4369, 	Uvn( 0, 255 ),
	4377, 	Uvn( 0, 255 ),
	4364, 	Uvn( 0, 255 ),
	4376, 	Uvn( 0, 255 ),
	4363, 	Uvn( 0, 255 ),
	4378, 	Uvn( 0, 255 ),
	4370, 	Uvn( 0, 255 ),
	StripL(9),  
	4359, 	Uvn( 0, 255 ),
	4355, 	Uvn( 0, 255 ),
	4372, 	Uvn( 0, 255 ),
	4356, 	Uvn( 0, 255 ),
	4373, 	Uvn( 0, 255 ),
	4361, 	Uvn( 0, 255 ),
	4370, 	Uvn( 0, 255 ),
	4362, 	Uvn( 0, 255 ),
	4363, 	Uvn( 0, 255 ),
	StripL(24),  
	4355, 	Uvn( 0, 255 ),
	4360, 	Uvn( 0, 255 ),
	4356, 	Uvn( 0, 255 ),
	4365, 	Uvn( 0, 255 ),
	4361, 	Uvn( 0, 255 ),
	4366, 	Uvn( 0, 255 ),
	4362, 	Uvn( 0, 255 ),
	4367, 	Uvn( 0, 255 ),
	4363, 	Uvn( 0, 255 ),
	4368, 	Uvn( 0, 255 ),
	4364, 	Uvn( 0, 255 ),
	4371, 	Uvn( 0, 255 ),
	4369, 	Uvn( 0, 255 ),
	4375, 	Uvn( 0, 255 ),
	4385, 	Uvn( 0, 255 ),
	4404, 	Uvn( 0, 255 ),
	4396, 	Uvn( 0, 255 ),
	4407, 	Uvn( 0, 255 ),
	4410, 	Uvn( 0, 255 ),
	4427, 	Uvn( 0, 255 ),
	4406, 	Uvn( 0, 255 ),
	4422, 	Uvn( 0, 255 ),
	4405, 	Uvn( 0, 255 ),
	4421, 	Uvn( 0, 255 ),
	StripL(8),  
	4453, 	Uvn( 0, 255 ),
	4448, 	Uvn( 0, 255 ),
	4423, 	Uvn( 0, 255 ),
	4432, 	Uvn( 0, 255 ),
	4411, 	Uvn( 0, 255 ),
	4412, 	Uvn( 0, 255 ),
	4386, 	Uvn( 0, 255 ),
	4389, 	Uvn( 0, 255 ),
	StripR(15),  
	4457, 	Uvn( 0, 255 ),
	4456, 	Uvn( 0, 255 ),
	4471, 	Uvn( 0, 255 ),
	4470, 	Uvn( 0, 255 ),
	4488, 	Uvn( 0, 255 ),
	4485, 	Uvn( 0, 255 ),
	4514, 	Uvn( 0, 255 ),
	4504, 	Uvn( 0, 255 ),
	4526, 	Uvn( 0, 255 ),
	4522, 	Uvn( 0, 255 ),
	4529, 	Uvn( 0, 255 ),
	4505, 	Uvn( 0, 255 ),
	4527, 	Uvn( 0, 255 ),
	4492, 	Uvn( 0, 255 ),
	4517, 	Uvn( 0, 255 ),
	StripR(9),  
	4476, 	Uvn( 0, 255 ),
	4492, 	Uvn( 0, 255 ),
	4478, 	Uvn( 0, 255 ),
	4505, 	Uvn( 0, 255 ),
	4479, 	Uvn( 0, 255 ),
	4500, 	Uvn( 0, 255 ),
	4519, 	Uvn( 0, 255 ),
	4522, 	Uvn( 0, 255 ),
	4504, 	Uvn( 0, 255 ),
	StripR(5),  
	4540, 	Uvn( 0, 255 ),
	4548, 	Uvn( 0, 255 ),
	4556, 	Uvn( 0, 255 ),
	4561, 	Uvn( 0, 255 ),
	4579, 	Uvn( 0, 255 ),
	StripR(11),  
	4537, 	Uvn( 0, 255 ),
	4551, 	Uvn( 0, 255 ),
	4553, 	Uvn( 0, 255 ),
	4584, 	Uvn( 0, 255 ),
	4580, 	Uvn( 0, 255 ),
	4595, 	Uvn( 0, 255 ),
	4592, 	Uvn( 0, 255 ),
	4581, 	Uvn( 0, 255 ),
	4582, 	Uvn( 0, 255 ),
	4559, 	Uvn( 0, 255 ),
	4553, 	Uvn( 0, 255 ),
	StripR(7),  
	4569, 	Uvn( 0, 255 ),
	4601, 	Uvn( 0, 255 ),
	4584, 	Uvn( 0, 255 ),
	4604, 	Uvn( 0, 255 ),
	4595, 	Uvn( 0, 255 ),
	4598, 	Uvn( 0, 255 ),
	4581, 	Uvn( 0, 255 ),
	StripL(7),  
	4573, 	Uvn( 0, 255 ),
	4590, 	Uvn( 0, 255 ),
	4567, 	Uvn( 0, 255 ),
	4570, 	Uvn( 0, 255 ),
	4542, 	Uvn( 0, 255 ),
	4547, 	Uvn( 0, 255 ),
	4521, 	Uvn( 0, 255 ),
	StripR(5),  
	4539, 	Uvn( 0, 255 ),
	4563, 	Uvn( 0, 255 ),
	4560, 	Uvn( 0, 255 ),
	4564, 	Uvn( 0, 255 ),
	4576, 	Uvn( 0, 255 ),
	StripR(5),  
	4622, 	Uvn( 0, 255 ),
	4597, 	Uvn( 0, 255 ),
	4626, 	Uvn( 0, 255 ),
	4612, 	Uvn( 0, 255 ),
	4619, 	Uvn( 0, 255 ),
	StripR(8),  
	4679, 	Uvn( 0, 255 ),
	4681, 	Uvn( 0, 255 ),
	4670, 	Uvn( 0, 255 ),
	4680, 	Uvn( 0, 255 ),
	4661, 	Uvn( 0, 255 ),
	4666, 	Uvn( 0, 255 ),
	4645, 	Uvn( 0, 255 ),
	4649, 	Uvn( 0, 255 ),
	StripL(3),  
	4657, 	Uvn( 0, 255 ),
	4640, 	Uvn( 0, 255 ),
	4623, 	Uvn( 0, 255 ),
	StripL(3),  
	4695, 	Uvn( 0, 255 ),
	4694, 	Uvn( 0, 255 ),
	4659, 	Uvn( 0, 255 ),
	StripL(9),  
	4690, 	Uvn( 0, 255 ),
	4648, 	Uvn( 0, 255 ),
	4694, 	Uvn( 0, 255 ),
	4647, 	Uvn( 0, 255 ),
	4659, 	Uvn( 0, 255 ),
	4642, 	Uvn( 0, 255 ),
	4631, 	Uvn( 0, 255 ),
	4638, 	Uvn( 0, 255 ),
	4634, 	Uvn( 0, 255 ),
	StripR(6),  
	2223, 	Uvn( 0, 255 ),
	2218, 	Uvn( 0, 255 ),
	2217, 	Uvn( 0, 255 ),
	4663, 	Uvn( 0, 255 ),
	2211, 	Uvn( 0, 255 ),
	4642, 	Uvn( 0, 255 ),
	StripL(81),  
	4425, 	Uvn( 0, 255 ),
	4447, 	Uvn( 0, 255 ),
	4415, 	Uvn( 0, 255 ),
	4419, 	Uvn( 0, 255 ),
	4413, 	Uvn( 0, 255 ),
	4426, 	Uvn( 0, 255 ),
	4414, 	Uvn( 0, 255 ),
	4428, 	Uvn( 0, 255 ),
	4420, 	Uvn( 0, 255 ),
	4432, 	Uvn( 0, 255 ),
	4435, 	Uvn( 0, 255 ),
	4448, 	Uvn( 0, 255 ),
	4442, 	Uvn( 0, 255 ),
	4453, 	Uvn( 0, 255 ),
	4443, 	Uvn( 0, 255 ),
	4438, 	Uvn( 0, 255 ),
	4422, 	Uvn( 0, 255 ),
	4434, 	Uvn( 0, 255 ),
	4421, 	Uvn( 0, 255 ),
	4416, 	Uvn( 0, 255 ),
	4405, 	Uvn( 0, 255 ),
	4400, 	Uvn( 0, 255 ),
	4379, 	Uvn( 0, 255 ),
	4380, 	Uvn( 0, 255 ),
	4376, 	Uvn( 0, 255 ),
	4399, 	Uvn( 0, 255 ),
	4378, 	Uvn( 0, 255 ),
	4397, 	Uvn( 0, 255 ),
	4370, 	Uvn( 0, 255 ),
	4386, 	Uvn( 0, 255 ),
	4373, 	Uvn( 0, 255 ),
	4389, 	Uvn( 0, 255 ),
	4372, 	Uvn( 0, 255 ),
	4384, 	Uvn( 0, 255 ),
	4359, 	Uvn( 0, 255 ),
	4382, 	Uvn( 0, 255 ),
	4374, 	Uvn( 0, 255 ),
	4409, 	Uvn( 0, 255 ),
	4401, 	Uvn( 0, 255 ),
	4418, 	Uvn( 0, 255 ),
	4430, 	Uvn( 0, 255 ),
	4468, 	Uvn( 0, 255 ),
	2183, 	Uvn( 0, 255 ),
	4484, 	Uvn( 0, 255 ),
	2193, 	Uvn( 0, 255 ),
	4513, 	Uvn( 0, 255 ),
	4552, 	Uvn( 0, 255 ),
	4525, 	Uvn( 0, 255 ),
	4545, 	Uvn( 0, 255 ),
	4554, 	Uvn( 0, 255 ),
	4566, 	Uvn( 0, 255 ),
	4557, 	Uvn( 0, 255 ),
	4573, 	Uvn( 0, 255 ),
	4569, 	Uvn( 0, 255 ),
	4590, 	Uvn( 0, 255 ),
	4601, 	Uvn( 0, 255 ),
	4586, 	Uvn( 0, 255 ),
	4593, 	Uvn( 0, 255 ),
	4556, 	Uvn( 0, 255 ),
	4591, 	Uvn( 0, 255 ),
	4579, 	Uvn( 0, 255 ),
	4598, 	Uvn( 0, 255 ),
	4588, 	Uvn( 0, 255 ),
	4581, 	Uvn( 0, 255 ),
	4558, 	Uvn( 0, 255 ),
	4559, 	Uvn( 0, 255 ),
	4546, 	Uvn( 0, 255 ),
	4553, 	Uvn( 0, 255 ),
	4535, 	Uvn( 0, 255 ),
	4537, 	Uvn( 0, 255 ),
	4530, 	Uvn( 0, 255 ),
	4551, 	Uvn( 0, 255 ),
	4534, 	Uvn( 0, 255 ),
	4549, 	Uvn( 0, 255 ),
	4523, 	Uvn( 0, 255 ),
	4541, 	Uvn( 0, 255 ),
	4511, 	Uvn( 0, 255 ),
	4533, 	Uvn( 0, 255 ),
	4503, 	Uvn( 0, 255 ),
	4525, 	Uvn( 0, 255 ),
	4513, 	Uvn( 0, 255 ),
	StripL(3),  
	2159, 	Uvn( 0, 255 ),
	2171, 	Uvn( 0, 255 ),
	2164, 	Uvn( 0, 255 ),
	StripL(4),  
	4312, 	Uvn( 0, 255 ),
	4319, 	Uvn( 0, 255 ),
	4329, 	Uvn( 0, 255 ),
	4334, 	Uvn( 0, 255 ),
	StripR(9),  
	2205, 	Uvn( 0, 255 ),
	4347, 	Uvn( 0, 255 ),
	2203, 	Uvn( 0, 255 ),
	4344, 	Uvn( 0, 255 ),
	2202, 	Uvn( 0, 255 ),
	4333, 	Uvn( 0, 255 ),
	2196, 	Uvn( 0, 255 ),
	4314, 	Uvn( 0, 255 ),
	2180, 	Uvn( 0, 255 ),
	StripL(3),  
	4292, 	Uvn( 0, 255 ),
	4305, 	Uvn( 0, 255 ),
	2160, 	Uvn( 0, 255 ),
	StripL(13),  
	2194, 	Uvn( 0, 255 ),
	2188, 	Uvn( 0, 255 ),
	2187, 	Uvn( 0, 255 ),
	2181, 	Uvn( 0, 255 ),
	2182, 	Uvn( 0, 255 ),
	2175, 	Uvn( 0, 255 ),
	2178, 	Uvn( 0, 255 ),
	2172, 	Uvn( 0, 255 ),
	2173, 	Uvn( 0, 255 ),
	2171, 	Uvn( 0, 255 ),
	2170, 	Uvn( 0, 255 ),
	2159, 	Uvn( 0, 255 ),
	2162, 	Uvn( 0, 255 ),
	StripR(7),  
	4575, 	Uvn( 0, 255 ),
	2198, 	Uvn( 0, 255 ),
	4555, 	Uvn( 0, 255 ),
	4536, 	Uvn( 0, 255 ),
	4538, 	Uvn( 0, 255 ),
	4512, 	Uvn( 0, 255 ),
	4508, 	Uvn( 0, 255 ),
	StripL(3),  
	4417, 	Uvn( 0, 255 ),
	4463, 	Uvn( 0, 255 ),
	4445, 	Uvn( 0, 255 ),
	StripL(3),  
	2221, 	Uvn( 0, 255 ),
	2217, 	Uvn( 0, 255 ),
	2223, 	Uvn( 0, 255 ),
	StripR(5),  
	4727, 	Uvn( 0, 255 ),
	4729, 	Uvn( 0, 255 ),
	4713, 	Uvn( 0, 255 ),
	4730, 	Uvn( 0, 255 ),
	4718, 	Uvn( 0, 255 ),
	StripR(8),  
	4698, 	Uvn( 0, 255 ),
	4713, 	Uvn( 0, 255 ),
	4701, 	Uvn( 0, 255 ),
	4718, 	Uvn( 0, 255 ),
	4702, 	Uvn( 0, 255 ),
	4711, 	Uvn( 0, 255 ),
	4714, 	Uvn( 0, 255 ),
	4720, 	Uvn( 0, 255 ),
	StripL(5),  
	4709, 	Uvn( 0, 255 ),
	4706, 	Uvn( 0, 255 ),
	4696, 	Uvn( 0, 255 ),
	4697, 	Uvn( 0, 255 ),
	4684, 	Uvn( 0, 255 ),
	StripL(3),  
	4671, 	Uvn( 0, 255 ),
	4683, 	Uvn( 0, 255 ),
	4673, 	Uvn( 0, 255 ),
	StripR(11),  
	4683, 	Uvn( 0, 255 ),
	4678, 	Uvn( 0, 255 ),
	4671, 	Uvn( 0, 255 ),
	4646, 	Uvn( 0, 255 ),
	4673, 	Uvn( 0, 255 ),
	4643, 	Uvn( 0, 255 ),
	4674, 	Uvn( 0, 255 ),
	4644, 	Uvn( 0, 255 ),
	4676, 	Uvn( 0, 255 ),
	4641, 	Uvn( 0, 255 ),
	4660, 	Uvn( 0, 255 ),
	StripL(3),  
	4685, 	Uvn( 0, 255 ),
	4675, 	Uvn( 0, 255 ),
	4682, 	Uvn( 0, 255 ),
	StripL(4),  
	4676, 	Uvn( 0, 255 ),
	4693, 	Uvn( 0, 255 ),
	4660, 	Uvn( 0, 255 ),
	4686, 	Uvn( 0, 255 ),
	StripL(19),  
	4689, 	Uvn( 0, 255 ),
	4648, 	Uvn( 0, 255 ),
	4692, 	Uvn( 0, 255 ),
	4690, 	Uvn( 0, 255 ),
	4689, 	Uvn( 0, 255 ),
	4716, 	Uvn( 0, 255 ),
	4691, 	Uvn( 0, 255 ),
	4723, 	Uvn( 0, 255 ),
	4700, 	Uvn( 0, 255 ),
	4725, 	Uvn( 0, 255 ),
	4696, 	Uvn( 0, 255 ),
	4721, 	Uvn( 0, 255 ),
	4709, 	Uvn( 0, 255 ),
	4724, 	Uvn( 0, 255 ),
	4706, 	Uvn( 0, 255 ),
	4710, 	Uvn( 0, 255 ),
	4697, 	Uvn( 0, 255 ),
	4704, 	Uvn( 0, 255 ),
	4684, 	Uvn( 0, 255 ),
	StripL(4),  
	4658, 	Uvn( 0, 255 ),
	4637, 	Uvn( 0, 255 ),
	4667, 	Uvn( 0, 255 ),
	4639, 	Uvn( 0, 255 ),
	StripR(6),  
	4568, 	Uvn( 0, 255 ),
	4565, 	Uvn( 0, 255 ),
	4577, 	Uvn( 0, 255 ),
	4583, 	Uvn( 0, 255 ),
	4607, 	Uvn( 0, 255 ),
	4603, 	Uvn( 0, 255 ),
	StripL(3),  
	4599, 	Uvn( 0, 255 ),
	4602, 	Uvn( 0, 255 ),
	4585, 	Uvn( 0, 255 ),
	StripL(5),  
	4513, 	Uvn( 0, 255 ),
	4484, 	Uvn( 0, 255 ),
	4503, 	Uvn( 0, 255 ),
	4468, 	Uvn( 0, 255 ),
	4474, 	Uvn( 0, 255 ),
	StripR(6),  
	4526, 	Uvn( 0, 255 ),
	4529, 	Uvn( 0, 255 ),
	4518, 	Uvn( 0, 255 ),
	4527, 	Uvn( 0, 255 ),
	4509, 	Uvn( 0, 255 ),
	4517, 	Uvn( 0, 255 ),
	StripL(4),  
	4487, 	Uvn( 0, 255 ),
	4481, 	Uvn( 0, 255 ),
	4501, 	Uvn( 0, 255 ),
	4515, 	Uvn( 0, 255 ),
	StripR(9),  
	4437, 	Uvn( 0, 255 ),
	4444, 	Uvn( 0, 255 ),
	4469, 	Uvn( 0, 255 ),
	4449, 	Uvn( 0, 255 ),
	4473, 	Uvn( 0, 255 ),
	4452, 	Uvn( 0, 255 ),
	4477, 	Uvn( 0, 255 ),
	4454, 	Uvn( 0, 255 ),
	4481, 	Uvn( 0, 255 ),
	StripL(3),  
	4431, 	Uvn( 0, 255 ),
	4468, 	Uvn( 0, 255 ),
	4418, 	Uvn( 0, 255 ),
	StripL(7),  
	4409, 	Uvn( 0, 255 ),
	4382, 	Uvn( 0, 255 ),
	4402, 	Uvn( 0, 255 ),
	4384, 	Uvn( 0, 255 ),
	4408, 	Uvn( 0, 255 ),
	4389, 	Uvn( 0, 255 ),
	4412, 	Uvn( 0, 255 ),
	StripL(13),  
	4360, 	Uvn( 0, 255 ),
	4395, 	Uvn( 0, 255 ),
	4365, 	Uvn( 0, 255 ),
	4392, 	Uvn( 0, 255 ),
	4366, 	Uvn( 0, 255 ),
	4393, 	Uvn( 0, 255 ),
	4367, 	Uvn( 0, 255 ),
	4394, 	Uvn( 0, 255 ),
	4368, 	Uvn( 0, 255 ),
	4398, 	Uvn( 0, 255 ),
	4383, 	Uvn( 0, 255 ),
	4403, 	Uvn( 0, 255 ),
	4404, 	Uvn( 0, 255 ),
	StripL(6),  
	4390, 	Uvn( 0, 255 ),
	4379, 	Uvn( 0, 255 ),
	4388, 	Uvn( 0, 255 ),
	4377, 	Uvn( 0, 255 ),
	4391, 	Uvn( 0, 255 ),
	4381, 	Uvn( 0, 255 ),
	StripL(3),  
	4416, 	Uvn( 0, 255 ),
	4423, 	Uvn( 0, 255 ),
	4400, 	Uvn( 0, 255 ),
	StripR(19),  
	4409, 	Uvn( 0, 255 ),
	4418, 	Uvn( 0, 255 ),
	4419, 	Uvn( 0, 255 ),
	4431, 	Uvn( 0, 255 ),
	4447, 	Uvn( 0, 255 ),
	4429, 	Uvn( 0, 255 ),
	4437, 	Uvn( 0, 255 ),
	4436, 	Uvn( 0, 255 ),
	4444, 	Uvn( 0, 255 ),
	4440, 	Uvn( 0, 255 ),
	4449, 	Uvn( 0, 255 ),
	4439, 	Uvn( 0, 255 ),
	4452, 	Uvn( 0, 255 ),
	4446, 	Uvn( 0, 255 ),
	4454, 	Uvn( 0, 255 ),
	4466, 	Uvn( 0, 255 ),
	4481, 	Uvn( 0, 255 ),
	4475, 	Uvn( 0, 255 ),
	4487, 	Uvn( 0, 255 ),
	StripL(3),  
	4401, 	Uvn( 0, 255 ),
	2168, 	Uvn( 0, 255 ),
	4374, 	Uvn( 0, 255 ),
	StripL(4),  
	4480, 	Uvn( 0, 255 ),
	4483, 	Uvn( 0, 255 ),
	4493, 	Uvn( 0, 255 ),
	4498, 	Uvn( 0, 255 ),
	StripL(5),  
	4601, 	Uvn( 0, 255 ),
	4604, 	Uvn( 0, 255 ),
	4593, 	Uvn( 0, 255 ),
	4598, 	Uvn( 0, 255 ),
	4591, 	Uvn( 0, 255 ),
	StripL(3),  
	4573, 	Uvn( 0, 255 ),
	4567, 	Uvn( 0, 255 ),
	4566, 	Uvn( 0, 255 ),
	StripL(11),  
	4576, 	Uvn( 0, 255 ),
	4609, 	Uvn( 0, 255 ),
	4611, 	Uvn( 0, 255 ),
	4627, 	Uvn( 0, 255 ),
	4631, 	Uvn( 0, 255 ),
	4653, 	Uvn( 0, 255 ),
	4659, 	Uvn( 0, 255 ),
	4688, 	Uvn( 0, 255 ),
	4695, 	Uvn( 0, 255 ),
	2228, 	Uvn( 0, 255 ),
	4715, 	Uvn( 0, 255 ),
	StripL(10),  
	1935, 	Uvn( 0, 255 ),
	1948, 	Uvn( 0, 255 ),
	1930, 	Uvn( 0, 255 ),
	1945, 	Uvn( 0, 255 ),
	1927, 	Uvn( 0, 255 ),
	1947, 	Uvn( 0, 255 ),
	1922, 	Uvn( 0, 255 ),
	3593, 	Uvn( 0, 255 ),
	3581, 	Uvn( 0, 255 ),
	3502, 	Uvn( 0, 255 ),
	StripL(13),  
	2220, 	Uvn( 0, 255 ),
	2215, 	Uvn( 0, 255 ),
	2222, 	Uvn( 0, 255 ),
	2213, 	Uvn( 0, 255 ),
	2214, 	Uvn( 0, 255 ),
	4349, 	Uvn( 0, 255 ),
	4342, 	Uvn( 0, 255 ),
	4339, 	Uvn( 0, 255 ),
	4343, 	Uvn( 0, 255 ),
	4345, 	Uvn( 0, 255 ),
	4340, 	Uvn( 0, 255 ),
	4322, 	Uvn( 0, 255 ),
	4320, 	Uvn( 0, 255 ),
	StripR(6),  
	4306, 	Uvn( 0, 255 ),
	4300, 	Uvn( 0, 255 ),
	4312, 	Uvn( 0, 255 ),
	4310, 	Uvn( 0, 255 ),
	4329, 	Uvn( 0, 255 ),
	4323, 	Uvn( 0, 255 ),
	StripL(13),  
	2200, 	Uvn( 0, 255 ),
	2206, 	Uvn( 0, 255 ),
	2194, 	Uvn( 0, 255 ),
	2198, 	Uvn( 0, 255 ),
	2188, 	Uvn( 0, 255 ),
	4536, 	Uvn( 0, 255 ),
	4502, 	Uvn( 0, 255 ),
	4512, 	Uvn( 0, 255 ),
	4482, 	Uvn( 0, 255 ),
	4489, 	Uvn( 0, 255 ),
	4463, 	Uvn( 0, 255 ),
	4465, 	Uvn( 0, 255 ),
	4445, 	Uvn( 0, 255 ),
	StripR(13),  
	1989, 	Uvn( 0, 255 ),
	1990, 	Uvn( 0, 255 ),
	2018, 	Uvn( 0, 255 ),
	2023, 	Uvn( 0, 255 ),
	2053, 	Uvn( 0, 255 ),
	2057, 	Uvn( 0, 255 ),
	2063, 	Uvn( 0, 255 ),
	3542, 	Uvn( 0, 255 ),
	2066, 	Uvn( 0, 255 ),
	3541, 	Uvn( 0, 255 ),
	3540, 	Uvn( 0, 255 ),
	3536, 	Uvn( 0, 255 ),
	3532, 	Uvn( 0, 255 ),
	StripL(9),  
	4347, 	Uvn( 0, 255 ),
	4344, 	Uvn( 0, 255 ),
	4338, 	Uvn( 0, 255 ),
	4332, 	Uvn( 0, 255 ),
	4326, 	Uvn( 0, 255 ),
	4314, 	Uvn( 0, 255 ),
	4311, 	Uvn( 0, 255 ),
	4302, 	Uvn( 0, 255 ),
	4299, 	Uvn( 0, 255 ),
	StripL(5),  
	1931, 	Uvn( 0, 255 ),
	1923, 	Uvn( 0, 255 ),
	1921, 	Uvn( 0, 255 ),
	1927, 	Uvn( 0, 255 ),
	1922, 	Uvn( 0, 255 ),
	StripL(4),  
	4344, 	Uvn( 0, 255 ),
	4333, 	Uvn( 0, 255 ),
	4332, 	Uvn( 0, 255 ),
	4314, 	Uvn( 0, 255 ),
	StripR(8),  
	2189, 	Uvn( 0, 255 ),
	2177, 	Uvn( 0, 255 ),
	2191, 	Uvn( 0, 255 ),
	2186, 	Uvn( 0, 255 ),
	2192, 	Uvn( 0, 255 ),
	2190, 	Uvn( 0, 255 ),
	2200, 	Uvn( 0, 255 ),
	2194, 	Uvn( 0, 255 ),
	StripL(3),  
	4552, 	Uvn( 0, 255 ),
	2207, 	Uvn( 0, 255 ),
	2204, 	Uvn( 0, 255 ),
	StripL(13),  
	4756, 	Uvn( 0, 255 ),
	4767, 	Uvn( 0, 255 ),
	4766, 	Uvn( 0, 255 ),
	4779, 	Uvn( 0, 255 ),
	4776, 	Uvn( 0, 255 ),
	4790, 	Uvn( 0, 255 ),
	4787, 	Uvn( 0, 255 ),
	4803, 	Uvn( 0, 255 ),
	4801, 	Uvn( 0, 255 ),
	4824, 	Uvn( 0, 255 ),
	4821, 	Uvn( 0, 255 ),
	4843, 	Uvn( 0, 255 ),
	4841, 	Uvn( 0, 255 ),
	StripR(5),  
	4775, 	Uvn( 0, 255 ),
	4778, 	Uvn( 0, 255 ),
	4792, 	Uvn( 0, 255 ),
	4786, 	Uvn( 0, 255 ),
	4802, 	Uvn( 0, 255 ),
	StripL(4),  
	3396, 	Uvn( 0, 255 ),
	3627, 	Uvn( 0, 255 ),
	3629, 	Uvn( 0, 255 ),
	3390, 	Uvn( 0, 255 ),
	StripR(5),  
	3357, 	Uvn( 0, 255 ),
	4202, 	Uvn( 0, 255 ),
	3362, 	Uvn( 0, 255 ),
	4207, 	Uvn( 0, 255 ),
	4215, 	Uvn( 0, 255 ),
	StripR(14),  
	4208, 	Uvn( 0, 255 ),
	4206, 	Uvn( 0, 255 ),
	1590, 	Uvn( 0, 255 ),
	1637, 	Uvn( 0, 255 ),
	1579, 	Uvn( 0, 255 ),
	1647, 	Uvn( 0, 255 ),
	1674, 	Uvn( 0, 255 ),
	1658, 	Uvn( 0, 255 ),
	1717, 	Uvn( 0, 255 ),
	1705, 	Uvn( 0, 255 ),
	1729, 	Uvn( 0, 255 ),
	1714, 	Uvn( 0, 255 ),
	1746, 	Uvn( 0, 255 ),
	1748, 	Uvn( 0, 255 ),
	StripR(5),  
	1590, 	Uvn( 0, 255 ),
	4203, 	Uvn( 0, 255 ),
	4208, 	Uvn( 0, 255 ),
	4212, 	Uvn( 0, 255 ),
	2234, 	Uvn( 0, 255 ),
	StripL(6),  
	4900, 	Uvn( 0, 255 ),
	4910, 	Uvn( 0, 255 ),
	4914, 	Uvn( 0, 255 ),
	4927, 	Uvn( 0, 255 ),
	4919, 	Uvn( 0, 255 ),
	4940, 	Uvn( 0, 255 ),
	StripR(5),  
	4885, 	Uvn( 0, 255 ),
	4864, 	Uvn( 0, 255 ),
	4879, 	Uvn( 0, 255 ),
	4860, 	Uvn( 0, 255 ),
	4867, 	Uvn( 0, 255 ),
	StripL(4),  
	4954, 	Uvn( 0, 255 ),
	4965, 	Uvn( 0, 255 ),
	4959, 	Uvn( 0, 255 ),
	4960, 	Uvn( 0, 255 ),
	StripL(6),  
	2297, 	Uvn( 0, 255 ),
	4944, 	Uvn( 0, 255 ),
	4955, 	Uvn( 0, 255 ),
	4911, 	Uvn( 0, 255 ),
	4931, 	Uvn( 0, 255 ),
	4892, 	Uvn( 0, 255 ),
	StripR(6),  
	4887, 	Uvn( 0, 255 ),
	4897, 	Uvn( 0, 255 ),
	4889, 	Uvn( 0, 255 ),
	4904, 	Uvn( 0, 255 ),
	4895, 	Uvn( 0, 255 ),
	4928, 	Uvn( 0, 255 ),
	StripL(8),  
	4867, 	Uvn( 0, 255 ),
	4858, 	Uvn( 0, 255 ),
	4860, 	Uvn( 0, 255 ),
	4848, 	Uvn( 0, 255 ),
	4847, 	Uvn( 0, 255 ),
	2282, 	Uvn( 0, 255 ),
	2279, 	Uvn( 0, 255 ),
	2266, 	Uvn( 0, 255 ),
	StripR(14),  
	4900, 	Uvn( 0, 255 ),
	4891, 	Uvn( 0, 255 ),
	4914, 	Uvn( 0, 255 ),
	4901, 	Uvn( 0, 255 ),
	4919, 	Uvn( 0, 255 ),
	4924, 	Uvn( 0, 255 ),
	4940, 	Uvn( 0, 255 ),
	4951, 	Uvn( 0, 255 ),
	4963, 	Uvn( 0, 255 ),
	4970, 	Uvn( 0, 255 ),
	4972, 	Uvn( 0, 255 ),
	4976, 	Uvn( 0, 255 ),
	4978, 	Uvn( 0, 255 ),
	2312, 	Uvn( 0, 255 ),
	StripL(5),  
	5022, 	Uvn( 0, 255 ),
	5018, 	Uvn( 0, 255 ),
	5007, 	Uvn( 0, 255 ),
	5010, 	Uvn( 0, 255 ),
	4999, 	Uvn( 0, 255 ),
	StripL(3),  
	5001, 	Uvn( 0, 255 ),
	4991, 	Uvn( 0, 255 ),
	4998, 	Uvn( 0, 255 ),
	StripL(3),  
	4872, 	Uvn( 0, 255 ),
	4884, 	Uvn( 0, 255 ),
	4874, 	Uvn( 0, 255 ),
	StripL(10),  
	1975, 	Uvn( 0, 255 ),
	1992, 	Uvn( 0, 255 ),
	1967, 	Uvn( 0, 255 ),
	1991, 	Uvn( 0, 255 ),
	1960, 	Uvn( 0, 255 ),
	1985, 	Uvn( 0, 255 ),
	1959, 	Uvn( 0, 255 ),
	1980, 	Uvn( 0, 255 ),
	1964, 	Uvn( 0, 255 ),
	1963, 	Uvn( 0, 255 ),
	StripR(33),  
	2056, 	Uvn( 0, 255 ),
	2051, 	Uvn( 0, 255 ),
	2044, 	Uvn( 0, 255 ),
	2043, 	Uvn( 0, 255 ),
	2028, 	Uvn( 0, 255 ),
	2038, 	Uvn( 0, 255 ),
	2022, 	Uvn( 0, 255 ),
	2031, 	Uvn( 0, 255 ),
	2020, 	Uvn( 0, 255 ),
	2029, 	Uvn( 0, 255 ),
	2016, 	Uvn( 0, 255 ),
	2026, 	Uvn( 0, 255 ),
	2013, 	Uvn( 0, 255 ),
	4261, 	Uvn( 0, 255 ),
	4257, 	Uvn( 0, 255 ),
	4262, 	Uvn( 0, 255 ),
	4258, 	Uvn( 0, 255 ),
	2135, 	Uvn( 0, 255 ),
	2131, 	Uvn( 0, 255 ),
	2144, 	Uvn( 0, 255 ),
	2134, 	Uvn( 0, 255 ),
	2148, 	Uvn( 0, 255 ),
	2137, 	Uvn( 0, 255 ),
	2145, 	Uvn( 0, 255 ),
	2136, 	Uvn( 0, 255 ),
	2138, 	Uvn( 0, 255 ),
	4353, 	Uvn( 0, 255 ),
	4351, 	Uvn( 0, 255 ),
	4346, 	Uvn( 0, 255 ),
	4335, 	Uvn( 0, 255 ),
	4331, 	Uvn( 0, 255 ),
	4325, 	Uvn( 0, 255 ),
	4317, 	Uvn( 0, 255 ),
	StripL(10),  
	3512, 	Uvn( 0, 255 ),
	3502, 	Uvn( 0, 255 ),
	3509, 	Uvn( 0, 255 ),
	3593, 	Uvn( 0, 255 ),
	1977, 	Uvn( 0, 255 ),
	1947, 	Uvn( 0, 255 ),
	1974, 	Uvn( 0, 255 ),
	1945, 	Uvn( 0, 255 ),
	1973, 	Uvn( 0, 255 ),
	1948, 	Uvn( 0, 255 ),
	StripL(4),  
	1916, 	Uvn( 0, 255 ),
	3584, 	Uvn( 0, 255 ),
	3577, 	Uvn( 0, 255 ),
	3579, 	Uvn( 0, 255 ),
	StripL(15),  
	4941, 	Uvn( 0, 255 ),
	4920, 	Uvn( 0, 255 ),
	4936, 	Uvn( 0, 255 ),
	4923, 	Uvn( 0, 255 ),
	4937, 	Uvn( 0, 255 ),
	4925, 	Uvn( 0, 255 ),
	4952, 	Uvn( 0, 255 ),
	4943, 	Uvn( 0, 255 ),
	2296, 	Uvn( 0, 255 ),
	2295, 	Uvn( 0, 255 ),
	2303, 	Uvn( 0, 255 ),
	2302, 	Uvn( 0, 255 ),
	4981, 	Uvn( 0, 255 ),
	4980, 	Uvn( 0, 255 ),
	4986, 	Uvn( 0, 255 ),
	StripL(8),  
	689, 	Uvn( 0, 255 ),
	690, 	Uvn( 0, 255 ),
	695, 	Uvn( 0, 255 ),
	699, 	Uvn( 0, 255 ),
	698, 	Uvn( 0, 255 ),
	703, 	Uvn( 0, 255 ),
	3515, 	Uvn( 0, 255 ),
	3523, 	Uvn( 0, 255 ),
	StripL(9),  
	978, 	Uvn( 0, 255 ),
	3523, 	Uvn( 0, 255 ),
	3529, 	Uvn( 0, 255 ),
	703, 	Uvn( 0, 255 ),
	706, 	Uvn( 0, 255 ),
	3598, 	Uvn( 0, 255 ),
	707, 	Uvn( 0, 255 ),
	3596, 	Uvn( 0, 255 ),
	3600, 	Uvn( 0, 255 ),
	CnkNull(),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_body[]
START
VList      NULL,
PList      strip_kihon11_Bip01_body,
Center       0.000000F, 72.435333F,  0.863067F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_body[]
START
EvalFlags ( 0x00000014 ),
CNKModel   model_kihon11_Bip01_body,
OPosition  ( -55.635731F,  0.000256F,  0.932273F ),
OAngle     (  0.000003F, 179.999879F, -89.999946F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_kihon11_Bip01_diaper,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy11[]
START
EvalFlags ( 0x0000001e ),
CNKModel   NULL,
OPosition  (  4.429578F, -0.000001F,  0.000000F ),
OAngle     ( -0.000001F, -0.000002F, -0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Toe0[]
START
	CnkV_VN_NF(FV_CONT|FW_END, 2640),
	OffnbIdx(0, 377),
	VERT( 0x3eb51251, 0x4088500d, 0xbf344d5b ),
	NORM( 0x3e47484c, 0x3f75d4f9, 0xbe4cc412 ),
	NFlagsW( 3630, 51.861294 ),
	VERT( 0x3c7d9eb1, 0x4086b05c, 0xbf560ab3 ),
	NORM( 0xbc762fe2, 0x3f78f382, 0xbe6e2480 ),
	NFlagsW( 3631, 38.090794 ),
	VERT( 0x3f1a5b57, 0x4084a0bd, 0xbf0f237b ),
	NORM( 0x3ee892d4, 0x3f630675, 0xbdadf963 ),
	NFlagsW( 3632, 57.110065 ),
	VERT( 0xbe4358f4, 0x408531a1, 0xbf7fd78a ),
	NORM( 0xbccb496c, 0x3f75fe65, 0xbe8d2d43 ),
	NFlagsW( 3633, 25.380653 ),
	VERT( 0xbf5778c7, 0x40847bc3, 0xbf904fa9 ),
	NORM( 0x3e64532e, 0x3f780a0e, 0xbddbb510 ),
	NFlagsW( 3634, 0.013537 ),
	VERT( 0x3e867eac, 0x40808e9c, 0x3d52eb81 ),
	NORM( 0xbd609489, 0x3f4676e7, 0x3f2117b6 ),
	NFlagsW( 3635, 52.335484 ),
	VERT( 0x3f7da2db, 0x407c01e5, 0xbeca0887 ),
	NORM( 0x3f2f196d, 0x3f3a0b78, 0xbd81e048 ),
	NFlagsW( 3636, 59.196239 ),
	VERT( 0xbe8bd5e8, 0x408161fd, 0xbe1250a1 ),
	NORM( 0xbea71419, 0x3f4a424c, 0x3f04d901 ),
	NFlagsW( 3637, 25.688902 ),
	VERT( 0xbf2b5caa, 0x408287a9, 0xbf84475c ),
	NORM( 0x3e16b77b, 0x3f794a4e, 0xbe319148 ),
	NFlagsW( 3638, 0.634829 ),
	VERT( 0x3f0684fe, 0x407c3e75, 0x3dee4a2f ),
	NORM( 0x3e1aa592, 0x3f3534b2, 0x3f30a6c2 ),
	NFlagsW( 3639, 56.907688 ),
	VERT( 0x3f4d3cd6, 0x407a5cb5, 0xbf30dffe ),
	NORM( 0x3f2369d1, 0x3ea4f974, 0xbf32f6a9 ),
	NFlagsW( 3640, 56.925575 ),
	VERT( 0xbd0d2ca0, 0x407f561f, 0xbfa4780b ),
	NORM( 0x3e9a170a, 0x3f27ba3c, 0xbf316418 ),
	NFlagsW( 3641, 36.163994 ),
	VERT( 0x3f0632a3, 0x407b582c, 0xbf6bf2b8 ),
	NORM( 0x3f19b74c, 0x3ecb2c1d, 0xbf31baaa ),
	NFlagsW( 3642, 54.347069 ),
	VERT( 0xbf592cdc, 0x4081bc2c, 0xbea2834b ),
	NORM( 0x3d92fba6, 0x3f62b3e3, 0x3eeafbd1 ),
	NFlagsW( 3643, 0.050345 ),
	VERT( 0xbed3528e, 0x40804ae7, 0xbe6f8803 ),
	NORM( 0xbe89b48a, 0x3f595d4d, 0x3ee8cab6 ),
	NFlagsW( 3644, 14.095301 ),
	VERT( 0xbf66b589, 0x40819d5b, 0xbea0a0e6 ),
	NORM( 0xbcd44443, 0x3f682a8c, 0x3ed7525a ),
	NFlagsW( 3645, 0.015424 ),
	VERT( 0x3f4fb211, 0x4077781f, 0xbf2bc6b8 ),
	NORM( 0x3ed02a8e, 0x3c10c07a, 0xbf69e00c ),
	NFlagsW( 3646, 56.643127 ),
	VERT( 0x3e994aa3, 0x40796c2b, 0xbf89a511 ),
	NORM( 0x3eeeec32, 0x3ee59489, 0xbf43297d ),
	NFlagsW( 3647, 50.188923 ),
	VERT( 0xbf31d323, 0x407f4a85, 0xbe668e83 ),
	NORM( 0xbe02799e, 0x3f3fb67e, 0x3f267ce1 ),
	NFlagsW( 3648, 0.939887 ),
	VERT( 0x3f1d6653, 0x407542cc, 0xbf509dc5 ),
	NORM( 0x3f277786, 0x3c42dc29, 0xbf419a03 ),
	NFlagsW( 3649, 54.913227 ),
	VERT( 0x3f8f9821, 0x406fb730, 0xbeb9f576 ),
	NORM( 0x3f66310d, 0x3eda7603, 0xbdc6a3ef ),
	NFlagsW( 3650, 58.485615 ),
	VERT( 0x3f659860, 0x407059d0, 0x3e092d6a ),
	NORM( 0x3ee53e66, 0x3f199fb3, 0x3f29b2ca ),
	NFlagsW( 3651, 58.482635 ),
	VERT( 0x3f85dc1f, 0x406eed6b, 0xbf27de84 ),
	NORM( 0x3f51f0d2, 0x3f0e1daf, 0xbe0e357b ),
	NFlagsW( 3652, 57.100658 ),
	VERT( 0x3f7f710b, 0x406cae8a, 0xbf11906d ),
	NORM( 0x3f65345c, 0x3edb6162, 0xbdf912e5 ),
	NFlagsW( 3653, 56.619282 ),
	VERT( 0x3f7f94f9, 0x4068f23d, 0x3e0c1a31 ),
	NORM( 0x3f330ef5, 0x3e8f4374, 0x3f285a8f ),
	NFlagsW( 3654, 58.233231 ),
	VERT( 0xbf23b1cd, 0x40708362, 0xbfc26373 ),
	NORM( 0x3ec1ab0e, 0x3eb778ac, 0xbf5a80dd ),
	NFlagsW( 3655, 1.529054 ),
	VERT( 0x3f9a096d, 0x405f3c55, 0xbec5b42d ),
	NORM( 0x3f7c3bf8, 0x3cc971c4, 0xbe2d2bb3 ),
	NFlagsW( 3656, 56.778240 ),
	VERT( 0x3f8a3af0, 0x405f1242, 0xbf343d4c ),
	NORM( 0x3f65172f, 0x3b415623, 0xbee47fbf ),
	NFlagsW( 3657, 55.311768 ),
	VERT( 0x3f05d76e, 0x40627d11, 0xbf7867b1 ),
	NORM( 0x3f354fa5, 0xbc1c9ee8, 0xbf34b5e7 ),
	NFlagsW( 3658, 52.775646 ),
	VERT( 0x3eda95ca, 0x4062d6db, 0xbf8ddd03 ),
	NORM( 0x3ec9493c, 0xbcee36f5, 0xbf6b44e7 ),
	NFlagsW( 3659, 52.042896 ),
	VERT( 0x3e3121a6, 0x406358d5, 0x3e952a75 ),
	NORM( 0xbe38ef1e, 0x3dd9f688, 0x3f7a4fe7 ),
	NFlagsW( 3660, 51.401772 ),
	VERT( 0x3f869418, 0x405dc886, 0xbf19dd27 ),
	NORM( 0x3f7e9200, 0x3c37d9d5, 0xbdd6eaae ),
	NFlagsW( 3661, 55.131561 ),
	VERT( 0x3e831481, 0x406211bc, 0xbf8a3e94 ),
	NORM( 0x3ecb9105, 0xbd3824b9, 0xbf6a9d2d ),
	NFlagsW( 3662, 50.189625 ),
	VERT( 0x3f864eea, 0x405b7a00, 0x3db0a71a ),
	NORM( 0x3f53e880, 0x3cfbd910, 0x3f0f6b3d ),
	NFlagsW( 3663, 56.551846 ),
	VERT( 0x3f17bb49, 0x405b27b0, 0x3ead046e ),
	NORM( 0x3db2a5be, 0xbcd4790c, 0x3f7ef010 ),
	NFlagsW( 3664, 54.510021 ),
	VERT( 0xbf20125c, 0x40627bfd, 0xb923de34 ),
	NORM( 0x3ee624fa, 0x3eb39d48, 0x3f524e9c ),
	NFlagsW( 3665, 5.952648 ),
	VERT( 0xbf1365cb, 0x4062293d, 0xbb86ad5a ),
	NORM( 0xbeaec7bf, 0xbd0318ea, 0x3f707b86 ),
	NFlagsW( 3666, 9.161479 ),
	VERT( 0xbd9b97b9, 0x405f0d73, 0xbfbe7151 ),
	NORM( 0x3eb73d9c, 0xbcd14686, 0xbf6ef430 ),
	NFlagsW( 3667, 40.338470 ),
	VERT( 0xbec7694c, 0x405fc9c9, 0xbe8adb1f ),
	NORM( 0x3ddfa74f, 0x3f01b175, 0xbf5af047 ),
	NFlagsW( 3668, 26.328615 ),
	VERT( 0xbec028ff, 0x405efc98, 0x3e0b1871 ),
	NORM( 0xbecc2cff, 0x3d150b0b, 0x3f6a9438 ),
	NFlagsW( 3669, 28.427204 ),
	VERT( 0xbee82982, 0x405f2d52, 0x3db02f06 ),
	NORM( 0x3ea59369, 0xbf06ef00, 0x3f492f29 ),
	NFlagsW( 3670, 20.849516 ),
	VERT( 0xbeea32ae, 0x405e0d2a, 0x3db84fbf ),
	NORM( 0xbf5d6f60, 0x37a04218, 0x3f007650 ),
	NFlagsW( 3671, 20.798416 ),
	VERT( 0xbf6277ec, 0x406063fc, 0x3e9d3e47 ),
	NORM( 0x3ec54a7f, 0x3ecf02a5, 0x3f545921 ),
	NFlagsW( 3672, 0.245154 ),
	VERT( 0xbf46e838, 0x405dbd23, 0xbfca9165 ),
	NORM( 0x3ef1336e, 0x3e9007e7, 0xbf560591 ),
	NFlagsW( 3673, 0.483380 ),
	VERT( 0xbf1a76a2, 0x405b1ba2, 0xbfc2751c ),
	NORM( 0x3ec4b39c, 0x3e89f4ca, 0xbf621082 ),
	NFlagsW( 3674, 4.754112 ),
	VERT( 0x3f85ff49, 0x404f6469, 0xbf240e8c ),
	NORM( 0x3f4e8205, 0xbf09c6e1, 0xbe7a0e92 ),
	NFlagsW( 3675, 53.651428 ),
	VERT( 0x3f804470, 0x404f6b8e, 0x3e1e7deb ),
	NORM( 0x3f34b731, 0xbe9f14dd, 0x3f22f1fb ),
	NFlagsW( 3676, 55.003780 ),
	VERT( 0x3f8fefcf, 0x404e9a0d, 0xbeae3393 ),
	NORM( 0x3f6540b4, 0xbeddb3a3, 0xbdd255d1 ),
	NFlagsW( 3677, 54.416065 ),
	VERT( 0x3f7fbc18, 0x404f18f4, 0xbf0c8ef6 ),
	NORM( 0x3f505430, 0xbf0d4d9b, 0xbe3a44d6 ),
	NFlagsW( 3678, 53.491753 ),
	VERT( 0x3fa5c2a7, 0x404b3822, 0xbf0f8eaa ),
	NORM( 0x3e001335, 0x3f7aa8c5, 0xbe23fc8d ),
	NFlagsW( 3679, 54.778336 ),
	VERT( 0x3f861bae, 0x404a3520, 0xbf346f92 ),
	NORM( 0xbde02fe3, 0x3f76b8b0, 0xbe792225 ),
	NFlagsW( 3680, 53.172787 ),
	VERT( 0x3fd85a43, 0x40448597, 0xbeca813a ),
	NORM( 0x3f1cb0a9, 0x3f49761a, 0xbd9f81b0 ),
	NFlagsW( 3681, 57.914646 ),
	VERT( 0x3f6621f9, 0x404963e0, 0x3e243f49 ),
	NORM( 0x3ed9aafe, 0xbf26ccd8, 0x3f20d687 ),
	NFlagsW( 3682, 53.796913 ),
	VERT( 0x3f1e737a, 0x404b192b, 0xbf461d5e ),
	NORM( 0x3f249303, 0xbd457448, 0xbf43b38d ),
	NFlagsW( 3683, 51.762764 ),
	VERT( 0x3e9b69d1, 0x404afab0, 0xbf8529de ),
	NORM( 0x3f0012f5, 0xbeea74bd, 0xbf3c1fbf ),
	NFlagsW( 3684, 50.753139 ),
	VERT( 0x3f4fd7c4, 0x404722b8, 0xbf22543d ),
	NORM( 0x3ed7d042, 0xbd8d7f13, 0xbf6778d9 ),
	NFlagsW( 3685, 52.129299 ),
	VERT( 0x3f072f59, 0x40465d37, 0xbf6048cd ),
	NORM( 0x3f07ed28, 0xbedadde7, 0xbf3b4ee3 ),
	NFlagsW( 3686, 51.298599 ),
	VERT( 0x3f4dbc52, 0x404452d0, 0xbf264489 ),
	NORM( 0x3f1cc00a, 0xbeb81f02, 0xbf344022 ),
	NFlagsW( 3687, 51.929848 ),
	VERT( 0x3fc019ec, 0x403f39a3, 0xbf320451 ),
	NORM( 0x3f0641ef, 0x3ed3dd1c, 0xbf3e7f67 ),
	NFlagsW( 3688, 54.829453 ),
	VERT( 0x3f7ea516, 0x4041eaaf, 0xbeb6d0b9 ),
	NORM( 0x3f2f9bb1, 0xbf38cdd5, 0xbdbacd36 ),
	NFlagsW( 3689, 52.660210 ),
	VERT( 0x3f9bedbf, 0x403da642, 0x3df2e0b7 ),
	NORM( 0xbde3f870, 0x3f3b9af5, 0x3f2bd677 ),
	NFlagsW( 3690, 54.503590 ),
	VERT( 0x3f0640a3, 0x4041b856, 0x3e21ad18 ),
	NORM( 0x3cbc0269, 0xbf3e5bb8, 0x3f2b121d ),
	NFlagsW( 3691, 51.814449 ),
	VERT( 0x3fc188dd, 0x403b0c65, 0xbf2c7e14 ),
	NORM( 0x3ee2cc42, 0x3c5932e0, 0xbf657d2b ),
	NFlagsW( 3692, 54.538845 ),
	VERT( 0xbecff7d7, 0x4046ab53, 0xbfccfa96 ),
	NORM( 0x3f50a1b8, 0x3dba12d8, 0xbf1284df ),
	NFlagsW( 3693, 24.348185 ),
	VERT( 0x3f36a5a1, 0x403f77eb, 0xbf81a941 ),
	NORM( 0xbda7bec6, 0x3f6a63d4, 0xbec99213 ),
	NFlagsW( 3694, 51.364494 ),
	VERT( 0x3e874e55, 0x40418832, 0x3dc42948 ),
	NORM( 0xbe06df0c, 0xbf37c313, 0x3f2f041f ),
	NFlagsW( 3695, 51.142365 ),
	VERT( 0x3fcc4768, 0x4038bb54, 0x3e0ba233 ),
	NORM( 0x3ec05d2b, 0x3f22cd95, 0x3f2c91c3 ),
	NFlagsW( 3696, 57.551838 ),
	VERT( 0xbf538f26, 0x40467da3, 0xbff014d6 ),
	NORM( 0x3e8a8536, 0x3dccab48, 0xbf751f15 ),
	NFlagsW( 3697, 0.413433 ),
	VERT( 0x3fe9aa84, 0x4036089e, 0xbeba0c55 ),
	NORM( 0x3f6cfe5f, 0x3eb83562, 0xbdee3c87 ),
	NFlagsW( 3698, 57.746525 ),
	VERT( 0x3f73b533, 0x4039fe58, 0x3d5141af ),
	NORM( 0xbee6da1f, 0x3f2a569e, 0x3f184ed0 ),
	NFlagsW( 3699, 52.543903 ),
	VERT( 0xbc9d9198, 0x403fbb71, 0xbf9da9f7 ),
	NORM( 0x3efc9fe1, 0xbf21fc9b, 0xbf18c77f ),
	NFlagsW( 3700, 47.574162 ),
	VERT( 0xbeb8e464, 0x40411208, 0xbe7ea0bb ),
	NORM( 0x3f3be164, 0x3f2c64c7, 0xbdb5f784 ),
	NFlagsW( 3701, 37.364746 ),
	VERT( 0xbf03113b, 0x40416bb6, 0xbfe4f865 ),
	NORM( 0x3f1927a3, 0xbc7bda07, 0xbf4d186c ),
	NFlagsW( 3702, 14.161168 ),
	VERT( 0x3f9d9c20, 0x403680b9, 0xbf6ae13a ),
	NORM( 0x3f128c40, 0x3ec326f3, 0xbf39d883 ),
	NFlagsW( 3703, 52.458954 ),
	VERT( 0x3fdfe4cc, 0x4031c3db, 0xbf2a7873 ),
	NORM( 0x3f55a5e6, 0x3ef4ef44, 0xbe8be3c2 ),
	NFlagsW( 3704, 55.592674 ),
	VERT( 0x3fd9afe9, 0x4031e5eb, 0xbf132bda ),
	NORM( 0x3f61549a, 0x3ed7e797, 0xbe5f03b0 ),
	NFlagsW( 3705, 55.340439 ),
	VERT( 0x3fa8e176, 0x4033c886, 0xbf4ff6b9 ),
	NORM( 0x3f277a03, 0xbbac7010, 0xbf419cca ),
	NFlagsW( 3706, 52.704666 ),
	VERT( 0xbf425fba, 0x40401d24, 0x3e9ade9a ),
	NORM( 0x3efbb7e7, 0x3e00bb05, 0x3f5c96ee ),
	NFlagsW( 3707, 3.891044 ),
	VERT( 0xbe726499, 0x403c8071, 0xbdb00418 ),
	NORM( 0xbec1b487, 0xbf41a8b3, 0x3f08924e ),
	NFlagsW( 3708, 45.068214 ),
	VERT( 0x3fd9c240, 0x403049db, 0x3e0cfe9a ),
	NORM( 0x3f3494dc, 0x3e888a7f, 0x3f281f97 ),
	NFlagsW( 3709, 57.745819 ),
	VERT( 0xbe92bd39, 0x403c7082, 0xbe329d81 ),
	NORM( 0xbe264bef, 0xbf64865a, 0x3ed74203 ),
	NFlagsW( 3710, 42.915829 ),
	VERT( 0x3eb89b5c, 0x4037aff5, 0xbf9791c3 ),
	NORM( 0xbc8fb248, 0x3f70eab7, 0xbeacea3a ),
	NFlagsW( 3711, 50.510098 ),
	VERT( 0xbeb2b845, 0x403b6aab, 0xbe32e9d9 ),
	NORM( 0xbdfb9517, 0xbf4a8c7d, 0x3f195d9a ),
	NFlagsW( 3712, 39.599682 ),
	VERT( 0xbeed8083, 0x403bc986, 0xbe8785bd ),
	NORM( 0xbf6a6d04, 0xbec57afe, 0x3de69a39 ),
	NFlagsW( 3713, 29.903158 ),
	VERT( 0x3f1b5d4c, 0x4034d150, 0xbf00bf19 ),
	NORM( 0x3eb5cd7d, 0xbf6e78f4, 0xbda0c26b ),
	NFlagsW( 3714, 50.867390 ),
	VERT( 0x3ed877d5, 0x40341d94, 0xbefee5db ),
	NORM( 0xbed832e8, 0x3f4d2680, 0x3ed8ec23 ),
	NFlagsW( 3715, 50.604786 ),
	VERT( 0x3cc4aa5c, 0x4033fc56, 0xbf4343e5 ),
	NORM( 0x3dae1318, 0xbf791027, 0xbe5c2f5c ),
	NFlagsW( 3716, 49.511185 ),
	VERT( 0x3eb7f393, 0x4030a1e4, 0xbf24117b ),
	NORM( 0x3e216dc6, 0xbf73f100, 0xbe84a9c6 ),
	NFlagsW( 3717, 50.428272 ),
	VERT( 0xbf02dc9c, 0x4035f7fb, 0xbfd903a6 ),
	NORM( 0x3f0200c7, 0x3f0eae84, 0xbf282879 ),
	NFlagsW( 3718, 17.991100 ),
	VERT( 0xbe264ced, 0x4033a0de, 0xbf731ead ),
	NORM( 0x3e397c71, 0xbf78cf86, 0xbe19d3e1 ),
	NFlagsW( 3719, 46.768742 ),
	VERT( 0x3f807255, 0x402c3925, 0xbf97da08 ),
	NORM( 0x3ef4fc74, 0x3eb932f6, 0xbf4cd563 ),
	NFlagsW( 3720, 51.233036 ),
	VERT( 0xbea33d7a, 0x4033b512, 0xbf872f92 ),
	NORM( 0x3d875c39, 0xbf7cda42, 0xbe111138 ),
	NFlagsW( 3721, 40.300812 ),
	VERT( 0xbe8264cb, 0x4032e998, 0xbfed3bcd ),
	NORM( 0x3f369c10, 0x3ef952c1, 0xbf010824 ),
	NFlagsW( 3722, 38.488392 ),
	VERT( 0xbed5317a, 0x4033cfb3, 0xbf9c8a38 ),
	NORM( 0x3d99d6db, 0xbf7a1889, 0xbe4cad27 ),
	NFlagsW( 3723, 32.004276 ),
	VERT( 0xbe337fbb, 0x4031dde4, 0xbfc17ab2 ),
	NORM( 0xbcf39d82, 0x3f7dbee4, 0xbe0421a3 ),
	NFlagsW( 3724, 44.518417 ),
	VERT( 0x3e0603ec, 0x402e5aab, 0xbf024d52 ),
	NORM( 0xbe93546b, 0x3f3dae6a, 0x3f1b5705 ),
	NFlagsW( 3725, 50.161289 ),
	VERT( 0xbe560819, 0x402c2c0f, 0xbf2431a2 ),
	NORM( 0x3da94bcb, 0x3f73bc52, 0x3e96bf09 ),
	NFlagsW( 3726, 47.130672 ),
	VERT( 0x3ff422ea, 0x401e84fa, 0xbec4c40b ),
	NORM( 0x3f7c562d, 0x3cd495d5, 0xbe2a8e84 ),
	NFlagsW( 3727, 55.925411 ),
	VERT( 0x3fe0528f, 0x401e0c78, 0x3db3dbfb ),
	NORM( 0x3f4faa90, 0x3d157759, 0x3f156910 ),
	NFlagsW( 3728, 55.924774 ),
	VERT( 0xbe9cb6d0, 0x402aa4a3, 0xbe839bd1 ),
	NORM( 0x3f6191d6, 0x3ed14c54, 0x3e7367d3 ),
	NFlagsW( 3729, 44.832306 ),
	VERT( 0x3fe4533a, 0x401cab50, 0xbf33f3ba ),
	NORM( 0x3f65b2bb, 0x3c735d41, 0xbee1ec49 ),
	NFlagsW( 3730, 53.917641 ),
	VERT( 0x3fe0afb5, 0x401ca4d5, 0xbf197f14 ),
	NORM( 0x3f7dba67, 0x3ccae148, 0xbe05bcbb ),
	NFlagsW( 3731, 53.842361 ),
	VERT( 0x3ec0faad, 0x4023ff98, 0xbfb6a233 ),
	NORM( 0x3ed03474, 0x3f0c38cc, 0xbf3b2e30 ),
	NFlagsW( 3732, 50.214344 ),
	VERT( 0xbef9f923, 0x402699d3, 0x3e791cd3 ),
	NORM( 0x3f0ddf45, 0x3eb87608, 0x3f401935 ),
	NFlagsW( 3733, 33.342686 ),
	VERT( 0x3fa5cf8b, 0x401a99b5, 0x3eae25b0 ),
	NORM( 0x3dab2d90, 0x3d709d86, 0x3f7ea91c ),
	NFlagsW( 3734, 52.713913 ),
	VERT( 0xbe6c6cf5, 0x4022cf7c, 0xc00328aa ),
	NORM( 0x3ea7bc6c, 0x3f0dcbf2, 0xbf43f2d9 ),
	NFlagsW( 3735, 41.011299 ),
	VERT( 0x3f9d408f, 0x401722f6, 0xbf778e28 ),
	NORM( 0x3f331fb9, 0xbcd88a43, 0xbf36c519 ),
	NFlagsW( 3736, 50.982357 ),
	VERT( 0x3f91f918, 0x401610dc, 0xbf8c8c95 ),
	NORM( 0x3f3295f7, 0xbc5b4655, 0xbf37637c ),
	NFlagsW( 3737, 50.781322 ),
	VERT( 0x3f5e2231, 0x401659ee, 0x3e94e607 ),
	NORM( 0xbeebba09, 0x3cccaa18, 0x3f6329e7 ),
	NFlagsW( 3738, 50.831978 ),
	VERT( 0x3f76d903, 0x40143991, 0xbf994717 ),
	NORM( 0x3f09c6ed, 0xbcfc3e91, 0xbf579e5a ),
	NFlagsW( 3739, 50.484802 ),
	VERT( 0xbf138385, 0x401c3a4f, 0xc00e4ef5 ),
	NORM( 0x3df2d70a, 0x3edaaa29, 0xbf657ada ),
	NFlagsW( 3740, 12.205436 ),
	VERT( 0x3fda8ce9, 0x400b513e, 0x3e21e803 ),
	NORM( 0x3f39d626, 0xbe44948b, 0x3f29129a ),
	NFlagsW( 3741, 53.957241 ),
	VERT( 0x3eaf8ce2, 0x4010a177, 0xbe94ca3e ),
	NORM( 0xbe9d6420, 0x3cdb1bb7, 0x3f73820a ),
	NFlagsW( 3742, 50.068890 ),
	VERT( 0x3fe0cb0c, 0x4007526c, 0xbf227a9c ),
	NORM( 0x3f5f7f99, 0xbed8f0ea, 0xbe772ded ),
	NFlagsW( 3743, 52.388660 ),
	VERT( 0x3fda9001, 0x4006b101, 0xbf0b6182 ),
	NORM( 0x3f64c07d, 0xbed6adb0, 0xbe244907 ),
	NFlagsW( 3744, 52.164799 ),
	VERT( 0x3feaa48b, 0x4005d9e1, 0xbeac38b3 ),
	NORM( 0x3f707748, 0xbea882b5, 0xbdc619a3 ),
	NFlagsW( 3745, 53.239471 ),
	VERT( 0x3eab2fd8, 0x400e2f4c, 0xbfd6d9f8 ),
	NORM( 0x3f18bc34, 0x3db40224, 0xbf4c35bc ),
	NFlagsW( 3746, 50.052322 ),
	VERT( 0x3e4d1113, 0x400ee5e8, 0xbe8837ca ),
	NORM( 0xbe15834b, 0x3b90132e, 0x3f7d4109 ),
	NFlagsW( 3747, 50.036453 ),
	VERT( 0x3fcdbdfd, 0x400131d5, 0x3e2ad902 ),
	NORM( 0x3f0209d3, 0xbf06e297, 0x3f2e72a2 ),
	NFlagsW( 3748, 52.475136 ),
	VERT( 0xbd7904d3, 0x400a2479, 0xbc10df7c ),
	NORM( 0x3f601053, 0x3eb2905d, 0x3eab9530 ),
	NFlagsW( 3749, 49.992378 ),
	VERT( 0xbd086bc5, 0x4009e370, 0xbebcc33c ),
	NORM( 0x3f0fa738, 0x3ea4bd6f, 0x3f433b03 ),
	NFlagsW( 3750, 49.992580 ),
	VERT( 0xbe82bef8, 0x4008a41c, 0x3e9bd9d8 ),
	NORM( 0x3f046b5e, 0x3e7469de, 0x3f5265fd ),
	NFlagsW( 3751, 49.204842 ),
	VERT( 0x3fa9c085, 0x3ffa0514, 0xbf44fb60 ),
	NORM( 0x3f26faf5, 0xbc4dd442, 0xbf4204c8 ),
	NFlagsW( 3752, 50.506859 ),
	VERT( 0xbe5d7b44, 0x4004e20d, 0xc0014c7f ),
	NORM( 0x3f057cf9, 0x3c22e68d, 0xbf5a6d5c ),
	NFlagsW( 3753, 45.825993 ),
	VERT( 0x3f81c0ed, 0x3ffa1202, 0xbf964267 ),
	NORM( 0x3f1a9404, 0xbea354f3, 0xbf3b023d ),
	NFlagsW( 3754, 50.198376 ),
	VERT( 0x3fc2eb9b, 0x3ff3a9f0, 0xbf20b9d3 ),
	NORM( 0x3ec171c7, 0x3ca04966, 0xbf6cf8d6 ),
	NFlagsW( 3755, 50.871040 ),
	VERT( 0x40017648, 0x3fed1ff9, 0xbf0e61a4 ),
	NORM( 0x3dd35349, 0x3f7b0734, 0xbe2aca4d ),
	NFlagsW( 3756, 53.395760 ),
	VERT( 0xbf19b123, 0x40053816, 0xc00cb1f2 ),
	NORM( 0x3e9a188e, 0x3d26970c, 0xbf73e880 ),
	NFlagsW( 3757, 14.479017 ),
	VERT( 0x3fc1abc4, 0x3fedb466, 0xbf250299 ),
	NORM( 0x3f217e70, 0xbeb2ee9b, 0xbf31588b ),
	NFlagsW( 3758, 50.762131 ),
	VERT( 0x3fe054de, 0x3fea9ce6, 0xbf332b07 ),
	NORM( 0xbde32499, 0x3f76aaa4, 0xbe79555a ),
	NFlagsW( 3759, 51.498974 ),
	VERT( 0x3f9ee229, 0x3ff0b3a3, 0xbf5e29f5 ),
	NORM( 0x3f283978, 0xbec7398a, 0xbf2544ea ),
	NFlagsW( 3760, 50.315224 ),
	VERT( 0x3fda426a, 0x3fea28e2, 0xbeb41aee ),
	NORM( 0x3f3b74c1, 0xbf2e02f8, 0xbd2c779a ),
	NFlagsW( 3761, 51.524902 ),
	VERT( 0x401d17e1, 0x3fe09625, 0xbec87cd1 ),
	NORM( 0x3f162ab4, 0x3f4e1142, 0xbdb6cdab ),
	NFlagsW( 3762, 58.969204 ),
	VERT( 0x3f9ddfee, 0x3fea2080, 0x3e288afc ),
	NORM( 0x3de79710, 0xbf31d342, 0x3f35de56 ),
	NFlagsW( 3763, 50.514782 ),
	VERT( 0x3f77182a, 0x3fe6b73a, 0x3dc91e84 ),
	NORM( 0xbea280b5, 0xbf3058b6, 0x3f26d773 ),
	NFlagsW( 3764, 50.142311 ),
	VERT( 0x400fc811, 0x3fd596d4, 0xbf311db5 ),
	NORM( 0x3efa881f, 0x3ed65618, 0xbf43db10 ),
	NFlagsW( 3765, 54.586201 ),
	VERT( 0x3ee9eb75, 0x3fea8b73, 0xbfbded1b ),
	NORM( 0x3f20ed40, 0xbeae5734, 0xbf32ff3a ),
	NFlagsW( 3766, 50.009079 ),
	VERT( 0x3ff8306c, 0x3fd1cf23, 0x3dfcb21b ),
	NORM( 0xbde7b03b, 0x3f3b6884, 0x3f2bf99b ),
	NFlagsW( 3767, 53.382484 ),
	VERT( 0x40108e7b, 0x3fcd38b9, 0xbf2ba77c ),
	NORM( 0x3ed28989, 0x3ca0997d, 0xbf694d0c ),
	NFlagsW( 3768, 54.485840 ),
	VERT( 0x40167b66, 0x3fc8b972, 0x3e1051c4 ),
	NORM( 0x3eb19620, 0x3f2518eb, 0x3f2e572f ),
	NFlagsW( 3769, 58.772652 ),
	VERT( 0x3fb152f4, 0x3fd4791d, 0xbf809fdd ),
	NORM( 0xbdcf1fb7, 0x3f68d982, 0xbece5dac ),
	NFlagsW( 3770, 50.308681 ),
	VERT( 0x3ec45da2, 0x3fdfc04e, 0xbeec781a ),
	NORM( 0xbda9a36b, 0xbf339d7a, 0x3f352d10 ),
	NFlagsW( 3771, 50.000656 ),
	VERT( 0x40268dbb, 0x3fc3e3a4, 0xbeb82484 ),
	NORM( 0x3f69ff3d, 0x3ec616eb, 0xbdf95b02 ),
	NFlagsW( 3772, 60.555588 ),
	VERT( 0x3f01784d, 0x3fdd11e7, 0xbee8ac9c ),
	NORM( 0xbea4d56f, 0xbf5229eb, 0x3ef1737a ),
	NFlagsW( 3773, 50.001919 ),
	VERT( 0x3fd2f4a5, 0x3fc9f5cf, 0x3d684da6 ),
	NORM( 0xbedb498a, 0x3f2c7984, 0x3f1a2a2b ),
	NFlagsW( 3774, 51.139961 ),
	VERT( 0x3fa85c79, 0x3fccf0a1, 0xbefed742 ),
	NORM( 0x3ec3ab67, 0xbf6c02ee, 0xbd81b96f ),
	NFlagsW( 3775, 50.187893 ),
	VERT( 0x3ff9b182, 0x3fc382fa, 0xbf69fb02 ),
	NORM( 0x3f09bb96, 0x3ec648c4, 0xbf3faaf3 ),
	NFlagsW( 3776, 51.651752 ),
	VERT( 0xbecb4f4e, 0x3fdfc5ab, 0xc00c45d9 ),
	NORM( 0x3efe5604, 0x3cd3574d, 0xbf5e1527 ),
	NFlagsW( 3777, 38.019882 ),
	VERT( 0x4021397a, 0x3fbb38a0, 0xbf295c60 ),
	NORM( 0x3f53bcfc, 0x3efecc1e, 0xbe85c0f0 ),
	NFlagsW( 3778, 57.402260 ),
	VERT( 0x401dca5b, 0x3fbb5f89, 0xbf123fa8 ),
	NORM( 0x3f5c1605, 0x3ee99c6c, 0xbe6b1aba ),
	NFlagsW( 3779, 56.831886 ),
	VERT( 0x40030823, 0x3fbe3817, 0xbf4f0eb4 ),
	NORM( 0x3f1eb99a, 0xbc0982c3, 0xbf48d7b7 ),
	NFlagsW( 3780, 52.140076 ),
	VERT( 0x401dc8ff, 0x3fb80bcd, 0x3e12556f ),
	NORM( 0x3f2f160c, 0x3e8f4514, 0x3f2c7ad7 ),
	NFlagsW( 3781, 60.175289 ),
	VERT( 0x3f3a9fee, 0x3fcb1fc9, 0xbf80e2af ),
	NORM( 0x3e7ff6a9, 0xbf705fc9, 0xbe7209fd ),
	NFlagsW( 3782, 50.005745 ),
	VERT( 0x3daefbd2, 0x3fd29ea9, 0xbfe393e7 ),
	NORM( 0x3f30b353, 0xbe25b33b, 0xbf348bd0 ),
	NFlagsW( 3783, 49.992817 ),
	VERT( 0x3e0b48fa, 0x3fd1407b, 0xbe4ec7c2 ),
	NORM( 0x3f5c0220, 0x3ee6db14, 0x3e76dc39 ),
	NFlagsW( 3784, 50.000000 ),
	VERT( 0xbd8f6b85, 0x3fd34bd3, 0x3e9acd78 ),
	NORM( 0x3f0f5ba5, 0x3e43c321, 0x3f4e5f2d ),
	NFlagsW( 3785, 50.000011 ),
	VERT( 0x3f88baba, 0x3fc47fac, 0xbf228c0c ),
	NORM( 0x3e2c3260, 0xbf7a0665, 0xbe08d648 ),
	NFlagsW( 3786, 50.036057 ),
	VERT( 0x3f7fa5f1, 0x3fc43fda, 0xbf93e8bc ),
	NORM( 0xbd77cfbc, 0x3f6d152e, 0xbebea92f ),
	NFlagsW( 3787, 50.037098 ),
	VERT( 0x3e5360c0, 0x3fcc0ffa, 0xbf176389 ),
	NORM( 0x3efe3cbd, 0xbf4e7b6c, 0x3ea4381b ),
	NFlagsW( 3788, 50.000000 ),
	VERT( 0x3efd6bc5, 0x3fc6367a, 0xbf971b09 ),
	NORM( 0x3eacb5a2, 0xbf6d0542, 0xbe2e5c72 ),
	NFlagsW( 3789, 50.000298 ),
	VERT( 0x3f895da2, 0x3fbd43c6, 0xbefbb050 ),
	NORM( 0xbedf6ae4, 0x3f490e56, 0x3ee0cc84 ),
	NFlagsW( 3790, 50.027149 ),
	VERT( 0x3fd9ac8b, 0x3faea7fd, 0xbf974bae ),
	NORM( 0x3edff76f, 0x3ebc0bd8, 0xbf5221c2 ),
	NFlagsW( 3791, 50.583588 ),
	VERT( 0x3e747f14, 0x3fbbb3fc, 0xbfb8b2a4 ),
	NORM( 0x3ed20854, 0xbf6391d0, 0xbe509a08 ),
	NFlagsW( 3792, 50.000000 ),
	VERT( 0x3f6020a8, 0x3fb39f54, 0xbeff555c ),
	NORM( 0xbeabcb11, 0x3f338923, 0x3f2102f2 ),
	NFlagsW( 3793, 50.002361 ),
	VERT( 0x3ee12b50, 0x3fb85308, 0xbfbfc66a ),
	NORM( 0x3e108488, 0x3f708b68, 0xbe9f9c97 ),
	NFlagsW( 3794, 50.000061 ),
	VERT( 0x3d44269e, 0x3fb7e38e, 0xbfe3c7bb ),
	NORM( 0x3f2f9e7d, 0x3eb2ee80, 0xbf235ec2 ),
	NFlagsW( 3795, 49.996643 ),
	VERT( 0x3d910944, 0x3fb62a98, 0xbfe3ea7b ),
	NORM( 0x3ed4439f, 0x3f4b6b65, 0xbee31715 ),
	NFlagsW( 3796, 49.999073 ),
	VERT( 0x3f0d439c, 0x3fafb178, 0xbf2203d9 ),
	NORM( 0x3d0eab11, 0x3f75cfe1, 0x3e8de2e4 ),
	NFlagsW( 3797, 50.000000 ),
	VERT( 0x402c4c1d, 0x3f94d1c2, 0xbec2de94 ),
	NORM( 0x3f7bfd96, 0x3ce77a6f, 0xbe323018 ),
	NFlagsW( 3798, 60.258598 ),
	VERT( 0x40215d7d, 0x3f939304, 0x3dbed08e ),
	NORM( 0x3f4b0cb7, 0x3d1a9760, 0x3f1b9b58 ),
	NFlagsW( 3799, 59.271629 ),
	VERT( 0x3ee472e5, 0x3facf265, 0xbe8105f1 ),
	NORM( 0x3f2fd38f, 0x3f2eacbb, 0x3e80373d ),
	NFlagsW( 3800, 50.000000 ),
	VERT( 0x4023a9d1, 0x3f90e3ee, 0xbf32d3bd ),
	NORM( 0x3f65a585, 0x3c8d36b6, 0xbee2169d ),
	NFlagsW( 3801, 56.486000 ),
	VERT( 0x4021a1b9, 0x3f90c6df, 0xbf187206 ),
	NORM( 0x3f7d8bf0, 0x3cd71f1a, 0xbe0ad911 ),
	NFlagsW( 3802, 56.263840 ),
	VERT( 0x3f82959b, 0x3f9d3d1b, 0xbfb04b3a ),
	NORM( 0x3e5efb14, 0x3f1db315, 0xbf41cd64 ),
	NFlagsW( 3803, 50.016243 ),
	VERT( 0x40015dee, 0x3f8bd1b6, 0x3eb0a1b9 ),
	NORM( 0x3d948dc8, 0x3d6b40df, 0x3f7ee6e6 ),
	NFlagsW( 3804, 52.791344 ),
	VERT( 0x3e0491b1, 0x3fa1fdb2, 0x3e818161 ),
	NORM( 0x3ef218bd, 0x3eac5584, 0x3f507798 ),
	NFlagsW( 3805, 50.000000 ),
	VERT( 0x3ea94f4e, 0x3f99a9d4, 0xbfe813af ),
	NORM( 0x3f02354b, 0x3ef4a62a, 0xbf375a86 ),
	NFlagsW( 3806, 50.000000 ),
	VERT( 0x3ff942e5, 0x3f84c005, 0xbf7697f1 ),
	NORM( 0x3f2bd64b, 0xbce7608c, 0xbf3d9eb9 ),
	NFlagsW( 3807, 50.872719 ),
	VERT( 0xbf82f056, 0x3fa8f25b, 0xc0218d90 ),
	NORM( 0x3ee31fa3, 0x3e97e13d, 0xbf58805d ),
	NFlagsW( 3808, 0.193171 ),
	VERT( 0x3fecccaa, 0x3f827142, 0xbf8c215f ),
	NORM( 0x3f27ac26, 0xbc4a92dd, 0xbf416bf3 ),
	NFlagsW( 3809, 50.595562 ),
	VERT( 0x3fc6f2ef, 0x3f827664, 0x3e9775f1 ),
	NORM( 0xbef1ba22, 0x3c1c93a8, 0x3f61a8bb ),
	NFlagsW( 3810, 50.282200 ),
	VERT( 0x3fd41f50, 0x3f7d0433, 0xbf973eb1 ),
	NORM( 0x3efde02d, 0xbd2741f4, 0xbf5e1103 ),
	NFlagsW( 3811, 50.256897 ),
	VERT( 0x401e2c9b, 0x3f5be1ac, 0x3e273ad3 ),
	NORM( 0x3f34c293, 0xbe4fcfa3, 0x3f2dac96 ),
	NFlagsW( 3812, 57.295006 ),
	VERT( 0x3f8c7f55, 0x3f70bcf3, 0xbe92aa69 ),
	NORM( 0xbebc5a42, 0xbc00ae7b, 0x3f6e0a1b ),
	NFlagsW( 3813, 50.000210 ),
	VERT( 0x4021aa75, 0x3f4beb52, 0xbf214709 ),
	NORM( 0x3f5e57ab, 0xbee0ba94, 0xbe6bc3ea ),
	NFlagsW( 3814, 55.158657 ),
	VERT( 0xbd2f6f77, 0x3f83dae1, 0xc01165ba ),
	NORM( 0x3f061707, 0x3e6cfb5e, 0xbf51deff ),
	NFlagsW( 3815, 49.801723 ),
	VERT( 0x4027083f, 0x3f464d08, 0xbeaa41dc ),
	NORM( 0x3f6e21cd, 0xbeb4adf5, 0xbdcebe97 ),
	NFlagsW( 3816, 57.286865 ),
	VERT( 0x401e389c, 0x3f493162, 0xbf0a64d1 ),
	NORM( 0x3f604943, 0xbee79275, 0xbe2ae4f9 ),
	NFlagsW( 3817, 54.598026 ),
	VERT( 0x3f772932, 0x3f6a35ac, 0xbe86566d ),
	NORM( 0xbe426d83, 0xbbbfecff, 0x3f7b56b3 ),
	NFlagsW( 3818, 50.000000 ),
	VERT( 0x3f82ec37, 0x3f6506b5, 0xbfd79743 ),
	NORM( 0x3eeb9738, 0x3e7ef692, 0xbf5a2b10 ),
	NFlagsW( 3819, 50.010918 ),
	VERT( 0x401733e9, 0x3f331295, 0x3e2f96a7 ),
	NORM( 0x3ef8a958, 0xbf0980fd, 0x3f308d46 ),
	NFlagsW( 3820, 54.959023 ),
	VERT( 0x3f48d52b, 0x3f59d482, 0xbeba963d ),
	NORM( 0x3eed6930, 0x3ebe6cd8, 0x3f4ddcf0 ),
	NFlagsW( 3821, 50.000000 ),
	VERT( 0x3f3a304c, 0x3f592141, 0x3b0c2ca2 ),
	NORM( 0x3f426442, 0x3ec61ad7, 0x3f05ed62 ),
	NFlagsW( 3822, 50.000000 ),
	VERT( 0x40036faf, 0x3f215c71, 0xbf44145a ),
	NORM( 0x3f1e408f, 0xbc361cff, 0xbf4934ee ),
	NFlagsW( 3823, 50.894367 ),
	VERT( 0x3e9bc954, 0x3f48c66a, 0x3ea5f580 ),
	NORM( 0x3ea4d419, 0x3e1a2284, 0x3f6f49e4 ),
	NFlagsW( 3824, 50.000000 ),
	VERT( 0x40113b46, 0x3f1535af, 0xbf1fe0ba ),
	NORM( 0x3eb633fa, 0x3bf35058, 0xbf6f3be8 ),
	NFlagsW( 3825, 52.091736 ),
	VERT( 0x3fdb241c, 0x3f207acd, 0xbf969490 ),
	NORM( 0x3f120090, 0xbe906eea, 0xbf457e9e ),
	NFlagsW( 3826, 50.196957 ),
	VERT( 0x3eabb229, 0x3f3a8442, 0xc000e67e ),
	NORM( 0x3eeea64d, 0x3e9a640b, 0xbf54eda6 ),
	NFlagsW( 3827, 50.000000 ),
	VERT( 0x40108c39, 0x3f093084, 0xbf24177c ),
	NORM( 0x3f198ba6, 0xbeb7524a, 0xbf37304f ),
	NFlagsW( 3828, 51.951218 ),
	VERT( 0x401e09d8, 0x3f02c999, 0xbeb20882 ),
	NORM( 0x3f36ef15, 0xbf32981c, 0xbd53d85f ),
	NFlagsW( 3829, 54.427250 ),
	VERT( 0x3ffaf4a4, 0x3f0e66bf, 0xbf5d36c0 ),
	NORM( 0x3f230ab1, 0xbec9c62f, 0xbf29a1ec ),
	NFlagsW( 3830, 50.551777 ),
	VERT( 0x40229e78, 0x3ef74feb, 0xbf17cc5e ),
	NORM( 0x3db26b0b, 0x3f7b644d, 0xbe2b9dcd ),
	NFlagsW( 3831, 54.815380 ),
	VERT( 0x3ffa14c6, 0x3f01409b, 0x3e2d6d98 ),
	NORM( 0x3de72a7a, 0xbf31aa52, 0x3f36087e ),
	NFlagsW( 3832, 50.846405 ),
	VERT( 0x40107afe, 0x3eeccf49, 0xbf3eef76 ),
	NORM( 0xbe077435, 0x3f75d08e, 0xbe7bdab0 ),
	NFlagsW( 3833, 51.818485 ),
	VERT( 0x40425763, 0x3ec59de4, 0xbed63f2c ),
	NORM( 0x3f10422f, 0x3f51f199, 0xbdcbd198 ),
	NFlagsW( 3834, 65.725197 ),
	VERT( 0xbd8dcbd0, 0x3f2a01a1, 0xc00fcb14 ),
	NORM( 0x3eef8dc9, 0x3e68fce4, 0xbf5a9ff1 ),
	NFlagsW( 3835, 49.885078 ),
	VERT( 0x3fd4855d, 0x3ef2e18d, 0x3dd31c5e ),
	NORM( 0xbea7e411, 0xbf2fc7b9, 0x3f261a97 ),
	NFlagsW( 3836, 50.101082 ),
	VERT( 0x3f93ef29, 0x3ef81b8a, 0xbfb58444 ),
	NORM( 0x3f26fc94, 0xbe777bd3, 0xbf37e95c ),
	NFlagsW( 3837, 50.003155 ),
	VERT( 0x4032f6ea, 0x3e958d6d, 0xbf3ca6a7 ),
	NORM( 0x3eeab2d3, 0x3ed6a639, 0xbf489d90 ),
	NFlagsW( 3838, 58.410091 ),
	VERT( 0x3f9ce5ac, 0x3ece4f4b, 0xbee6843c ),
	NORM( 0xbe95e185, 0xbf5130b7, 0x3efe3d21 ),
	NFlagsW( 3839, 50.000000 ),
	VERT( 0x3f87f5f3, 0x3ed5baea, 0xbee890d5 ),
	NORM( 0xbf0c432d, 0xbf2324ed, 0x3f0abb41 ),
	NFlagsW( 3840, 50.000000 ),
	VERT( 0x4033d502, 0x3e64c29f, 0xbf36cd77 ),
	NORM( 0x3ec22726, 0x3c9360de, 0xbf6cd5d6 ),
	NFlagsW( 3841, 58.675785 ),
	VERT( 0x401c72b2, 0x3e82bfde, 0x3e02e94c ),
	NORM( 0xbdfe88df, 0x3f3a8c2f, 0x3f2c67d4 ),
	NFlagsW( 3842, 55.111313 ),
	VERT( 0x3ff859e5, 0x3e947887, 0xbf890ea5 ),
	NORM( 0xbda60af8, 0x3f624324, 0xbeebe2ed ),
	NFlagsW( 3843, 50.446289 ),
	VERT( 0x4002bb0c, 0x3e8e3055, 0xbefc8235 ),
	NORM( 0x3ebc3779, 0xbf6d6654, 0xbd8f53a5 ),
	NFlagsW( 3844, 50.717628 ),
	VERT( 0x403ac19b, 0x3e3ea31d, 0x3e159676 ),
	NORM( 0x3ea46a12, 0x3f26dc88, 0x3f2fe258 ),
	NFlagsW( 3845, 65.938881 ),
	VERT( 0x404d29ec, 0x3e1a8f3f, 0xbec4f3d5 ),
	NORM( 0x3f67101b, 0x3ed2bc85, 0xbe013638 ),
	NFlagsW( 3846, 70.654739 ),
	VERT( 0xbf53ec68, 0x3f03e1ee, 0xc02e3b6a ),
	NORM( 0x3eef3c93, 0x3d9c863d, 0xbf617cd4 ),
	NFlagsW( 3847, 2.837237 ),
	VERT( 0x3f894c40, 0x3ea921fa, 0xbe455281 ),
	NORM( 0x3f5bc374, 0x3eb1d947, 0x3ec1359f ),
	NFlagsW( 3848, 50.000000 ),
	VERT( 0x3f500e79, 0x3ea8c082, 0xbfe32ba4 ),
	NORM( 0x3f27c067, 0x3e2133c5, 0xbf3d220a ),
	NFlagsW( 3849, 50.000031 ),
	VERT( 0x3fba2b70, 0x3e870b18, 0xbf802c26 ),
	NORM( 0x3ea4a438, 0xbf6e952b, 0xbe2b77d9 ),
	NFlagsW( 3850, 50.012928 ),
	VERT( 0x4008e7c2, 0x3e43b446, 0x3d631b9c ),
	NORM( 0xbefa1251, 0x3f270812, 0x3f14551f ),
	NFlagsW( 3851, 51.530396 ),
	VERT( 0x3f8a1e7d, 0x3e961978, 0xbf1462cd ),
	NORM( 0x3f7f59cd, 0xbcf80c0a, 0x3d83ea2b ),
	NFlagsW( 3852, 50.000000 ),
	VERT( 0x3fe2df9e, 0x3e556f2e, 0xbf214dfa ),
	NORM( 0x3e1b8043, 0xbf7af728, 0xbe010f94 ),
	NFlagsW( 3853, 50.133698 ),
	VERT( 0x40470d67, 0x3d9ea326, 0xbf347bc0 ),
	NORM( 0x3f52333f, 0x3f0344f6, 0xbe8060cd ),
	NFlagsW( 3854, 65.809837 ),
	VERT( 0x401d24e0, 0x3e0ca9d2, 0xbf78db70 ),
	NORM( 0x3f059275, 0x3ec4468e, 0xbf43193f ),
	NFlagsW( 3855, 53.103065 ),
	VERT( 0x40430d6b, 0x3d9fe39f, 0xbf1c1357 ),
	NORM( 0x3f56df24, 0x3ef9ce8e, 0xbe7572e6 ),
	NFlagsW( 3856, 64.592758 ),
	VERT( 0x3e4659bd, 0x3eb0df04, 0xc00f8bf0 ),
	NORM( 0x3ee62171, 0x3e3e4304, 0xbf5fae85 ),
	NFlagsW( 3857, 50.000000 ),
	VERT( 0x3efccdf0, 0x3e99e77d, 0x3ea652ed ),
	NORM( 0x3eba1608, 0x3cb5af8d, 0x3f6e6cf4 ),
	NFlagsW( 3858, 50.000000 ),
	VERT( 0x40430b53, 0x3d4dd7ef, 0x3e1844a5 ),
	NORM( 0x3f2a0413, 0x3e954787, 0x3f303cb3 ),
	NFlagsW( 3859, 69.814941 ),
	VERT( 0x4024384d, 0x3dc4b83f, 0xbf5c52f1 ),
	NORM( 0x3f17245f, 0xbc7cc30e, 0xbf4e9537 ),
	NFlagsW( 3860, 54.392773 ),
	VERT( 0x3fa1220c, 0x3e417754, 0xbf97a06e ),
	NORM( 0x3ea1c281, 0xbf6d0184, 0xbe548374 ),
	NFlagsW( 3861, 50.001789 ),
	VERT( 0x3fba0c9d, 0x3e18cf8d, 0xbf95dd62 ),
	NORM( 0xbdaa0086, 0x3f72769f, 0xbe9eb19f ),
	NFlagsW( 3862, 50.018311 ),
	VERT( 0x3fddc1c5, 0x3df0b03b, 0xbf079513 ),
	NORM( 0xbed91157, 0x3f4d64d4, 0x3ed7202b ),
	NFlagsW( 3863, 50.091110 ),
	VERT( 0x3f89d33a, 0x3e26d8e1, 0xbfb5e6a0 ),
	NORM( 0x3efa16c7, 0xbf51d888, 0xbe992950 ),
	NFlagsW( 3864, 50.000328 ),
	VERT( 0x3f6e71b5, 0x3e081bea, 0xbfe2cc3b ),
	NORM( 0x3f5146dd, 0xbe966390, 0xbefda749 ),
	NFlagsW( 3865, 50.000465 ),
	VERT( 0x3fb5e3c3, 0x3d829263, 0xbf091808 ),
	NORM( 0xbea9d799, 0x3f37ab3d, 0x3f1ccffe ),
	NFlagsW( 3866, 50.001598 ),
	VERT( 0x3f87e6bc, 0x3d9b0a4b, 0xbfc48235 ),
	NORM( 0x3e99cd50, 0x3f5f7a18, 0xbec4c6e4 ),
	NFlagsW( 3867, 50.000645 ),
	VERT( 0x400b8428, 0xbd21101d, 0xbfa10b1c ),
	NORM( 0x3ecfadfb, 0x3ea7908e, 0xbf5a7b10 ),
	NFlagsW( 3868, 51.229713 ),
	VERT( 0x3f3edd20, 0x3dc22f89, 0xbffdc1e0 ),
	NORM( 0x3f2b0a0c, 0x3e29c693, 0xbf39b02c ),
	NFlagsW( 3869, 50.000031 ),
	VERT( 0x3f9f7c3e, 0x3c90657f, 0xbf271492 ),
	NORM( 0xbdbdce43, 0x3f7496d3, 0x3e8f8426 ),
	NFlagsW( 3870, 50.000008 ),
	VERT( 0x3f9cb67e, 0xbbdc8ce6, 0xbe88cc2a ),
	NORM( 0x3f634092, 0x3e90277d, 0x3eba84d0 ),
	NFlagsW( 3871, 50.000000 ),
	VERT( 0x4053c6f0, 0xbe74e757, 0xbed06483 ),
	NORM( 0x3f7bb5bd, 0x3cfa03c2, 0xbe380c1c ),
	NFlagsW( 3872, 73.860458 ),
	VERT( 0x404724a0, 0xbe8101f9, 0x3dc4a992 ),
	NORM( 0x3f46c506, 0x3d1f797a, 0x3f210502 ),
	NFlagsW( 3873, 71.602036 ),
	VERT( 0x4049da40, 0xbe8c1501, 0xbf3e7840 ),
	NORM( 0x3f65f41c, 0x3ca183fd, 0xbee0c88f ),
	NFlagsW( 3874, 67.003593 ),
	VERT( 0x4047764a, 0xbe8cdb65, 0xbf22ad66 ),
	NORM( 0x3f7d7cf1, 0x3ce1f80e, 0xbe0c4858 ),
	NFlagsW( 3875, 66.532318 ),
	VERT( 0xbf4673e0, 0x3da08ff1, 0xc0273476 ),
	NORM( 0x3f02d8f3, 0xbde5ff7e, 0xbf5a25ce ),
	NFlagsW( 3876, 6.111551 ),
	VERT( 0x3fb21311, 0xbe0c1b21, 0xbfb6aaae ),
	NORM( 0x3eb1a5cf, 0x3f0065eb, 0xbf4ae141 ),
	NFlagsW( 3877, 50.022461 ),
	VERT( 0x3f119ed1, 0xbdb0c44d, 0x3e815a7b ),
	NORM( 0x3ec9c0b4, 0x3cf0be56, 0x3f6b2aab ),
	NFlagsW( 3878, 50.000000 ),
	VERT( 0x4022602a, 0xbea58384, 0x3eb9b366 ),
	NORM( 0x3d717ced, 0x3d67f98f, 0x3f7f24a2 ),
	NFlagsW( 3879, 57.992043 ),
	VERT( 0x3f35c62a, 0xbe2cf0af, 0xbff8a3b9 ),
	NORM( 0x3f18338f, 0x3d2845a7, 0xbf4d929b ),
	NFlagsW( 3880, 50.000000 ),
	VERT( 0x401ccf38, 0xbec415db, 0xbf8329ea ),
	NORM( 0x3f251551, 0xbcf5d720, 0xbf4382c8 ),
	NFlagsW( 3881, 53.169067 ),
	VERT( 0x40158c22, 0xbecf0ece, 0xbf952b22 ),
	NORM( 0x3f1fee40, 0xbd090f81, 0xbf47b63b ),
	NFlagsW( 3882, 52.223717 ),
	VERT( 0x40025cdd, 0xbecc6cb0, 0x3e9e8611 ),
	NORM( 0xbf04117b, 0x3ce7ade2, 0x3f5b2f10 ),
	NFlagsW( 3883, 51.352703 ),
	VERT( 0x40072eaa, 0xbee31d28, 0xbfa102d8 ),
	NORM( 0x3edef502, 0xbd2342ba, 0xbf663a16 ),
	NFlagsW( 3884, 51.059731 ),
	VERT( 0x40437290, 0xbf10b93a, 0x3e2e7e14 ),
	NORM( 0x3f3018a2, 0xbe59e90f, 0x3f31a589 ),
	NFlagsW( 3885, 71.249702 ),
	VERT( 0x3da5a99e, 0xbe90d937, 0xc015d8ce ),
	NORM( 0x3ea0e539, 0xbc10eca3, 0xbf73054b ),
	NFlagsW( 3886, 49.997028 ),
	VERT( 0x3fcfacb7, 0xbef1a35b, 0xbe9eef2b ),
	NORM( 0xbee246d1, 0x3d963dc5, 0x3f64df98 ),
	NFlagsW( 3887, 50.050663 ),
	VERT( 0x4047821a, 0xbf21677d, 0xbf2be86b ),
	NORM( 0x3f5d6638, 0xbee6d8f2, 0xbe621f77 ),
	NFlagsW( 3888, 67.139908 ),
	VERT( 0x404da8bf, 0xbf273a56, 0xbeb6272d ),
	NORM( 0x3f6bdbdc, 0xbebfbf06, 0xbdd5e91e ),
	NFlagsW( 3889, 72.204262 ),
	VERT( 0x40437f67, 0xbf24973e, 0xbf13b880 ),
	NORM( 0x3f5bee4d, 0xbef6c72c, 0xbe3040c1 ),
	NFlagsW( 3890, 65.956024 ),
	VERT( 0x3fac4a7a, 0xbf04d281, 0xbe9133aa ),
	NORM( 0xbef12c81, 0x3ddb0178, 0x3f6027a1 ),
	NFlagsW( 3891, 50.000965 ),
	VERT( 0xbf38fb86, 0xbeb77cfb, 0xc0202d63 ),
	NORM( 0x3f08f485, 0x3c67883e, 0xbf584145 ),
	NFlagsW( 3892, 10.628498 ),
	VERT( 0x3fad1760, 0xbf111ea3, 0xbfd4bf3e ),
	NORM( 0x3eefc983, 0xbda83a0b, 0xbf6135a6 ),
	NFlagsW( 3893, 50.053101 ),
	VERT( 0x403b7f0f, 0xbf3c2d29, 0x3e36e35b ),
	NORM( 0x3eee770a, 0xbf0b9fea, 0x3f3264f9 ),
	NFlagsW( 3894, 68.184212 ),
	VERT( 0x3f949a15, 0xbf11ffc9, 0x3bef2d45 ),
	NORM( 0x3f36de49, 0xbe057043, 0x3f30049a ),
	NFlagsW( 3895, 50.000000 ),
	VERT( 0x3fa5f40b, 0xbf163bd7, 0xbec69071 ),
	NORM( 0xbde02743, 0x3e1a45d3, 0x3f7b85b0 ),
	NFlagsW( 3896, 50.000553 ),
	VERT( 0x3efcced1, 0xbf090451, 0x3eae42e9 ),
	NORM( 0x3e77b86b, 0xbcb2fe9a, 0x3f78554d ),
	NFlagsW( 3897, 50.000000 ),
	VERT( 0x3f04ea15, 0xbf18bfe0, 0xc008c609 ),
	NORM( 0x3ef37c1a, 0xbdc927b8, 0xbf5fca95 ),
	NFlagsW( 3898, 50.000000 ),
	VERT( 0x40249e84, 0xbf507ae2, 0xbf50a319 ),
	NORM( 0x3f16336a, 0xbc0a89ff, 0xbf4f4b69 ),
	NFlagsW( 3899, 55.488914 ),
	VERT( 0x3b62c4de, 0xbf14368c, 0xc01413be ),
	NORM( 0x3e8c8d80, 0xbd6478ca, 0xbf75c025 ),
	NFlagsW( 3900, 49.958874 ),
	VERT( 0x4034852e, 0xbf5c8fe9, 0xbf2a4d38 ),
	NORM( 0x3ea66d43, 0x3bfffbdd, 0xbf721706 ),
	NFlagsW( 3901, 60.472672 ),
	VERT( 0x400b090b, 0xbf537db8, 0xbf9d1447 ),
	NORM( 0x3ef6d85e, 0xbec44644, 0xbf49ac43 ),
	NFlagsW( 3902, 51.630985 ),
	VERT( 0x404351ec, 0xbf6f2bf1, 0xbebe66e1 ),
	NORM( 0x3f32db16, 0xbf367edc, 0xbd78e41e ),
	NFlagsW( 3903, 68.352539 ),
	VERT( 0x4033bd1b, 0xbf69407e, 0xbf2ed6f0 ),
	NORM( 0x3f126a38, 0xbeb868d9, 0xbf3cabec ),
	NFlagsW( 3904, 60.321171 ),
	VERT( 0x401da9f3, 0xbf6504f4, 0xbf6b8fa4 ),
	NORM( 0x3f1680d9, 0xbed30a94, 0xbf322f8c ),
	NFlagsW( 3905, 54.160500 ),
	VERT( 0x401d6915, 0xbf726786, 0x3e34e5d0 ),
	NORM( 0x3dda9150, 0xbf316ea1, 0x3f3680ce ),
	NFlagsW( 3906, 57.523067 ),
	VERT( 0x4051ce40, 0xbf8acceb, 0xbf904989 ),
	NORM( 0x3dac1a2e, 0x3f79ec0b, 0xbe4c6ff3 ),
	NFlagsW( 3907, 71.207741 ),
	VERT( 0x4008cac6, 0xbf7ae0ac, 0x3ddbe5e2 ),
	NORM( 0xbeafe1ed, 0xbf2bd83c, 0x3f28245c ),
	NFlagsW( 3908, 52.858364 ),
	VERT( 0x3fb1afcb, 0xbf7195c7, 0xbfb009a6 ),
	NORM( 0x3eb7c5da, 0xbf1172c0, 0xbf3d9289 ),
	NFlagsW( 3909, 50.073105 ),
	VERT( 0x3d708a2d, 0xbf59fa9f, 0xc013964e ),
	NORM( 0x3d6c4812, 0xbef895be, 0xbf5f507b ),
	NFlagsW( 3910, 49.975769 ),
	VERT( 0x3fd2ce49, 0xbf87c05a, 0xbef4644f ),
	NORM( 0xbe3a1504, 0xbf456900, 0x3f1c355c ),
	NFlagsW( 3911, 50.232697 ),
	VERT( 0x40244aed, 0xbf93dbbb, 0xbf9fe1be ),
	NORM( 0xbe1da05b, 0x3f729e19, 0xbe8f1b18 ),
	NFlagsW( 3912, 55.824524 ),
	VERT( 0x3f63e7a1, 0xbf81b6c1, 0xbe4c4e07 ),
	NORM( 0x3f14eaa9, 0xbeedca7b, 0x3f2af30c ),
	NFlagsW( 3913, 50.000000 ),
	VERT( 0x4023e64c, 0xbf97ecc5, 0xbf06b058 ),
	NORM( 0x3eb581de, 0xbf6e972e, 0xbd9ac738 ),
	NFlagsW( 3914, 57.264484 ),
	VERT( 0x3e775d71, 0xbf7790be, 0x3ea5a85b ),
	NORM( 0x3da76cd0, 0xbeb7e764, 0x3f6dff63 ),
	NFlagsW( 3915, 50.000000 ),
	VERT( 0x3faea678, 0xbf8d232d, 0xbef5238b ),
	NORM( 0xbce7e329, 0xbf303520, 0x3f3990a9 ),
	NFlagsW( 3916, 50.038815 ),
	VERT( 0x40830616, 0xbfb1cff2, 0xbf88ff85 ),
	NORM( 0x3f1b76c1, 0x3f471cc5, 0xbe25f37b ),
	NFlagsW( 3917, 94.080528 ),
	VERT( 0x4059dc77, 0xbfac212f, 0xbe1315a2 ),
	NORM( 0x3d6c932a, 0x3f49fe13, 0x3f1c93c2 ),
	NFlagsW( 3918, 83.295021 ),
	VERT( 0x3f12fbc7, 0xbf8ad198, 0xbff1f830 ),
	NORM( 0x3f022e22, 0xbf0244e3, 0xbf31d14b ),
	NFlagsW( 3919, 50.000202 ),
	VERT( 0x3fede084, 0xbf9b50fb, 0xbf80ccb8 ),
	NORM( 0x3e3095b3, 0xbf6c669d, 0xbeaf84ef ),
	NFlagsW( 3920, 50.788296 ),
	VERT( 0x400ff4df, 0xbfa1d03f, 0xbf2bd748 ),
	NORM( 0x3e1955d8, 0xbf7a66a0, 0xbe13d505 ),
	NFlagsW( 3921, 53.216492 ),
	VERT( 0x406c0ba6, 0xbfb569f8, 0xbfbe072c ),
	NORM( 0x3e97298a, 0x3ee06057, 0xbf59576b ),
	NFlagsW( 3922, 83.385124 ),
	VERT( 0x3f89a6f7, 0xbf97d1d3, 0xbf1a2f38 ),
	NORM( 0xbc891ea8, 0xbf6ad6c2, 0x3ecba664 ),
	NFlagsW( 3923, 50.003685 ),
	VERT( 0x3fbc4d9c, 0xbfa01a8f, 0xbf8da616 ),
	NORM( 0x3e432594, 0xbf6fa186, 0xbe976e6c ),
	NFlagsW( 3924, 50.169842 ),
	VERT( 0x4015c88c, 0xbfb0d0d9, 0xbe798d5a ),
	NORM( 0xbec1c771, 0x3f2f83d5, 0x3f1f31d1 ),
	NFlagsW( 3925, 55.670517 ),
	VERT( 0x406d5ef5, 0xbfc1c992, 0xbfba8468 ),
	NORM( 0x3db20cde, 0x3cfd579b, 0xbf7ee866 ),
	NFlagsW( 3926, 84.584137 ),
	VERT( 0x40793005, 0xbfc43127, 0xbd35bf9e ),
	NORM( 0x3ef7340a, 0x3f11832d, 0x3f2a8ae7 ),
	NFlagsW( 3927, 95.187653 ),
	VERT( 0x4006046f, 0xbfb13f86, 0xbfc09723 ),
	NORM( 0xbd6cdd17, 0x3f65bb4b, 0xbedff757 ),
	NFlagsW( 3928, 52.196926 ),
	VERT( 0x3eb91907, 0xbf9e3ab7, 0xbff7af49 ),
	NORM( 0x3ecd1662, 0xbe930f1f, 0xbf5ebe11 ),
	NFlagsW( 3929, 50.000000 ),
	VERT( 0xbef0838b, 0xbf94dd7a, 0xc021ed72 ),
	NORM( 0x3f23530d, 0x3e5cfff0, 0xbf3d3b48 ),
	NFlagsW( 3930, 32.174061 ),
	VERT( 0x3f31b227, 0xbfa51422, 0xbfc1d50d ),
	NORM( 0x3c450c48, 0xbf7cb7a8, 0xbe22fe35 ),
	NFlagsW( 3931, 50.001381 ),
	VERT( 0x3fd29a1a, 0xbfb41430, 0xbfc3df10 ),
	NORM( 0xbd8fcbf2, 0x3f738d73, 0xbe998f06 ),
	NFlagsW( 3932, 50.634010 ),
	VERT( 0x408b84fa, 0xbfd8eb3c, 0xbf8ade46 ),
	NORM( 0x3f59a197, 0x3ef9383a, 0xbe4db869 ),
	NFlagsW( 3933, 97.780754 ),
	VERT( 0x3fb0dc3b, 0xbfb4c51d, 0xbfbed3d4 ),
	NORM( 0xbe62fd1b, 0x3f75ff25, 0xbe29c579 ),
	NFlagsW( 3934, 50.244324 ),
	VERT( 0x3f4a3161, 0xbfb850f3, 0xbeb91086 ),
	NORM( 0x3e6f07af, 0xbd84cfdc, 0x3f785fa4 ),
	NFlagsW( 3935, 50.001232 ),
	VERT( 0x4081327c, 0xbfe215d0, 0xbe0162f6 ),
	NORM( 0x3f3cd1f1, 0x3e8d00cd, 0x3f1dd644 ),
	NFlagsW( 3936, 97.092178 ),
	VERT( 0x4032f469, 0xbfd2e5e3, 0xbfd68195 ),
	NORM( 0x3e48ad22, 0x3eb457ff, 0xbf6a4838 ),
	NFlagsW( 3937, 61.251015 ),
	VERT( 0x4081af06, 0xbfe2bda1, 0xbfb38e4c ),
	NORM( 0x3f420825, 0x3f0ffead, 0xbea9270e ),
	NFlagsW( 3938, 93.657516 ),
	VERT( 0x4083a804, 0xbfe4233a, 0xbfc8abbf ),
	NORM( 0x3f33255f, 0x3f07dbb5, 0xbef4d420 ),
	NFlagsW( 3939, 94.283981 ),
	VERT( 0x3fed5fc5, 0xbfc85576, 0xbf1baa58 ),
	NORM( 0xbe7fd31e, 0x3f58efcc, 0x3eefddff ),
	NFlagsW( 3940, 51.393391 ),
	VERT( 0x3f87a186, 0xbfc4dce8, 0xbfdb0baf ),
	NORM( 0x3ea73df1, 0x3f3e72ce, 0xbf153dbd ),
	NFlagsW( 3941, 50.119827 ),
	VERT( 0x3eea43d0, 0xbfc0a64f, 0xbfebacdf ),
	NORM( 0x3eace7e7, 0x3e5c6ee1, 0xbf6a92f4 ),
	NFlagsW( 3942, 50.001694 ),
	VERT( 0xbd9b6f6e, 0xbfba72a2, 0xbd6652e4 ),
	NORM( 0x3e0cdb8c, 0xbd6bb593, 0x3f7d235f ),
	NFlagsW( 3943, 50.000000 ),
	VERT( 0x403ab926, 0xbfdf7310, 0xbfcc7f35 ),
	NORM( 0x3e9be371, 0xbced4ed4, 0xbf73bb9d ),
	NFlagsW( 3944, 64.349693 ),
	VERT( 0x3faa98eb, 0xbfcc2aee, 0xbec63d13 ),
	NORM( 0x3f1872b3, 0x3f0c2b52, 0x3f167e41 ),
	NFlagsW( 3945, 50.210995 ),
	VERT( 0x3fd31789, 0xbfd098a6, 0xbee68865 ),
	NORM( 0xbdb19920, 0x3f2f5802, 0x3f39324b ),
	NFlagsW( 3946, 50.825710 ),
	VERT( 0x3fc17c18, 0xbfd271ef, 0xbf10c196 ),
	NORM( 0xbd5ecad2, 0x3f62a101, 0x3eec7c7d ),
	NFlagsW( 3947, 50.481682 ),
	VERT( 0x3fe6ccce, 0xbfe2be8a, 0xbffb485a ),
	NORM( 0x3ddb7879, 0x3f00b795, 0xbf5b9470 ),
	NFlagsW( 3948, 52.013924 ),
	VERT( 0x40166977, 0xbfef912b, 0xbfdff54b ),
	NORM( 0x3e069437, 0x3ecda9a0, 0xbf68032d ),
	NFlagsW( 3949, 55.968727 ),
	VERT( 0x408fb39e, 0xc00d3d5d, 0xbf968a41 ),
	NORM( 0x3f741912, 0x3bac926a, 0xbe9a4710 ),
	NFlagsW( 3950, 99.071159 ),
	VERT( 0x3ebe8728, 0xbfe92043, 0xc00904d4 ),
	NORM( 0x3e9f1656, 0x3ede5c12, 0xbf587195 ),
	NFlagsW( 3951, 50.017040 ),
	VERT( 0x3fa504ee, 0xbff6c031, 0xbffcfcc9 ),
	NORM( 0x3d235794, 0x3ef0cf5d, 0xbf61afc2 ),
	NFlagsW( 3952, 50.784767 ),
	VERT( 0x408a0326, 0xc00e7565, 0xbe80a4f5 ),
	NORM( 0x3f564192, 0x3d451e89, 0x3f0b90c8 ),
	NFlagsW( 3953, 99.161293 ),
	VERT( 0x4087595d, 0xc00f6282, 0xbfbc370e ),
	NORM( 0x3f76ebe0, 0x3c92cd49, 0xbe86d481 ),
	NFlagsW( 3954, 97.237976 ),
	VERT( 0x40881ea0, 0xc00f9d88, 0xbfd1f613 ),
	NORM( 0x3f472b1a, 0xba85113e, 0xbf20d5c2 ),
	NFlagsW( 3955, 97.242744 ),
	VERT( 0x405d47ef, 0xc01034b8, 0x3e6b4f8b ),
	NORM( 0x3df47c41, 0x3c4eed0c, 0x3f7e2616 ),
	NFlagsW( 3956, 92.951622 ),
	VERT( 0x401a6436, 0xc00aea2e, 0xbc0cde40 ),
	NORM( 0xbea229ba, 0x3e41bc79, 0x3f6df0e9 ),
	NFlagsW( 3957, 63.780277 ),
	VERT( 0x3f67b103, 0xc0035e38, 0xc00846f9 ),
	NORM( 0x3e6b612b, 0x3eb34745, 0xbf687601 ),
	NFlagsW( 3958, 50.397873 ),
	VERT( 0xbe5e1ea6, 0xbffbdbd2, 0xc023ad80 ),
	NORM( 0x3f1cd689, 0x3d974afc, 0xbf4971fc ),
	NFlagsW( 3959, 42.166061 ),
	VERT( 0x40317706, 0xc018077b, 0xbfde9b12 ),
	NORM( 0x3eeb0590, 0xbcf4bc8e, 0xbf634eba ),
	NFlagsW( 3960, 65.814499 ),
	VERT( 0x4028e95d, 0xc0192823, 0xbfee028f ),
	NORM( 0x3eda900a, 0xbd733a69, 0xbf6700d6 ),
	NFlagsW( 3961, 63.337170 ),
	VERT( 0x3fea4385, 0xc0159a47, 0xbe752d3b ),
	NORM( 0x3bde34b6, 0x3e58cdf5, 0x3f7a30be ),
	NFlagsW( 3962, 54.692226 ),
	VERT( 0x4011db89, 0xc01b1173, 0xbffb687c ),
	NORM( 0x3ea25359, 0xbbfcda18, 0xbf72c90b ),
	NFlagsW( 3963, 58.317291 ),
	VERT( 0x40872e43, 0xc0270f44, 0xbe793be7 ),
	NORM( 0x3f44dd03, 0xbea4b3a5, 0x3f0d6b1d ),
	NFlagsW( 3964, 99.266449 ),
	VERT( 0x3ef976b9, 0xc0135a6a, 0x3ddc0cef ),
	NORM( 0x3e65fe86, 0x3dc638c3, 0x3f7839c6 ),
	NFlagsW( 3965, 50.211716 ),
	VERT( 0x3fcc5ffc, 0xc01ad828, 0xbda2101e ),
	NORM( 0x3c7e5d9b, 0x3d9dba71, 0x3f7f356e ),
	NFlagsW( 3966, 53.569584 ),
	VERT( 0x3fb16283, 0xc01c31a9, 0xbe44b4fa ),
	NORM( 0x3e40086e, 0x3d59dddb, 0x3f7b16d9 ),
	NFlagsW( 3967, 52.149494 ),
	VERT( 0x3f8e0adf, 0xc01a9e0e, 0x3d6ab83b ),
	NORM( 0x3eb46d34, 0x3d1bd057, 0x3f6f6141 ),
	NFlagsW( 3968, 51.334389 ),
	VERT( 0x408c3220, 0xc02eecbf, 0xbf850ac4 ),
	NORM( 0x3f63db90, 0xbed4f9b1, 0xbe3ee1dc ),
	NFlagsW( 3969, 99.304359 ),
	VERT( 0x40844b74, 0xc02e0ba9, 0xbfc34979 ),
	NORM( 0x3f275828, 0xbf069e9a, 0xbf0b515c ),
	NFlagsW( 3970, 97.578583 ),
	VERT( 0x3f9b813c, 0xc01d1a53, 0xc004f599 ),
	NORM( 0x3e259876, 0x3c0e6bd4, 0xbf7c9ee3 ),
	NFlagsW( 3971, 51.651867 ),
	VERT( 0x40825382, 0xc02ebc5f, 0xbfadff87 ),
	NORM( 0x3f4efdcb, 0xbf0496dc, 0xbe8efa3e ),
	NFlagsW( 3972, 97.317490 ),
	VERT( 0x3e2ab52a, 0xc0177cfe, 0x3e5da374 ),
	NORM( 0x3e66cf56, 0x3c4eb871, 0x3f796429 ),
	NFlagsW( 3973, 50.147038 ),
	VERT( 0x3fddfaf4, 0xc021e234, 0xc00ac3c9 ),
	NORM( 0x3dbdf081, 0xbcfb86ee, 0xbf7ec683 ),
	NFlagsW( 3974, 54.404606 ),
	VERT( 0x40811cf7, 0xc034484d, 0xbe384cc1 ),
	NORM( 0x3f15cb52, 0xbf062fb4, 0x3f1e6757 ),
	NFlagsW( 3975, 98.937103 ),
	VERT( 0x3f5ca1e0, 0xc0223af6, 0xc00ecdb9 ),
	NORM( 0x3e8cd9be, 0xbc03179c, 0xbf761d2f ),
	NFlagsW( 3976, 51.001213 ),
	VERT( 0x3ffe3bc4, 0xc02b4799, 0xbdbbc2b2 ),
	NORM( 0xbf0d1517, 0xbde7bf2f, 0x3f53a482 ),
	NFlagsW( 3977, 59.834160 ),
	VERT( 0x3e87fe57, 0xc02888f4, 0xc015d91a ),
	NORM( 0x3e7a4f84, 0x3c3becb2, 0xbf78376b ),
	NFlagsW( 3978, 49.349533 ),
	VERT( 0x40842b29, 0xc0451911, 0xbf7ebbdb ),
	NORM( 0x3f2cefa0, 0xbf3b9af3, 0xbda68b72 ),
	NFlagsW( 3979, 98.898155 ),
	VERT( 0x403c440d, 0xc03dcf8d, 0xbfc5797b ),
	NORM( 0x3eac6e8b, 0xbc23aa58, 0xbf71081e ),
	NFlagsW( 3980, 76.076920 ),
	VERT( 0x406f5db4, 0xc0431010, 0xbfb1b144 ),
	NORM( 0x3da34746, 0xbd18f27e, 0xbf7f018b ),
	NFlagsW( 3981, 94.790611 ),
	VERT( 0x40181d12, 0xc03d1e9a, 0xbfd9b198 ),
	NORM( 0x3e97af3c, 0xbec225a7, 0xbf606970 ),
	NFlagsW( 3982, 63.788437 ),
	VERT( 0x406e71ca, 0xc0497a2c, 0xbfb40d9a ),
	NORM( 0x3ec67a25, 0xbee97f5a, 0xbf4d143f ),
	NFlagsW( 3983, 95.087830 ),
	VERT( 0x4034f89f, 0xc045bc1d, 0xbfce23f1 ),
	NORM( 0x3e801491, 0xbeb04da7, 0xbf67a7bd ),
	NFlagsW( 3984, 74.557877 ),
	VERT( 0x405d0d06, 0xc04b4163, 0xbd7ac8ce ),
	NORM( 0x3e820b9b, 0xbf2e35ed, 0x3f2ff36b ),
	NFlagsW( 3985, 96.184387 ),
	VERT( 0xbe98e932, 0xc0358475, 0xc0219789 ),
	NORM( 0x3f0e62f4, 0xbc8a4f53, 0xbf54b479 ),
	NFlagsW( 3986, 26.673498 ),
	VERT( 0x3fa8188a, 0xc045a27b, 0xbff67c90 ),
	NORM( 0x3e082258, 0xbed43aeb, 0xbf6678d2 ),
	NFlagsW( 3987, 54.292542 ),
	VERT( 0x3f783a50, 0xc049c754, 0xc004e577 ),
	NORM( 0x3eb8a3cb, 0xbea62f2f, 0xbf5fd98d ),
	NFlagsW( 3988, 53.041798 ),
	VERT( 0x40064645, 0xc055b264, 0xbe660772 ),
	NORM( 0xbeb05898, 0xbf1b0edb, 0x3f37a046 ),
	NFlagsW( 3989, 68.385429 ),
	VERT( 0x3feb21e6, 0xc0562643, 0xbff291bc ),
	NORM( 0x3e3b6b0d, 0xbf0ed542, 0xbf4f37db ),
	NFlagsW( 3990, 60.252731 ),
	VERT( 0x4055656e, 0xc061ae1c, 0xbf823e2c ),
	NORM( 0x3eabfa4a, 0xbf70ef14, 0xbd1a1adc ),
	NFlagsW( 3991, 92.900589 ),
	VERT( 0x3ff4ded5, 0xc05c7868, 0xbf0961ae ),
	NORM( 0x3e6ffc1c, 0xbf4d82c9, 0x3f0c5ce4 ),
	NFlagsW( 3992, 64.319595 ),
	VERT( 0x3fe1274d, 0xc05fc025, 0xbeb27167 ),
	NORM( 0x3ea8ab96, 0xbf13e74a, 0x3f3f2cfc ),
	NFlagsW( 3993, 63.402897 ),
	VERT( 0x3fb1bf06, 0xc0629cc7, 0xbee52ba4 ),
	NORM( 0x3e28a5cc, 0xbf40e3e3, 0x3f22f273 ),
	NFlagsW( 3994, 58.761276 ),
	VERT( 0x3f7fc926, 0xc06536c2, 0xbe92eb05 ),
	NORM( 0x3e75b7a7, 0xbf247a49, 0x3f3a4e10 ),
	NFlagsW( 3995, 56.271774 ),
	VERT( 0x4022964f, 0xc06fd2dd, 0xbf91f8f0 ),
	NORM( 0x3e1032aa, 0xbf7b2262, 0xbe08b413 ),
	NFlagsW( 3996, 78.049828 ),
	VERT( 0x3ffede16, 0xc06c8661, 0xbfb4657a ),
	NORM( 0x3e5f7148, 0xbf6aa2bf, 0xbeab99a9 ),
	NFlagsW( 3997, 65.948433 ),
	VERT( 0x3fdf48d1, 0xc06fda5c, 0xbfb49f70 ),
	NORM( 0x3e013e78, 0xbf75f05b, 0xbe7d2c74 ),
	NFlagsW( 3998, 63.105900 ),
	VERT( 0x3fbfae61, 0xc0724f08, 0xbfad3665 ),
	NORM( 0x3e6d6bd3, 0xbf7315d4, 0xbe583d97 ),
	NFlagsW( 3999, 60.734062 ),
	VERT( 0x3ebff6a1, 0xc06cf42f, 0xbe8b76b8 ),
	NORM( 0x3f144f58, 0xbf0935ba, 0x3f1d34a7 ),
	NFlagsW( 4000, 53.151775 ),
	VERT( 0x3ec90d9b, 0xc06ef7f9, 0xc003ea33 ),
	NORM( 0x3ef04721, 0xbec4fae3, 0xbf4b79c7 ),
	NFlagsW( 4001, 49.128841 ),
	VERT( 0xbe3df868, 0xc06bc630, 0xc01f8d6e ),
	NORM( 0x3f0adbac, 0xbe9d5067, 0xbf482b30 ),
	NFlagsW( 4002, 19.751921 ),
	VERT( 0x3e686c6b, 0xc0702d80, 0xbd63182b ),
	NORM( 0x3ef0a62b, 0xbef16621, 0x3f3f05cb ),
	NFlagsW( 4003, 51.538391 ),
	VERT( 0x3f717fc6, 0xc080b361, 0xbfbac220 ),
	NORM( 0x3f03fa71, 0xbf539572, 0xbe67848b ),
	NFlagsW( 4004, 58.185219 ),
	VERT( 0x3f0373b1, 0xc08b1d0a, 0xbfc3bc43 ),
	NORM( 0x3f114a30, 0xbf4fbce0, 0xbe0ea75e ),
	NFlagsW( 4005, 52.725323 ),
	VERT( 0x3e2d7da2, 0xc0915b07, 0xbfd2649e ),
	NORM( 0x3ed21a88, 0xbf6316cc, 0xbe588aed ),
	NFlagsW( 4006, 34.645237 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Toe0[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Toe0,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Toe0[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Toe0,
OPosition  (  8.364557F,  0.000000F, -12.445006F ),
OAngle     (  0.000002F, 89.980234F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy11,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Foot[]
START
	CnkV_VN(FV_CONT, 457),
	OffnbIdx(816, 76),
	VERT( 0x40dbd828, 0x4084aebc, 0xc13661f9 ),
	NORM( 0xbecba5c1, 0x3f6a9f9f, 0xbd2f19b3 ),
	VERT( 0x40e558b8, 0x408772ce, 0xc1254704 ),
	NORM( 0xbe60677d, 0x3f77f5f5, 0xbdf08d5e ),
	VERT( 0x41032f6c, 0x407f1c3b, 0xc1359927 ),
	NORM( 0x3ef10c74, 0x3f5eec10, 0xbe11152b ),
	VERT( 0x41038b24, 0x40827051, 0xc1259770 ),
	NORM( 0x3ef0ec86, 0x3f61e1c6, 0x3bbe8173 ),
	VERT( 0x40e2c379, 0x407f1560, 0xc12f9e02 ),
	NORM( 0xbea2bb14, 0x3f728712, 0x3d1cd130 ),
	VERT( 0x40d82209, 0x407a65f2, 0xc1390e11 ),
	NORM( 0xbf309b97, 0x3ef52e82, 0xbf0afc86 ),
	VERT( 0x40db38a9, 0x40836f14, 0xc1080540 ),
	NORM( 0xbe40fb2d, 0x3f7a1bc9, 0x3dcc9bc1 ),
	VERT( 0x40cf6438, 0x4070331f, 0xc133cd41 ),
	NORM( 0xbf65e13b, 0x3ee05041, 0x3d29782d ),
	VERT( 0x41025f9c, 0x407ce0f6, 0xc108775d ),
	NORM( 0x3edad133, 0x3f64858f, 0x3e129dfa ),
	VERT( 0x40d51268, 0x4065be05, 0xc12e5336 ),
	NORM( 0xbf4a000a, 0x3f0a4f5a, 0xbe95b298 ),
	VERT( 0x410a764c, 0x40650c60, 0xc125cf15 ),
	NORM( 0x3f65766a, 0x3ee2f0fd, 0x3c2cd1fb ),
	VERT( 0x40cdae58, 0x406200e1, 0xc12ccb03 ),
	NORM( 0xbf1ff8c9, 0x3efa70c9, 0xbf1bc5a7 ),
	VERT( 0x40d02168, 0x405aa9be, 0xc135599d ),
	NORM( 0xbf73b11f, 0x3dfde213, 0xbe8f6e7a ),
	VERT( 0x40cffe49, 0x405238d5, 0xc12f7504 ),
	NORM( 0xbf71415a, 0x3e944841, 0xbe2b5940 ),
	VERT( 0x40b36b39, 0x405b7200, 0xc10f47be ),
	NORM( 0xbf166792, 0x3f4d8b24, 0xbdce83fc ),
	VERT( 0x410adf44, 0x405cf349, 0xc108eb4e ),
	NORM( 0x3f5e8674, 0x3ef7ff14, 0x3dcad884 ),
	VERT( 0x40cc2dc8, 0x4065a820, 0xc0bc9ac8 ),
	NORM( 0xbe13dcbe, 0x3f7aefbe, 0x3e0a96e9 ),
	VERT( 0x40fac6e9, 0x405cbceb, 0xc0bd8f87 ),
	NORM( 0x3ecf67c7, 0x3f6339b3, 0x3e6082d8 ),
	VERT( 0x40c6efb9, 0x403b06f5, 0xc12d0c10 ),
	NORM( 0xbf44f45e, 0x3eb20ca9, 0xbf092f31 ),
	VERT( 0x40cff848, 0x402d2a68, 0xc1319cce ),
	NORM( 0xbf584a97, 0x3e9b7197, 0xbee181e6 ),
	VERT( 0x40a2bd58, 0x4039c257, 0xc110e494 ),
	NORM( 0xbf3ae82c, 0x3f1b8baa, 0xbea017d0 ),
	VERT( 0x4106f57c, 0x403768a4, 0xc0be9b7b ),
	NORM( 0x3f6053e2, 0x3eece149, 0x3e09b219 ),
	VERT( 0x410de6a4, 0x40144dc5, 0xc1261fdd ),
	NORM( 0x3f7eb16c, 0x3da824fc, 0xbd705c1e ),
	VERT( 0x40c13788, 0x4007f9c2, 0xc133a4b5 ),
	NORM( 0xbf5bc1a8, 0x3ef8fba2, 0xbe271816 ),
	VERT( 0x410f0e54, 0x400be536, 0xc109c6da ),
	NORM( 0x3f7e52a4, 0x3dcf49a3, 0x3d59569c ),
	VERT( 0x40fc9398, 0x4024a07a, 0xc0251b21 ),
	NORM( 0x3e9a763a, 0x3f732285, 0x3daafb39 ),
	VERT( 0x40b63148, 0x3fe01dc9, 0xc12e1263 ),
	NORM( 0xbf46b0f5, 0x3ebe4d4e, 0xbf02665d ),
	VERT( 0x40fe7018, 0x4024f6b7, 0xbf902b95 ),
	NORM( 0x3e91fe4e, 0x3f75569b, 0xbc822c94 ),
	VERT( 0x41002664, 0x40254cf1, 0x3ea77b60 ),
	NORM( 0x3e8fd1d9, 0x3f75911d, 0x3cfbacc3 ),
	VERT( 0x410b5914, 0x400cfa71, 0xc03c323e ),
	NORM( 0x3f4d8d7e, 0x3f188f98, 0x3c42088b ),
	VERT( 0x410945ec, 0x3fe89293, 0xc0bffd34 ),
	NORM( 0x3f7f8943, 0xbd3b856e, 0x3d1fed7e ),
	VERT( 0x410c4f3c, 0x400ce7f5, 0xbfa91085 ),
	NORM( 0x3f461b64, 0x3f21f939, 0xbceb6c7b ),
	VERT( 0x410e10bc, 0x3f9e5e83, 0xc126591e ),
	NORM( 0x3f7eac76, 0xbda0aded, 0xbd846785 ),
	VERT( 0x410d453c, 0x400cd574, 0x3e990d46 ),
	NORM( 0x3f4ea493, 0x3f1673c1, 0x3d61992a ),
	VERT( 0x4106c994, 0x40146f7d, 0x402cce3e ),
	NORM( 0x3f16cc5c, 0x3f3b2628, 0x3eb04ea2 ),
	VERT( 0x410f3753, 0x3f8cff54, 0xc10a7416 ),
	NORM( 0x3f7be15f, 0xbe265681, 0x3d986deb ),
	VERT( 0x40a79ef8, 0x3f28fcb9, 0xc12e276b ),
	NORM( 0xbf4d0077, 0x3e5d32ac, 0xbf0f02e8 ),
	VERT( 0x410e71dc, 0x3fb04041, 0xc03e29d1 ),
	NORM( 0x3f7f36b6, 0x3c10301f, 0xbd9f601e ),
	VERT( 0x410f567c, 0x3facf884, 0xbfc4767f ),
	NORM( 0x3f7e2c36, 0x3dd24b21, 0xbd7881fe ),
	VERT( 0x4104f82c, 0x3f56a4a8, 0xc0c10f9b ),
	NORM( 0x3f7a93b0, 0xbe507e90, 0x3cb05bde ),
	VERT( 0x41103b34, 0x3fa9b078, 0xbdc9952a ),
	NORM( 0x3f7ee384, 0x3da4437f, 0x3d41690b ),
	VERT( 0x410acccb, 0x3e4ff706, 0xc12693a6 ),
	NORM( 0x3f6db6a6, 0xbebd6a43, 0x3cf57413 ),
	VERT( 0x410b1ceb, 0x3eb5dcae, 0xc10ad935 ),
	NORM( 0x3f5ed2eb, 0xbef6ed9a, 0x3dcabb59 ),
	VERT( 0x410bdf4c, 0x3f0dde42, 0xc03fbe3a ),
	NORM( 0x3f785af2, 0xbe452ec7, 0xbe1707a1 ),
	VERT( 0x410a009c, 0x3f961e49, 0x4061cabe ),
	NORM( 0x3f4259bc, 0x3e89c7e5, 0x3f17b77b ),
	VERT( 0x41038bf4, 0x3e2e4d10, 0xc0c1103c ),
	NORM( 0x3f77c3f8, 0xbe803aa8, 0xbcc44011 ),
	VERT( 0x40a1bf98, 0xbe9f0681, 0xc12e4ae7 ),
	NORM( 0xbf4650b7, 0x3e085e91, 0xbf1e4164 ),
	VERT( 0x4101e4c3, 0xbe8d7569, 0xc10b1549 ),
	NORM( 0x3f718320, 0xbea56a79, 0x3d995195 ),
	VERT( 0x410356cb, 0xbef1e9fb, 0xc126891f ),
	NORM( 0x3f7e8348, 0xbd92cedd, 0x3da46f25 ),
	VERT( 0x41089b5b, 0x3d30d72b, 0xc0565a13 ),
	NORM( 0x3f757249, 0xbe6ba1ef, 0xbe2abc3a ),
	VERT( 0x41007f94, 0xbecd6789, 0xc0c27239 ),
	NORM( 0x3f7f6dd2, 0xbcffdce0, 0xbd71a6da ),
	VERT( 0x41104074, 0x3c60fc65, 0xbf8e4010 ),
	NORM( 0x3f7f9a63, 0xbc2a61be, 0xbd5ffd6c ),
	VERT( 0x409ecf78, 0xbf863da9, 0xc12e5abf ),
	NORM( 0xbf49f0eb, 0x3e009351, 0xbf1a057a ),
	VERT( 0x4102c623, 0xbf635a1c, 0xc10b789a ),
	NORM( 0x3f7987f0, 0x3e59fb36, 0x3d8aae82 ),
	VERT( 0x410a07e3, 0xbf87f8bf, 0xc126b756 ),
	NORM( 0x3f728fcc, 0x3ea2f427, 0x3cfa8b41 ),
	VERT( 0x4106e213, 0xbed3d992, 0xc05e509e ),
	NORM( 0x3f7a0e80, 0xbdd1fede, 0xbe409c19 ),
	VERT( 0x4102cbe4, 0xbf6fe62c, 0xc0c00cfe ),
	NORM( 0x3f7c14b1, 0x3e27b214, 0xbd748d8d ),
	VERT( 0x4105e80c, 0xbf5c60da, 0xc068389f ),
	NORM( 0x3f7c7cb4, 0xbcb7e724, 0xbe277c7a ),
	VERT( 0x41105914, 0xbf55f1c1, 0xbfa62ee3 ),
	NORM( 0x3f7e81ff, 0xbd91a072, 0xbda5f95c ),
	VERT( 0x410a3d1c, 0xbec68587, 0x40619563 ),
	NORM( 0x3f5012c7, 0xbda59f0f, 0x3f13b121 ),
	VERT( 0x409fe047, 0xbff51d89, 0xc1333bd8 ),
	NORM( 0xbf4d0f5c, 0x3d97bbf9, 0xbf181317 ),
	VERT( 0x410a93c4, 0xc0143ad6, 0xc12a8015 ),
	NORM( 0x3f7f5d6f, 0xbd8eb161, 0x3c2462b9 ),
	VERT( 0x410b30eb, 0xc00cbf99, 0xc10c0991 ),
	NORM( 0x3f7f022f, 0x3ca67fa7, 0x3daf31b0 ),
	VERT( 0x41046b6b, 0xc0010ddb, 0xc0c42a9f ),
	NORM( 0x3f79d500, 0xbe5cff6b, 0x3d036ff1 ),
	VERT( 0x410a5314, 0xbf9c3b19, 0x4051b8da ),
	NORM( 0x3f41adee, 0xbecd1f75, 0x3f044eeb ),
	VERT( 0x410d0983, 0xbfe28fdd, 0xbfb066a7 ),
	NORM( 0x3f51c1c6, 0xbf12c206, 0xbaeadf05 ),
	VERT( 0x40a11237, 0xc02e98d1, 0xc133ad05 ),
	NORM( 0xbf4e0ac8, 0xbd26a758, 0xbf179283 ),
	VERT( 0x4105d164, 0xc01a541e, 0xc078d9da ),
	NORM( 0x3f5832e4, 0xbf09151e, 0xbbcb96fc ),
	VERT( 0x410a3e03, 0xc007e9c0, 0x4000cbaa ),
	NORM( 0x3f3a4fce, 0xbf282a0e, 0x3e49c861 ),
	VERT( 0x40a56187, 0xc0707d36, 0xc134424f ),
	NORM( 0xbf3def76, 0xbeeb6b27, 0xbef9d71a ),
	VERT( 0x40e6b757, 0xc05a2db0, 0xc0c61984 ),
	NORM( 0x3f0176a4, 0xbf585319, 0x3e31f0d7 ),
	VERT( 0x410195bb, 0xc06f338f, 0xc10cd47c ),
	NORM( 0x3f2d16e3, 0xbf31e1c9, 0x3e7ae3e7 ),
	VERT( 0x40d40717, 0xc058033c, 0xc08018b3 ),
	NORM( 0x3ea051db, 0xbf70b21e, 0x3e092b84 ),
	VERT( 0x4102e483, 0xc08b4e04, 0xc12b7437 ),
	NORM( 0x3f31b97b, 0xbf37ce18, 0x3d4dfe4b ),
	VERT( 0x40a778b7, 0xc0932dbe, 0xc10b45e5 ),
	NORM( 0xbd9d33dd, 0xbf7f36c7, 0x3c7d6dff ),
	VERT( 0x40cb6986, 0xc09f9940, 0xc12b4d52 ),
	NORM( 0xbe0b5526, 0xbf7d3285, 0xbd69e8d4 ),
	CnkV_VN_NF(FV_CONT|FW_START, 2640),
	OffnbIdx(3630, 377),
	VERT( 0x40f521c9, 0x40884ffe, 0xc14cc84f ),
	NORM( 0xbe4cb270, 0x3f75d4fc, 0xbe475a66 ),
	NFlagsW( 0, 48.138706 ),
	VERT( 0x40f0e929, 0x4086b04d, 0xc1475f54 ),
	NORM( 0xbe6e25d8, 0x3f78f386, 0x3c74def5 ),
	NFlagsW( 1, 61.909206 ),
	VERT( 0x40f9c7b9, 0x4084a0ae, 0xc150c53e ),
	NORM( 0xbdada721, 0x3f630677, 0xbee896ac ),
	NFlagsW( 2, 42.889938 ),
	VERT( 0x40ebaef9, 0x40853193, 0xc14412c4 ),
	NORM( 0xbe8d2e60, 0x3f75fe6a, 0x3cca81af ),
	NFlagsW( 3, 74.619347 ),
	VERT( 0x40e79428, 0x40847bb4, 0xc139a8ca ),
	NORM( 0xbddb8cac, 0x3f780a10, 0xbe645ce4 ),
	NFlagsW( 4, 99.986465 ),
	VERT( 0x4106a884, 0x40808e8b, 0xc14b52a0 ),
	NORM( 0x3f211677, 0x3f4676dd, 0x3d617870 ),
	NFlagsW( 5, 47.664516 ),
	VERT( 0x40ff0cb9, 0x407c01c6, 0xc156f97a ),
	NORM( 0xbd816470, 0x3f3a0b79, 0xbf2f1adc ),
	NFlagsW( 6, 40.803761 ),
	VERT( 0x41038b94, 0x408161ed, 0xc142c042 ),
	NORM( 0x3f04d19e, 0x3f4a4243, 0x3ea72b96 ),
	NFlagsW( 7, 74.311096 ),
	VERT( 0x40ea96b8, 0x4082879a, 0xc13c6a69 ),
	NORM( 0xbe3183f2, 0x3f794a51, 0xbe16c72e ),
	NFlagsW( 8, 99.365173 ),
	VERT( 0x4107b28c, 0x407c3e54, 0xc14f86e3 ),
	NORM( 0x3f30aa2c, 0x3f3534a7, 0xbe1a6716 ),
	NFlagsW( 9, 43.092316 ),
	VERT( 0x40f590b9, 0x407a5c97, 0xc153f385 ),
	NORM( 0xbf32e836, 0x3ea4f98b, 0xbf2379a3 ),
	NFlagsW( 10, 43.074425 ),
	VERT( 0x40e28c58, 0x407f5603, 0xc1469362 ),
	NORM( 0xbf315d47, 0x3f27ba47, 0xbe9a3668 ),
	NFlagsW( 11, 63.836010 ),
	VERT( 0x40ee2d99, 0x407b580e, 0xc14f8336 ),
	NORM( 0xbf31ad12, 0x3ecb2c34, 0xbf19c703 ),
	NFlagsW( 12, 45.652931 ),
	VERT( 0x4100bfec, 0x4081bc1c, 0xc1398c63 ),
	NORM( 0x3eeaff10, 0x3f62b3db, 0xbd92a889 ),
	NFlagsW( 13, 99.949654 ),
	VERT( 0x41021684, 0x40804ad6, 0xc140847e ),
	NORM( 0x3ee8be89, 0x3f595d45, 0x3e89c91f ),
	NFlagsW( 14, 85.904694 ),
	VERT( 0x4100ceec, 0x40819d4b, 0xc138b3d7 ),
	NORM( 0x3ed7512d, 0x3f682a85, 0x3cd574e2 ),
	NFlagsW( 15, 99.984581 ),
	VERT( 0x40f633e8, 0x40777801, 0xc1541ad2 ),
	NORM( 0xbf69d6d7, 0x3c10c44d, 0xbed053e9 ),
	NFlagsW( 16, 43.356869 ),
	VERT( 0x40e94208, 0x40796c0e, 0xc14bea98 ),
	NORM( 0xbf431eec, 0x3ee594a3, 0xbeef0eb5 ),
	NFlagsW( 17, 49.811073 ),
	VERT( 0x41023a04, 0x407f4a65, 0xc13c01dd ),
	NORM( 0x3f2679fe, 0x3f3fb673, 0x3e02b47f ),
	NFlagsW( 18, 99.060112 ),
	VERT( 0x40f19879, 0x407542ae, 0xc150f64a ),
	NORM( 0xbf418b34, 0x3c42df54, 0xbf2788a3 ),
	NFlagsW( 19, 45.086773 ),
	VERT( 0x41000724, 0x406fb711, 0xc1591245 ),
	NORM( 0xbdc60122, 0x3eda7606, 0xbf66333e ),
	NFlagsW( 20, 41.514381 ),
	VERT( 0x4107fb34, 0x407059ae, 0xc1557813 ),
	NORM( 0x3f29bceb, 0x3f199fa8, 0xbee52063 ),
	NFlagsW( 21, 41.517361 ),
	VERT( 0x40f6b199, 0x406eed4c, 0xc157db2f ),
	NORM( 0xbe0deb3d, 0x3f0e1db2, 0xbf51f3f6 ),
	NFlagsW( 22, 42.899334 ),
	VERT( 0x40f97b39, 0x406cae6b, 0xc157169c ),
	NORM( 0xbdf870cb, 0x3edb6167, 0xbf65371c ),
	NFlagsW( 23, 43.380718 ),
	VERT( 0x4108070c, 0x4068f21b, 0xc15717dc ),
	NORM( 0x3f286a62, 0x3e8f435e, 0xbf330011 ),
	NFlagsW( 24, 41.766766 ),
	VERT( 0x40db0fc8, 0x40708347, 0xc13ce5c7 ),
	NORM( 0xbf5a784c, 0x3eb778c9, 0xbec1d1b1 ),
	NFlagsW( 25, 98.470947 ),
	VERT( 0x40ff5298, 0x405f3c36, 0xc15a6077 ),
	NORM( 0xbe2cd281, 0x3cc9721e, 0xbf7c3fcb ),
	NFlagsW( 26, 43.221764 ),
	VERT( 0x40f525d8, 0x405f1223, 0xc158671b ),
	NORM( 0xbee4573d, 0x3b415d9c, 0xbf652148 ),
	NFlagsW( 27, 44.688232 ),
	VERT( 0x40ec9ef8, 0x40627cf4, 0xc14f7d94 ),
	NORM( 0xbf34a5df, 0xbc1c9bf4, 0xbf355f9e ),
	NFlagsW( 28, 47.224354 ),
	VERT( 0x40e83468, 0x4062d6be, 0xc14df4fd ),
	NORM( 0xbf6b3c00, 0xbcee3508, 0xbec972d6 ),
	NFlagsW( 29, 47.957104 ),
	VERT( 0x410a7ecc, 0x406358b3, 0xc149e2db ),
	NORM( 0x3f7a4bcf, 0x3dd9f605, 0x3e3947a6 ),
	NFlagsW( 30, 48.598232 ),
	VERT( 0x40f871c8, 0x405dc867, 0xc157f21a ),
	NORM( 0xbdd636a5, 0x3c37da45, 0xbf7e9460 ),
	NFlagsW( 31, 44.868439 ),
	VERT( 0x40e91b88, 0x4062119f, 0xc14b38e9 ),
	NORM( 0xbf6a942c, 0xbd3823c3, 0xbecbba81 ),
	NFlagsW( 32, 49.810368 ),
	VERT( 0x41073804, 0x405b79de, 0xc157e87c ),
	NORM( 0x3f0f7df7, 0x3cfbd7e3, 0xbf53dbd1 ),
	NFlagsW( 33, 43.448154 ),
	VERT( 0x410b3e34, 0x405b278e, 0xc15099f8 ),
	NORM( 0x3f7ef207, 0xbcd47b22, 0xbdb1f168 ),
	NFlagsW( 34, 45.489979 ),
	VERT( 0x4105d3b4, 0x40627bdc, 0xc13d1d98 ),
	NORM( 0x3f5258c6, 0x3eb39d2d, 0xbee5ffc8 ),
	NFlagsW( 35, 94.047348 ),
	VERT( 0x4105c394, 0x4062291b, 0xc13de863 ),
	NORM( 0x3f7073cb, 0xbd0319e6, 0x3eaef245 ),
	NFlagsW( 36, 90.838524 ),
	VERT( 0x40dc0de9, 0x405f0d58, 0xc145e9a9 ),
	NORM( 0xbf6eec15, 0xbcd14492, 0xbeb767dd ),
	NFlagsW( 37, 59.661530 ),
	VERT( 0x41017dd4, 0x405fc9a9, 0xc140e3d6 ),
	NORM( 0xbf5aedcd, 0x3f01b183, 0xbde0422e ),
	NFlagsW( 38, 73.671379 ),
	VERT( 0x41080114, 0x405efc77, 0xc1411d45 ),
	NORM( 0x3f6a8b30, 0x3d150a15, 0x3ecc567a ),
	NFlagsW( 39, 71.572792 ),
	VERT( 0x410734f4, 0x405f2d31, 0xc13fdd53 ),
	NORM( 0x3f493679, 0xbf06ef0d, 0xbea56fd4 ),
	NFlagsW( 40, 79.150482 ),
	VERT( 0x41074534, 0x405e0d09, 0xc13fcd08 ),
	NORM( 0x3f0062bc, 0x379c0e7e, 0x3f5d7abb ),
	NFlagsW( 41, 79.201584 ),
	VERT( 0x410abdec, 0x406063d9, 0xc138f6d0 ),
	NORM( 0x3f5461d8, 0x3ecf0289, 0xbec524f1 ),
	NFlagsW( 42, 99.754845 ),
	VERT( 0x40d903e8, 0x405dbd08, 0xc13ab277 ),
	NORM( 0xbf55fae6, 0x3e900803, 0xbef15947 ),
	NFlagsW( 43, 99.516617 ),
	VERT( 0x40db0b78, 0x405b1b87, 0xc13d797a ),
	NORM( 0xbf6207cf, 0x3e89f4e8, 0xbec4db96 ),
	NFlagsW( 44, 95.245888 ),
	VERT( 0x40f72b98, 0x404f644a, 0xc157df8f ),
	NORM( 0xbe79c58d, 0xbf09c6dd, 0xbf4e878b ),
	NFlagsW( 45, 46.348576 ),
	VERT( 0x4108509c, 0x404f6b6c, 0xc1572714 ),
	NORM( 0x3f2301f3, 0xbe9f14f2, 0xbf34a8c8 ),
	NFlagsW( 46, 44.996216 ),
	VERT( 0x41006534, 0x404e99ed, 0xc1591d33 ),
	NORM( 0xbdd1b3b2, 0xbeddb39f, 0xbf654307 ),
	NFlagsW( 47, 45.583935 ),
	VERT( 0x40fa1b68, 0x404f18d5, 0xc1571b46 ),
	NORM( 0xbe39fb2c, 0xbf0d4d98, 0xbf50584e ),
	NFlagsW( 48, 46.508247 ),
	VERT( 0x40f9bc48, 0x404b3803, 0xc15bd7de ),
	NORM( 0xbe23f137, 0x3f7aa8c8, 0xbe0021b4 ),
	NFlagsW( 49, 45.221657 ),
	VERT( 0x40f51f78, 0x404a3501, 0xc157e333 ),
	NORM( 0xbe792c09, 0x3f76b8b4, 0x3de003d4 ),
	NFlagsW( 50, 46.827213 ),
	VERT( 0x40ff0728, 0x40448577, 0xc1622a95 ),
	NORM( 0xbd9f12dc, 0x3f49761b, 0xbf1cb26c ),
	NFlagsW( 51, 42.085354 ),
	VERT( 0x4108677c, 0x404963be, 0xc15580a3 ),
	NORM( 0x3f20e025, 0xbf26cce3, 0xbed98e8c ),
	NFlagsW( 52, 46.203094 ),
	VERT( 0x40f2e888, 0x404b190d, 0xc151070e ),
	NORM( 0xbf43a4ff, 0xbd45737b, 0xbf24a451 ),
	NFlagsW( 53, 48.237236 ),
	VERT( 0x40ea60d8, 0x404afa93, 0xc14bfb85 ),
	NORM( 0xbf3c146b, 0xbeea74a4, 0xbf002397 ),
	NFlagsW( 54, 49.246857 ),
	VERT( 0x40f76238, 0x40472299, 0xc1541d20 ),
	NORM( 0xbf676f4d, 0xbd8d7e9a, 0xbed7f930 ),
	NFlagsW( 55, 47.870705 ),
	VERT( 0x40efa2d9, 0x40465d1a, 0xc14f92f1 ),
	NORM( 0xbf3b42de, 0xbedaddcf, 0xbf07fdb8 ),
	NFlagsW( 56, 48.701401 ),
	VERT( 0x40f6e429, 0x404452b2, 0xc153fb6e ),
	NORM( 0xbf343245, 0xbeb81eea, 0xbf1ccff9 ),
	NFlagsW( 57, 48.070152 ),
	VERT( 0x40f56e29, 0x403f3985, 0xc15f22f7 ),
	NORM( 0xbf3e7387, 0x3ed3dd35, 0xbf0652c6 ),
	NFlagsW( 58, 45.170551 ),
	VERT( 0x4100201c, 0x4041ea90, 0xc1570990 ),
	NORM( 0xbdba5108, 0xbf38cdd4, 0xbf2f9dc1 ),
	NFlagsW( 59, 47.339787 ),
	VERT( 0x4107bcb4, 0x403da621, 0xc15a9c4b ),
	NORM( 0x3f2bd3f1, 0x3f3b9ae9, 0x3de471fd ),
	NFlagsW( 60, 45.496410 ),
	VERT( 0x41085cac, 0x4041b834, 0xc14f828f ),
	NORM( 0x3f2b12a1, 0xbf3e5bc4, 0xbcba1e5c ),
	NFlagsW( 61, 48.185547 ),
	VERT( 0x40f61ef8, 0x403b0c47, 0xc15f50cd ),
	NORM( 0xbf657323, 0x3c5936a1, 0xbee2f4d7 ),
	NFlagsW( 62, 45.461151 ),
	VERT( 0x40d86aa8, 0x4046ab39, 0xc140a143 ),
	NORM( 0xbf12726d, 0x3dba1325, 0xbf50aeab ),
	NFlagsW( 63, 75.651817 ),
	VERT( 0x40eb4228, 0x403f77ce, 0xc1528a87 ),
	NORM( 0xbec995c5, 0x3f6a63db, 0x3da7777a ),
	NFlagsW( 64, 48.635506 ),
	VERT( 0x41075dec, 0x40418810, 0xc14b590e ),
	NORM( 0x3f2f0123, 0xbf37c31e, 0x3e071cf2 ),
	NFlagsW( 65, 48.857635 ),
	VERT( 0x41080604, 0x4038bb32, 0xc160a779 ),
	NORM( 0x3f2c9a42, 0x3f22cd8a, 0xbec03ea6 ),
	NFlagsW( 66, 42.448170 ),
	VERT( 0x40cfa2e8, 0x40467d8a, 0xc139e873 ),
	NORM( 0xbf7518f4, 0x3dccabc8, 0xbe8ab08f ),
	NFlagsW( 67, 99.586571 ),
	VERT( 0x4100076c, 0x4036087f, 0xc1645492 ),
	NORM( 0xbded94eb, 0x3eb83566, 0xbf6d0100 ),
	NFlagsW( 68, 42.253479 ),
	VERT( 0x4106a7d4, 0x4039fe36, 0xc15659fe ),
	NORM( 0x3f18449b, 0x3f2a5694, 0x3ee6f50e ),
	NFlagsW( 69, 47.456100 ),
	VERT( 0x40e43fe8, 0x403fbb55, 0xc146d1b3 ),
	NORM( 0xbf18bc53, 0xbf21fc91, 0xbefcbae4 ),
	NFlagsW( 70, 52.425838 ),
	VERT( 0x4101da34, 0x404111e8, 0xc14157f5 ),
	NORM( 0xbdb572a2, 0x3f2c64c8, 0xbf3be366 ),
	NFlagsW( 71, 62.635262 ),
	VERT( 0x40d26ae8, 0x40416b9d, 0xc13ef032 ),
	NORM( 0xbf4d0ae1, 0xbc7bd6ac, 0xbf1939c5 ),
	NFlagsW( 72, 85.838829 ),
	VERT( 0x40ee51c8, 0x4036809c, 0xc15ad38e ),
	NORM( 0xbf39cb8d, 0x3ec3270b, 0xbf129cae ),
	NFlagsW( 73, 47.541046 ),
	VERT( 0x40f66058, 0x4031c3bd, 0xc1631c48 ),
	NORM( 0xbe8bbdfa, 0x3ef4ef4d, 0xbf55ac14 ),
	NFlagsW( 74, 44.407318 ),
	VERT( 0x40f949c8, 0x4031e5cc, 0xc162558b ),
	NORM( 0xbe5eb401, 0x3ed7e79e, 0xbf615987 ),
	NFlagsW( 75, 44.659565 ),
	VERT( 0x40f1af58, 0x4033c868, 0xc15c3c13 ),
	NORM( 0xbf418dfb, 0xbbac69ba, 0xbf278b21 ),
	NFlagsW( 76, 47.295326 ),
	VERT( 0x410aab1c, 0x40401d02, 0xc13af855 ),
	NORM( 0x3f5ca20c, 0x3e00bacb, 0xbefb90e4 ),
	NFlagsW( 77, 96.108955 ),
	VERT( 0x410474dc, 0x403c8050, 0xc143554a ),
	NORM( 0x3f0889bd, 0xbf41a8bc, 0x3ec1ccad ),
	NFlagsW( 78, 54.931786 ),
	VERT( 0x41080b9c, 0x403049b9, 0xc16256d4 ),
	NORM( 0x3f282f8c, 0x3e888a69, 0xbf3485fe ),
	NFlagsW( 79, 42.254185 ),
	VERT( 0x41030a5c, 0x403c7061, 0xc1428913 ),
	NORM( 0x3ed73aa7, 0xbf648661, 0x3e267200 ),
	NFlagsW( 80, 57.084171 ),
	VERT( 0x40e5c708, 0x4037afd9, 0xc14ce545 ),
	NORM( 0xbeaceb03, 0x3f70eabc, 0x3c8ebda5 ),
	NFlagsW( 81, 49.489906 ),
	VERT( 0x41030914, 0x403b6a8b, 0xc141893b ),
	NORM( 0x3f195ad1, 0xbf4a8c87, 0x3dfc0193 ),
	NFlagsW( 82, 60.400318 ),
	VERT( 0x41019864, 0x403bc966, 0xc13fb31a ),
	NORM( 0x3de5f46d, 0xbec57b02, 0x3f6a6f8f ),
	NFlagsW( 83, 70.096840 ),
	VERT( 0x40fb9448, 0x4034d131, 0xc150d549 ),
	NORM( 0xbda08225, 0xbf6e78f3, 0xbeb5d10a ),
	NFlagsW( 84, 49.132610 ),
	VERT( 0x40fbbd48, 0x40341d75, 0xc14de331 ),
	NORM( 0x3ed8d906, 0x3f4d2679, 0x3ed84615 ),
	NFlagsW( 85, 49.395214 ),
	VERT( 0x40f34209, 0x4033fc38, 0xc1478227 ),
	NORM( 0xbe5c27ab, 0xbf791023, 0xbdae3a07 ),
	NFlagsW( 86, 50.488811 ),
	VERT( 0x40f72949, 0x4030a1c5, 0xc14cdf42 ),
	NORM( 0xbe84a2a4, 0xbf73f0fc, 0xbe21853c ),
	NFlagsW( 87, 49.571724 ),
	VERT( 0x40d56818, 0x4035f7e1, 0xc13ef35a ),
	NORM( 0xbf281cfa, 0x3f0eae8f, 0xbf020fa5 ),
	NFlagsW( 88, 82.008904 ),
	VERT( 0x40ed4629, 0x4033a0c1, 0xc14486e2 ),
	NORM( 0xbe19c37d, 0xbf78cf83, 0xbe398a0a ),
	NFlagsW( 89, 53.231258 ),
	VERT( 0x40e5b6c9, 0x402c3908, 0xc1572eb6 ),
	NORM( 0xbf4cca8d, 0x3eb93311, 0xbef520ad ),
	NFlagsW( 90, 48.766972 ),
	VERT( 0x40e9dda9, 0x4033b4f5, 0xc1420650 ),
	NORM( 0xbe110b3e, 0xbf7cda40, 0xbd8775e0 ),
	NFlagsW( 91, 59.699188 ),
	VERT( 0x40d05ac8, 0x4032e97e, 0xc1430e37 ),
	NORM( 0xbf00f7ff, 0x3ef952d2, 0xbf36a778 ),
	NFlagsW( 92, 61.511612 ),
	VERT( 0x40e486b9, 0x4033cf97, 0xc14076ed ),
	NORM( 0xbe4ca65b, 0xbf7a1886, 0xbd99fb0c ),
	NFlagsW( 93, 67.995728 ),
	VERT( 0x40db4b49, 0x4031ddc9, 0xc14452e2 ),
	NORM( 0xbe042451, 0x3f7dbee6, 0x3cf34008 ),
	NFlagsW( 94, 55.481575 ),
	VERT( 0x40fb6128, 0x402e5a8c, 0xc1493786 ),
	NORM( 0x3f1b5081, 0x3f3dae60, 0x3e936fe3 ),
	NFlagsW( 95, 49.838707 ),
	VERT( 0x40f723a8, 0x402c2bf0, 0xc143c786 ),
	NORM( 0x3e96c2c7, 0x3f73bc4d, 0xbda91679 ),
	NFlagsW( 96, 52.869328 ),
	VERT( 0x40ff6398, 0x401e84da, 0xc165a3a6 ),
	NORM( 0xbe2a3549, 0x3cd4962e, 0xbf7c59f1 ),
	NFlagsW( 97, 44.074585 ),
	VERT( 0x41073f6c, 0x401e0c57, 0xc16328f0 ),
	NORM( 0x3f157b6a, 0x3d1576bc, 0xbf4f9d59 ),
	NFlagsW( 98, 44.075226 ),
	VERT( 0x4101b7ed, 0x402aa483, 0xc1423964 ),
	NORM( 0x3e73b794, 0x3ed14c4c, 0xbf618c74 ),
	NFlagsW( 99, 55.167694 ),
	VERT( 0x40f53108, 0x401cab31, 0xc163aa23 ),
	NORM( 0xbee1c3ab, 0x3c735f1a, 0xbf65bcb8 ),
	NFlagsW( 100, 46.082363 ),
	VERT( 0x40f87f88, 0x401ca4b7, 0xc163358d ),
	NORM( 0xbe056302, 0x3ccae18e, 0xbf7dbd5a ),
	NFlagsW( 101, 46.157646 ),
	VERT( 0x40de02f8, 0x4023ff7d, 0xc14d2898 ),
	NORM( 0xbf3b24fb, 0x3f0c38d8, 0xbed0558d ),
	NFlagsW( 102, 49.785652 ),
	VERT( 0x4109b8fc, 0x402699b1, 0xc13f4e9d ),
	NORM( 0x3f4025be, 0x3eb875ef, 0xbf0dce48 ),
	NFlagsW( 103, 66.657310 ),
	VERT( 0x410b483c, 0x401a9993, 0xc15bd834 ),
	NORM( 0x3f7eaafe, 0x3d709c7b, 0xbdaa796c ),
	NFlagsW( 104, 47.286095 ),
	VERT( 0x40ca1578, 0x4022cf63, 0xc1436ff0 ),
	NORM( 0xbf43eb6e, 0x3f0dcbff, 0xbea7df12 ),
	NFlagsW( 105, 58.988701 ),
	VERT( 0x40ecbc29, 0x401722d9, 0xc15ac82e ),
	NORM( 0xbf36b542, 0xbcd888c5, 0xbf332fe1 ),
	NFlagsW( 106, 49.017647 ),
	VERT( 0x40e88a88, 0x401610c0, 0xc1595f6e ),
	NORM( 0xbf3753b1, 0xbc5b4355, 0xbf32a62d ),
	NFlagsW( 107, 49.218678 ),
	VERT( 0x410a7da4, 0x401659cc, 0xc1550077 ),
	NORM( 0x3f631f7a, 0x3ccca83d, 0x3eebe235 ),
	NFlagsW( 108, 49.168022 ),
	VERT( 0x40e55b68, 0x40143975, 0xc1568e00 ),
	NORM( 0xbf57922a, 0xbcfc3cce, 0xbf09d9fd ),
	NFlagsW( 109, 49.515198 ),
	VERT( 0x40c48158, 0x401c3a37, 0xc13de9ab ),
	NORM( 0xbf657829, 0x3edaaa47, 0xbdf3795d ),
	NFlagsW( 110, 87.794563 ),
	VERT( 0x41085f44, 0x400b511c, 0xc1627021 ),
	NORM( 0x3f292306, 0xbe4494b7, 0xbf39c732 ),
	NFlagsW( 111, 46.042759 ),
	VERT( 0x41012f64, 0x4010a157, 0xc14c9b8e ),
	NORM( 0x3f737b13, 0x3cdb19b9, 0x3e9d8f2f ),
	NFlagsW( 112, 49.931110 ),
	VERT( 0x40f76018, 0x4007524d, 0xc1633905 ),
	NORM( 0xbe76dee5, 0xbed8f0e2, 0xbf5f850f ),
	NFlagsW( 113, 47.611336 ),
	VERT( 0x40fa4318, 0x4006b0e3, 0xc1627183 ),
	NORM( 0xbe23f824, 0xbed6adab, 0xbf64c41e ),
	NFlagsW( 114, 47.835205 ),
	VERT( 0x4100760c, 0x4005d9c1, 0xc16473c9 ),
	NORM( 0xbdc56f95, 0xbea882b2, 0xbf707977 ),
	NFlagsW( 115, 46.760529 ),
	VERT( 0x40d5f4e8, 0x400e2f32, 0xc14c7a9c ),
	NORM( 0xbf4c283a, 0x3db4028f, 0xbf18ce42 ),
	NFlagsW( 116, 49.947681 ),
	VERT( 0x410193c4, 0x400ee5c8, 0xc14a5362 ),
	NORM( 0x3f7d3db9, 0x3b900ae5, 0x3e15dcdd ),
	NFlagsW( 117, 49.963547 ),
	VERT( 0x410882e4, 0x400131b4, 0xc160d641 ),
	NORM( 0x3f2e7e1f, 0xbf06e2a2, 0xbf01fa65 ),
	NFlagsW( 118, 47.524860 ),
	VERT( 0x4105b0ec, 0x400a2458, 0xc14625bc ),
	NORM( 0x3eabbccd, 0x3eb29052, 0xbf6008bc ),
	NFlagsW( 119, 50.007618 ),
	VERT( 0x40ffde28, 0x4009e350, 0xc14696d7 ),
	NORM( 0x3f4347b4, 0x3ea4bd56, 0xbf0f95f4 ),
	NFlagsW( 120, 50.007416 ),
	VERT( 0x410ab3ac, 0x4008a3f9, 0xc1430858 ),
	NORM( 0x3f5271b0, 0x3e7469a7, 0xbf0458c3 ),
	NFlagsW( 121, 50.795162 ),
	VERT( 0x40f30ec8, 0x3ffa04d9, 0xc15c57e5 ),
	NORM( 0xbf41f604, 0xbc4dd115, 0xbf270c1c ),
	NFlagsW( 122, 49.493134 ),
	VERT( 0x40cb0398, 0x4004e1f5, 0xc143abac ),
	NORM( 0xbf5a618e, 0x3c22ea20, 0xbf059048 ),
	NFlagsW( 123, 54.174007 ),
	VERT( 0x40e61cb8, 0x3ffa11ca, 0xc1575884 ),
	NORM( 0xbf3af492, 0xbea354db, 0xbf1aa48d ),
	NFlagsW( 124, 49.801628 ),
	VERT( 0x40f79788, 0x3ff3a9b3, 0xc15f7d14 ),
	NORM( 0xbf6cf047, 0x3ca04b56, 0xbec19bae ),
	NFlagsW( 125, 49.128963 ),
	VERT( 0x40f9e3f8, 0x3fed1fbb, 0xc1677d19 ),
	NORM( 0xbe2ac0f2, 0x3f7b0737, 0xbdd3717c ),
	NFlagsW( 126, 46.604240 ),
	VERT( 0x40c54fc8, 0x400537fe, 0xc13d86c8 ),
	NORM( 0xbf73e1af, 0x3d26980b, 0xbe9a43b0 ),
	NFlagsW( 127, 85.520981 ),
	VERT( 0x40f70e68, 0x3fedb429, 0xc15f5520 ),
	NORM( 0xbf314a43, 0xbeb2ee83, 0xbf218e1e ),
	NFlagsW( 128, 49.237877 ),
	VERT( 0x40f54a08, 0x3fea9ca9, 0xc1632a57 ),
	NORM( 0xbe795f60, 0x3f76aaa8, 0x3de2f880 ),
	NFlagsW( 129, 48.501022 ),
	VERT( 0x40efe8b8, 0x3ff0b368, 0xc15afc3d ),
	NORM( 0xbf25360a, 0xbec73974, 0xbf284814 ),
	NFlagsW( 130, 49.684776 ),
	VERT( 0x410036cc, 0x3fea28a3, 0xc162678a ),
	NORM( 0xbd2b6e7d, 0xbf2e02f7, 0xbf3b75b4 ),
	NFlagsW( 131, 48.475098 ),
	VERT( 0x40ff2998, 0x3fe095e6, 0xc16e6544 ),
	NORM( 0xbdb66373, 0x3f4e1144, 0xbf162cb9 ),
	NFlagsW( 132, 41.030796 ),
	VERT( 0x41087924, 0x3fea203c, 0xc15ada80 ),
	NORM( 0x3f35e0e4, 0xbf31d34e, 0xbde71669 ),
	NFlagsW( 133, 49.485222 ),
	VERT( 0x410768d4, 0x3fe6b6f7, 0xc156901d ),
	NORM( 0x3f26d043, 0xbf3058c1, 0x3ea29e36 ),
	NFlagsW( 134, 49.857689 ),
	VERT( 0x40f58d18, 0x3fd59697, 0xc16b11bc ),
	NORM( 0xbf43cffc, 0x3ed65632, 0xbefaaac1 ),
	NFlagsW( 135, 45.413799 ),
	VERT( 0x40dc3078, 0x3fea8b3d, 0xc14e7033 ),
	NORM( 0xbf32f0ff, 0xbeae571d, 0xbf20fd13 ),
	NFlagsW( 136, 49.990921 ),
	VERT( 0x4107d15c, 0x3fd1cee0, 0xc166249e ),
	NORM( 0x3f2bf70a, 0x3f3b6878, 0x3de829e0 ),
	NFlagsW( 137, 46.617516 ),
	VERT( 0x40f63be8, 0x3fcd387d, 0xc16b434f ),
	NORM( 0xbf6943bc, 0x3ca09b66, 0xbed2b2ca ),
	NFlagsW( 138, 45.514156 ),
	VERT( 0x410819d4, 0x3fc8b92e, 0xc16cbd64 ),
	NORM( 0x3f2e5f07, 0x3f2518e0, 0xbeb1774b ),
	NFlagsW( 139, 41.227348 ),
	VERT( 0x40eb8668, 0x3fd478e3, 0xc15d4a88 ),
	NORM( 0xbece623d, 0x3f68d988, 0x3dced6b9 ),
	NFlagsW( 140, 49.691319 ),
	VERT( 0x40fce408, 0x3fdfc00f, 0xc14d4252 ),
	NORM( 0x3f352b2f, 0xbf339d86, 0x3daa2393 ),
	NFlagsW( 141, 49.999348 ),
	VERT( 0x410017c4, 0x3fc3e365, 0xc170c2af ),
	NORM( 0xbdf8b584, 0x3ec616ef, 0xbf6a01fe ),
	NFlagsW( 142, 39.444408 ),
	VERT( 0x40fd2118, 0x3fdd11a8, 0xc14f36e7 ),
	NORM( 0x3ef164e5, 0xbf5229f3, 0x3ea4eac8 ),
	NFlagsW( 143, 49.998077 ),
	VERT( 0x4106bfdc, 0x3fc9f58c, 0xc1617d3e ),
	NORM( 0x3f1a2079, 0x3f2c7979, 0x3edb64cc ),
	NFlagsW( 144, 48.860031 ),
	VERT( 0x40fbc0b8, 0x3fccf063, 0xc15c2b01 ),
	NORM( 0xbd817442, 0xbf6c02ed, 0xbec3ae45 ),
	NFlagsW( 145, 49.812107 ),
	VERT( 0x40ee7098, 0x3fc382c0, 0xc1665639 ),
	NORM( 0xbf3f9ec5, 0x3ec648dd, 0xbf09cc88 ),
	NFlagsW( 146, 48.348244 ),
	VERT( 0x40c58668, 0x3fdfc57b, 0xc140c75d ),
	NORM( 0xbf5e09e8, 0x3cd3591e, 0xbefe7d49 ),
	NFlagsW( 147, 61.980122 ),
	VERT( 0x40f68608, 0x3fbb3864, 0xc16f6e0c ),
	NORM( 0xbe859b7f, 0x3efecc27, 0xbf53c2e5 ),
	NFlagsW( 148, 42.597736 ),
	VERT( 0x40f96978, 0x3fbb5f4c, 0xc16e9223 ),
	NORM( 0xbe6acce5, 0x3ee99c74, 0xbf5c1b36 ),
	NFlagsW( 149, 43.168118 ),
	VERT( 0x40f1ce68, 0x3fbe37dc, 0xc167e1eb ),
	NORM( 0xbf48c9ae, 0xbc097f7a, 0xbf1ecb5c ),
	NFlagsW( 150, 47.859921 ),
	VERT( 0x4108220c, 0x3fb80b89, 0xc16e90ca ),
	NORM( 0x3f2c8a50, 0x3e8f44fd, 0xbf2f06cb ),
	NFlagsW( 151, 39.824718 ),
	VERT( 0x40eb73d8, 0x3fcb1f90, 0xc152ca29 ),
	NORM( 0xbe71f35d, 0xbf705fc5, 0xbe800608 ),
	NFlagsW( 152, 49.994255 ),
	VERT( 0x40d2c5b8, 0x3fd29e76, 0xc1487f39 ),
	NORM( 0xbf347c30, 0xbe25b30c, 0xbf30c349 ),
	NFlagsW( 153, 50.007183 ),
	VERT( 0x41029a4c, 0x3fd1403a, 0xc1494c2b ),
	NORM( 0x3e772a03, 0x3ee6db0c, 0xbf5bfcaa ),
	NFlagsW( 154, 50.000000 ),
	VERT( 0x410aab8c, 0x3fd34b8e, 0xc145ff79 ),
	NORM( 0x3f4e6bd8, 0x3e43c2eb, 0xbf0f4965 ),
	NFlagsW( 155, 49.999992 ),
	VERT( 0x40f75bf8, 0x3fc47f6f, 0xc15836fb ),
	NORM( 0xbe08c711, 0xbf7a0662, 0xbe2c3e78 ),
	NFlagsW( 156, 49.963940 ),
	VERT( 0x40e6b318, 0x3fc43fa2, 0xc1571abf ),
	NORM( 0xbebeabe9, 0x3f6d1534, 0x3d7748dc ),
	NFlagsW( 157, 49.962906 ),
	VERT( 0x40f8be98, 0x3fcc0fbd, 0xc14a6d17 ),
	NORM( 0x3ea44e92, 0xbf4e7b72, 0xbefe2e36 ),
	NFlagsW( 158, 50.000000 ),
	VERT( 0x40e5e518, 0x3fc63642, 0xc14f0bc7 ),
	NORM( 0xbe2e3dea, 0xbf6d053f, 0xbeacbd56 ),
	NFlagsW( 159, 49.999699 ),
	VERT( 0x40fbf278, 0x3fbd4388, 0xc1584b24 ),
	NORM( 0x3ee0b8c4, 0x3f490e4f, 0x3edf7ec3 ),
	NFlagsW( 160, 49.972847 ),
	VERT( 0x40e5dc58, 0x3faea7c4, 0xc16255fb ),
	NORM( 0xbf5217da, 0x3ebc0bf3, 0xbee01c97 ),
	NFlagsW( 161, 49.416412 ),
	VERT( 0x40dd7e78, 0x3fbbb3c6, 0xc14af2c5 ),
	NORM( 0xbe5074e7, 0xbf6391cc, 0xbed2118c ),
	NFlagsW( 162, 50.000000 ),
	VERT( 0x40fbb798, 0x3fb39f16, 0xc155217d ),
	NORM( 0x3f20fb59, 0x3f338919, 0x3eabe789 ),
	NFlagsW( 163, 49.997635 ),
	VERT( 0x40dbba18, 0x3fb852d2, 0xc14e2a37 ),
	NORM( 0xbe9f9631, 0x3f708b6d, 0xbe10a0c2 ),
	NFlagsW( 164, 49.999943 ),
	VERT( 0x40d2b8a8, 0x3fb7e35b, 0xc147e569 ),
	NORM( 0xbf234f3b, 0x3eb2ee95, 0xbf2facee ),
	NFlagsW( 165, 50.003361 ),
	VERT( 0x40d2b008, 0x3fb62a65, 0xc1484355 ),
	NORM( 0xbee3044f, 0x3f4b6b6d, 0xbed457b2 ),
	NFlagsW( 166, 50.000931 ),
	VERT( 0x40f76b88, 0x3fafb13b, 0xc14ff3dd ),
	NORM( 0x3e8de478, 0x3f75cfdd, 0xbd0e46b3 ),
	NFlagsW( 167, 50.000000 ),
	VERT( 0x40ff8428, 0x3f94d183, 0xc172324f ),
	NORM( 0xbe31d6fc, 0x3ce77acc, 0xbf7c0186 ),
	NFlagsW( 168, 39.741398 ),
	VERT( 0x4107566c, 0x3f9392c1, 0xc16f75fb ),
	NORM( 0x3f1bad4a, 0x3d1a96bd, 0xbf4afef4 ),
	NFlagsW( 169, 40.728371 ),
	VERT( 0x4101cdac, 0x3facf225, 0xc14e42b0 ),
	NORM( 0x3e805653, 0x3f2eacb7, 0xbf2fcde3 ),
	NFlagsW( 170, 50.000000 ),
	VERT( 0x40f55738, 0x3f90e3b2, 0xc1700a2f ),
	NORM( 0xbee1ee02, 0x3c8d37a2, 0xbf65af83 ),
	NFlagsW( 171, 43.514000 ),
	VERT( 0x40f8a358, 0x3f90c6a2, 0xc16f8804 ),
	NORM( 0xbe0a7f68, 0x3cd71f62, 0xbf7d8f00 ),
	NFlagsW( 172, 43.736153 ),
	VERT( 0x40df9a88, 0x3f9d3ce5, 0xc1577364 ),
	NORM( 0xbf41c875, 0x3f1db322, 0xbe5f3f9f ),
	NFlagsW( 173, 49.983753 ),
	VERT( 0x410b5d23, 0x3f8bd171, 0xc16775bc ),
	NORM( 0x3f7ee888, 0x3d6b3fd4, 0xbd93d978 ),
	NFlagsW( 174, 47.208652 ),
	VERT( 0x4109e174, 0x3fa1fd6e, 0xc14930a9 ),
	NORM( 0x3f50824a, 0x3eac5569, 0xbef1f3de ),
	NFlagsW( 175, 50.000000 ),
	VERT( 0x40d1a678, 0x3f99a9a1, 0xc14c6bc9 ),
	NORM( 0xbf374f02, 0x3ef4a642, 0xbf024581 ),
	NFlagsW( 176, 50.000000 ),
	VERT( 0x40ecdcf8, 0x3f84bfcb, 0xc1664877 ),
	NORM( 0xbf3d8f87, 0xbce75eff, 0xbf2be70e ),
	NFlagsW( 177, 49.127277 ),
	VERT( 0x40bae0c8, 0x3fa8f22e, 0xc136c445 ),
	NORM( 0xbf587651, 0x3e97e159, 0xbee345eb ),
	NFlagsW( 178, 99.806824 ),
	VERT( 0x40e8a758, 0x3f827109, 0xc164b9df ),
	NORM( 0xbf415d1f, 0xbc4a8fb3, 0xbf27bd3f ),
	NFlagsW( 179, 49.404438 ),
	VERT( 0x410a931c, 0x3f82761f, 0xc15ffcb0 ),
	NORM( 0x3f619e0a, 0x3c1c8ff7, 0x3ef1e209 ),
	NFlagsW( 180, 49.717800 ),
	VERT( 0x40e5df78, 0x3f7d03c2, 0xc161a454 ),
	NORM( 0xbf5e05c9, 0xbd27410c, 0xbefe0771 ),
	NFlagsW( 181, 49.743103 ),
	VERT( 0x410875a4, 0x3f5be125, 0xc16ea9a9 ),
	NORM( 0x3f2dbc8f, 0xbe4fcfd1, 0xbf34b337 ),
	NFlagsW( 182, 42.704998 ),
	VERT( 0x41014174, 0x3f70bc73, 0xc158af10 ),
	NORM( 0x3f6e01c6, 0xbc00b260, 0x3ebc8459 ),
	NFlagsW( 183, 49.999790 ),
	VERT( 0x40f788b8, 0x3f4bead8, 0xc16f8a3f ),
	NORM( 0xbe6b754a, 0xbee0ba8c, 0xbf5e5ce0 ),
	NFlagsW( 184, 44.841339 ),
	VERT( 0x40c2f778, 0x3f83dab2, 0xc1467285 ),
	NORM( 0xbf51d323, 0x3e6cfb95, 0xbf062995 ),
	NFlagsW( 185, 50.198277 ),
	VERT( 0x410086dc, 0x3f464c89, 0xc170e146 ),
	NORM( 0xbdce162f, 0xbeb4adf1, 0xbf6e2416 ),
	NFlagsW( 186, 42.713135 ),
	VERT( 0x40fa64d8, 0x3f4930e7, 0xc16eada8 ),
	NORM( 0xbe2a95aa, 0xbee7926f, 0xbf604d09 ),
	NFlagsW( 187, 45.401974 ),
	VERT( 0x4101a3e4, 0x3f6a352c, 0xc15691b0 ),
	NORM( 0x3f7b5265, 0xbbbff539, 0x3e42c667 ),
	NFlagsW( 188, 50.000000 ),
	VERT( 0x40d5c788, 0x3f65064d, 0xc1577ea7 ),
	NORM( 0xbf5a20a5, 0x3e7ef6cb, 0xbeebbdcc ),
	NFlagsW( 189, 49.989082 ),
	VERT( 0x410896ec, 0x3f33120e, 0xc16ceb7a ),
	NORM( 0x3f309842, 0xbf098109, 0xbef88a1e ),
	NFlagsW( 190, 45.040974 ),
	VERT( 0x410001a4, 0x3f59d403, 0xc153ac94 ),
	NORM( 0x3f4de76d, 0x3ebe6cbd, 0xbeed44c7 ),
	NFlagsW( 191, 50.000000 ),
	VERT( 0x4105df04, 0x3f5920bc, 0xc152c1c2 ),
	NORM( 0x3f05fe90, 0x3ec61ac6, 0xbf42586a ),
	NFlagsW( 192, 50.000000 ),
	VERT( 0x40f32db8, 0x3f215bf9, 0xc167fbbf ),
	NORM( 0xbf4926ef, 0xbc3619b5, 0xbf1e5259 ),
	NFlagsW( 193, 49.105629 ),
	VERT( 0x410b0554, 0x3f48c5e0, 0xc14bfc93 ),
	NORM( 0x3f6f512b, 0x3e1a2245, 0xbea4a9c7 ),
	NFlagsW( 194, 50.000000 ),
	VERT( 0x40f7b4c8, 0x3f153535, 0xc16b6e71 ),
	NORM( 0xbf6f33d9, 0x3bf3582c, 0xbeb65e48 ),
	NFlagsW( 195, 47.908264 ),
	VERT( 0x40e60a28, 0x3f207a5c, 0xc16284eb ),
	NORM( 0xbf4571b5, 0xbe906ed0, 0xbf121206 ),
	NFlagsW( 196, 49.803043 ),
	VERT( 0x40cb3828, 0x3f3a83df, 0xc14c7f28 ),
	NORM( 0xbf54e318, 0x3e9a6427, 0xbeeecbf4 ),
	NFlagsW( 197, 50.000000 ),
	VERT( 0x40f72de8, 0x3f09300a, 0xc16b42b4 ),
	NORM( 0xbf3722bb, 0xbeb75232, 0xbf199bd8 ),
	NFlagsW( 198, 48.048782 ),
	VERT( 0x41004874, 0x3f02c91a, 0xc16ea1b1 ),
	NORM( 0xbd52d5a7, 0xbf32981b, 0xbf36f040 ),
	NFlagsW( 199, 45.572754 ),
	VERT( 0x40f00927, 0x3f0e6649, 0xc1667e8b ),
	NORM( 0xbf299381, 0xbec9c619, 0xbf2319b0 ),
	NFlagsW( 200, 49.448223 ),
	VERT( 0x40f8b818, 0x3ef74ef6, 0xc16fc732 ),
	NORM( 0xbe2b95e7, 0x3f7b6450, 0xbdb28964 ),
	NFlagsW( 201, 45.184620 ),
	VERT( 0x41088db4, 0x3f014013, 0xc1666119 ),
	NORM( 0x3f360b0a, 0xbf31aa5e, 0xbde6a9b5 ),
	NFlagsW( 202, 49.153595 ),
	VERT( 0x40f3d2e8, 0x3eecce59, 0xc16b3e8b ),
	NORM( 0xbe7be6a5, 0x3f75d092, 0x3e075def ),
	NFlagsW( 203, 48.181515 ),
	VERT( 0x40fe4f18, 0x3ec59ce9, 0xc177b52e ),
	NORM( 0xbdcb6b8e, 0x3f51f19b, 0xbf10446f ),
	NFlagsW( 204, 34.274799 ),
	VERT( 0x40c3c4b8, 0x3f2a0142, 0xc1460654 ),
	NORM( 0xbf5a9559, 0x3e68fd1d, 0xbeefb471 ),
	NFlagsW( 205, 50.114925 ),
	VERT( 0x41077dcc, 0x3ef2e081, 0xc161af44 ),
	NORM( 0x3f26132a, 0xbf2fc7c4, 0x3ea80170 ),
	NFlagsW( 206, 49.898918 ),
	VERT( 0x40de4ca8, 0x3ef81ab0, 0xc1599ea4 ),
	NORM( 0xbf37da98, 0xbe777ba3, 0xbf270cd6 ),
	NFlagsW( 207, 49.996845 ),
	VERT( 0x40f41d88, 0x3e958c7c, 0xc173dd83 ),
	NORM( 0xbf48932f, 0x3ed6a653, 0xbeead64d ),
	NFlagsW( 208, 41.589916 ),
	VERT( 0x40fd45a8, 0x3ece4e51, 0xc15abc16 ),
	NORM( 0x3efe2fde, 0xbf5130c0, 0x3e95f800 ),
	NFlagsW( 209, 50.000000 ),
	VERT( 0x40fd2468, 0x3ed5b9f0, 0xc1581e21 ),
	NORM( 0x3f0aaeda, 0xbf2324f6, 0x3f0c4f71 ),
	NFlagsW( 210, 50.000000 ),
	VERT( 0x40f4d8b8, 0x3e64c0bd, 0xc1741501 ),
	NORM( 0xbf6ccd3f, 0x3c9362ce, 0xbec25107 ),
	NFlagsW( 211, 41.324215 ),
	VERT( 0x4107e454, 0x3e82bed1, 0xc16e3b3c ),
	NORM( 0x3f2c6503, 0x3f3a8c23, 0x3dff02d3 ),
	NFlagsW( 212, 44.888687 ),
	VERT( 0x40e96c48, 0x3e9477a2, 0xc1662b7e ),
	NORM( 0xbeebe695, 0x3f62432b, 0x3da5b789 ),
	NFlagsW( 213, 49.553711 ),
	VERT( 0x40fbe818, 0x3e8e2f5c, 0xc167ce33 ),
	NORM( 0xbd8f111a, 0xbf6d6653, 0xbebc3aa4 ),
	NFlagsW( 214, 49.282372 ),
	VERT( 0x41082fb4, 0x3e3ea101, 0xc175ceef ),
	NORM( 0x3f2fe99b, 0x3f26dc7c, 0xbea44af6 ),
	NFlagsW( 215, 34.061127 ),
	VERT( 0x40ff6448, 0x3e1a8d47, 0xc17a69c4 ),
	NORM( 0xbe00e483, 0x3ed2bc89, 0xbf6712f5 ),
	NFlagsW( 216, 29.345263 ),
	VERT( 0x40b48a68, 0x3f03e197, 0xc139e3d1 ),
	NORM( 0xbf61723f, 0x3d9c86b3, 0xbeef6472 ),
	NFlagsW( 217, 97.162758 ),
	VERT( 0x4102c174, 0x3ea920f7, 0xc158488b ),
	NORM( 0x3ec15c79, 0x3eb1d93a, 0xbf5bbae9 ),
	NFlagsW( 218, 50.000000 ),
	VERT( 0x40d2e1d8, 0x3ea8bfb5, 0xc1542228 ),
	NORM( 0xbf3d1334, 0x3e2133f7, 0xbf27d120 ),
	NFlagsW( 219, 49.999973 ),
	VERT( 0x40eba387, 0x3e870a30, 0xc15e6596 ),
	NORM( 0xbe2b5abe, 0xbf6e9528, 0xbea4abcc ),
	NFlagsW( 220, 49.987072 ),
	VERT( 0x4106bb5c, 0x3e43b230, 0xc169589a ),
	NORM( 0x3f144a10, 0x3f270808, 0x3efa2c8c ),
	NFlagsW( 221, 48.469601 ),
	VERT( 0x40f92127, 0x3e961883, 0xc158635f ),
	NORM( 0x3d849ebf, 0xbcf80c2d, 0xbf7f5857 ),
	NFlagsW( 222, 50.000000 ),
	VERT( 0x40f785b8, 0x3e556d46, 0xc1637b96 ),
	NORM( 0xbe0101d6, 0xbf7af726, 0xbe1b8bac ),
	NFlagsW( 223, 49.866302 ),
	VERT( 0x40f523c8, 0x3d9e9f5f, 0xc178e317 ),
	NORM( 0xbe803ba1, 0x3f0344fa, 0xbf5238eb ),
	NFlagsW( 224, 34.190163 ),
	VERT( 0x40ec95f8, 0x3e0ca801, 0xc16e6956 ),
	NORM( 0xbf430d6f, 0x3ec446a7, 0xbf05a3b5 ),
	NFlagsW( 225, 46.896938 ),
	VERT( 0x40f830a8, 0x3d9fdfcc, 0xc177e2f5 ),
	NORM( 0xbe7526e9, 0x3ef9ce96, 0xbf56e490 ),
	NFlagsW( 226, 35.407246 ),
	VERT( 0x40c3e508, 0x3eb0de46, 0xc14a3b51 ),
	NORM( 0xbf5fa457, 0x3e3e433f, 0xbee648fe ),
	NFlagsW( 227, 50.000000 ),
	VERT( 0x410b0884, 0x3e99e669, 0xc14f04b8 ),
	NORM( 0x3f6e752c, 0x3cb5ad99, 0xbeb9ebdd ),
	NFlagsW( 228, 50.000000 ),
	VERT( 0x41083a9c, 0x3d4dcf7e, 0xc177e15d ),
	NORM( 0x3f304bb9, 0x3e954770, 0xbf29f47d ),
	NFlagsW( 229, 30.185049 ),
	VERT( 0x40f02758, 0x3dc4b48e, 0xc1702e08 ),
	NORM( 0xbf4e87d9, 0xbc7cbfad, 0xbf1736a3 ),
	NFlagsW( 230, 45.607231 ),
	VERT( 0x40e5c5e8, 0x3e417591, 0xc15b44ac ),
	NORM( 0xbe5466dc, 0xbf6d0181, 0xbea1cbe6 ),
	NFlagsW( 231, 49.998215 ),
	VERT( 0x40e63738, 0x3e18cdc9, 0xc15e61f9 ),
	NORM( 0xbe9eb55e, 0x3f7276a5, 0x3da9c865 ),
	NFlagsW( 232, 49.981693 ),
	VERT( 0x40fabcb8, 0x3df0ac5d, 0xc162d7b6 ),
	NORM( 0x3ed70cfa, 0x3f4d64cd, 0x3ed9245c ),
	NFlagsW( 233, 49.908890 ),
	VERT( 0x40de33d8, 0x3e26d72e, 0xc1585b28 ),
	NORM( 0xbe991335, 0xbf51d883, 0xbefa2451 ),
	NFlagsW( 234, 49.999676 ),
	VERT( 0x40d2fa08, 0x3e081a4e, 0xc156085b ),
	NORM( 0xbefd8247, 0xbe966380, 0xbf515213 ),
	NFlagsW( 235, 49.999538 ),
	VERT( 0x40fa8b78, 0x3d828e87, 0xc15ddbf8 ),
	NORM( 0x3f1cc87b, 0x3f37ab32, 0x3ea9f353 ),
	NFlagsW( 236, 49.998405 ),
	VERT( 0x40da8ce8, 0x3d9b06f4, 0xc1581dc1 ),
	NORM( 0xbec4b949, 0x3f5f7a1f, 0xbe99deb6 ),
	NFlagsW( 237, 49.999355 ),
	VERT( 0x40e36dd7, 0xbd211715, 0xc16a018f ),
	NORM( 0xbf5a71e0, 0x3ea790aa, 0xbecfd49d ),
	NFlagsW( 238, 48.770283 ),
	VERT( 0x40cc3c18, 0x3dc22c6e, 0xc1530f5e ),
	NORM( 0xbf39a10c, 0x3e29c6c3, 0xbf2b1a76 ),
	NFlagsW( 239, 49.999966 ),
	VERT( 0x40f6cb68, 0x3c90564b, 0xc15b0f32 ),
	NORM( 0x3e8f7ff4, 0x3f7496cf, 0x3dbe0104 ),
	NFlagsW( 240, 49.999996 ),
	VERT( 0x41019094, 0xbbdcccf3, 0xc15ab5ee ),
	NORM( 0x3ebaacfc, 0x3e902771, 0xbf633852 ),
	NFlagsW( 241, 50.000000 ),
	VERT( 0x40fead88, 0xbe74e94e, 0xc17c110d ),
	NORM( 0xbe37b319, 0x3cfa0422, 0xbf7bb9cd ),
	NFlagsW( 242, 26.139536 ),
	VERT( 0x410762f4, 0xbe810306, 0xc178e7c3 ),
	NORM( 0x3f211693, 0x3d1f78d2, 0xbf46b6c9 ),
	NFlagsW( 243, 28.397959 ),
	VERT( 0x40f3e458, 0xbe8c15f2, 0xc179965b ),
	NORM( 0xbee09fe6, 0x3ca184e8, 0xbf65fe0b ),
	NFlagsW( 244, 32.996399 ),
	VERT( 0x40f75d98, 0xbe8cdc59, 0xc178fd36 ),
	NORM( 0xbe0beeb5, 0x3ce1f858, 0xbf7d800a ),
	NFlagsW( 245, 33.467682 ),
	VERT( 0x40b80e08, 0x3da08d2b, 0xc13abb32 ),
	NORM( 0xbf5a1a3b, 0xbde5ff0c, 0xbf02ec3c ),
	NFlagsW( 246, 93.888451 ),
	VERT( 0x40de03b8, 0xbe0c1cd4, 0xc15d6325 ),
	NORM( 0xbf4ad965, 0x3f0065f8, 0xbeb1c9af ),
	NFlagsW( 247, 49.977539 ),
	VERT( 0x4109e0db, 0xbdb0c893, 0xc150384f ),
	NORM( 0x3f6b3394, 0x3cf0bc69, 0xbec9971d ),
	NFlagsW( 248, 50.000000 ),
	VERT( 0x410ba66c, 0xbea5849a, 0xc16fb645 ),
	NORM( 0x3f7f25f6, 0x3d67f883, 0xbd7013f6 ),
	NFlagsW( 249, 42.007957 ),
	VERT( 0x40cd8388, 0xbe2cf23f, 0xc1527de0 ),
	NORM( 0xbf4d8525, 0x3d28467e, 0xbf1845bc ),
	NFlagsW( 250, 49.999996 ),
	VERT( 0x40eae6e7, 0xbec416c2, 0xc16e53ff ),
	NORM( 0xbf43742f, 0xbcf5d587, 0xbf25269a ),
	NFlagsW( 251, 46.830936 ),
	VERT( 0x40e66647, 0xbecf0fb1, 0xc16c836c ),
	NORM( 0xbf47a816, 0xbd090eb0, 0xbf1fffe8 ),
	NFlagsW( 252, 47.776279 ),
	VERT( 0x410acc4c, 0xbecc6dc4, 0xc167b585 ),
	NORM( 0x3f5b2362, 0x3ce7ac17, 0x3f0424dc ),
	NFlagsW( 253, 48.647293 ),
	VERT( 0x40e36fb7, 0xbee31e07, 0xc168ec30 ),
	NORM( 0xbf66303a, 0xbd2341c9, 0xbedf1db8 ),
	NFlagsW( 254, 48.940269 ),
	VERT( 0x41089384, 0xbf10b9c1, 0xc177fb24 ),
	NORM( 0x3f31b519, 0xbe59e93d, 0xbf3008ec ),
	NFlagsW( 255, 28.750292 ),
	VERT( 0x40c0be47, 0xbe90d9f2, 0xc1486d61 ),
	NORM( 0xbf72fe2d, 0xbc10e8a9, 0xbea11033 ),
	NFlagsW( 256, 50.002975 ),
	VERT( 0x4100e00c, 0xbef1a45a, 0xc16114c5 ),
	NORM( 0x3f64d596, 0x3d963d4d, 0x3ee26f4a ),
	NFlagsW( 257, 49.949341 ),
	VERT( 0x40f63638, 0xbf2167f6, 0xc1790037 ),
	NORM( 0xbe61d12d, 0xbee6d8eb, 0xbf5d6b37 ),
	NFlagsW( 258, 32.860092 ),
	VERT( 0x4100288c, 0xbf273ad4, 0xc17a896e ),
	NORM( 0xbdd54253, 0xbebfbf03, 0xbf6bde39 ),
	NFlagsW( 259, 27.795740 ),
	VERT( 0x40f93c08, 0xbf2497b9, 0xc177ff68 ),
	NORM( 0xbe2ff2fd, 0xbef6c726, 0xbf5bf232 ),
	NFlagsW( 260, 34.043972 ),
	VERT( 0x41014d84, 0xbf04d301, 0xc15ca874 ),
	NORM( 0x3f601cf6, 0x3ddb0102, 0x3ef15424 ),
	NFlagsW( 261, 49.999039 ),
	VERT( 0x40bb91b7, 0xbeb77db0, 0xc13b9290 ),
	NORM( 0xbf583528, 0x3c678bc8, 0xbf0907a3 ),
	NFlagsW( 262, 89.371506 ),
	VERT( 0x40d67e78, 0xbf111f0b, 0xc15cc404 ),
	NORM( 0xbf612b0b, 0xbda83995, 0xbeeff156 ),
	NFlagsW( 263, 49.946892 ),
	VERT( 0x4108b4ec, 0xbf3c2db1, 0xc175fe41 ),
	NORM( 0x3f326f82, 0xbf0b9ff5, 0xbeee577c ),
	NFlagsW( 264, 31.815794 ),
	VERT( 0x4105f4c4, 0xbf12004d, 0xc159b1fe ),
	NORM( 0x3f3014c3, 0xbe057072, 0xbf36ceb8 ),
	NFlagsW( 265, 50.000000 ),
	VERT( 0x40ff4517, 0xbf163c55, 0xc15bddcc ),
	NORM( 0x3f7b8334, 0x3e1a4591, 0x3de0d92d ),
	NFlagsW( 266, 49.999447 ),
	VERT( 0x410b4804, 0xbf0904db, 0xc14f04b9 ),
	NORM( 0x3f785ac5, 0xbcb300a3, 0xbe776095 ),
	NFlagsW( 267, 50.000000 ),
	VERT( 0x40c748e7, 0xbf18c041, 0xc14f7065 ),
	NORM( 0xbf5fbfd0, 0xbdc92742, 0xbef3a3ac ),
	NFlagsW( 268, 50.000000 ),
	VERT( 0x40f19d57, 0xbf507b59, 0xc1704786 ),
	NORM( 0xbf4f3e20, 0xbc0a869b, 0xbf1645bd ),
	NFlagsW( 269, 44.511078 ),
	VERT( 0x40c1a098, 0xbf1436ea, 0xc1473030 ),
	NORM( 0xbf75b9ed, 0xbd6477c9, 0xbe8cb8f5 ),
	NFlagsW( 270, 50.041126 ),
	VERT( 0x40f668c7, 0xbf5c9062, 0xc17440fa ),
	NORM( 0xbf720fa9, 0x3c0001e5, 0xbea69812 ),
	NFlagsW( 271, 39.527332 ),
	VERT( 0x40e46b87, 0xbf537e28, 0xc169e2bd ),
	NORM( 0xbf49a158, 0xbec44629, 0xbef6fc07 ),
	NFlagsW( 272, 48.369019 ),
	VERT( 0x40ffcca7, 0xbf6f2c70, 0xc177f3bf ),
	NORM( 0xbd77e72a, 0xbf367edb, 0xbf32dc76 ),
	NFlagsW( 273, 31.647469 ),
	VERT( 0x40f5d787, 0xbf6940f7, 0xc1740efc ),
	NORM( 0xbf3c9ef9, 0xbeb868c0, 0xbf127ae7 ),
	NFlagsW( 274, 39.678837 ),
	VERT( 0x40ee3f77, 0xbf650569, 0xc16e8a88 ),
	NORM( 0xbf32223d, 0xbed30a7d, 0xbf169099 ),
	NFlagsW( 275, 45.839504 ),
	VERT( 0x4108ac4b, 0xbf72680e, 0xc16e78c3 ),
	NORM( 0x3f368337, 0xbf316ead, 0xbdda1035 ),
	NFlagsW( 276, 42.476933 ),
	VERT( 0x40e7a157, 0xbf8acd24, 0xc17b93e6 ),
	NORM( 0xbe4c6854, 0x3f79ec0e, 0xbdac3e54 ),
	NFlagsW( 277, 28.792263 ),
	VERT( 0x4107900b, 0xbf7ae132, 0xc1695148 ),
	NORM( 0x3f281c95, 0xbf2bd847, 0x3eafffa9 ),
	NFlagsW( 278, 47.141636 ),
	VERT( 0x40dfabf7, 0xbf719635, 0xc15d56a9 ),
	NORM( 0xbf3d8a68, 0xbf1172b4, 0xbeb7e760 ),
	NFlagsW( 279, 49.926895 ),
	VERT( 0x40c1df77, 0xbf59fafd, 0xc148128b ),
	NORM( 0xbf5f4f2b, 0xbef895a1, 0xbd6d8400 ),
	NFlagsW( 280, 50.024235 ),
	VERT( 0x40fc68d7, 0xbf87c099, 0xc1617934 ),
	NORM( 0x3f1c313e, 0xbf45690a, 0x3e3a4c43 ),
	NFlagsW( 281, 49.767303 ),
	VERT( 0x40e3b947, 0xbf93dbf3, 0xc170333d ),
	NORM( 0xbe8f220d, 0x3f729e1d, 0x3e1d870c ),
	NFlagsW( 282, 44.175484 ),
	VERT( 0x4102a544, 0xbf81b702, 0xc1555d80 ),
	NORM( 0x3f2b0035, 0xbeedca92, 0xbf14db8b ),
	NFlagsW( 283, 50.000000 ),
	VERT( 0x40fadba7, 0xbf97ed03, 0xc170190f ),
	NORM( 0xbd9a870d, 0xbf6e972d, 0xbeb58549 ),
	NFlagsW( 284, 42.735519 ),
	VERT( 0x410b02d4, 0xbf779148, 0xc14afbbe ),
	NORM( 0x3f6e013b, 0xbeb7e783, 0xbda6c474 ),
	NFlagsW( 285, 50.000000 ),
	VERT( 0x40fc5c17, 0xbf8d236b, 0xc15cf43a ),
	NORM( 0x3f399004, 0xbf30352d, 0x3ce9f037 ),
	NFlagsW( 286, 49.961182 ),
	VERT( 0x40e97628, 0xbfb1d02c, 0xc18451a6 ),
	NORM( 0xbe25bc7f, 0x3f471cc8, 0xbf1b7a6c ),
	NFlagsW( 287, 5.919476 ),
	VERT( 0x41038db4, 0xbfac2170, 0xc17d960f ),
	NORM( 0x3f1c950f, 0x3f49fe08, 0xbd6bb5a4 ),
	NFlagsW( 288, 16.704977 ),
	VERT( 0x40cf2e08, 0xbf8ad1cb, 0xc1505127 ),
	NORM( 0xbf31c5c8, 0xbf0244d7, 0xbf023ddb ),
	NFlagsW( 289, 49.999802 ),
	VERT( 0x40eb7c87, 0xbf9b5135, 0xc164dc3a ),
	NORM( 0xbeaf7d21, 0xbf6c6697, 0xbe30b4bc ),
	NFlagsW( 290, 49.211704 ),
	VERT( 0x40f635e7, 0xbfa1d07c, 0xc16b1ce8 ),
	NORM( 0xbe13c778, 0xbf7a669e, 0xbe1962e9 ),
	NFlagsW( 291, 46.783508 ),
	VERT( 0x40dc3318, 0xbfb56a2d, 0xc18111e0 ),
	NORM( 0xbf5950bb, 0x3ee06073, 0xbe974ff9 ),
	NFlagsW( 292, 16.614883 ),
	VERT( 0x40f86797, 0xbf97d210, 0xc1585477 ),
	NORM( 0x3ecba59f, 0xbf6ad6c8, 0x3c8a3ec5 ),
	NFlagsW( 293, 49.996315 ),
	VERT( 0x40e84517, 0xbfa01ac8, 0xc15eaa02 ),
	NORM( 0xbe9765cc, 0xbf6fa181, 0xbe43405a ),
	NFlagsW( 294, 49.830154 ),
	VERT( 0x4101f254, 0xbfb0d119, 0xc16c9139 ),
	NORM( 0x3f1f293f, 0x3f2f83ca, 0x3ec1e397 ),
	NFlagsW( 295, 44.329487 ),
	VERT( 0x40dd13d8, 0xbfc1c9c8, 0xc1813c45 ),
	NORM( 0xbf7ee66c, 0x3cfd59b1, 0xbdb2c12e ),
	NFlagsW( 296, 15.415868 ),
	VERT( 0x410524fc, 0xbfc43169, 0xc182b567 ),
	NORM( 0x3f2a95d3, 0x3f118322, 0xbef715e0 ),
	NFlagsW( 297, 4.812352 ),
	VERT( 0x40db8a97, 0xbfb13fbb, 0xc168a1fa ),
	NORM( 0xbedff9f2, 0x3f65bb52, 0x3d6c3ea8 ),
	NFlagsW( 298, 47.803074 ),
	VERT( 0x40cdbfa8, 0xbf9e3ae9, 0xc14cea43 ),
	NORM( 0xbf5eb4ff, 0xbe930f01, 0xbecd3dc5 ),
	NFlagsW( 299, 49.999996 ),
	VERT( 0x40bab267, 0xbf94dda7, 0xc13f9e36 ),
	NORM( 0xbf3d2cd7, 0x3e5d0022, 0xbf2363c7 ),
	NFlagsW( 300, 67.825943 ),
	VERT( 0x40db3727, 0xbfa51458, 0xc1523c05 ),
	NORM( 0xbe22fd1f, 0xbf7cb7a6, 0xbc45f2dd ),
	NFlagsW( 301, 49.998619 ),
	VERT( 0x40dab757, 0xbfb41465, 0xc161742b ),
	NORM( 0xbe999231, 0x3f738d78, 0x3d8f95a2 ),
	NFlagsW( 302, 49.365990 ),
	VERT( 0x40e8ff37, 0xbfd8eb75, 0xc1867162 ),
	NORM( 0xbe4d6b73, 0x3ef93840, 0xbf59a622 ),
	NFlagsW( 303, 2.219248 ),
	VERT( 0x40dbf967, 0xbfb4c553, 0xc15d3c61 ),
	NORM( 0xbe29d986, 0x3f75ff28, 0x3e62ee17 ),
	NFlagsW( 304, 49.755669 ),
	VERT( 0x41000dd4, 0xbfb85132, 0xc153c257 ),
	NORM( 0x3f7864ea, 0xbd84d05e, 0xbe6eafd6 ),
	NFlagsW( 305, 49.998768 ),
	VERT( 0x4103d564, 0xbfe21612, 0xc183dc15 ),
	NORM( 0x3f1de6f4, 0x3e8d00b8, 0xbf3cc3fc ),
	NFlagsW( 306, 2.907821 ),
	VERT( 0x40d611f7, 0xbfd2e617, 0xc173de37 ),
	NORM( 0xbf6a43c7, 0x3eb4581e, 0xbe48fffe ),
	NFlagsW( 307, 38.748981 ),
	VERT( 0x40ded257, 0xbfe2bdd8, 0xc183fc1e ),
	NORM( 0xbea904be, 0x3f0ffeb3, 0xbf420f9f ),
	NFlagsW( 308, 6.342481 ),
	VERT( 0x40d98b27, 0xbfe42370, 0xc1847a7c ),
	NORM( 0xbef4b471, 0x3f07dbbd, 0xbf333031 ),
	NFlagsW( 309, 5.716015 ),
	VERT( 0x40f83a67, 0xbfc855b3, 0xc164cb92 ),
	NORM( 0x3eefd2b0, 0x3f58efc5, 0x3e7ffd89 ),
	NFlagsW( 310, 48.606606 ),
	VERT( 0x40d4ea87, 0xbfc4dd1c, 0xc158155a ),
	NORM( 0xbf153657, 0x3f3e72d7, 0xbea75854 ),
	NFlagsW( 311, 49.880173 ),
	VERT( 0x40d0c088, 0xbfc0a682, 0xc14e7377 ),
	NORM( 0xbf6a8b4e, 0x3e5c6f1e, 0xbead1162 ),
	NFlagsW( 312, 49.998310 ),
	VERT( 0x4104eecb, 0xbfba72e4, 0xc145e7f3 ),
	NORM( 0x3f7d267a, 0xbd6bb69c, 0xbe0c8203 ),
	NFlagsW( 313, 50.000000 ),
	VERT( 0x40d892e7, 0xbfdf7345, 0xc175cf4a ),
	NORM( 0xbf73b4b7, 0xbced4cd5, 0xbe9c0e8b ),
	NFlagsW( 314, 35.650311 ),
	VERT( 0x40ff4a67, 0xbfcc2b2d, 0xc15c7267 ),
	NORM( 0x3f168bba, 0x3f0c2b48, 0xbf186563 ),
	NFlagsW( 315, 49.789001 ),
	VERT( 0x40fd4697, 0xbfd098e5, 0xc1618252 ),
	NORM( 0x3f393053, 0x3f2f57f6, 0x3db21c20 ),
	NFlagsW( 316, 49.174297 ),
	VERT( 0x40f99687, 0xbfd2722d, 0xc15f4f0d ),
	NORM( 0x3eec7a06, 0x3f62a0f9, 0x3d5f721a ),
	NFlagsW( 317, 49.518318 ),
	VERT( 0x40ccdd77, 0xbfe2bebc, 0xc163fb1e ),
	NORM( 0xbf5b9201, 0x3f00b7a3, 0xbddc13cc ),
	NFlagsW( 318, 47.986076 ),
	VERT( 0x40d3b3c7, 0xbfef915f, 0xc16cbb95 ),
	NORM( 0xbf680032, 0x3ecda9bf, 0xbe06e646 ),
	NFlagsW( 319, 44.031277 ),
	VERT( 0x40e61497, 0xc00d3d79, 0xc1877d1b ),
	NORM( 0xbe9a1be7, 0x3bac94f0, 0xbf741fe3 ),
	NFlagsW( 320, 0.928837 ),
	VERT( 0x40c72917, 0xbfe92074, 0xc14d15fe ),
	NORM( 0xbf586a8b, 0x3ede5c2e, 0xbe9f3c9c ),
	NFlagsW( 321, 49.982964 ),
	VERT( 0x40cc6ee7, 0xbff6c062, 0xc15bc227 ),
	NORM( 0xbf61aed9, 0x3ef0cf7a, 0xbd2496de ),
	NFlagsW( 322, 49.215240 ),
	VERT( 0x4101d62c, 0xc00e7585, 0xc1861056 ),
	NORM( 0x3f0ba3b7, 0x3d451df7, 0xbf56353a ),
	NFlagsW( 323, 0.838705 ),
	VERT( 0x40dca8a7, 0xc00f629d, 0xc18566c0 ),
	NORM( 0xbe86a8d9, 0x3c92cdd6, 0xbf76f1d5 ),
	NFlagsW( 324, 2.762019 ),
	VERT( 0x40d738f7, 0xc00f9da2, 0xc1859830 ),
	NORM( 0xbf20c426, 0xba84fc33, 0xbf473952 ),
	NFlagsW( 325, 2.757255 ),
	VERT( 0x4109875c, 0xc01034da, 0xc17e7066 ),
	NORM( 0x3f7e28c8, 0x3c4ee8e4, 0xbdf3c878 ),
	NFlagsW( 326, 7.048372 ),
	VERT( 0x4105b56c, 0xc00aea4f, 0xc16db7ce ),
	NORM( 0x3f6de9bc, 0x3e41bc3b, 0x3ea253ce ),
	NFlagsW( 327, 36.219727 ),
	VERT( 0x40c78987, 0xc0035e50, 0xc1559cd1 ),
	NORM( 0xbf6870cc, 0x3eb34763, 0xbe6bb362 ),
	NFlagsW( 328, 49.602131 ),
	VERT( 0x40b9d317, 0xbffbdbff, 0xc143a9e1 ),
	NORM( 0xbf49641d, 0x3d974b65, 0xbf1ce859 ),
	NFlagsW( 329, 57.833939 ),
	VERT( 0x40d40b87, 0xc0180794, 0xc1737ef5 ),
	NORM( 0xbf634455, 0xbcf4bab2, 0xbeeb2dc2 ),
	NFlagsW( 330, 34.185509 ),
	VERT( 0x40d03147, 0xc019283c, 0xc1715bb6 ),
	NORM( 0xbf66f72b, 0xbd733978, 0xbedab8e4 ),
	NFlagsW( 331, 36.662830 ),
	VERT( 0x4102031b, 0xc0159a67, 0xc1646785 ),
	NORM( 0x3f7a30e3, 0x3e58cdb3, 0xbbd3250e ),
	NFlagsW( 332, 45.307777 ),
	VERT( 0x40ccd6c7, 0xc01b118c, 0xc16b9867 ),
	NORM( 0xbf72c1dc, 0xbbfcd227, 0xbea27e48 ),
	NFlagsW( 333, 41.682705 ),
	VERT( 0x4101f644, 0xc0270f64, 0xc1855b1b ),
	NORM( 0x3f0d7c83, 0xbea4b3b7, 0xbf44d081 ),
	NFlagsW( 334, 0.733544 ),
	VERT( 0x41078e04, 0xc0135a8c, 0xc14eea4d ),
	NORM( 0x3f783ed9, 0x3dc63841, 0xbe65a6ba ),
	NFlagsW( 335, 49.788288 ),
	VERT( 0x4104935c, 0xc01ad849, 0xc160aada ),
	NORM( 0x3f7f35c6, 0x3d9db9eb, 0xbc78b960 ),
	NFlagsW( 336, 46.430412 ),
	VERT( 0x4102c45c, 0xc01c31c9, 0xc15d4b54 ),
	NORM( 0x3f7b1b15, 0x3d59dcd4, 0xbe3faf9e ),
	NFlagsW( 337, 47.850506 ),
	VERT( 0x4106c184, 0xc01a9e2f, 0xc158e005 ),
	NORM( 0x3f6f6939, 0x3d1bcf5c, 0xbeb442de ),
	NFlagsW( 338, 48.665607 ),
	VERT( 0x40ea7427, 0xc02eecdc, 0xc1869ca3 ),
	NORM( 0xbe3e9149, 0xbed4f9ab, 0xbf63dfc7 ),
	NFlagsW( 339, 0.695645 ),
	VERT( 0x40dae3c7, 0xc02e0bc3, 0xc184a350 ),
	NORM( 0xbf0b4290, 0xbf069e91, 0xbf276479 ),
	NFlagsW( 340, 2.421421 ),
	VERT( 0x40c93317, 0xc01d1a6b, 0xc15a91d6 ),
	NORM( 0xbf7c9b38, 0x3c0e6ff6, 0xbe25f1ce ),
	NFlagsW( 341, 48.348137 ),
	VERT( 0x40e03617, 0xc02ebc7a, 0xc1842535 ),
	NORM( 0xbe8ed5a5, 0xbf0496d7, 0xbf4f041c ),
	NFlagsW( 342, 2.682516 ),
	VERT( 0x41094c04, 0xc0177d20, 0xc149c944 ),
	NORM( 0x3f796941, 0x3c4eb45c, 0xbe667720 ),
	NFlagsW( 343, 49.852962 ),
	VERT( 0x40c64d77, 0xc021e24c, 0xc162e12d ),
	NORM( 0xbf7ec468, 0xbcfb84d8, 0xbdbea4b9 ),
	NFlagsW( 344, 45.595398 ),
	VERT( 0x4102f9bc, 0xc034486d, 0xc183d6bd ),
	NORM( 0x3f1e7493, 0xbf062fbf, 0xbf15bd50 ),
	NFlagsW( 345, 1.062890 ),
	VERT( 0x40c44607, 0xc0223b0e, 0xc154ec04 ),
	NORM( 0xbf7616f3, 0xbc031396, 0xbe8d0543 ),
	NFlagsW( 346, 48.998787 ),
	VERT( 0x41046083, 0xc02b47ba, 0xc166e657 ),
	NORM( 0x3f539808, 0xbde7bf9e, 0x3f0d27cd ),
	NFlagsW( 347, 40.165840 ),
	VERT( 0x40c0bea7, 0xc028890c, 0xc14b6200 ),
	NORM( 0xbf7831e1, 0x3c3bf0c2, 0xbe7aa74e ),
	NFlagsW( 348, 50.650467 ),
	VERT( 0x40ebdea7, 0xc045192e, 0xc1849add ),
	NORM( 0xbda61128, 0xbf3b9af2, 0xbf2cf176 ),
	NFlagsW( 349, 1.101849 ),
	VERT( 0x40da5467, 0xc03dcfa8, 0xc17631ef ),
	NORM( 0xbf71007d, 0xbc23a666, 0xbeac992a ),
	NFlagsW( 350, 23.923077 ),
	VERT( 0x40df48b7, 0xc043102c, 0xc1817c11 ),
	NORM( 0xbf7effbb, 0xbd18f173, 0xbda3fba8 ),
	NFlagsW( 351, 5.209386 ),
	VERT( 0x40d544c7, 0xc03d1eb4, 0xc16d286a ),
	NORM( 0xbf6062ba, 0xbec22589, 0xbe97d6eb ),
	NFlagsW( 352, 36.211567 ),
	VERT( 0x40deb197, 0xc0497a48, 0xc1815e97 ),
	NORM( 0xbf4d0b78, 0xbee97f3f, 0xbec69e69 ),
	NFlagsW( 353, 4.912178 ),
	VERT( 0x40d82977, 0xc045bc37, 0xc1745f2d ),
	NORM( 0xbf67a212, 0xbeb04d88, 0xbe803d88 ),
	NFlagsW( 354, 25.442120 ),
	VERT( 0x4104df53, 0xc04b4184, 0xc17e6215 ),
	NORM( 0x3f2ff929, 0xbf2e35f8, 0xbe81ec7d ),
	NFlagsW( 355, 3.815607 ),
	VERT( 0x40baddd7, 0xc035848c, 0xc1425b07 ),
	NORM( 0xbf54a7e1, 0xbc8a4d95, 0xbf0e75c2 ),
	NFlagsW( 356, 73.326500 ),
	VERT( 0x40ce0f07, 0xc045a294, 0xc15c2488 ),
	NORM( 0xbf6675ce, 0xbed43acd, 0xbe0873db ),
	NFlagsW( 357, 45.707462 ),
	VERT( 0x40c93a77, 0xc049c76c, 0xc156a553 ),
	NORM( 0xbf5fd162, 0xbea62f12, 0xbeb8cb61 ),
	NFlagsW( 358, 46.958202 ),
	VERT( 0x41024014, 0xc055b284, 0xc168b0a0 ),
	NORM( 0x3f379879, 0xbf1b0ee7, 0x3eb07911 ),
	NFlagsW( 359, 31.614574 ),
	VERT( 0x40cf0b37, 0xc056265c, 0xc16485a9 ),
	NORM( 0xbf4f33b5, 0xbf0ed534, 0xbe3bb457 ),
	NFlagsW( 360, 39.747265 ),
	VERT( 0x40eb2457, 0xc061ae39, 0xc17c798a ),
	NORM( 0xbd19a145, 0xbf70ef13, 0xbeabfbfd ),
	NFlagsW( 361, 7.099409 ),
	VERT( 0x40fa83a7, 0xc05c7887, 0xc165bb5b ),
	NORM( 0x3f0c6231, 0xbf4d82d2, 0xbe6fca76 ),
	NFlagsW( 362, 35.680408 ),
	VERT( 0x4100442b, 0xc05fc044, 0xc1634425 ),
	NORM( 0x3f3f346f, 0xbf13e756, 0xbea889c6 ),
	NFlagsW( 363, 36.597095 ),
	VERT( 0x40fd5ba7, 0xc0629ce6, 0xc15d5741 ),
	NORM( 0x3f22f62c, 0xbf40e3ed, 0xbe286c2a ),
	NFlagsW( 364, 41.238724 ),
	VERT( 0x41013f4b, 0xc06536e2, 0xc1571bb8 ),
	NORM( 0x3f3a537d, 0xbf247a55, 0xbe7575c1 ),
	NFlagsW( 365, 43.728222 ),
	VERT( 0x40e73367, 0xc06fd2f9, 0xc16fc5ee ),
	NORM( 0xbe08a755, 0xbf7b2260, 0xbe103ec0 ),
	NFlagsW( 366, 21.950172 ),
	VERT( 0x40de96b7, 0xc06c867c, 0xc166fc7f ),
	NORM( 0xbeab8fc9, 0xbf6aa2b9, 0xbe5f8fa0 ),
	NFlagsW( 367, 34.051559 ),
	VERT( 0x40de8787, 0xc06fda77, 0xc16309d7 ),
	NORM( 0xbe7d2108, 0xbf75f057, 0xbe0154db ),
	NFlagsW( 368, 36.894104 ),
	VERT( 0x40e06117, 0xc0724f23, 0xc15f1674 ),
	NORM( 0xbe58289b, 0xbf7315d0, 0xbe6d7ef1 ),
	NFlagsW( 369, 39.265938 ),
	VERT( 0x41017a0c, 0xc06cf44f, 0xc14d1ed5 ),
	NORM( 0x3f1d41c2, 0xbf0935c4, 0xbf144170 ),
	NFlagsW( 370, 46.848225 ),
	VERT( 0x40c9b677, 0xc06ef811, 0xc14d6a15 ),
	NORM( 0xbf4b6f27, 0xbec4fac9, 0xbef06b1c ),
	NFlagsW( 371, 50.871151 ),
	VERT( 0x40bbe337, 0xc06bc646, 0xc1442a63 ),
	NORM( 0xbf481ee8, 0xbe9d504d, 0xbf0aed5e ),
	NFlagsW( 372, 80.248085 ),
	VERT( 0x4104f274, 0xc0702da1, 0xc14ac083 ),
	NORM( 0x3f3f106c, 0xbef1663a, 0xbef08462 ),
	NFlagsW( 373, 48.461609 ),
	VERT( 0x40dcfc97, 0xc080b36e, 0xc15638ca ),
	NORM( 0xbe6755e0, 0xbf53956e, 0xbf03ff8f ),
	NFlagsW( 374, 41.814781 ),
	VERT( 0x40dabcd7, 0xc08b1d17, 0xc14f5823 ),
	NORM( 0xbe0e73ff, 0xbf4fbcde, 0xbf114d56 ),
	NFlagsW( 375, 47.274677 ),
	VERT( 0x40d711c7, 0xc0915b14, 0xc149d708 ),
	NORM( 0xbe5865c9, 0xbf6316c9, 0xbed2241a ),
	NFlagsW( 376, 65.354767 ),
	CnkV_VN_NF(FV_CONT|FW_END, 638),
	OffnbIdx(0, 91),
	VERT( 0xc048cb02, 0x4055fe39, 0xbf638a79 ),
	NORM( 0x3e67f318, 0x3f795777, 0x3bbc637b ),
	NFlagsW( 4072, 28.539118 ),
	VERT( 0xc047968e, 0x40428033, 0xc03d1a88 ),
	NORM( 0x3e675d9f, 0x3f71bbfb, 0xbe751b91 ),
	NFlagsW( 4073, 36.975212 ),
	VERT( 0x408b60d9, 0x402c562a, 0xc0c723e3 ),
	NORM( 0xbf0de2ca, 0x3f53ebbc, 0xbdb1cf6b ),
	NFlagsW( 4074, 98.784081 ),
	VERT( 0x40ae8929, 0x403a258d, 0xc02499f1 ),
	NORM( 0xbd28d3d9, 0x3f7f0333, 0x3d9ea65a ),
	NFlagsW( 4075, 99.874954 ),
	VERT( 0xc04db4b3, 0x40468808, 0x3f07b0aa ),
	NORM( 0x3e2bb780, 0x3f6ce7ea, 0x3eadfef8 ),
	NFlagsW( 4076, 12.478535 ),
	VERT( 0x40b07178, 0x403c69fa, 0xbf8bba2d ),
	NORM( 0x3b12e3fa, 0x3f7fe625, 0xbce5589a ),
	NFlagsW( 4077, 99.884834 ),
	VERT( 0xc0423592, 0x40294c29, 0xc0837b6d ),
	NORM( 0x3e3df405, 0x3f4e8352, 0xbf0fa489 ),
	NFlagsW( 4078, 40.145733 ),
	VERT( 0x401c594f, 0x403e3437, 0x3db503a8 ),
	NORM( 0xbccdc73d, 0x3f7f20ea, 0x3da0ced9 ),
	NFlagsW( 4079, 57.881035 ),
	VERT( 0x40b259e9, 0x403eae50, 0x3ec6fd45 ),
	NORM( 0x3cf3ef83, 0x3f7f8603, 0x3d59fe42 ),
	NFlagsW( 4080, 99.906555 ),
	VERT( 0x401af30f, 0x402e9d71, 0xbf9c3bee ),
	NORM( 0xbdad828a, 0x3f755676, 0xbe8ba475 ),
	NFlagsW( 4081, 54.118317 ),
	VERT( 0x406541f0, 0x4022ef0b, 0xc02905fa ),
	NORM( 0xbe906ff7, 0x3f749233, 0xbdb3dc41 ),
	NFlagsW( 4082, 82.870567 ),
	VERT( 0x3eb4ec8c, 0x402e3c6d, 0xbf381a70 ),
	NORM( 0x3e18f0b7, 0x3f7b4f55, 0xbdf24ee5 ),
	NFlagsW( 4083, 49.968628 ),
	VERT( 0x3f917e9f, 0x4032e205, 0x3e2b66c4 ),
	NORM( 0xbd6146f4, 0x3f7e700a, 0x3dc3d5b8 ),
	NFlagsW( 4084, 49.734627 ),
	VERT( 0x406cf231, 0x402a82e9, 0xbf92b7d7 ),
	NORM( 0xbd23b955, 0x3f7ee572, 0xbdab6d8a ),
	NFlagsW( 4085, 87.847740 ),
	VERT( 0x4074a252, 0x403216b6, 0x3eb2709b ),
	NORM( 0xbd3a9fc6, 0x3f7f4722, 0x3d74508c ),
	NFlagsW( 4086, 93.118439 ),
	VERT( 0x3f927e5f, 0x4027c6ec, 0xbf8fabd3 ),
	NORM( 0xbd88fcbe, 0x3f742852, 0xbe9610b6 ),
	NFlagsW( 4087, 49.999996 ),
	VERT( 0x3ed1587b, 0x40325425, 0x3f2497b8 ),
	NORM( 0x3e190a13, 0x3f74206d, 0x3e85c7ea ),
	NFlagsW( 4088, 49.125488 ),
	VERT( 0x3eaad57c, 0x401c452d, 0xc02f0858 ),
	NORM( 0x3ea4c595, 0x3f69f1fc, 0xbe7d8e1c ),
	NFlagsW( 4089, 50.000000 ),
	VERT( 0x40895768, 0x3fe460d5, 0xc1116c39 ),
	NORM( 0xbf5056d1, 0x3ecbb00a, 0xbed8e001 ),
	NFlagsW( 4090, 99.899727 ),
	VERT( 0x40b3d219, 0x402bd7b1, 0x401e756e ),
	NORM( 0xbd164ba4, 0x3f6b87ce, 0x3ec7bb34 ),
	NFlagsW( 4091, 99.891869 ),
	VERT( 0x406f8bb1, 0x40258ae8, 0x4015b23e ),
	NORM( 0xbe38dfc4, 0x3f6059b7, 0x3ee49ea6 ),
	NFlagsW( 4092, 93.111855 ),
	VERT( 0x3e9c766c, 0x3ffa0284, 0xc074ad95 ),
	NORM( 0x3e96d01c, 0x3f452b91, 0xbf10d2bb ),
	NFlagsW( 4093, 50.000000 ),
	VERT( 0x401b7bad, 0x40020847, 0xc0205982 ),
	NORM( 0xbe8eb69f, 0x3f64953f, 0xbeb50acc ),
	NFlagsW( 4094, 52.051960 ),
	VERT( 0x40509430, 0x3fd16563, 0xc0c70d3b ),
	NORM( 0xbf4cd3eb, 0x3f07da57, 0xbe8f2fd4 ),
	NFlagsW( 4095, 78.346893 ),
	VERT( 0x3f9c88db, 0x3ffe9a0c, 0xc02317b6 ),
	NORM( 0x3e5f4dc7, 0x3f6cf531, 0xbe9e5f4c ),
	NFlagsW( 4096, 50.000000 ),
	VERT( 0x40d9b0f9, 0x401d6527, 0x404463bc ),
	NORM( 0x3d7be4cc, 0x3f5cc5f4, 0x3f00a2e6 ),
	NFlagsW( 4097, 99.987373 ),
	VERT( 0xc0c7df39, 0x3fcfc441, 0xc0af4474 ),
	NORM( 0x3e112ab4, 0x3ec99933, 0xbf688132 ),
	NFlagsW( 4098, 0.193500 ),
	VERT( 0x4014e9f3, 0x4012693e, 0x400341e9 ),
	NORM( 0xbe6dae0d, 0x3f536996, 0x3f039157 ),
	NFlagsW( 4099, 54.449135 ),
	VERT( 0x3fa44423, 0x3fdaea1f, 0xc05a1b6b ),
	NORM( 0x3e806eef, 0x3f5889f4, 0xbef1060d ),
	NFlagsW( 4100, 50.000000 ),
	VERT( 0xc05bf0bf, 0x400bb290, 0x400d8f06 ),
	NORM( 0x3e17e925, 0x3f3f7eca, 0x3f259982 ),
	NFlagsW( 4101, 0.811466 ),
	VERT( 0x401035af, 0x3fcc91f2, 0xc05e5b7c ),
	NORM( 0xbebbf1ba, 0x3f568f54, 0xbece95bf ),
	NFlagsW( 4102, 50.972210 ),
	VERT( 0x3f8f36df, 0x400250fb, 0x3ff6a289 ),
	NORM( 0xbc7f3dd1, 0x3f4df2e6, 0x3f1800fe ),
	NFlagsW( 4103, 47.107246 ),
	VERT( 0xc0372d93, 0x3fa59bc4, 0xc0a727b9 ),
	NORM( 0x3e1a1ed2, 0x3ec0db03, 0xbf69fe6b ),
	NFlagsW( 4104, 44.695244 ),
	VERT( 0x3ecedd9a, 0x3ff92f5e, 0x40110103 ),
	NORM( 0x3e0492c8, 0x3f3685bb, 0x3f306ad9 ),
	NFlagsW( 4105, 42.949753 ),
	VERT( 0x4080d0d8, 0x3f4e7a7c, 0xc111491c ),
	NORM( 0xbf5ca1a7, 0x3e771365, 0xbee46817 ),
	NFlagsW( 4106, 99.367294 ),
	VERT( 0x3e8dbb7b, 0x3f6a12e0, 0xc098e82f ),
	NORM( 0x3e6f287e, 0x3edae1b7, 0xbf5f9220 ),
	NFlagsW( 4107, 50.000000 ),
	VERT( 0x3f91a7a3, 0x3f505397, 0xc08f561b ),
	NORM( 0x3d85d75a, 0x3f22c94e, 0xbf44de01 ),
	NFlagsW( 4108, 50.000019 ),
	VERT( 0xc0c3aee7, 0x3e94c727, 0xc0b56910 ),
	NORM( 0x3e0cdc68, 0x3bbac9af, 0xbf7d8fe8 ),
	NFlagsW( 4109, 0.739123 ),
	VERT( 0xc05fc54f, 0x3f7b7b6a, 0x404d2aac ),
	NORM( 0x3e078ec0, 0x3edb8b54, 0x3f64c62a ),
	NFlagsW( 4110, 0.155980 ),
	VERT( 0x4073da52, 0x3f83039d, 0x40724682 ),
	NORM( 0xbe82466b, 0x3ecdf569, 0x3f61240b ),
	NFlagsW( 4111, 89.169647 ),
	VERT( 0xc037776f, 0x3cb7c7c6, 0xc0a9bfab ),
	NORM( 0x3ddcd01a, 0xbd2bc948, 0xbf7e47f7 ),
	NFlagsW( 4112, 45.644234 ),
	VERT( 0x406c918f, 0xbed8c133, 0xc112b009 ),
	NORM( 0xbf579d24, 0x3e2f71fd, 0xbf02dabb ),
	NFlagsW( 4113, 97.811142 ),
	VERT( 0x40d7d3e9, 0x3f606761, 0x4090012f ),
	NORM( 0x3db82a65, 0x3ea0d693, 0x3f71f2ae ),
	NFlagsW( 4114, 98.016998 ),
	VERT( 0x3f926b66, 0x3f304d2b, 0x403801cf ),
	NORM( 0xbcaec553, 0x3ebbe87e, 0x3f6e12b7 ),
	NFlagsW( 4115, 40.370758 ),
	VERT( 0x401c8291, 0xbe497e5b, 0xc0c6a0ef ),
	NORM( 0xbf4ab14e, 0x3ebc2ea4, 0xbef9c9f3 ),
	NFlagsW( 4116, 57.056664 ),
	VERT( 0x3ef52e89, 0x3f1559b9, 0x4044cf2e ),
	NORM( 0x3e0a8c0b, 0x3eb4ab26, 0x3f6d03c9 ),
	NFlagsW( 4117, 33.070919 ),
	VERT( 0x3f83699a, 0xbebe9da8, 0xc09b59d2 ),
	NORM( 0xbe90606b, 0x3e337325, 0xbf717ab0 ),
	NFlagsW( 4118, 50.000008 ),
	VERT( 0x3e884979, 0xbf167fa0, 0xc0a17024 ),
	NORM( 0x3e1b8297, 0xbaf69043, 0xbf7d07bf ),
	NFlagsW( 4119, 50.000000 ),
	VERT( 0x406a3b2f, 0xbf92e40e, 0xc11238ef ),
	NORM( 0xbf54953d, 0x3cc756ec, 0xbf0e7f7d ),
	NFlagsW( 4120, 97.540466 ),
	VERT( 0x4071acd0, 0xbee0ea24, 0x407c34dd ),
	NORM( 0xbe7ffce6, 0xbe133018, 0x3f75200e ),
	NFlagsW( 4121, 85.985458 ),
	VERT( 0x40d89b18, 0xbed6edc7, 0x4090052d ),
	NORM( 0x3defa319, 0xbe6646ec, 0x3f77a34b ),
	NFlagsW( 4122, 98.407379 ),
	VERT( 0x3f8994e2, 0xbfc06565, 0xc0a31208 ),
	NORM( 0xbf2098f8, 0x3dba0546, 0xbf45ffda ),
	NFlagsW( 4123, 50.005520 ),
	VERT( 0x406a2ead, 0xbff4b8f4, 0xc112d92c ),
	NORM( 0xbf56e8ea, 0x3c061a51, 0xbf0b1675 ),
	NFlagsW( 4124, 97.994324 ),
	VERT( 0x3f970c22, 0xbf66962c, 0x403ce476 ),
	NORM( 0x3e1bcd29, 0xbcdf162c, 0x3f7cec68 ),
	NFlagsW( 4125, 38.239594 ),
	VERT( 0xc05b6b97, 0xbf713af4, 0x4067d821 ),
	NORM( 0x3dafcad9, 0x3b2656fe, 0x3f7f0deb ),
	NFlagsW( 4126, 0.057284 ),
	VERT( 0x3ff4159e, 0xbff3a403, 0xc0c98945 ),
	NORM( 0xbf5705a7, 0x3db18fe4, 0xbf092541 ),
	NFlagsW( 4127, 53.702003 ),
	VERT( 0x3eeb0e97, 0xbf80afd1, 0x4059fef4 ),
	NORM( 0x3e852188, 0x38334a07, 0x3f7731c1 ),
	NFlagsW( 4128, 21.050634 ),
	VERT( 0xc0c15079, 0xbff8fdfd, 0xc0aaf6a2 ),
	NORM( 0x3e157261, 0xbea23586, 0xbf6febd1 ),
	NFlagsW( 4129, 0.474067 ),
	VERT( 0xc0316857, 0xbff87e09, 0xc09e124a ),
	NORM( 0x3d8faa1a, 0xbead6b2e, 0xbf7032a6 ),
	NFlagsW( 4130, 44.365967 ),
	VERT( 0x3ec53468, 0xc008a1a8, 0xc09aa3cd ),
	NORM( 0xbe0e2260, 0xbe93214d, 0xbf729d2f ),
	NFlagsW( 4131, 50.000000 ),
	VERT( 0x406cf9cd, 0xc02ac32a, 0xc113544e ),
	NORM( 0xbf593edd, 0xbd9ea381, 0xbf05f78b ),
	NFlagsW( 4132, 98.791550 ),
	VERT( 0x3f8ab01a, 0xc0139b99, 0xc0a06428 ),
	NORM( 0xbf2161bc, 0xbe725085, 0xbf3d4473 ),
	NFlagsW( 4133, 50.022263 ),
	VERT( 0x40d8afd8, 0xbfcc1cec, 0x4074ab01 ),
	NORM( 0x3df50a73, 0xbf24bfcc, 0x3f4188c4 ),
	NFlagsW( 4134, 99.939926 ),
	VERT( 0x3ffb32de, 0xc0256fff, 0xc0ca6956 ),
	NORM( 0xbf580355, 0xbe1499e6, 0xbf044408 ),
	NFlagsW( 4135, 55.355560 ),
	VERT( 0x4080a697, 0xbff0780d, 0x40568cb8 ),
	NORM( 0xbdc53ed4, 0xbf158216, 0x3f4e568d ),
	NFlagsW( 4136, 93.172523 ),
	VERT( 0x3f9e7d1e, 0xc001021b, 0x40389d2c ),
	NORM( 0x3e2d6b2c, 0xbec77871, 0x3f67c0ab ),
	NFlagsW( 4137, 33.676449 ),
	VERT( 0x3eebf566, 0xc00ff942, 0x404a41e7 ),
	NORM( 0x3e5c6e53, 0xbef580db, 0x3f59c97a ),
	NFlagsW( 4138, 19.315229 ),
	VERT( 0x40cc50b8, 0xc036d79a, 0xbfad68c6 ),
	NORM( 0x3e9083f1, 0xbf72d20f, 0x3e132263 ),
	NFlagsW( 4139, 99.985191 ),
	VERT( 0xc04ef933, 0xc01e25c0, 0x40542c64 ),
	NORM( 0x3da85ed4, 0xbeee2098, 0x3f61a5d3 ),
	NFlagsW( 4140, 0.032738 ),
	VERT( 0x40d87c47, 0xc023ad5d, 0x4020de50 ),
	NORM( 0x3e182a18, 0xbf6c6817, 0x3eb51ddb ),
	NFlagsW( 4141, 99.988586 ),
	VERT( 0x406881ef, 0xc0266e79, 0x401ef931 ),
	NORM( 0x3d7130a8, 0xbf6548be, 0x3ee1b8ae ),
	NFlagsW( 4142, 88.046539 ),
	VERT( 0x3f8cb79a, 0xc057d3fb, 0xc09039e3 ),
	NORM( 0xbf11c843, 0xbf20dc50, 0xbf07ac7a ),
	NFlagsW( 4143, 50.069515 ),
	VERT( 0x40779cee, 0xc07ae91a, 0xc1133e8f ),
	NORM( 0xbf31abb4, 0xbf15dd71, 0xbed690a7 ),
	NFlagsW( 4144, 99.802818 ),
	VERT( 0x3eb1ec76, 0xc05e30ed, 0xc081aede ),
	NORM( 0xbdea7af1, 0xbf3c8af1, 0xbf2aabbf ),
	NFlagsW( 4145, 49.972950 ),
	VERT( 0x400e886b, 0xc06fd0c4, 0xc0c76f28 ),
	NORM( 0xbf326034, 0xbf1d52da, 0xbebd643b ),
	NFlagsW( 4146, 61.814163 ),
	VERT( 0x3f9e7ed9, 0xc04212da, 0x400094ba ),
	NORM( 0x3e20ee5d, 0xbf5fae85, 0x3eeba8c8 ),
	NFlagsW( 4147, 40.541733 ),
	VERT( 0xc0347317, 0xc06d5bd2, 0xc07a598e ),
	NORM( 0x3daa698a, 0xbf3378ac, 0xbf354e9f ),
	NFlagsW( 4148, 35.376720 ),
	VERT( 0x40685f90, 0xc05c7221, 0xbf6583b9 ),
	NORM( 0x3e3142cb, 0xbf76c4c0, 0x3e4efa05 ),
	NFlagsW( 4149, 84.662819 ),
	VERT( 0x3f904995, 0xc051d5b7, 0x3f722737 ),
	NORM( 0x3e81a74a, 0xbf6f69aa, 0x3e7d7531 ),
	NFlagsW( 4150, 46.837013 ),
	VERT( 0x3ed9ce85, 0xc04fcb34, 0x3ffd833e ),
	NORM( 0x3e33671b, 0xbf5e19a6, 0x3eee4b18 ),
	NFlagsW( 4151, 36.287464 ),
	VERT( 0x406eb24f, 0xc076ae2c, 0xc07139bf ),
	NORM( 0x3e330670, 0xbf77a248, 0x3e3c0e87 ),
	NFlagsW( 4152, 87.002060 ),
	VERT( 0x3f8f4c5d, 0xc07147ae, 0xbf5e53f3 ),
	NORM( 0x3e640b36, 0xbf7580a5, 0x3e3385f8 ),
	NFlagsW( 4153, 49.260262 ),
	VERT( 0x3f9110dd, 0xc07ec788, 0xc02ac5e8 ),
	NORM( 0x3de32200, 0xbf7e555a, 0xbcd555c1 ),
	NFlagsW( 4154, 49.872082 ),
	VERT( 0xc03d52f3, 0xc0613147, 0x40128073 ),
	NORM( 0x3e1358fc, 0xbf445f3e, 0x3f200da7 ),
	NFlagsW( 4155, 0.318906 ),
	VERT( 0x3ec44465, 0xc06df303, 0x3f25d3cc ),
	NORM( 0x3e8e38bf, 0xbf6c3a55, 0x3e88c1f9 ),
	NFlagsW( 4156, 44.941025 ),
	VERT( 0x406cbb8e, 0xc08f0907, 0xc0c3dfcd ),
	NORM( 0xbd9728df, 0xbf7f267f, 0x3d0ca00f ),
	NFlagsW( 4157, 93.847641 ),
	VERT( 0x3ea10c85, 0xc0806134, 0xbf475588 ),
	NORM( 0x3e814e76, 0xbf74a894, 0x3e1ad374 ),
	NFlagsW( 4158, 47.658783 ),
	VERT( 0x3ea3d575, 0xc086731a, 0xc0283ac0 ),
	NORM( 0x3e33e773, 0xbf782267, 0xbe304b88 ),
	NFlagsW( 4159, 49.099216 ),
	VERT( 0xc03db143, 0xc0890f86, 0x3f84db06 ),
	NORM( 0x3e535d96, 0xbf6458e9, 0x3ecdece6 ),
	NFlagsW( 4160, 2.067634 ),
	VERT( 0xc039f423, 0xc0941427, 0xc01922f5 ),
	NORM( 0x3e14bd6c, 0xbf72312f, 0xbe944608 ),
	NFlagsW( 4161, 21.955782 ),
	VERT( 0xc0390f13, 0xc097909f, 0xbf18b7f7 ),
	NORM( 0x3e5e1d40, 0xbf782021, 0x3dee2ba5 ),
	NFlagsW( 4162, 11.552447 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Foot[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Foot,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Foot[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Foot,
OPosition  ( 22.378117F, -0.000000F,  0.000000F ),
OAngle     (  4.959264F,  9.720253F, -2.018953F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Toe0,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Calf[]
START
	CnkV_VN(FV_CONT, 505),
	OffnbIdx(712, 84),
	VERT( 0x41101e99, 0x40c40d0f, 0x4018ab93 ),
	NORM( 0x3d650ef8, 0x3f7ca2a7, 0x3e1b4034 ),
	VERT( 0x4112bb56, 0x40b7ad86, 0xbe65861c ),
	NORM( 0xbc987469, 0x3f758f6c, 0xbe9068a5 ),
	VERT( 0x413f2965, 0x40b492cf, 0x3fd6b849 ),
	NORM( 0x3e5315b4, 0x3f77797b, 0x3e1b4f3a ),
	VERT( 0x40bcca94, 0x40ba6677, 0x4025bb9f ),
	NORM( 0xbe1f5b64, 0x3f7ad83c, 0x3e001caa ),
	VERT( 0x41408dd9, 0x40adecc5, 0xbf6008e0 ),
	NORM( 0x3dd2b364, 0x3f74267e, 0xbe90ad92 ),
	VERT( 0x40c62710, 0x40b0868b, 0x3e2b750f ),
	NORM( 0xbe2dda65, 0x3f720f8d, 0xbe8e2d2d ),
	VERT( 0x410e4349, 0x40ac1326, 0x40814f4e ),
	NORM( 0x3db12004, 0x3f5905d9, 0x3f05f74b ),
	VERT( 0x40b50255, 0x40a84ab2, 0x407b8d7f ),
	NORM( 0xbe095a26, 0x3f5e78ad, 0x3ef3d4bb ),
	VERT( 0x4177d495, 0x409bf719, 0x3f499bec ),
	NORM( 0x3e9201ff, 0x3f731676, 0x3e058db0 ),
	VERT( 0x404db6eb, 0x40a763d7, 0x400dc565 ),
	NORM( 0xbe7fd575, 0x3f77c8e1, 0x3cdddd61 ),
	VERT( 0x413e975f, 0x409d92e8, 0x40546d41 ),
	NORM( 0x3e8609ca, 0x3f56daaa, 0x3ef3fc16 ),
	VERT( 0x41787003, 0x4097a8d7, 0xbfa05d22 ),
	NORM( 0x3e63bc4e, 0x3f70f776, 0xbe821229 ),
	VERT( 0x41171423, 0x409899dc, 0xc00ba879 ),
	NORM( 0xbd5ed768, 0x3f4bcb64, 0xbf1a4dea ),
	VERT( 0x414149df, 0x40930944, 0xc01a8dd3 ),
	NORM( 0x3d383f50, 0x3f489b7d, 0xbf1e9e8b ),
	VERT( 0x406d2843, 0x409cc22c, 0x3e38b8cd ),
	NORM( 0xbe6ce3c8, 0x3f6c7f2b, 0xbe9c2de8 ),
	VERT( 0x40d720df, 0x4095fbf5, 0xbfe6cc05 ),
	NORM( 0xbe19034f, 0x3f4e5274, 0xbf12a45d ),
	VERT( 0x4034356c, 0x409984e4, 0x40614e62 ),
	NORM( 0xbe928f16, 0x3f5f930e, 0x3ec9cc44 ),
	VERT( 0x417a8c7a, 0x40866abd, 0x401a04d1 ),
	NORM( 0x3ea18686, 0x3f562cfb, 0x3ee54748 ),
	VERT( 0x4176227f, 0x407f9681, 0xc031bccf ),
	NORM( 0x3de1bcd2, 0x3f4a0327, 0xbf1ab226 ),
	VERT( 0x4080116d, 0x40854d83, 0xbfca689b ),
	NORM( 0xbe627265, 0x3f4e8717, 0xbf0c46ba ),
	VERT( 0x40b038e6, 0x40836435, 0x40af26e8 ),
	NORM( 0xbe03ea3b, 0x3f331663, 0x3f33ef00 ),
	VERT( 0x410b6c27, 0x407c6264, 0x40b9e200 ),
	NORM( 0x3da6a10a, 0x3f28f144, 0x3f3f3556 ),
	VERT( 0x413e9183, 0x40689c45, 0x40a52741 ),
	NORM( 0x3e86cb84, 0x3f2486ee, 0x3f382f94 ),
	VERT( 0x417b7755, 0x403ddc3d, 0x40835fbe ),
	NORM( 0x3ea821b5, 0x3f2685ed, 0x3f2f534b ),
	VERT( 0x411b1f65, 0x40410fec, 0xc07326ca ),
	NORM( 0xbd5e9bc8, 0x3f0ab782, 0xbf56b594 ),
	VERT( 0x40ea851b, 0x403f1085, 0xc0615631 ),
	NORM( 0xbe04742d, 0x3f0dd132, 0xbf528a6c ),
	VERT( 0x41422649, 0x40319a38, 0xc07dc272 ),
	NORM( 0x3bd95759, 0x3f049264, 0xbf5afe26 ),
	VERT( 0x4092d1a8, 0x40316783, 0xc04aff96 ),
	NORM( 0xbe1bc8d8, 0x3f13a32b, 0xbf4d7b1e ),
	VERT( 0x410ddbb6, 0x401ed447, 0x40d8884c ),
	NORM( 0x3df6a890, 0x3ed19c5b, 0x3f6784f4 ),
	VERT( 0x40b8cd7a, 0x4024fd7a, 0x40d44387 ),
	NORM( 0xbdf5357d, 0x3edde4f2, 0x3f64a9fe ),
	VERT( 0x4141be11, 0x3ff5af03, 0x40c1f466 ),
	NORM( 0x3e8d0fa0, 0x3ea45675, 0x3f67f821 ),
	VERT( 0x417be1e1, 0x3fb7d1b7, 0x40a179c6 ),
	NORM( 0x3ea0f96e, 0x3e953e56, 0x3f67471d ),
	VERT( 0x41200688, 0x3fbe1a36, 0xc08ee418 ),
	NORM( 0xbd0b90e2, 0x3e4be69e, 0xbf7ab8cb ),
	VERT( 0x41432bc0, 0x3fb3d0fd, 0xc09007d8 ),
	NORM( 0xbbc3758e, 0x3e2c1bc6, 0xbf7c5a86 ),
	VERT( 0x40fac7ad, 0x3facf1da, 0xc08b0604 ),
	NORM( 0xbdbb005d, 0x3e6ad389, 0xbf781433 ),
	VERT( 0x40a90c90, 0x3f2e0439, 0xc087902c ),
	NORM( 0xbd9fd32e, 0x3e5cd38c, 0xbf792d47 ),
	VERT( 0x40c39162, 0x3ec620cc, 0x40e90d57 ),
	NORM( 0xbe017ba5, 0x3c2104ea, 0x3f7deec5 ),
	VERT( 0x4071c113, 0x3ea63fa0, 0xc08776d7 ),
	NORM( 0x3d024c95, 0x3e71e6b3, 0xbf789efd ),
	VERT( 0x410faca7, 0x3e7fe4aa, 0x40eb39af ),
	NORM( 0x3dfd96ff, 0x3c52f99c, 0x3f7e022e ),
	VERT( 0x41438f46, 0xbe86ec5e, 0x40cd7037 ),
	NORM( 0x3e935d9a, 0xbd251f23, 0x3f74f31e ),
	VERT( 0x417c8b98, 0xbf16a208, 0x40a56494 ),
	NORM( 0x3e950f45, 0xbda7b0dd, 0x3f74031d ),
	VERT( 0x4146e300, 0xbfb49bed, 0xc08d3867 ),
	NORM( 0x3c84204b, 0xbe76afac, 0xbf786d1c ),
	VERT( 0x41273bd6, 0xbfc0e4e5, 0xc08d35ce ),
	NORM( 0x3c70a0c0, 0xbe6a0d5e, 0xbf7931e3 ),
	VERT( 0x41036d37, 0xbfd86c00, 0xc08de1a0 ),
	NORM( 0xbc8a111b, 0xbe64cd5b, 0xbf797d8f ),
	VERT( 0x40b24e9d, 0xbfe5190a, 0xc08889f6 ),
	NORM( 0xbd018263, 0xbe5cf235, 0xbf79d6ba ),
	VERT( 0x40831552, 0xbfe0075a, 0xc087bbd9 ),
	NORM( 0x3d5f4cf3, 0xbe42818b, 0xbf7af39a ),
	VERT( 0x404755de, 0xbfe84732, 0xc08b6249 ),
	NORM( 0x3e870d68, 0xbe47cd70, 0xbf71d42b ),
	VERT( 0x40600d45, 0xc005340e, 0x40c275a5 ),
	NORM( 0xbe8e8ae6, 0xbed460f0, 0x3f5dc425 ),
	VERT( 0x417ef0a9, 0xc0244a86, 0x409347bb ),
	NORM( 0x3e887ed6, 0xbedefc18, 0x3f5c1bc0 ),
	VERT( 0x40cfc010, 0xc0168f36, 0x40d4a5df ),
	NORM( 0xbdf3a9f6, 0xbedcd84e, 0x3f64f194 ),
	VERT( 0x4146f245, 0xc02512c9, 0x40b7292c ),
	NORM( 0x3e873c3c, 0xbed33932, 0x3f5f2e7d ),
	VERT( 0x41164b91, 0xc029e977, 0x40d24634 ),
	NORM( 0x3de3215d, 0xbeda934c, 0x3f65c09b ),
	VERT( 0x4176fcc6, 0xc05e7b71, 0xc059d9ce ),
	NORM( 0xbae25209, 0xbf1b9b53, 0xbf4b476d ),
	VERT( 0x41490c41, 0xc06a1f41, 0xc053d1b7 ),
	NORM( 0x3d1c8034, 0xbf1a5421, 0xbf4c0466 ),
	VERT( 0x4127eb09, 0xc071c45f, 0xc05619d7 ),
	NORM( 0x3d0d0a4f, 0xbf1820cf, 0xbf4db4f6 ),
	VERT( 0x40880b6b, 0xc0668219, 0xc05b274c ),
	NORM( 0x3d862ee9, 0xbf13ff23, 0xbf5035ee ),
	VERT( 0x4043e07f, 0xc066c9bc, 0xc0680e72 ),
	NORM( 0x3e646b7d, 0xbf09df03, 0xbf500194 ),
	VERT( 0x417e4e06, 0xc08019bf, 0x4060de92 ),
	NORM( 0x3e864c76, 0xbf3c4973, 0x3f1fec01 ),
	VERT( 0x41044a99, 0xc0745e12, 0xc0587b96 ),
	NORM( 0xbb55be0e, 0xbf195d40, 0xbf4cf993 ),
	VERT( 0x40be5fbe, 0xc070ec85, 0xc05531f9 ),
	NORM( 0xbccbd478, 0xbf1b3da1, 0xbf4b759d ),
	VERT( 0x414a79ae, 0xc0843029, 0x4091275f ),
	NORM( 0x3e7141d1, 0xbf2c0d6a, 0x3f33b61c ),
	VERT( 0x408298f3, 0xc083c489, 0x4093c294 ),
	NORM( 0xbe85f9e6, 0xbf4107cd, 0x3f1a3bab ),
	VERT( 0x411b8f7a, 0xc08ac4a5, 0x40a871e9 ),
	NORM( 0x3dc4974d, 0xbf343463, 0x3f342987 ),
	VERT( 0x40e7f87d, 0xc08a4de4, 0x40a60abd ),
	NORM( 0xbdd2479f, 0xbf3a9bca, 0x3f2d4505 ),
	VERT( 0x417a559c, 0xc0986412, 0xbfe792c4 ),
	NORM( 0x3daf66dd, 0xbf639500, 0xbee651ad ),
	VERT( 0x417b32c8, 0xc099dafb, 0x40019e8e ),
	NORM( 0x3e803813, 0xbf664342, 0x3eb75baf ),
	VERT( 0x414abe96, 0xc0a17a13, 0xbfdc031d ),
	NORM( 0x3d8cf6df, 0xbf5a10e5, 0xbf04f05c ),
	VERT( 0x408c9e52, 0xc09c5fe9, 0xc0007603 ),
	NORM( 0x3d0206f1, 0xbf5fe9f3, 0xbef7a638 ),
	VERT( 0x417b9989, 0xc0a97f65, 0x3ec55cb7 ),
	NORM( 0x3e56c7a4, 0xbf7a36db, 0x3cd8447b ),
	VERT( 0x40543a38, 0xc09ec525, 0xc00cbcfc ),
	NORM( 0x3e63211f, 0xbf57c42b, 0xbefb0d20 ),
	VERT( 0x40be2810, 0xc0a413e8, 0xbfe61033 ),
	NORM( 0xbd9d1049, 0xbf5d5c85, 0xbefe29b0 ),
	VERT( 0x412739f9, 0xc0a95c2b, 0xbfd9e23b ),
	NORM( 0x3d62ae55, 0xbf5b3159, 0xbf037da1 ),
	VERT( 0x4057f778, 0xc0a0efb6, 0x40016336 ),
	NORM( 0xbe370da5, 0xbf6ca30d, 0x3eac90b7 ),
	VERT( 0x4104fafd, 0xc0ab939c, 0xbfdad45c ),
	NORM( 0xbc8c5112, 0xbf5c2b78, 0xbf028b8f ),
	VERT( 0x41467adc, 0xc0afe725, 0x4037d5f8 ),
	NORM( 0x3e4b0bfd, 0xbf63a41a, 0x3ed314c8 ),
	VERT( 0x409fa2c6, 0xc0aba8ea, 0x402dda08 ),
	NORM( 0xbe722fa6, 0xbf695a4e, 0x3eac3d52 ),
	VERT( 0x408396cd, 0xc0afa2aa, 0x3e8163e5 ),
	NORM( 0xbdcfeb13, 0xbf7e4f56, 0xbd5ace50 ),
	VERT( 0x4121f821, 0xc0b8741c, 0x404d2f0b ),
	NORM( 0x3da316a0, 0xbf6a23ff, 0x3ecaf6c7 ),
	VERT( 0x40449db7, 0xc0b235ad, 0x3d577256 ),
	NORM( 0x3e595370, 0xbf79e5c6, 0x3d3a1d56 ),
	VERT( 0x40f7cb39, 0xc0b800c3, 0x404b3bf9 ),
	NORM( 0xbdbcce01, 0xbf6adb5c, 0x3ec63460 ),
	VERT( 0x4149e2e8, 0xc0c0bbe2, 0x3f2024de ),
	NORM( 0x3e0b44f8, 0xbf7d2d9d, 0xbd6fc516 ),
	VERT( 0x40b42f54, 0xc0bdfa79, 0x3f0c8947 ),
	NORM( 0xbe3bd76c, 0xbf7ad84f, 0xbda18031 ),
	VERT( 0x4124e7aa, 0xc0c6acb0, 0x3f411b63 ),
	NORM( 0x3d5e087a, 0xbf7edc45, 0xbd9de7a2 ),
	VERT( 0x41031862, 0xc0c7e72c, 0x3f527e3d ),
	NORM( 0xbd296d41, 0xbf7f5235, 0xbd754640 ),
	CnkV_VN_NF(FV_CONT|FW_START, 638),
	OffnbIdx(4072, 91),
	VERT( 0x419a74f4, 0x40612c63, 0xbd6e5039 ),
	NORM( 0x3e8b806f, 0x3f75f9f8, 0x3d4e677c ),
	NFlagsW( 0, 71.460884 ),
	VERT( 0x4197c198, 0x4059f0d0, 0xc0076b9c ),
	NORM( 0x3e6b7cfc, 0x3f743446, 0xbe455bc8 ),
	NFlagsW( 1, 63.024788 ),
	VERT( 0x41ce3372, 0x404695ff, 0xc0d3bc9a ),
	NORM( 0xbf04e6c8, 0x3f59ddbc, 0x3da1800c ),
	NFlagsW( 2, 1.215922 ),
	VERT( 0x41dbc40b, 0x403c505f, 0xc04cb4de ),
	NORM( 0x3cb19729, 0x3f7c4dfb, 0x3e2bef2e ),
	NFlagsW( 3, 0.125038 ),
	VERT( 0x419ba124, 0x40499307, 0x3fa9ea34 ),
	NORM( 0x3e88d561, 0x3f623a7c, 0x3ec4bb51 ),
	NFlagsW( 4, 87.521469 ),
	VERT( 0x41de3448, 0x4035b10a, 0xbfe0423b ),
	NORM( 0x3d418b4e, 0x3f7f4afe, 0x3d6ab6c6 ),
	NFlagsW( 5, 0.115159 ),
	VERT( 0x4196bcf4, 0x40477e07, 0xc05300f3 ),
	NORM( 0x3e0550e2, 0x3f591e3a, 0xbf0378de ),
	NFlagsW( 6, 59.854271 ),
	VERT( 0x41c792f1, 0x40375344, 0xbd945d33 ),
	NORM( 0x3d1a8d27, 0x3f7c408a, 0x3e2a4011 ),
	NFlagsW( 7, 42.118965 ),
	VERT( 0x41e0a48d, 0x402f119f, 0xbe9c6c25 ),
	NORM( 0x3db3a064, 0x3f7cc148, 0x3e0774a0 ),
	NFlagsW( 8, 0.093446 ),
	VERT( 0x41c59393, 0x402f9849, 0xbfaffb0f ),
	NORM( 0xbda59776, 0x3f7b5725, 0xbe2ffae0 ),
	NFlagsW( 9, 45.881680 ),
	VERT( 0x41ccc71f, 0x4029c866, 0xc03ecc28 ),
	NORM( 0xbe7ac9df, 0x3f77f638, 0x3d2f4976 ),
	NFlagsW( 10, 17.129436 ),
	VERT( 0x41b5f12b, 0x4030d9a6, 0xbf08ab94 ),
	NORM( 0x3e349956, 0x3f7b8d94, 0xbd6c8c4e ),
	NFlagsW( 11, 50.031368 ),
	VERT( 0x41bd5071, 0x402e7edd, 0x3e57a8f8 ),
	NORM( 0x3c3408f8, 0x3f7b6d0c, 0x3e4060ca ),
	NFlagsW( 12, 50.265377 ),
	VERT( 0x41cfbecc, 0x4028398d, 0xbfc30626 ),
	NORM( 0xbb73b7f3, 0x3f7ffca9, 0x3c19e639 ),
	NFlagsW( 13, 12.152259 ),
	VERT( 0x41d2b674, 0x4026aaa5, 0xbd874119 ),
	NORM( 0x3c6db7ad, 0x3f7d0746, 0x3e1adbe4 ),
	NFlagsW( 14, 6.881557 ),
	VERT( 0x41bb9a87, 0x402b0c1f, 0xbf893886 ),
	NORM( 0xbd88f758, 0x3f7a7d11, 0xbe47ef5a ),
	NFlagsW( 15, 50.000008 ),
	VERT( 0x41b83418, 0x402cc06c, 0x3f4cba8c ),
	NORM( 0x3e736dc2, 0x3f6b6eb6, 0x3ea00cb2 ),
	NFlagsW( 16, 50.874512 ),
	VERT( 0x41b30376, 0x402aecf6, 0xc0222a04 ),
	NORM( 0x3ea4a08e, 0x3f6bcbbb, 0xbe60e265 ),
	NFlagsW( 17, 50.000000 ),
	VERT( 0x41c98dda, 0x401dcbbe, 0xc117f5d3 ),
	NORM( 0xbf5a0f12, 0x3eed2f4b, 0xbe7a8272 ),
	NFlagsW( 18, 0.100268 ),
	VERT( 0x41e3a4ce, 0x400fe344, 0x3fdb0a59 ),
	NORM( 0x3d97765e, 0x3f617d17, 0x3eef6faf ),
	NFlagsW( 19, 0.108135 ),
	VERT( 0x41d4a2f8, 0x400e98fc, 0x3ff14fc2 ),
	NORM( 0xbd7832f0, 0x3f564eec, 0x3f0b2aa3 ),
	NFlagsW( 20, 6.888147 ),
	VERT( 0x41b12946, 0x40124e07, 0xc068e9d9 ),
	NORM( 0x3e70ae53, 0x3f4ef5de, 0xbf0a2418 ),
	NFlagsW( 21, 50.000000 ),
	VERT( 0x41c3ab2d, 0x400acd81, 0xc02ca0b7 ),
	NORM( 0xbe93bec0, 0x3f6e4d93, 0xbe6573d4 ),
	NFlagsW( 22, 47.948040 ),
	VERT( 0x41c524c4, 0x4005b299, 0xc0d09b6c ),
	NORM( 0xbf4ed43c, 0x3f14e989, 0xbdc1255a ),
	NFlagsW( 23, 21.653103 ),
	VERT( 0x41ba166d, 0x400b04e0, 0xc022845f ),
	NORM( 0x3e56c60e, 0x3f712ca0, 0xbe85fc15 ),
	NFlagsW( 24, 50.000000 ),
	VERT( 0x41eda99e, 0x3ff6c211, 0x4004bf63 ),
	NORM( 0x3e3ed5f3, 0x3f4f4640, 0x3f0e77da ),
	NFlagsW( 25, 0.012626 ),
	VERT( 0x41766f85, 0x40159e50, 0xc085eecd ),
	NORM( 0x3c18593a, 0x3ef1064b, 0xbf61d8fa ),
	NFlagsW( 26, 99.806503 ),
	VERT( 0x41c8fa5b, 0x400068a0, 0x3fe8717f ),
	NORM( 0xbdd27c1b, 0x3f484c6d, 0x3f1d3d4f ),
	NFlagsW( 27, 45.550869 ),
	VERT( 0x41b95155, 0x3ffc6a0b, 0xc05ab63b ),
	NORM( 0x3e587df0, 0x3f6060f9, 0xbedd7521 ),
	NFlagsW( 28, 50.000000 ),
	VERT( 0x419bbb6c, 0x400595ae, 0x403c0a9f ),
	NORM( 0x3e94837a, 0x3f2df467, 0x3f2c840b ),
	NFlagsW( 29, 99.188530 ),
	VERT( 0x41c0d433, 0x3fea9d0f, 0xc069fa37 ),
	NORM( 0xbec5e88f, 0x3f625008, 0xbe868fa3 ),
	NFlagsW( 30, 49.027790 ),
	VERT( 0x41bf320a, 0x3fe79e99, 0x3ff03634 ),
	NORM( 0x3dfb2534, 0x3f3f0cd5, 0x3f277b79 ),
	NFlagsW( 31, 52.892757 ),
	VERT( 0x41961652, 0x3fef3faf, 0xc09125b3 ),
	NORM( 0x3c83ea4b, 0x3ee8719d, 0xbf640f6d ),
	NFlagsW( 32, 55.304760 ),
	VERT( 0x41b9f96e, 0x3fdb6691, 0x4014a331 ),
	NORM( 0x3e8dab47, 0x3f2431da, 0x3f3730a2 ),
	NFlagsW( 33, 57.050247 ),
	VERT( 0x41c713cc, 0x3fc02551, 0xc118704d ),
	NORM( 0xbf691c28, 0x3e9f5813, 0xbe8b41b8 ),
	NFlagsW( 34, 0.632707 ),
	VERT( 0x41af429f, 0x3fabb374, 0xc0952670 ),
	NORM( 0x3ddb71b3, 0x3efef132, 0xbf5c4e50 ),
	NFlagsW( 35, 50.000000 ),
	VERT( 0x41b666a3, 0x3f978756, 0xc090adca ),
	NORM( 0xbcfda477, 0x3f33961d, 0xbf3644cf ),
	NFlagsW( 36, 49.999981 ),
	VERT( 0x4176eead, 0x3f832ee0, 0xc0904e3f ),
	NORM( 0xbce2eb66, 0x3dbd1aeb, 0xbf7ecec4 ),
	NFlagsW( 37, 99.260872 ),
	VERT( 0x419c1881, 0x3f4d927b, 0x40749a28 ),
	NORM( 0x3e993178, 0x3eade128, 0x3f6446f0 ),
	NFlagsW( 38, 99.844017 ),
	VERT( 0x41d674ab, 0x3f0969e3, 0x404a503a ),
	NORM( 0xbdaf150f, 0x3ea7e879, 0x3f70d99f ),
	NFlagsW( 39, 10.830360 ),
	VERT( 0x41957076, 0x3f1c90fb, 0xc09722df ),
	NORM( 0xbd750c65, 0x3d3d51aa, 0xbf7f4473 ),
	NFlagsW( 40, 54.355766 ),
	VERT( 0x41c3e11a, 0x3e97ef5e, 0xc11a9a64 ),
	NORM( 0xbf67ce39, 0x3e7cdbde, 0xbeb0b439 ),
	NFlagsW( 41, 2.188858 ),
	VERT( 0x41ee7701, 0x3e63ff99, 0x4056b655 ),
	NORM( 0x3e853698, 0x3e63906e, 0x3f708c18 ),
	NFlagsW( 42, 1.983003 ),
	VERT( 0x41c01bfd, 0x3ec2a589, 0x402c14d8 ),
	NORM( 0x3e1a5594, 0x3e8f69de, 0x3f72b457 ),
	NFlagsW( 43, 59.629238 ),
	VERT( 0x41be057d, 0x3e95aa34, 0xc0d0cb09 ),
	NORM( 0xbf57992e, 0x3ee066bf, 0xbea0cd72 ),
	NFlagsW( 44, 42.943336 ),
	VERT( 0x41bb174c, 0x3e8f6021, 0x403f43bd ),
	NORM( 0x3e9b7454, 0x3e859eb3, 0x3f6a9631 ),
	NFlagsW( 45, 66.929077 ),
	VERT( 0x41b48e91, 0x3d2c4137, 0xc09f1bfe ),
	NORM( 0xbed97903, 0x3e8ae31f, 0xbf5d1c5f ),
	NFlagsW( 46, 49.999996 ),
	VERT( 0x41ae3a30, 0xbe039971, 0xc0a190d9 ),
	NORM( 0xbc5f8388, 0x3dac3e70, 0xbf7f11b1 ),
	NFlagsW( 47, 50.000000 ),
	VERT( 0x41c3578f, 0xbed9ca69, 0xc11b08f1 ),
	NORM( 0xbf689c94, 0x3dd5e337, 0xbecf01e1 ),
	NFlagsW( 48, 2.459535 ),
	VERT( 0x41d5cfa1, 0xbf6e9c58, 0x404c74af ),
	NORM( 0xbdc34393, 0xbe6419d6, 0x3f785f18 ),
	NFlagsW( 49, 14.014545 ),
	VERT( 0x41ee244f, 0xbf88bd31, 0x404f692c ),
	NORM( 0x3e870a3f, 0xbea2618b, 0x3f6934cd ),
	NFlagsW( 50, 1.592617 ),
	VERT( 0x41b42b30, 0xbf880454, 0xc0aa0883 ),
	NORM( 0xbf3db828, 0x3e3bfacb, 0xbf255483 ),
	NFlagsW( 51, 49.994476 ),
	VERT( 0x41c2fb05, 0xbf97562a, 0xc11cb083 ),
	NORM( 0xbf6a8bd2, 0x3db31abe, 0xbec83a87 ),
	NFlagsW( 52, 2.005682 ),
	VERT( 0x41bfdd00, 0xbf9ada63, 0x4027d211 ),
	NORM( 0x3e9f88ed, 0xbdfd1e39, 0x3f71305c ),
	NFlagsW( 53, 61.760403 ),
	VERT( 0x419c6ab2, 0xbf9398c0, 0x4081c8bc ),
	NORM( 0x3e7f1a39, 0xbdbd4db8, 0x3f76cc07 ),
	NFlagsW( 54, 99.942719 ),
	VERT( 0x41b8faa7, 0xbfb08153, 0xc0d56453 ),
	NORM( 0xbf695668, 0x3e28dbb3, 0xbec0f37f ),
	NFlagsW( 55, 46.298000 ),
	VERT( 0x41babda5, 0xbfaa59bb, 0x404b9e62 ),
	NORM( 0x3ed4bdb6, 0xbdc8f899, 0x3f677ee3 ),
	NFlagsW( 56, 78.949364 ),
	VERT( 0x41772f0e, 0xbf9dcb80, 0xc08c8b1a ),
	NORM( 0xbcda7b45, 0xbe6f6d84, 0xbf78cf6c ),
	NFlagsW( 57, 99.525932 ),
	VERT( 0x4195e2f9, 0xbfb09686, 0xc091891e ),
	NORM( 0xbdd21e82, 0xbe817861, 0xbf76488e ),
	NFlagsW( 58, 55.634041 ),
	VERT( 0x41aed49d, 0xbfd8898d, 0xc09fc04a ),
	NORM( 0xbe9d6737, 0xbe464c3a, 0xbf6e812d ),
	NFlagsW( 59, 50.000000 ),
	VERT( 0x41c2fbf5, 0xbff7816d, 0xc11e4f8c ),
	NORM( 0xbf6d1752, 0x3a3668a7, 0xbec11e9a ),
	NFlagsW( 60, 1.208454 ),
	VERT( 0x41b40730, 0xbfef5ce4, 0xc0a9a3aa ),
	NORM( 0xbf413739, 0xbe14d362, 0xbf23c426 ),
	NFlagsW( 61, 49.977745 ),
	VERT( 0x41ecccca, 0xc00b31dc, 0x401e6312 ),
	NORM( 0x3e57b85e, 0xbf36e060, 0x3f2ad520 ),
	NFlagsW( 62, 0.060075 ),
	VERT( 0x41b91c2f, 0xc0039e75, 0xc0d868ed ),
	NORM( 0xbf6c74ee, 0xbd8a0fce, 0xbec12575 ),
	NFlagsW( 63, 44.644444 ),
	VERT( 0x41d662d5, 0xc01463c9, 0x401cfdb0 ),
	NORM( 0x3c15e97c, 0xbf26f8d9, 0x3f4209cc ),
	NFlagsW( 64, 6.827483 ),
	VERT( 0x41bfca39, 0xc0142ca3, 0x401ce920 ),
	NORM( 0x3e980148, 0xbef44ca0, 0x3f53c09f ),
	NFlagsW( 65, 66.323547 ),
	VERT( 0x41b9ef77, 0xc022f7db, 0x40355c35 ),
	NORM( 0x3ea84312, 0xbf102c34, 0x3f4217e5 ),
	NFlagsW( 66, 80.684776 ),
	VERT( 0x41e26a2e, 0xc03c229b, 0xc029b629 ),
	NORM( 0x3e825db4, 0xbf778a99, 0x3c4eb9db ),
	NFlagsW( 67, 0.014805 ),
	VERT( 0x419cef94, 0xc029c6ff, 0x4065d076 ),
	NORM( 0x3e503d88, 0xbf0c0bad, 0x3f4fe098 ),
	NFlagsW( 68, 99.967262 ),
	VERT( 0x41eaa382, 0xc040c3c1, 0x3f8dd59b ),
	NORM( 0x3e22b13c, 0xbf74ef61, 0x3e796e90 ),
	NFlagsW( 69, 0.011414 ),
	VERT( 0x41d1e64f, 0xc03c5eaf, 0x3fcd55c2 ),
	NORM( 0x3db0ae58, 0xbf6f1bdc, 0x3eb17c1e ),
	NFlagsW( 70, 11.953463 ),
	VERT( 0x41b46578, 0xc03e96c7, 0xc09cc20b ),
	NORM( 0xbf2dfc7b, 0xbf0e7d23, 0xbef4a2e7 ),
	NFlagsW( 71, 49.930485 ),
	VERT( 0x41c3cd9f, 0xc04be930, 0xc1206234 ),
	NORM( 0xbf482a3a, 0xbf050f86, 0xbeb03ca4 ),
	NFlagsW( 72, 0.197175 ),
	VERT( 0x41af083e, 0xc045ef77, 0xc08aafb6 ),
	NORM( 0xbe84d185, 0xbf2ad970, 0xbf32b516 ),
	NFlagsW( 73, 50.027050 ),
	VERT( 0x41badb24, 0xc04ec5a1, 0xc0da15a8 ),
	NORM( 0xbf47270d, 0xbf0d9ed4, 0xbe988cf3 ),
	NFlagsW( 74, 38.185837 ),
	VERT( 0x41be3aee, 0xc04fbfea, 0x3fc0b044 ),
	NORM( 0x3e3fdca4, 0xbf6addb4, 0x3eb3b3e8 ),
	NFlagsW( 75, 59.458267 ),
	VERT( 0x41962ac1, 0xc04ed2c4, 0xc06b96fc ),
	NORM( 0xbd8ee16d, 0xbf229903, 0xbf44ec82 ),
	NFlagsW( 76, 64.623276 ),
	VERT( 0x41cd157a, 0xc05e247e, 0xbfe4b84b ),
	NORM( 0x3e1fba54, 0xbf7be18d, 0x3db26a97 ),
	NFlagsW( 77, 15.337181 ),
	VERT( 0x41bbda8f, 0xc058e7d9, 0x3eeb167d ),
	NORM( 0x3e79adff, 0xbf76589c, 0x3df7029b ),
	NFlagsW( 78, 53.162987 ),
	VERT( 0x41b7b3b2, 0xc05b6d96, 0x3fcc5566 ),
	NORM( 0x3e533daa, 0xbf6992fc, 0x3eb4ffd9 ),
	NFlagsW( 79, 63.712536 ),
	VERT( 0x41c9e80a, 0xc0677efd, 0xc0951898 ),
	NORM( 0x3e1e2bbd, 0xbf7c5222, 0x3d8c12e6 ),
	NFlagsW( 80, 12.997943 ),
	VERT( 0x41b933a7, 0xc06d75cb, 0xbfae7820 ),
	NORM( 0x3e4d788c, 0xbf7a6dac, 0x3d586e4c ),
	NFlagsW( 81, 50.739735 ),
	VERT( 0x41b6d9a2, 0xc0704a3e, 0xc049a57c ),
	NORM( 0x3d63ad25, 0xbf7d76b0, 0xbe040b13 ),
	NFlagsW( 82, 50.127918 ),
	VERT( 0x419d5673, 0xc0670ba6, 0x401ca29d ),
	NORM( 0x3e53c945, 0xbf53783c, 0x3f0636a2 ),
	NFlagsW( 83, 99.681099 ),
	VERT( 0x41b56c59, 0xc07177dd, 0x3e825582 ),
	NORM( 0x3e8b3114, 0xbf73dba0, 0x3e0c0ad4 ),
	NFlagsW( 84, 55.058975 ),
	VERT( 0x41c6507b, 0xc0805d68, 0xc0e082fe ),
	NORM( 0xbdeeb54e, 0xbf7e0fc1, 0xbd1eb776 ),
	NFlagsW( 85, 6.152349 ),
	VERT( 0x41b2e180, 0xc07b9b1b, 0xbf946bdb ),
	NORM( 0x3e67ac7f, 0xbf7948ac, 0x3cc7dc27 ),
	NFlagsW( 86, 52.341209 ),
	VERT( 0x41b067d5, 0xc07cc4b1, 0xc03f902f ),
	NORM( 0x3dc59902, 0xbf746ad4, 0xbe900786 ),
	NFlagsW( 87, 50.900780 ),
	VERT( 0x419b561c, 0xc0882a4e, 0x3f93cc7e ),
	NORM( 0x3e66cc77, 0xbf6e92fc, 0x3e9173e5 ),
	NFlagsW( 88, 97.932365 ),
	VERT( 0x4197213c, 0xc0890f3a, 0xc0103628 ),
	NORM( 0x3d45bc37, 0xbf6b7544, 0xbec76d4a ),
	NFlagsW( 89, 78.044220 ),
	VERT( 0x41999187, 0xc091d9c1, 0xbf004c1b ),
	NORM( 0x3e3d2218, 0xbf7b979c, 0xbba43dda ),
	NFlagsW( 90, 88.447556 ),
	CnkV_VN_NF(FV_CONT|FW_END, 239),
	OffnbIdx(0, 34),
	VERT( 0x3fd76ee2, 0x40983e4e, 0x3fd9a995 ),
	NORM( 0xbe297c5f, 0x3f7c7262, 0xbc56e80b ),
	NFlagsW( 4038, 12.640503 ),
	VERT( 0x3eaccb2e, 0x4097312b, 0x3fab0e1b ),
	NORM( 0x3d45ebb4, 0x3f7fa3ea, 0x3cb24161 ),
	NFlagsW( 4039, 0.040834 ),
	VERT( 0x3fa7ffba, 0x408be723, 0x4040e96e ),
	NORM( 0xbe72e21c, 0x3f63d03b, 0x3ec77ff7 ),
	NFlagsW( 4040, 1.770754 ),
	VERT( 0x3fe0eb13, 0x408a6ee0, 0xbd0c0489 ),
	NORM( 0xbd980edb, 0x3f6f3a8c, 0xbeb24325 ),
	NFlagsW( 4041, 14.633635 ),
	VERT( 0x3f00449b, 0x408a1770, 0xbeb9455b ),
	NORM( 0x3e205572, 0x3f6c9b41, 0xbeb249de ),
	NFlagsW( 4042, 0.081937 ),
	VERT( 0x3dbe9352, 0x4089e0cc, 0x40395c96 ),
	NORM( 0xbd263113, 0x3f613d9b, 0x3ef271a5 ),
	NFlagsW( 4043, 0.014897 ),
	VERT( 0x40196c4f, 0x406c0e04, 0x409cf09e ),
	NORM( 0xbea05fb9, 0x3f2ded5c, 0x3f29de68 ),
	NFlagsW( 4044, 94.849785 ),
	VERT( 0x4009f2d0, 0x4066fef2, 0xbfc95c1c ),
	NORM( 0xbdcb8222, 0x3f5631be, 0xbf09e029 ),
	NFlagsW( 4045, 61.964291 ),
	VERT( 0x3f2f7b51, 0x405d1fb3, 0xbff3081c ),
	NORM( 0x3e2558a4, 0x3f58b353, 0xbf01e0aa ),
	NFlagsW( 4046, 0.196087 ),
	VERT( 0x3f260eeb, 0x4051b107, 0x4088240e ),
	NORM( 0xbe8f7676, 0x3f281907, 0x3f33424a ),
	NFlagsW( 4047, 0.085306 ),
	VERT( 0x4041ff67, 0x4016fbf8, 0xc04c266d ),
	NORM( 0xbd5c9756, 0x3f1d7067, 0xbf49646e ),
	NFlagsW( 4048, 99.934425 ),
	VERT( 0x401fa6b1, 0x40141a75, 0x40be17e9 ),
	NORM( 0xbeab9e05, 0x3ebc3f70, 0x3f5e110d ),
	NFlagsW( 4049, 96.509377 ),
	VERT( 0x3fed1157, 0x400b5c17, 0xc05bd30c ),
	NORM( 0x3e342ee5, 0x3f2d7fa3, 0xbf36c54c ),
	NFlagsW( 4050, 35.773499 ),
	VERT( 0x3de76416, 0x400a5e5b, 0xc085fc07 ),
	NORM( 0x3ebc7851, 0x3f311aaa, 0xbf1f0728 ),
	NFlagsW( 4051, 0.051471 ),
	VERT( 0x3ed38082, 0x4001c47e, 0x409ed391 ),
	NORM( 0xbe93eb36, 0x3ec145ff, 0x3f613a34 ),
	NFlagsW( 4052, 0.036305 ),
	VERT( 0x403fbd0f, 0x3eb3ed83, 0x40cf1ec5 ),
	NORM( 0xbea33ad8, 0xbca6a34c, 0x3f7295fa ),
	NFlagsW( 4053, 99.984535 ),
	VERT( 0x40332e6f, 0x3dc3c2e9, 0xc08dede1 ),
	NORM( 0x3e8d2d62, 0x3e82285a, 0xbf6d506c ),
	NFlagsW( 4054, 99.863380 ),
	VERT( 0x3f3780c1, 0x3e823c61, 0x40afd356 ),
	NORM( 0xbe8be7c1, 0x3c82f1ad, 0x3f763928 ),
	NFlagsW( 4055, 0.096597 ),
	VERT( 0x3f850916, 0x3d6eed6e, 0xc0a8f4d9 ),
	NORM( 0x3edebe44, 0x3e8d5e64, 0xbf5b663e ),
	NFlagsW( 4056, 3.862479 ),
	VERT( 0xbf074adf, 0x3db834f3, 0xc0c6142a ),
	NORM( 0x3eeed398, 0x3e54eeaa, 0xbf5c18d9 ),
	NFlagsW( 4057, 0.011208 ),
	VERT( 0x3fb81d44, 0xbffd20b3, 0xc0a373c8 ),
	NORM( 0x3ecaa2dc, 0xbe7ede7c, 0xbf624c45 ),
	NFlagsW( 4058, 29.927959 ),
	VERT( 0xbdc8a7cd, 0xc005fa9d, 0xc0b8ffcd ),
	NORM( 0x3ec5cdd5, 0xbea6bd3e, 0xbf5cea83 ),
	NFlagsW( 4059, 0.055056 ),
	VERT( 0x3fa4dc2f, 0xc0043336, 0x40a36775 ),
	NORM( 0xbe911b54, 0xbeef34a4, 0x3f56664b ),
	NFlagsW( 4060, 0.932214 ),
	VERT( 0x3d3a1dfc, 0xc002d119, 0x409a7c9b ),
	NORM( 0xbcc7ddda, 0xbed7565c, 0x3f682c5f ),
	NFlagsW( 4061, 0.012580 ),
	VERT( 0x3fc8b5b4, 0xc06ecd41, 0xc0828322 ),
	NORM( 0x3e8eedcc, 0xbf0b5973, 0xbf4a82bc ),
	NFlagsW( 4062, 48.708611 ),
	VERT( 0x4009e5f7, 0xc06d9136, 0x4076da04 ),
	NORM( 0xbe784134, 0xbf4422e5, 0x3f185d13 ),
	NFlagsW( 4063, 53.433372 ),
	VERT( 0x3f4977d7, 0xc0709ebe, 0x40656485 ),
	NORM( 0x3d6297b2, 0xbf2b15a8, 0x3f3de8c2 ),
	NFlagsW( 4064, 0.153213 ),
	VERT( 0xbde01def, 0xc07bc32e, 0xc08d8e4d ),
	NORM( 0x3e8615ee, 0xbf188e26, 0xbf42571f ),
	NFlagsW( 4065, 0.038195 ),
	VERT( 0x40119fb5, 0xc0a21b3a, 0x3ff1f1c0 ),
	NORM( 0x3df7d24a, 0xbf5b536f, 0x3f005869 ),
	NFlagsW( 4066, 92.888374 ),
	VERT( 0x3fe315a1, 0xc0a70323, 0xc028473c ),
	NORM( 0x3e91e778, 0xbf4a1736, 0xbf0b3030 ),
	NFlagsW( 4067, 91.772591 ),
	VERT( 0x3e2a9925, 0xc0b29616, 0xc03bb6d1 ),
	NORM( 0x3e7788b7, 0xbf47bb7c, 0xbf13b195 ),
	NFlagsW( 4068, 0.178500 ),
	VERT( 0x3f5adb4f, 0xc0b36775, 0x3fea6048 ),
	NORM( 0x3e959240, 0xbf499312, 0x3f0af6a3 ),
	NFlagsW( 4069, 0.723251 ),
	VERT( 0x3fd1d1f9, 0xc0c4c8b4, 0xbe7ac2bc ),
	NORM( 0x3ea9755f, 0xbf718822, 0x3c8cd1fd ),
	NFlagsW( 4070, 90.531326 ),
	VERT( 0xbb5f0593, 0xc0d6fabb, 0xbed057c6 ),
	NORM( 0x3e8d1384, 0xbf75f3c4, 0xbd03d711 ),
	NFlagsW( 4071, 0.162047 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Calf[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Calf,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Calf[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Calf,
OPosition  ( 26.514753F,  0.000000F, -0.000000F ),
OAngle     ( -0.000000F, -6.459174F,  0.000002F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Foot,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Thigh[]
START
	CnkV_VN(FV_CONT, 907),
	OffnbIdx(478, 151),
	VERT( 0x3f70f9b4, 0x411dd57b, 0x3fc7483b ),
	NORM( 0x3cc366bc, 0x3f7ec378, 0x3dc304bc ),
	VERT( 0x409b62bc, 0x4116c7cf, 0x3f22334a ),
	NORM( 0x3e255736, 0x3f7ba0d5, 0x3db4c6fe ),
	VERT( 0x3fa94bf5, 0x4112175e, 0x406b26f3 ),
	NORM( 0x3ddc9062, 0x3f631810, 0x3ee5d1a8 ),
	VERT( 0x40a21000, 0x410f36ed, 0xc04a0fa9 ),
	NORM( 0x3da4fc85, 0x3f770d6c, 0xbe7f5e14 ),
	VERT( 0x4101b6bb, 0x410d78e3, 0xbae0f3ec ),
	NORM( 0x3e539de2, 0x3f798b99, 0x3dac617f ),
	VERT( 0x409d7b89, 0x410c3eba, 0x4029af53 ),
	NORM( 0x3e55aee7, 0x3f643904, 0x3ecde135 ),
	VERT( 0x410872d4, 0x41054d88, 0xc0654071 ),
	NORM( 0x3e189e1e, 0x3f769082, 0xbe654d40 ),
	VERT( 0x40fe8ba1, 0x4103a6d5, 0x400b84fb ),
	NORM( 0x3e63deca, 0x3f662eff, 0x3ec0f004 ),
	VERT( 0x413ce2ab, 0x40ffee16, 0xbf227bba ),
	NORM( 0x3e62af50, 0x3f78f60a, 0x3d941baa ),
	VERT( 0x40a80c40, 0x40fe533f, 0xc0b451b8 ),
	NORM( 0x3c757f7d, 0x3f5b289a, 0xbf0440b8 ),
	VERT( 0x41420d24, 0x40f5f3ba, 0xc072b2fa ),
	NORM( 0x3e3ebf75, 0x3f767c06, 0xbe484b66 ),
	VERT( 0x413d50c0, 0x40eebd29, 0x3fd89694 ),
	NORM( 0x3e60b9b4, 0x3f6b01a4, 0x3ea92283 ),
	VERT( 0x417c55a2, 0x40e3956d, 0xbf61168d ),
	NORM( 0x3e865bda, 0x3f7624af, 0x3da71fdc ),
	VERT( 0x41121351, 0x40e9e49d, 0xc0c8e730 ),
	NORM( 0x3daea182, 0x3f585549, 0xbf0720ad ),
	VERT( 0x4018cdf1, 0x40f0cae2, 0x40b41e18 ),
	NORM( 0x3e164bd6, 0x3f4cdf4f, 0x3f14d57d ),
	VERT( 0x41828ab3, 0x40d93812, 0xc06eb214 ),
	NORM( 0x3e8a9a7a, 0x3f72c03a, 0xbe29f456 ),
	VERT( 0x40b7ad9e, 0x40e56c74, 0x409e6298 ),
	NORM( 0x3e54c8d0, 0x3f50de49, 0x3f0a2193 ),
	VERT( 0x41482c40, 0x40d8c1e0, 0xc0ccccba ),
	NORM( 0x3e179bd5, 0x3f587cbe, 0xbf0345f8 ),
	VERT( 0x417446f1, 0x40d388a7, 0x3fd6bd55 ),
	NORM( 0x3e87ade6, 0x3f647879, 0x3ebaec13 ),
	VERT( 0x410d1f76, 0x40d934f4, 0x408c0273 ),
	NORM( 0x3e54edf3, 0x3f525409, 0x3f07e230 ),
	VERT( 0x419a7fd0, 0x40be9fe9, 0xbf268db4 ),
	NORM( 0x3e8ab183, 0x3f75750d, 0x3daeddd0 ),
	VERT( 0x41467ce8, 0x40c63ba4, 0x407c99b4 ),
	NORM( 0x3e6a3e08, 0x3f518a74, 0x3f06e7a1 ),
	VERT( 0x418655b8, 0x40be12ac, 0xc0c90ada ),
	NORM( 0x3e8c8ee1, 0x3f547d51, 0xbef88e6a ),
	VERT( 0x419d3b4f, 0x40b7b5be, 0xc033f178 ),
	NORM( 0x3ea4b54f, 0x3f6fb6a9, 0xbe0fbc3e ),
	VERT( 0x3fcbe6d2, 0x40c66cc1, 0xc0f241f5 ),
	NORM( 0xbe1c13a6, 0x3f1e99a0, 0xbf4520cf ),
	VERT( 0x41a758eb, 0x40b0db68, 0xbeb2f18e ),
	NORM( 0x3e5a2590, 0x3f799a3c, 0x3d8115d7 ),
	VERT( 0x4196546d, 0x40b09539, 0x3fd28fed ),
	NORM( 0x3e688969, 0x3f628e33, 0x3ed02018 ),
	VERT( 0x41b41c2e, 0x40a88721, 0x3d35042b ),
	NORM( 0x3e010be9, 0x3f7d6b5e, 0x3d846042 ),
	VERT( 0x41ac5244, 0x40a555d7, 0xc0125082 ),
	NORM( 0x3e818935, 0x3f740399, 0xbe299f8c ),
	VERT( 0x41becf95, 0x40a31243, 0x3ed438b3 ),
	NORM( 0x3de2fe2c, 0x3f7dd8f7, 0x3d88c917 ),
	VERT( 0x41a3b712, 0x40a5d747, 0x3fd7acbb ),
	NORM( 0x3e38d530, 0x3f64deb7, 0x3ed1f236 ),
	VERT( 0x4079d8a6, 0x40b8d95a, 0x40f27a66 ),
	NORM( 0x3e22b890, 0x3f1bd38e, 0x3f46fee0 ),
	VERT( 0x417ba1c4, 0x40a99251, 0x4066ab07 ),
	NORM( 0x3e9ba4e8, 0x3f4537e8, 0x3f0f7935 ),
	VERT( 0x40bafeef, 0x40b238f8, 0xc1084254 ),
	NORM( 0xbcc94c20, 0x3f187538, 0xbf4d8e2f ),
	VERT( 0x41ca1d10, 0x409d94af, 0x3f3c152a ),
	NORM( 0x3e07b36c, 0x3f7d964b, 0x3d0deaae ),
	VERT( 0x41b7efa7, 0x409e0821, 0xc0048aa7 ),
	NORM( 0x3e4954e9, 0x3f75c694, 0xbe4bd6e2 ),
	VERT( 0x41af5678, 0x409c7452, 0x3fdcb089 ),
	NORM( 0x3db24859, 0x3f66dd97, 0x3ed8b4ec ),
	VERT( 0x41c40245, 0x40978fd5, 0xbfbebd08 ),
	NORM( 0x3e82d2e5, 0x3f70a351, 0xbe678a1f ),
	VERT( 0x41a4e5a5, 0x409a2dec, 0xc0a5d9c2 ),
	NORM( 0x3eb49105, 0x3f56da9e, 0xbed3dfe3 ),
	VERT( 0x41bb4b29, 0x4095f414, 0x4007dbd3 ),
	NORM( 0x3c050ab7, 0x3f6467d2, 0x3ee73182 ),
	VERT( 0x41cd3dce, 0x40904f05, 0xbf70296b ),
	NORM( 0x3e99dcd9, 0x3f694107, 0xbe905cce ),
	VERT( 0x41c55c6b, 0x408f2b02, 0x40223e67 ),
	NORM( 0xbc46c9c9, 0x3f5f5fd4, 0x3efa0ac9 ),
	VERT( 0x40e2ab30, 0x40a31417, 0x40e79113 ),
	NORM( 0x3e4f3390, 0x3f1862a0, 0x3f471397 ),
	VERT( 0x411db675, 0x409ac7d9, 0xc10dda4a ),
	NORM( 0x3d639639, 0x3f0b4e26, 0xbf564ebb ),
	VERT( 0x41b2312f, 0x408bfe76, 0xc095040a ),
	NORM( 0x3e9a07a8, 0x3f5cd80d, 0xbed028fb ),
	VERT( 0x419275aa, 0x40910416, 0x404fe794 ),
	NORM( 0x3e76b98e, 0x3f3d30e2, 0x3f210daf ),
	VERT( 0x41bdc92a, 0x4083c410, 0xc08748db ),
	NORM( 0x3ea7080d, 0x3f5aff95, 0xbecdebbd ),
	VERT( 0x419fc441, 0x40853e13, 0x404f16a5 ),
	NORM( 0x3e3ea2e7, 0x3f35f0b6, 0x3f2dac52 ),
	VERT( 0x41537065, 0x4089ef8f, 0xc10d841a ),
	NORM( 0x3dfe43f8, 0x3f038be5, 0xbf594e06 ),
	VERT( 0x4125a7f2, 0x408e1e6f, 0x40dd0877 ),
	NORM( 0x3e53c026, 0x3f141331, 0x3f4a022a ),
	VERT( 0x41c90d39, 0x40745f08, 0xc0562423 ),
	NORM( 0x3ee6115f, 0x3f4fb7bf, 0xbebf612a ),
	VERT( 0x41abac64, 0x4077aa8b, 0x4046b76e ),
	NORM( 0x3db1593d, 0x3f34a28a, 0x3f340b15 ),
	VERT( 0x41892633, 0x407a3146, 0xc1046a01 ),
	NORM( 0x3e86ff9b, 0x3f05129d, 0xbf50049f ),
	VERT( 0x41d185a3, 0x40624e3e, 0xc01ed449 ),
	NORM( 0x3ed1d238, 0x3f4fdf16, 0xbed4c8a8 ),
	VERT( 0x41b912b4, 0x4066e48b, 0x405bb03e ),
	NORM( 0xbcfd35bf, 0x3f30f30f, 0x3f38d497 ),
	VERT( 0x41c17bd3, 0x405fa88f, 0x40640ba5 ),
	NORM( 0xbd30784a, 0x3f2baa09, 0x3f3d97fa ),
	VERT( 0x415ba3e0, 0x406b9020, 0x40d178a5 ),
	NORM( 0x3e93b0fc, 0x3effd809, 0x3f511725 ),
	VERT( 0x41cc1829, 0x404f43c7, 0x407a7b56 ),
	NORM( 0xbe29d019, 0x3f22a0aa, 0x3f411887 ),
	VERT( 0x41a8b7eb, 0x40475083, 0xc0e1e330 ),
	NORM( 0x3eaa9e6e, 0x3f118795, 0xbf408f6a ),
	VERT( 0x41b781a7, 0x4036c099, 0xc0ce93f2 ),
	NORM( 0x3e971db7, 0x3f1ff563, 0xbf390a8d ),
	VERT( 0x401bd40b, 0x405fe269, 0xc110427a ),
	NORM( 0xbe488a20, 0x3e632c10, 0xbf7488cb ),
	VERT( 0x41c3b502, 0x402ccbba, 0xc0bf717b ),
	NORM( 0x3ec58642, 0x3f27c2c7, 0xbf263f6f ),
	VERT( 0x41872aff, 0x403cc34c, 0x40b35a19 ),
	NORM( 0x3ebc0d07, 0x3ef02872, 0x3f4d9ca6 ),
	VERT( 0x40449ca2, 0x40577538, 0x410ac8c1 ),
	NORM( 0x3ebcc865, 0x3e891d51, 0x3f63df86 ),
	VERT( 0x4191a4cd, 0x402244f9, 0x40a76e21 ),
	NORM( 0x3ea200a3, 0x3ee024ee, 0x3f5770c9 ),
	VERT( 0x41d0a2ae, 0x400c0bb1, 0xc0a3dd30 ),
	NORM( 0x3f081056, 0x3f219f2f, 0xbf109268 ),
	VERT( 0x419e3d13, 0x4017d9e1, 0x4098dcde ),
	NORM( 0x3e88cc1b, 0x3ee85fe3, 0x3f599e88 ),
	VERT( 0x40ba754e, 0x4032cceb, 0x41067e8e ),
	NORM( 0x3e044d08, 0x3e211927, 0x3f7aa3a0 ),
	VERT( 0x40ce2578, 0x402ae49f, 0xc11cdd67 ),
	NORM( 0xbd9ed091, 0x3e2dba80, 0xbf7b81ae ),
	VERT( 0x41b6f964, 0x400b34ec, 0x408f295b ),
	NORM( 0xbd5200f6, 0x3ef204d0, 0x3f613647 ),
	VERT( 0x41a9d293, 0x400cd329, 0x408b9367 ),
	NORM( 0x3df79de5, 0x3ef3a1bd, 0x3f5f05a8 ),
	VERT( 0x41c0a3e5, 0x400560b7, 0x40932c61 ),
	NORM( 0xbd0139b7, 0x3ee7dffb, 0x3f64196a ),
	VERT( 0x41c9efff, 0x3ffb53c5, 0x409590e8 ),
	NORM( 0xbe129914, 0x3ed4be00, 0x3f65f3c3 ),
	VERT( 0x4126a64e, 0x3ff4ed0d, 0xc11e065b ),
	NORM( 0x3d1ea812, 0x3e0e8533, 0xbf7d507b ),
	VERT( 0x4109d064, 0x4003eaf4, 0x4102b7e9 ),
	NORM( 0x3e1757b9, 0x3e069e05, 0x3f7af122 ),
	VERT( 0x4134c2ed, 0x3fc97227, 0x40f7897a ),
	NORM( 0x3e5d9484, 0x3da7be3c, 0x3f790dbe ),
	VERT( 0x415d1847, 0x3fa47250, 0xc11b2392 ),
	NORM( 0x3dda3a92, 0x3dc689ab, 0xbf7d546e ),
	VERT( 0x418bc083, 0x3f792e2d, 0xc1122fa0 ),
	NORM( 0x3e6a319b, 0x3df2a91c, 0xbf775cb3 ),
	VERT( 0x41ad2c71, 0x3f1bacf4, 0xc0fdae84 ),
	NORM( 0x3e86eb0c, 0x3e24e2a8, 0xbf737cc1 ),
	VERT( 0x41c897ff, 0x3ecf888e, 0xc0e6bde9 ),
	NORM( 0x3ec7b6eb, 0x3e50e6ae, 0xbf65dcf5 ),
	VERT( 0x41bcd670, 0x3edade30, 0xc0f16d13 ),
	NORM( 0x3e690b0b, 0x3e30fc77, 0xbf7552f9 ),
	VERT( 0x4174bf70, 0x3f18ede4, 0x40d4323e ),
	NORM( 0x3e99dd42, 0xbcebae59, 0x3f740e45 ),
	VERT( 0x41abfd30, 0x3ea6eddf, 0x409e28cc ),
	NORM( 0x3cfa2878, 0x3d838bbd, 0x3f7f5a0c ),
	VERT( 0x41b88682, 0x3e3f6941, 0x40a6d552 ),
	NORM( 0xbdb13413, 0x3d754017, 0x3f7e9432 ),
	VERT( 0x41cbc2a2, 0x3d5725f4, 0x40a7f5fd ),
	NORM( 0xbe0ace49, 0x3c8ae06d, 0x3f7d999b ),
	VERT( 0x41c18150, 0x3daa456c, 0x40a80fce ),
	NORM( 0xbcb4c892, 0x3d3aa848, 0x3f7fabf0 ),
	VERT( 0x418eb420, 0x3e6e8ef4, 0x40b8b3f9 ),
	NORM( 0x3e907a1f, 0xbd319d02, 0x3f75586c ),
	VERT( 0x419f72bb, 0x3e0e1a8a, 0x40a81799 ),
	NORM( 0x3e5cb037, 0x3c8eebca, 0x3f79f1b6 ),
	VERT( 0x41934273, 0x3e039a3c, 0x40b3b539 ),
	NORM( 0x3e6fb532, 0xbd2b188d, 0x3f78a83f ),
	VERT( 0x407fa3ae, 0xbf08dd15, 0xc11640c3 ),
	NORM( 0xbe49129d, 0xbe5fbf6c, 0xbf74b44a ),
	VERT( 0x40b1311f, 0xbf505be8, 0x40f7a39b ),
	NORM( 0x3dc5f586, 0xbe99011e, 0x3f730ba5 ),
	VERT( 0x40e7054e, 0xbf6d66c8, 0x4100c029 ),
	NORM( 0xbcd6a28f, 0xbe993523, 0x3f742d8f ),
	VERT( 0x40f56ab4, 0xbf884a0e, 0xc11b496f ),
	NORM( 0xbd834829, 0xbe5e1e7e, 0xbf795d91 ),
	VERT( 0x413166b2, 0xbfa0b8e6, 0xc11a67fd ),
	NORM( 0x3d10ec16, 0xbe67c360, 0xbf79313d ),
	VERT( 0x41654b4a, 0xbfc173a4, 0xc115fa39 ),
	NORM( 0x3dbf183a, 0xbe868c7d, 0xbf75d83a ),
	VERT( 0x41af4f2f, 0xbff2bf32, 0xc0f3bc77 ),
	NORM( 0x3e6cd5c7, 0xbe8d80b4, 0xbf6ecc55 ),
	VERT( 0x418ecbb6, 0xbfe288ad, 0xc10d6d8b ),
	NORM( 0x3e46d21c, 0xbe89f9d4, 0xbf71776c ),
	VERT( 0x41ca041f, 0xc0111827, 0xc0d5b57f ),
	NORM( 0x3ec54f55, 0xbebadeb0, 0xbf58f6a1 ),
	VERT( 0x41c086b4, 0xc00f02f5, 0xc0e1b241 ),
	NORM( 0x3e736b6c, 0xbeab706c, 0xbf696b7e ),
	VERT( 0x411ba4f0, 0xbfdc8450, 0x40f45072 ),
	NORM( 0x3e0d3adf, 0xbeb0a8a5, 0x3f6dabab ),
	VERT( 0x41c6c591, 0xc01574db, 0x409702d6 ),
	NORM( 0x3ceb87c4, 0xbec5c61d, 0x3f6c03e7 ),
	VERT( 0x41a309c1, 0xc00d0b33, 0x40982e32 ),
	NORM( 0x3de5924b, 0xbec32a77, 0x3f6aecfa ),
	VERT( 0x41930bec, 0xc00b5279, 0x409f3cb2 ),
	NORM( 0x3e3429ed, 0xbefb09f0, 0x3f5a85d3 ),
	VERT( 0x41980197, 0xc00cec85, 0x409c3038 ),
	NORM( 0x3da54977, 0xbef68985, 0x3f5f6a14 ),
	VERT( 0x41afd26b, 0xc01611c6, 0x408e7c1e ),
	NORM( 0x3b388169, 0xbeb5b69e, 0x3f6f5564 ),
	VERT( 0x41bd0ee6, 0xc01a5373, 0x409795d7 ),
	NORM( 0xbd8df2a4, 0xbec420fb, 0x3f6bce5f ),
	VERT( 0x414733fa, 0xc007193e, 0x40da8a85 ),
	NORM( 0x3e7233c9, 0xbed07bc3, 0x3f61d6ce ),
	VERT( 0x41832049, 0xc0179451, 0x40af631f ),
	NORM( 0x3e8a7402, 0xbef9c0ec, 0x3f547beb ),
	VERT( 0x41ca24d3, 0xc081601c, 0xc0a49ec5 ),
	NORM( 0x3ece1c76, 0xbf1ff496, 0xbf2b426f ),
	VERT( 0x41cbc422, 0xc085b04e, 0x40608d27 ),
	NORM( 0x3dda2645, 0xbf19b6f0, 0x3f4ae3c7 ),
	VERT( 0x41ae862d, 0xc0846f86, 0xc0cf3f00 ),
	NORM( 0x3e413502, 0xbf1aa1c0, 0xbf4638d1 ),
	VERT( 0x41c03ac4, 0xc0895ad9, 0xc0b90006 ),
	NORM( 0x3e9ffb81, 0xbf20cac0, 0xbf366fee ),
	VERT( 0x419150d7, 0xc0849ba4, 0xc0f22f36 ),
	NORM( 0x3e399d45, 0xbf1ddda5, 0xbf441d73 ),
	VERT( 0x41c3d8f8, 0xc08ae375, 0x406249ba ),
	NORM( 0x3c1efe1a, 0xbf192cd0, 0x3f4d1a5d ),
	VERT( 0x41b5ff44, 0xc08a7766, 0x4055738c ),
	NORM( 0xbd8041fb, 0xbf1ac979, 0x3f4b45ea ),
	VERT( 0x41962fc9, 0xc08ba524, 0x4030ed67 ),
	NORM( 0x3d17fda2, 0xbf400f46, 0x3f28fe60 ),
	VERT( 0x419bcebe, 0xc08d0558, 0x40330385 ),
	NORM( 0xbdfd9922, 0xbf3ca417, 0x3f2a2267 ),
	VERT( 0x41a7d0c9, 0xc09081a2, 0x40429b2c ),
	NORM( 0xbdd8c69c, 0xbf2d11c4, 0x3f3aad9d ),
	VERT( 0x416bebe9, 0xc08ff136, 0xc0fd9e24 ),
	NORM( 0x3dee48d6, 0xbf1f4aa8, 0xbf462de0 ),
	VERT( 0x4109b632, 0xc08969f5, 0xc10646f0 ),
	NORM( 0xbdc2855a, 0xbf127173, 0xbf509087 ),
	VERT( 0x4186b906, 0xc094ed75, 0x403de4c2 ),
	NORM( 0x3e5c8023, 0xbf42ffc7, 0x3f1c6fe5 ),
	VERT( 0x413d4642, 0xc093c540, 0xc10384e8 ),
	NORM( 0x3d305779, 0xbf1bd7b5, 0xbf4accaa ),
	VERT( 0x41514b7a, 0xc0a2a7d1, 0x4084c0f3 ),
	NORM( 0x3e81253c, 0xbf405e3d, 0x3f1c1469 ),
	VERT( 0x4128fb23, 0xc0a8bbde, 0x409e1348 ),
	NORM( 0x3e6fe869, 0xbf379f62, 0x3f27fe1b ),
	VERT( 0x41cac391, 0xc0bb4495, 0xc0538586 ),
	NORM( 0x3e97c8dc, 0xbf4a1d14, 0xbf0992cf ),
	VERT( 0x40e0ad97, 0xc0a652ea, 0x40b6f5c6 ),
	NORM( 0x3e32bfcf, 0xbf26f07c, 0x3f3cdda4 ),
	VERT( 0x41089ff4, 0xc0acc765, 0x40afcdd5 ),
	NORM( 0x3dd20bae, 0xbf3394fa, 0x3f348bdb ),
	VERT( 0x41ccdb56, 0xc0c6b968, 0x3feff359 ),
	NORM( 0x3e18d719, 0xbf4fee0b, 0x3f105d5e ),
	VERT( 0x41be5bd3, 0xc0caf17e, 0xc06732ef ),
	NORM( 0x3e815a4e, 0xbf5a6976, 0xbee9a8d1 ),
	VERT( 0x41a1d6a2, 0xc0c9c072, 0x3f088db5 ),
	NORM( 0xbe05d581, 0xbf6387f8, 0x3ee0e8f1 ),
	VERT( 0x41be4905, 0xc0d00e07, 0x3fbc4514 ),
	NORM( 0xbcc2ca7d, 0xbf5c801e, 0x3f01ead4 ),
	VERT( 0x4191dfdc, 0xc0cbb693, 0xc0946cbe ),
	NORM( 0x3dcf766a, 0xbf5fbb95, 0xbef35e88 ),
	VERT( 0x41ac44a2, 0xc0cfe6d0, 0xc0849ecd ),
	NORM( 0x3de41986, 0xbf604a5e, 0xbef023df ),
	VERT( 0x41b065bf, 0xc0d15103, 0x3f8c0329 ),
	NORM( 0xbe16a7fc, 0xbf617d3c, 0x3ee668a6 ),
	VERT( 0x41954097, 0xc0cf7bca, 0x3e12bb87 ),
	NORM( 0x3cb5a111, 0xbf671471, 0x3edc0db7 ),
	VERT( 0x41849610, 0xc0d086cf, 0x3ebef2f1 ),
	NORM( 0x3dd97417, 0xbf66cdb7, 0x3ed6b9f9 ),
	VERT( 0x41731278, 0xc0d1aef8, 0xc0a3c1c7 ),
	NORM( 0x3e069e9f, 0xbf609243, 0xbeec6604 ),
	VERT( 0x41c7572b, 0xc0e2309b, 0xbf619bdf ),
	NORM( 0x3e18b93c, 0xbf7c46cd, 0xbda6ce9b ),
	VERT( 0x41a6dce9, 0xc0dfb946, 0xbfed0cfd ),
	NORM( 0xba8295b1, 0xbf7ffff8, 0x39b07f41 ),
	VERT( 0x414addd7, 0xc0da8b78, 0xc0acfaf2 ),
	NORM( 0x3de4b41f, 0xbf62f199, 0xbee5ea57 ),
	VERT( 0x41b9ea98, 0xc0e59832, 0xbf9cb3ca ),
	NORM( 0x3ce540aa, 0xbf7f7984, 0xbd6be5ac ),
	VERT( 0x41588071, 0xc0db3b04, 0x3f37c776 ),
	NORM( 0x3e47f446, 0xbf6c88fa, 0x3ea8625b ),
	VERT( 0x41915347, 0xc0e37389, 0xc01447f7 ),
	NORM( 0x3d61025d, 0xbf7f8632, 0xbcd823e0 ),
	VERT( 0x417a63d8, 0xc0eaafb4, 0xc01880f3 ),
	NORM( 0x3d904be6, 0xbf7f5be5, 0xbbc949a5 ),
	VERT( 0x41161ff9, 0xc0e582b3, 0xc0b70c52 ),
	NORM( 0x3cfd9355, 0xbf5f1b2d, 0xbefa92f9 ),
	VERT( 0x41539c95, 0xc0ebf78f, 0xc0065472 ),
	NORM( 0x3db18243, 0xbf7f07f7, 0x3bd652c3 ),
	VERT( 0x40ebcfff, 0xc0e4c9b0, 0x402737b9 ),
	NORM( 0xbcbb83a8, 0xbf70eb8d, 0x3eacbb9c ),
	VERT( 0x412a19a2, 0xc0e9f509, 0x3fb96525 ),
	NORM( 0x3e39e284, 0xbf706a2d, 0x3e955c6e ),
	VERT( 0x410aab51, 0xc0ed7518, 0x40135eb0 ),
	NORM( 0x3d3b3310, 0xbf71055d, 0x3eaaf94f ),
	VERT( 0x4125024b, 0xc0f6062f, 0xbff3e6bc ),
	NORM( 0x3da3c79e, 0xbf7f0fe2, 0xbcf85d37 ),
	VERT( 0x40f180dd, 0xc0fc8faa, 0xc0005806 ),
	NORM( 0xbbbbc4bb, 0xbf7f9916, 0xbd6441d1 ),
	CnkV_VN_NF(FV_CONT|FW_START, 239),
	OffnbIdx(4038, 34),
	VERT( 0x41dff77d, 0x40983e50, 0x3ff08415 ),
	NORM( 0xbe26e626, 0x3f7c7262, 0xbd01a6a4 ),
	NFlagsW( 0, 87.359497 ),
	VERT( 0x41d5991e, 0x4097312d, 0x3faed433 ),
	NORM( 0x3d3aa347, 0x3f7fa3ea, 0x3cdda773 ),
	NFlagsW( 1, 99.959167 ),
	VERT( 0x41dbd6af, 0x408be725, 0x40492306 ),
	NORM( 0xbe8f1d11, 0x3f63d03b, 0x3eb89267 ),
	NFlagsW( 2, 98.229248 ),
	VERT( 0x41e21df0, 0x408a6ee2, 0x3e27a2b6 ),
	NORM( 0xbd0dc1ac, 0x3f6f3a8c, 0xbeb5683c ),
	NFlagsW( 3, 85.366371 ),
	VERT( 0x41d86d37, 0x408a1772, 0xbe9b3c5d ),
	NORM( 0x3e476de0, 0x3f6c9b42, 0xbea8236f ),
	NFlagsW( 4, 99.918060 ),
	VERT( 0x41d2404f, 0x4089e0ce, 0x4038dae1 ),
	NORM( 0xbdbfa9de, 0x3f613d9b, 0x3eee9167 ),
	NFlagsW( 5, 99.985100 ),
	VERT( 0x41e2c2ab, 0x406c0e08, 0x40a492c8 ),
	NORM( 0xbec59323, 0x3f2ded5b, 0x3f1fc514 ),
	NFlagsW( 6, 5.150212 ),
	VERT( 0x41e6aafa, 0x4066fef6, 0xbfa90b67 ),
	NORM( 0xbd1c4482, 0x3f5631be, 0xbf0bdcb5 ),
	NFlagsW( 7, 38.035706 ),
	VERT( 0x41db4698, 0x405d1fb7, 0xbfe79e58 ),
	NORM( 0x3e5ebd35, 0x3f58b353, 0xbef8ce56 ),
	NFlagsW( 8, 99.803909 ),
	VERT( 0x41d57213, 0x4051b10b, 0x40899c9c ),
	NORM( 0xbeb6e236, 0x3f281906, 0x3f2a0d36 ),
	NFlagsW( 9, 99.914696 ),
	VERT( 0x41ef15a4, 0x4016fbfd, 0xc03507c8 ),
	NORM( 0x3d0f4cb8, 0x3f1d7067, 0xbf49aa35 ),
	NFlagsW( 10, 0.065573 ),
	VERT( 0x41e29a02, 0x40141a79, 0x40c5dde1 ),
	NORM( 0xbedc7da1, 0x3ebc3f6f, 0x3f530101 ),
	NFlagsW( 11, 3.490622 ),
	VERT( 0x41e5ee8e, 0x400b5c1b, 0xc04d1832 ),
	NORM( 0x3e82a430, 0x3f2d7fa3, 0xbf308b06 ),
	NFlagsW( 12, 64.226501 ),
	VERT( 0x41d8c8c9, 0x400a5e5f, 0xc084ba2d ),
	NORM( 0x3edf0daa, 0x3f311aab, 0xbf136ae1 ),
	NFlagsW( 13, 99.948524 ),
	VERT( 0x41d2ef5a, 0x4001c482, 0x409f4e28 ),
	NORM( 0xbec5a762, 0x3ec145ff, 0x3f577a43 ),
	NFlagsW( 14, 99.963692 ),
	VERT( 0x41e61bb3, 0x3eb3eda6, 0x40d8971c ),
	NORM( 0xbed8c5f1, 0xbca6a352, 0x3f67dd5c ),
	NFlagsW( 15, 0.015469 ),
	VERT( 0x41ee5d78, 0x3dc3c374, 0xc082f324 ),
	NORM( 0x3ec1acad, 0x3e82285a, 0xbf63dde9 ),
	NFlagsW( 16, 0.136620 ),
	VERT( 0x41d4df08, 0x3e823c81, 0x40b14a33 ),
	NORM( 0xbec26a43, 0x3c82f1a8, 0x3f6cca7c ),
	NFlagsW( 17, 99.903397 ),
	VERT( 0x41e121b5, 0x3d6eee72, 0xc0a4247a ),
	NORM( 0x3f075896, 0x3e8d5e64, 0xbf4d7a58 ),
	NFlagsW( 18, 96.137527 ),
	VERT( 0x41d57cda, 0x3db8356e, 0xc0c6b950 ),
	NORM( 0x3f0f6a46, 0x3e54eeab, 0xbf4d443a ),
	NFlagsW( 19, 99.988785 ),
	VERT( 0x41e42627, 0xbffd20aa, 0xc09d3c9a ),
	NORM( 0x3efc43c7, 0xbe7ede7b, 0xbf5576b1 ),
	NFlagsW( 20, 70.072037 ),
	VERT( 0x41d88ac5, 0xc005fa99, 0xc0b82d77 ),
	NORM( 0x3ef6409f, 0xbea6bd3d, 0xbf506343 ),
	NFlagsW( 21, 99.944946 ),
	VERT( 0x41d9c2c6, 0xc0043332, 0x40a700dd ),
	NORM( 0xbec06c6a, 0xbeef34a4, 0x3f4ce071 ),
	NFlagsW( 22, 99.067780 ),
	VERT( 0x41d0226d, 0xc002d115, 0x4099ab70 ),
	NORM( 0xbe014c5b, 0xbed7565c, 0x3f65ff36 ),
	NFlagsW( 23, 99.987427 ),
	VERT( 0x41e440d6, 0xc06ecd3d, 0xc07813ff ),
	NORM( 0x3ebb95a8, 0xbf0b5972, 0xbf412f90 ),
	NFlagsW( 24, 51.291393 ),
	VERT( 0x41e1c652, 0xc06d9131, 0x40826617 ),
	NORM( 0xbe9d9ea8, 0xbf4422e5, 0x3f106a1f ),
	NFlagsW( 25, 46.566628 ),
	VERT( 0x41d725f3, 0xc0709eba, 0x40699a42 ),
	NORM( 0xbce955d9, 0xbf2b15a8, 0x3f3e4bff ),
	NFlagsW( 26, 99.846794 ),
	VERT( 0x41d73aae, 0xc07bc32a, 0xc08d0d1e ),
	NORM( 0x3eb0f590, 0xbf188e26, 0xbf39908f ),
	NFlagsW( 27, 99.961807 ),
	VERT( 0x41e4811e, 0xc0a21b38, 0x40089615 ),
	NORM( 0x3d82be15, 0xbf5b536f, 0x3f0303f7 ),
	NFlagsW( 28, 7.111628 ),
	VERT( 0x41e49648, 0xc0a70321, 0xc01a6fe6 ),
	NORM( 0x3eb04b47, 0xbf4a1736, 0xbf021912 ),
	NFlagsW( 29, 8.227407 ),
	VERT( 0x41d814fd, 0xc0b29614, 0xc03952b6 ),
	NORM( 0x3e9c3608, 0xbf47bb7c, 0xbf0bcb68 ),
	NFlagsW( 30, 99.821503 ),
	VERT( 0x41d94418, 0xc0b36773, 0x3ff532d2 ),
	NORM( 0x3e6ab67e, 0xbf499312, 0x3f127e8d ),
	NFlagsW( 31, 99.276749 ),
	VERT( 0x41e15e72, 0xc0c4c8b2, 0xbd715ad9 ),
	NORM( 0x3ea76489, 0xbf718822, 0x3d5e7826 ),
	NFlagsW( 32, 9.468673 ),
	VERT( 0x41d4750a, 0xc0d6fab9, 0xbecf3761 ),
	NORM( 0x3e8e08e0, 0xbf75f3c3, 0xba8147bc ),
	NFlagsW( 33, 99.837959 ),
	CnkV_VN_NF(FV_CONT|FW_END, 316),
	OffnbIdx(0, 45),
	VERT( 0x3f10cdf8, 0x4115b49e, 0xc0042292 ),
	NORM( 0xbd92bb4e, 0x3f77686a, 0xbe7ca1d4 ),
	NFlagsW( 3422, 98.325539 ),
	VERT( 0xc04a0dc8, 0x4117942d, 0x40168865 ),
	NORM( 0xbe2c0658, 0x3f7b880d, 0x3da3a397 ),
	NFlagsW( 3423, 0.064311 ),
	VERT( 0xc00f2255, 0x410d2ec3, 0x408a5556 ),
	NORM( 0x3cacec16, 0x3f69e95b, 0x3ecfc55d ),
	NFlagsW( 3424, 0.735602 ),
	VERT( 0xc0655363, 0x410cc5ba, 0xbf993bce ),
	NORM( 0xbe5ae350, 0x3f729a8e, 0xbe72d09e ),
	NFlagsW( 3425, 0.368259 ),
	VERT( 0x3f1969b3, 0x4106e3bd, 0xc091e5d4 ),
	NORM( 0xbdf7fc47, 0x3f5d0002, 0xbefadf0d ),
	NFlagsW( 3426, 99.651398 ),
	VERT( 0xc05d796d, 0x40fe72eb, 0xc0660066 ),
	NORM( 0xbe665181, 0x3f5b86f4, 0xbeece220 ),
	NFlagsW( 3430, 0.981588 ),
	VERT( 0xc063ec74, 0x40f599e6, 0x40e539a1 ),
	NORM( 0x3d995f17, 0x3f68ccd6, 0x3ed17ffa ),
	NFlagsW( 3432, 0.025749 ),
	VERT( 0xbf66ee62, 0x40f0321e, 0x40c3586b ),
	NORM( 0x3e275a21, 0x3f550f1a, 0x3f079d78 ),
	NFlagsW( 3433, 12.560318 ),
	VERT( 0xc0bbc055, 0x40ef39ae, 0xc04b8da8 ),
	NORM( 0xbdd2d259, 0x3f6649d0, 0xbed9563d ),
	NFlagsW( 3434, 0.028552 ),
	VERT( 0xbfd6acb1, 0x40cb1b9c, 0x410b36f2 ),
	NORM( 0x3e998a7b, 0x3f522934, 0x3ef8cb63 ),
	NFlagsW( 3436, 1.720338 ),
	VERT( 0xc01c8d18, 0x40c7f9b4, 0xc0c994f9 ),
	NORM( 0xbe84b403, 0x3f20287a, 0xbf3c5e73 ),
	NFlagsW( 3437, 7.044430 ),
	VERT( 0x3f40b565, 0x40c0f91e, 0x40f789e2 ),
	NORM( 0x3e763a5b, 0x3f3c3b10, 0x3f2238ce ),
	NFlagsW( 3438, 72.823174 ),
	VERT( 0xc0980dbf, 0x40c386ca, 0xc0ae44eb ),
	NORM( 0xbdb7dd8d, 0x3f3a154c, 0xbf2e4d0b ),
	NFlagsW( 3439, 0.357107 ),
	VERT( 0xbfba50ee, 0x409f1bc4, 0x412e89bf ),
	NORM( 0x3ec88bfd, 0x3f2d6959, 0x3f1f6779 ),
	NFlagsW( 3442, 0.188287 ),
	VERT( 0xbfa503b3, 0x4079ab8f, 0xc0fcab65 ),
	NORM( 0xbe8919b8, 0x3e86a64a, 0xbf6d48ff ),
	NFlagsW( 3445, 25.996319 ),
	VERT( 0x3f8e55ea, 0x406f0b9f, 0x41249830 ),
	NORM( 0x3f1100fe, 0x3eece7cf, 0x3f2e94f6 ),
	NFlagsW( 3446, 70.079727 ),
	VERT( 0xbfd7a63a, 0x40732c52, 0x413c76cc ),
	NORM( 0x3ec3ca4a, 0x3eddd881, 0x3f50ec32 ),
	NFlagsW( 3447, 0.026375 ),
	VERT( 0xc059e785, 0x4069b272, 0xc0e89112 ),
	NORM( 0xbdc6b47e, 0x3ea63f83, 0xbf70d9ff ),
	NFlagsW( 3448, 4.436457 ),
	VERT( 0xc0969a6d, 0x400c6700, 0xc0f7d78d ),
	NORM( 0x3e45397d, 0x3e7da1cf, 0xbf73129b ),
	NFlagsW( 3450, 0.459415 ),
	VERT( 0xc0be12d9, 0x3f5db273, 0xc108a235 ),
	NORM( 0x3eda0806, 0x3eccd612, 0xbf4fc144 ),
	NFlagsW( 3451, 0.010982 ),
	VERT( 0xbf726d20, 0x3ee40918, 0xc10100d7 ),
	NORM( 0xbe89402d, 0xbdd34000, 0xbf753674 ),
	NFlagsW( 3452, 25.239214 ),
	VERT( 0x3f105e84, 0x3cdf4226, 0xc108a80d ),
	NORM( 0xbea17d47, 0xbe7f8aef, 0xbf6a61cb ),
	NFlagsW( 3455, 45.536911 ),
	VERT( 0x40349355, 0xbebbc5e2, 0x41114c18 ),
	NORM( 0x3f304128, 0x3da01dd5, 0x3f389479 ),
	NFlagsW( 3456, 95.848557 ),
	VERT( 0x3f96069a, 0xbf01ce99, 0x413be938 ),
	NORM( 0x3f2bf4f0, 0x3e40cdb8, 0x3f376bf8 ),
	NFlagsW( 3458, 16.576017 ),
	VERT( 0xbff3379f, 0xbfb1af7b, 0xc0f61379 ),
	NORM( 0x3e52f6bc, 0x3ca0916b, 0xbf7a7541 ),
	NFlagsW( 3460, 17.556355 ),
	VERT( 0x4005804b, 0xc02d6f3c, 0xc0ef1fa8 ),
	NORM( 0xbe31e2e5, 0xbee08ff4, 0xbf61b949 ),
	NFlagsW( 3462, 53.049870 ),
	VERT( 0x3fc1bc51, 0xc04cf2d3, 0x413f3315 ),
	NORM( 0x3f295e90, 0x3e186eb2, 0x3f3c249b ),
	NFlagsW( 3465, 2.021648 ),
	VERT( 0x3f9dc638, 0xc0539c29, 0xc0e762e2 ),
	NORM( 0x3cf00b92, 0xbe9a82a3, 0xbf73f314 ),
	NFlagsW( 3466, 33.066387 ),
	VERT( 0xc082a464, 0xc066b874, 0xc1183e56 ),
	NORM( 0x3f13982f, 0x3e80fa59, 0xbf46fae3 ),
	NFlagsW( 3467, 0.031659 ),
	VERT( 0x3ee355cc, 0xc0a7208b, 0xc0d93550 ),
	NORM( 0x3e7b4eea, 0xbee1c43d, 0xbf5d02f8 ),
	NFlagsW( 3471, 14.336912 ),
	VERT( 0xbf7bb20a, 0xc0beec55, 0xc0e2e35d ),
	NORM( 0x3f2014e9, 0xbd977a82, 0xbf46e00b ),
	NFlagsW( 3476, 3.033785 ),
	VERT( 0x4011ff18, 0xc0d510cc, 0xc0741f5b ),
	NORM( 0x3e927a75, 0xbf5c9df5, 0xbed67a43 ),
	NFlagsW( 3477, 23.545929 ),
	VERT( 0x409d963e, 0xc050a30f, 0xc101a698 ),
	NORM( 0xbe6928c6, 0xbf0712b8, 0xbf518204 ),
	NFlagsW( 3555, 99.926842 ),
	VERT( 0x406bd7ca, 0xc04eca15, 0x4107d8d1 ),
	NORM( 0x3f49d902, 0x3d92e122, 0x3f1c62b3 ),
	NFlagsW( 3556, 70.857422 ),
	VERT( 0x408edb38, 0xc0b0a4b1, 0x40d21030 ),
	NORM( 0x3f476461, 0xbec81879, 0x3efb26b6 ),
	NFlagsW( 3560, 58.265060 ),
	VERT( 0x40743510, 0xc0c3528e, 0x411b0be9 ),
	NORM( 0x3f57395d, 0xbe89f7cd, 0x3ef076f0 ),
	NFlagsW( 3561, 13.196116 ),
	VERT( 0x40699e2a, 0xc0d82122, 0xc0af3e89 ),
	NORM( 0xbe4c61eb, 0xbf555c01, 0xbf03eba5 ),
	NFlagsW( 3563, 32.917374 ),
	VERT( 0x4084f60c, 0xc0d803ce, 0x40fa097d ),
	NORM( 0x3f5b64a5, 0xbee2137d, 0x3e8803f0 ),
	NFlagsW( 3564, 21.553642 ),
	VERT( 0x40baff60, 0xc0e23619, 0xc0b89ead ),
	NORM( 0xbdd66642, 0xbf52e9dd, 0xbf0e983e ),
	NFlagsW( 3566, 99.416084 ),
	VERT( 0x409972ac, 0xc0e12a41, 0x4052a636 ),
	NORM( 0x3ec4cf81, 0xbf686c8c, 0x3e2b2f10 ),
	NFlagsW( 3567, 42.220470 ),
	VERT( 0x408201eb, 0xc0ea47ce, 0xbef31967 ),
	NORM( 0x3d85be35, 0xbf7ddf73, 0xbde2fe55 ),
	NFlagsW( 3568, 33.641495 ),
	VERT( 0x408809f9, 0xc0f13082, 0x4090c675 ),
	NORM( 0x3f24dc51, 0xbf435df9, 0x3d5bc8ef ),
	NFlagsW( 3569, 23.355953 ),
	VERT( 0x40b50b7f, 0xc0f76fdf, 0xbfddd934 ),
	NORM( 0xbe1dbb17, 0xbf7cdd1d, 0xbcccec0c ),
	NFlagsW( 3570, 87.014076 ),
	VERT( 0x405ddccb, 0xc102d521, 0x3fb2af39 ),
	NORM( 0x3f7e8906, 0x3d9af384, 0xbd9a6f3a ),
	NFlagsW( 3572, 1.390692 ),
	VERT( 0x4048a455, 0xc1023179, 0x40d3c84d ),
	NORM( 0x3f74e60f, 0xbcf9d1af, 0x3e9451e3 ),
	NFlagsW( 3573, 0.062354 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Thigh[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Thigh,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Thigh[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Thigh,
OPosition  ( -7.085586F, -8.059856F, -0.015753F ),
OAngle     (  0.201354F, -3.228314F, -178.021568F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Calf,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy16[]
START
EvalFlags ( 0x0000001c ),
CNKModel   NULL,
OPosition  (  4.429579F, -0.000000F,  0.000000F ),
OAngle     (  0.000005F, 180.000042F, -0.000003F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Toe0[]
START
	CnkV_VN_NF(FV_CONT|FW_END, 2640),
	OffnbIdx(0, 377),
	VERT( 0x3e2d91e0, 0x409155db, 0xbfd26478 ),
	NORM( 0x3ed21a2e, 0x3f6316df, 0xbe588b18 ),
	NFlagsW( 4354, 28.567535 ),
	VERT( 0x3f0378c5, 0x408b17e3, 0xbfc3bc1b ),
	NORM( 0x3f114a02, 0x3f4fbd00, 0xbe0ea768 ),
	NFlagsW( 4355, 45.534367 ),
	VERT( 0x3f7184df, 0x4080ae3d, 0xbfbac1f8 ),
	NORM( 0x3f03fa5a, 0x3f539583, 0xbe67847b ),
	NFlagsW( 4356, 51.366676 ),
	VERT( 0x3e6880e7, 0x40702330, 0xbd631365 ),
	NORM( 0x3ef0a600, 0x3ef16651, 0x3f3f05cb ),
	NFlagsW( 4357, 47.824223 ),
	VERT( 0xbe3de3dc, 0x406bbbd8, 0xc01f8d5a ),
	NORM( 0x3f0adb99, 0x3e9d50a5, 0xbf482b31 ),
	NFlagsW( 4358, 18.869223 ),
	VERT( 0x3ec917df, 0x406eedaa, 0xc003ea1e ),
	NORM( 0x3ef046fa, 0x3ec4fb09, 0xbf4b79cc ),
	NFlagsW( 4359, 45.928555 ),
	VERT( 0x3ec000f2, 0x406ce9df, 0xbe8b7622 ),
	NORM( 0x3f144f41, 0x3f0935d1, 0x3f1d34a8 ),
	NFlagsW( 4360, 49.575680 ),
	VERT( 0x3fbfb0e9, 0x407244c3, 0xbfad363c ),
	NORM( 0x3e6d6b36, 0x3f7315db, 0xbe583daf ),
	NFlagsW( 4361, 53.164818 ),
	VERT( 0x3fdf4b57, 0x406fd01a, 0xbfb49f48 ),
	NORM( 0x3e013d76, 0x3f75f061, 0xbe7d2ca0 ),
	NFlagsW( 4362, 54.792595 ),
	VERT( 0x3ffee0b0, 0x406c7c23, 0xbfb46553 ),
	NORM( 0x3e5f7092, 0x3f6aa2c4, 0xbeab99c4 ),
	NFlagsW( 4363, 57.209431 ),
	VERT( 0x40229797, 0x406fc8a3, 0xbf91f8ca ),
	NORM( 0x3e103232, 0x3f7b2267, 0xbe08b3f8 ),
	NFlagsW( 4364, 70.589943 ),
	VERT( 0x3f7fce65, 0x40652c78, 0xbe92ea57 ),
	NORM( 0x3e75b747, 0x3f247a4d, 0x3f3a4e16 ),
	NFlagsW( 4365, 51.597935 ),
	VERT( 0x3fb1c1a0, 0x40629280, 0xbee52af9 ),
	NORM( 0x3e28a583, 0x3f40e3e5, 0x3f22f278 ),
	NFlagsW( 4366, 53.305733 ),
	VERT( 0x3fe129ee, 0x405fb5e0, 0xbeb270bc ),
	NORM( 0x3ea8abc1, 0x3f13e73e, 0x3f3f2cfc ),
	NFlagsW( 4367, 57.819962 ),
	VERT( 0x3ff4e162, 0x405c6e2b, 0xbf09615e ),
	NORM( 0x3e6ffcaa, 0x3f4d82c8, 0x3f0c5cd7 ),
	NFlagsW( 4368, 58.595520 ),
	VERT( 0x405566b8, 0x4061a3e8, 0xbf823e04 ),
	NORM( 0x3eabf9f8, 0x3f70ef22, 0xbd1a1935 ),
	NFlagsW( 4369, 91.012703 ),
	VERT( 0x3feb2484, 0x40561c00, 0xbff29195 ),
	NORM( 0x3e3b6b03, 0x3f0ed541, 0xbf4f37df ),
	NFlagsW( 4370, 52.905285 ),
	VERT( 0x40064790, 0x4055a827, 0xbe660630 ),
	NORM( 0xbeb05894, 0x3f1b0ece, 0x3f37a052 ),
	NFlagsW( 4371, 64.344109 ),
	VERT( 0x3f783f90, 0x4049bd0a, 0xc004e562 ),
	NORM( 0x3eb8a3a5, 0x3ea62f41, 0xbf5fd993 ),
	NFlagsW( 4372, 50.096954 ),
	VERT( 0x3fa81b2d, 0x4045983b, 0xbff67c67 ),
	NORM( 0x3e08221d, 0x3ed43aff, 0xbf6678d1 ),
	NFlagsW( 4373, 50.396492 ),
	VERT( 0xbe98de6b, 0x40357a13, 0xc0219776 ),
	NORM( 0x3f0e62f5, 0x3c8a535f, 0xbf54b479 ),
	NFlagsW( 4374, 26.603279 ),
	VERT( 0x405d0e53, 0x404b372f, 0xbd7ac38e ),
	NORM( 0x3e820b53, 0x3f2e35f5, 0x3f2ff372 ),
	NFlagsW( 4375, 96.763672 ),
	VERT( 0x4034f9f3, 0x4045b1e8, 0xbfce23ca ),
	NORM( 0x3e80148f, 0x3eb04d81, 0xbf67a7c8 ),
	NFlagsW( 4376, 67.524643 ),
	VERT( 0x406e731a, 0x40497001, 0xbfb40d72 ),
	NORM( 0x3ec67a14, 0x3ee97fc9, 0xbf4d1427 ),
	NFlagsW( 4377, 93.690544 ),
	VERT( 0x40181e5e, 0x403d145a, 0xbfd9b16f ),
	NORM( 0x3e97af2d, 0x3ec225c4, 0xbf60696f ),
	NFlagsW( 4378, 56.667202 ),
	VERT( 0x406f5f05, 0x404305e2, 0xbfb1b11c ),
	NORM( 0x3da3480a, 0x3d18f4f8, 0xbf7f0189 ),
	NFlagsW( 4379, 93.548256 ),
	VERT( 0x403c455a, 0x403dc556, 0xbfc57953 ),
	NORM( 0x3eac6ecf, 0x3c23a453, 0xbf710815 ),
	NFlagsW( 4380, 70.098106 ),
	VERT( 0x40842bcd, 0x40450ef0, 0xbf7ebb8b ),
	NORM( 0x3f2cef68, 0x3f3b9b2a, 0xbda68a87 ),
	NFlagsW( 4381, 98.767334 ),
	VERT( 0x3e8808ed, 0x40287ea5, 0xc015d906 ),
	NORM( 0x3e7a4fc9, 0xbc3be882, 0xbf783769 ),
	NFlagsW( 4382, 49.049793 ),
	VERT( 0x3ffe3e6b, 0x402b3d56, 0xbdbbc00f ),
	NORM( 0xbf0d14f6, 0x3de7bef3, 0x3f53a49b ),
	NFlagsW( 4383, 57.631981 ),
	VERT( 0x3f5ca732, 0x402230a6, 0xc00ecda6 ),
	NORM( 0x3e8cd9b6, 0x3c0317b5, 0xbf761d31 ),
	NFlagsW( 4384, 50.000103 ),
	VERT( 0x40811da0, 0x40343e24, 0xbe384b7c ),
	NORM( 0x3f15cb43, 0x3f062fc8, 0x3f1e6757 ),
	NFlagsW( 4385, 99.196556 ),
	VERT( 0x3fddfd9e, 0x4021d7f3, 0xc00ac3b5 ),
	NORM( 0x3dbdf050, 0x3cfb8739, 0xbf7ec685 ),
	NFlagsW( 4386, 50.531612 ),
	VERT( 0x3e2acae4, 0x401772a7, 0x3e5da4a6 ),
	NORM( 0x3e66cf9e, 0xbc4eb639, 0x3f796427 ),
	NFlagsW( 4387, 50.000000 ),
	VERT( 0x4082542b, 0x402eb230, 0xbfadff5f ),
	NORM( 0x3f4efdc5, 0x3f0496e4, 0xbe8efa4f ),
	NFlagsW( 4388, 96.966759 ),
	VERT( 0x3f9b83e6, 0x401d100b, 0xc004f585 ),
	NORM( 0x3e2598a0, 0xbc0e69ed, 0xbf7c9ee3 ),
	NFlagsW( 4389, 50.020653 ),
	VERT( 0x40844c1d, 0x402e0184, 0xbfc34952 ),
	NORM( 0x3f27581c, 0x3f069ead, 0xbf0b5158 ),
	NFlagsW( 4390, 97.058571 ),
	VERT( 0x408c32cd, 0x402ee293, 0xbf850a9c ),
	NORM( 0x3f63db81, 0x3ed4fa0b, 0xbe3ee19f ),
	NFlagsW( 4391, 99.272484 ),
	VERT( 0x3f8e0d8e, 0x401a93bf, 0x3d6abd28 ),
	NORM( 0x3eb46d1f, 0xbd1bcfa8, 0x3f6f6148 ),
	NFlagsW( 4392, 50.215130 ),
	VERT( 0x3fb1653d, 0x401c2762, 0xbe44b3b8 ),
	NORM( 0x3e40082e, 0xbd59dcb9, 0x3f7b16de ),
	NFlagsW( 4393, 50.563343 ),
	VERT( 0x3fcc62b4, 0x401acde4, 0xbda20da7 ),
	NORM( 0x3c7e6766, 0xbd9dba33, 0x3f7f3570 ),
	NFlagsW( 4394, 51.719273 ),
	VERT( 0x3ef9814a, 0x4013501d, 0x3ddc0f45 ),
	NORM( 0x3e65febc, 0xbdc63817, 0x3f7839c7 ),
	NFlagsW( 4395, 50.000000 ),
	VERT( 0x40872ee9, 0x4027051d, 0xbe793aa4 ),
	NORM( 0x3f44dcf5, 0x3ea4b3cc, 0x3f0d6b29 ),
	NFlagsW( 4396, 99.465614 ),
	VERT( 0x4011dce5, 0x401b0734, 0xbffb6855 ),
	NORM( 0x3ea2534a, 0x3bfcd9bc, 0xbf72c90f ),
	NFlagsW( 4397, 52.775604 ),
	VERT( 0x3fea4628, 0x40159000, 0xbe752bd7 ),
	NORM( 0x3bde5219, 0xbe58ce41, 0x3f7a30bb ),
	NFlagsW( 4398, 52.760117 ),
	VERT( 0x4028eab1, 0x40191df1, 0xbfee0268 ),
	NORM( 0x3eda8fec, 0x3d733d19, 0xbf6700dc ),
	NFlagsW( 4399, 57.090813 ),
	VERT( 0x4031785f, 0x4017fd42, 0xbfde9aec ),
	NORM( 0x3eeb0540, 0x3cf4c0f7, 0xbf634ed0 ),
	NFlagsW( 4400, 59.950043 ),
	VERT( 0xbe5e08cf, 0x3ffbc71d, 0xc023ad6c ),
	NORM( 0x3f1cd690, 0xbd974a82, 0xbf4971fa ),
	NFlagsW( 4401, 42.174252 ),
	VERT( 0x3f67b66d, 0x400353eb, 0xc00846e4 ),
	NORM( 0x3e6b618a, 0xbeb34720, 0xbf687604 ),
	NFlagsW( 4402, 50.000000 ),
	VERT( 0x401a6589, 0x400adff8, 0xbc0cc930 ),
	NORM( 0xbea22996, 0xbe41bcb9, 0x3f6df0ed ),
	NFlagsW( 4403, 64.529190 ),
	VERT( 0x405d494d, 0x40102a8b, 0x3e6b50d8 ),
	NORM( 0x3df47ca1, 0xbc4eeaf0, 0x3f7e2618 ),
	NFlagsW( 4404, 95.325294 ),
	VERT( 0x40881f4b, 0x400f9359, 0xbfd1f5ec ),
	NORM( 0x3f472b3a, 0x3a8510e4, 0xbf20d59e ),
	NFlagsW( 4405, 96.885338 ),
	VERT( 0x40875a06, 0x400f585c, 0xbfbc36e6 ),
	NORM( 0x3f76ebea, 0xbc92c844, 0xbe86d447 ),
	NFlagsW( 4406, 97.105095 ),
	VERT( 0x408a03d1, 0x400e6b3b, 0xbe80a455 ),
	NORM( 0x3f564193, 0xbd451ba9, 0x3f0b90ca ),
	NFlagsW( 4407, 99.447128 ),
	VERT( 0x3fa5079f, 0x3ff6abaa, 0xbffcfca2 ),
	NORM( 0x3d2359af, 0xbef0cf3c, 0xbf61afca ),
	NFlagsW( 4408, 50.000977 ),
	VERT( 0x3ebe91fc, 0x3fe90b99, 0xc00904c1 ),
	NORM( 0x3e9f1688, 0xbede5bf5, 0xbf587194 ),
	NFlagsW( 4409, 50.000000 ),
	VERT( 0x408fb44e, 0x400d332f, 0xbf968a1a ),
	NORM( 0x3f74190a, 0xbbac9295, 0xbe9a4746 ),
	NFlagsW( 4410, 99.122742 ),
	VERT( 0x40166acf, 0x3fef7cb4, 0xbfdff521 ),
	NORM( 0x3e069490, 0xbecda99f, 0xbf68032c ),
	NFlagsW( 4411, 52.119576 ),
	VERT( 0x3fe6cf9b, 0x3fe2a9fb, 0xbffb4831 ),
	NORM( 0x3ddb79e5, 0xbf00b78a, 0xbf5b9471 ),
	NFlagsW( 4412, 50.128071 ),
	VERT( 0x3fc17ed0, 0x3fd25d66, 0xbf10c145 ),
	NORM( 0xbd5ec0bc, 0xbf62a116, 0x3eec7c51 ),
	NFlagsW( 4413, 50.030853 ),
	VERT( 0x3fd31a48, 0x3fd0842e, 0xbee687c4 ),
	NORM( 0xbdb197af, 0xbf2f57fb, 0x3f393259 ),
	NFlagsW( 4414, 50.167400 ),
	VERT( 0x3faa9bb3, 0x3fcc1663, 0xbec63c71 ),
	NORM( 0x3f1872e8, 0xbf0c2b24, 0x3f167e33 ),
	NFlagsW( 4415, 50.002754 ),
	VERT( 0x403aba7f, 0x3fdf5ea3, 0xbfcc7f0d ),
	NORM( 0x3e9be39f, 0x3ced52c5, 0xbf73bb97 ),
	NFlagsW( 4416, 60.486179 ),
	VERT( 0xbd9b4336, 0x3fba5ded, 0xbd664d1d ),
	NORM( 0x3e013e06, 0xbc8c4a0a, 0x3f7dea3d ),
	NFlagsW( 4417, 50.000000 ),
	VERT( 0x3eea4ebe, 0x3fc091ab, 0xbfebacb8 ),
	NORM( 0x3eace7fc, 0xbe5c6e88, 0xbf6a92f7 ),
	NFlagsW( 4418, 50.000000 ),
	VERT( 0x3f87a449, 0x3fc4c84e, 0xbfdb0b88 ),
	NORM( 0x3ea73e4d, 0xbf3e72b2, 0xbf153dc5 ),
	NFlagsW( 4419, 50.000000 ),
	VERT( 0x3fed628a, 0x3fc840f3, 0xbf1baa09 ),
	NORM( 0xbe7fd2ef, 0xbf58efcd, 0x3eefde09 ),
	NFlagsW( 4420, 50.449341 ),
	VERT( 0x4083a8b2, 0x3fe40ee0, 0xbfc8ab98 ),
	NORM( 0x3f33257d, 0xbf07dbb0, 0xbef4d3d6 ),
	NFlagsW( 4421, 94.253197 ),
	VERT( 0x4081afb4, 0x3fe2a95d, 0xbfb38e25 ),
	NORM( 0x3f42086d, 0xbf0ffe73, 0xbea9268a ),
	NFlagsW( 4422, 93.986252 ),
	VERT( 0x4032f5c7, 0x3fd2d174, 0xbfd6816e ),
	NORM( 0x3e48ad7f, 0xbeb457e6, 0xbf6a483a ),
	NFlagsW( 4423, 57.158844 ),
	VERT( 0x4081332a, 0x3fe20171, 0xbe0161a5 ),
	NORM( 0x3f3cd1e7, 0xbe8d00ff, 0x3f1dd646 ),
	NFlagsW( 4424, 98.253784 ),
	VERT( 0x3f4a36e7, 0x3fb83c4e, 0xbeb90fd7 ),
	NORM( 0x3e6f07b4, 0x3d84d0a9, 0x3f785fa4 ),
	NFlagsW( 4425, 50.000000 ),
	VERT( 0x3fb0df0d, 0x3fb4b088, 0xbfbed3ab ),
	NORM( 0xbe62fc00, 0xbf75ff34, 0xbe29c59e ),
	NFlagsW( 4426, 50.000000 ),
	VERT( 0x408b85a9, 0x3fd8d6fa, 0xbf8ade1f ),
	NORM( 0x3f59a1a9, 0xbef937f1, 0xbe4db8a1 ),
	NFlagsW( 4427, 98.213127 ),
	VERT( 0x3fd29ce5, 0x3fb3ffa8, 0xbfc3dee7 ),
	NORM( 0xbd8fcaa0, 0xbf738d77, 0xbe998efe ),
	NFlagsW( 4428, 50.007301 ),
	VERT( 0x3f31b7ca, 0x3fa4ff7c, 0xbfc1d4e4 ),
	NORM( 0x3c44fd86, 0x3f7cb7a4, 0xbe22fe87 ),
	NFlagsW( 4429, 50.000000 ),
	VERT( 0xbef07870, 0x3f94c8c5, 0xc021ed5d ),
	NORM( 0x3f235318, 0xbe5cff7a, 0xbf3d3b49 ),
	NFlagsW( 4430, 32.187027 ),
	VERT( 0x3eb92480, 0x3f9e2606, 0xbff7af21 ),
	NORM( 0x3ecd1637, 0x3e930f6d, 0xbf5ebe10 ),
	NFlagsW( 4431, 50.000000 ),
	VERT( 0x400605cc, 0x3fb12b04, 0xbfc096fb ),
	NORM( 0xbd6cd944, 0xbf65bb59, 0xbedff736 ),
	NFlagsW( 4432, 50.427883 ),
	VERT( 0x40793159, 0x3fc41cd7, 0xbd35ba8f ),
	NORM( 0x3ef733f3, 0xbf11831a, 0x3f2a8b01 ),
	NFlagsW( 4433, 97.150192 ),
	VERT( 0x406d605d, 0x3fc1b53b, 0xbfba8442 ),
	NORM( 0x3db20bb3, 0xbcfd540b, 0xbf7ee86c ),
	NFlagsW( 4434, 84.626579 ),
	VERT( 0x4015c9ef, 0x3fb0bc6a, 0xbe798c16 ),
	NORM( 0xbec1c743, 0xbf2f83e0, 0x3f1f31d4 ),
	NFlagsW( 4435, 55.804741 ),
	VERT( 0x3fbc506a, 0x3fa0060c, 0xbf8da5ee ),
	NORM( 0x3e4324c1, 0x3f6fa18f, 0xbe976e74 ),
	NFlagsW( 4436, 50.000008 ),
	VERT( 0x3f89a9c0, 0x3f97bd39, 0xbf1a2ee7 ),
	NORM( 0xbc892707, 0x3f6ad6be, 0x3ecba66f ),
	NFlagsW( 4437, 50.000000 ),
	VERT( 0x406c0d0a, 0x3fb555ab, 0xbfbe0706 ),
	NORM( 0x3e9729c3, 0xbee06010, 0xbf595774 ),
	NFlagsW( 4438, 83.343201 ),
	VERT( 0x400ff64a, 0x3fa1bbd4, 0xbf2bd6f9 ),
	NORM( 0x3e195562, 0x3f7a66a4, 0xbe13d52d ),
	NFlagsW( 4439, 52.190434 ),
	VERT( 0x3fede358, 0x3f9b3c7d, 0xbf80cc90 ),
	NORM( 0x3e3094f6, 0x3f6c66a5, 0xbeaf84f0 ),
	NFlagsW( 4440, 50.095463 ),
	VERT( 0x3f130162, 0x3f8abcf4, 0xbff1f80a ),
	NORM( 0x3f022e16, 0x3f0244ec, 0xbf31d14f ),
	NFlagsW( 4441, 50.000000 ),
	VERT( 0x4059ddde, 0x3fac0cc3, 0xbe131456 ),
	NORM( 0x3d6c9615, 0xbf49fe12, 0x3f1c93c0 ),
	NFlagsW( 4442, 87.849297 ),
	VERT( 0x408306c5, 0x3fb1bb9c, 0xbf88ff5d ),
	NORM( 0x3f1b76ea, 0xbf471ca2, 0xbe25f3a0 ),
	NFlagsW( 4443, 95.275421 ),
	VERT( 0x3faea952, 0x3f8d0e99, 0xbef522dc ),
	NORM( 0xbce7e5f1, 0x3f30351f, 0x3f3990aa ),
	NFlagsW( 4444, 50.000000 ),
	VERT( 0x3e777405, 0x3f776765, 0x3ea5a8f4 ),
	NORM( 0xbee39079, 0x3d92afa8, 0x3f649711 ),
	NFlagsW( 4445, 50.000000 ),
	VERT( 0x4023e7ac, 0x3f97d852, 0xbf06b002 ),
	NORM( 0x3eb5819e, 0x3f6e9741, 0xbd9ac520 ),
	NFlagsW( 4446, 57.375443 ),
	VERT( 0x3f63ed3e, 0x3f81a224, 0xbe4c4cd6 ),
	NORM( 0x3f14ea96, 0x3eedcab9, 0x3f2af30a ),
	NFlagsW( 4447, 50.000000 ),
	VERT( 0x40244c57, 0x3f93c754, 0xbf9fe195 ),
	NORM( 0xbe1d9f92, 0xbf729e23, 0xbe8f1b14 ),
	NFlagsW( 4448, 53.726940 ),
	VERT( 0x3fd2d11a, 0x3f87abcb, 0xbef463a6 ),
	NORM( 0xbe3a15ce, 0x3f4568f5, 0x3f1c3559 ),
	NFlagsW( 4449, 50.018234 ),
	VERT( 0x3d70e529, 0x3f59d14d, 0xc013963a ),
	NORM( 0x3d6c4511, 0x3ef89616, 0xbf5f5067 ),
	NFlagsW( 4450, 49.975876 ),
	VERT( 0x3fb1b298, 0x3f716c9f, 0xbfb0097e ),
	NORM( 0x3eb7c5a6, 0x3f1172c7, 0xbf3d9293 ),
	NFlagsW( 4451, 50.000000 ),
	VERT( 0x4008cc27, 0x3f7ab7ba, 0x3ddbe8be ),
	NORM( 0xbeafe239, 0x3f2bd81c, 0x3f28246c ),
	NFlagsW( 4452, 53.417198 ),
	VERT( 0x4051cfa3, 0x3f8ab889, 0xbf904961 ),
	NORM( 0x3dac1aea, 0xbf79ec07, 0xbe4c701c ),
	NFlagsW( 4453, 71.857056 ),
	VERT( 0x401d6a82, 0x3f723e98, 0x3e34e730 ),
	NORM( 0x3dda90b6, 0x3f316eaa, 0x3f3680ca ),
	NFlagsW( 4454, 60.251839 ),
	VERT( 0x401dab58, 0x3f64dc17, 0xbf6b8f4e ),
	NORM( 0x3f1680a5, 0x3ed30b09, 0xbf322f95 ),
	NFlagsW( 4455, 53.021538 ),
	VERT( 0x4033be83, 0x3f6917af, 0xbf2ed69c ),
	NORM( 0x3f126a10, 0x3eb86891, 0xbf3cac1e ),
	NFlagsW( 4456, 61.062847 ),
	VERT( 0x40435355, 0x3f6f0345, 0xbebe663b ),
	NORM( 0x3f32daf7, 0x3f367ef9, 0xbd78e4ee ),
	NFlagsW( 4457, 72.125740 ),
	VERT( 0x400b0a74, 0x3f5354d5, 0xbf9d141c ),
	NORM( 0x3ef6d837, 0x3ec44696, 0xbf49ac3d ),
	NFlagsW( 4458, 50.453300 ),
	VERT( 0x40348691, 0x3f5c671e, 0xbf2a4ce3 ),
	NORM( 0x3ea66d2f, 0xbc000700, 0xbf72170c ),
	NFlagsW( 4459, 61.387665 ),
	VERT( 0x3b687f9f, 0x3f140d2f, 0xc01413aa ),
	NORM( 0x3e8c8d76, 0x3d647997, 0xbf75c027 ),
	NFlagsW( 4460, 49.959011 ),
	VERT( 0x40249fef, 0x3f5051e4, 0xbf50a2c4 ),
	NORM( 0x3f16336a, 0x3c0ac100, 0xbf4f4b67 ),
	NFlagsW( 4461, 54.831089 ),
	VERT( 0x3f04efde, 0x3f189695, 0xc008c5f5 ),
	NORM( 0x3ef37c0c, 0x3dc92899, 0xbf5fca96 ),
	NFlagsW( 4462, 50.000000 ),
	VERT( 0x3efcda33, 0x3f08db07, 0x3eae4395 ),
	NORM( 0x3e4d04ea, 0x3d72bca0, 0x3f7a5b7c ),
	NFlagsW( 4463, 50.000000 ),
	VERT( 0x3fa5f6df, 0x3f1612b1, 0xbec68fcb ),
	NORM( 0xbde02657, 0xbe1a45b5, 0x3f7b85b7 ),
	NFlagsW( 4464, 50.000000 ),
	VERT( 0x3f949cf4, 0x3f11d697, 0x3bef5830 ),
	NORM( 0x3f36de4b, 0x3e0570cf, 0x3f300493 ),
	NFlagsW( 4465, 50.000000 ),
	VERT( 0x403b8080, 0x3f3c0460, 0x3e36e49e ),
	NORM( 0x3eee770f, 0x3f0b9ff2, 0x3f3264f3 ),
	NFlagsW( 4466, 74.238297 ),
	VERT( 0x3fad1a46, 0x3f10f56f, 0xbfd4bf17 ),
	NORM( 0x3eefc97b, 0x3da83a9f, 0xbf6135a9 ),
	NFlagsW( 4467, 50.000000 ),
	VERT( 0xbf38f5b7, 0x3eb72a0f, 0xc0202d4f ),
	NORM( 0x3f08f481, 0xbc678002, 0xbf584149 ),
	NFlagsW( 4468, 10.636987 ),
	VERT( 0x3fac4d50, 0x3f04a96c, 0xbe913309 ),
	NORM( 0xbef12c77, 0xbddb0256, 0x3f6027a1 ),
	NFlagsW( 4469, 50.000000 ),
	VERT( 0x404380d9, 0x3f246e72, 0xbf13b830 ),
	NORM( 0x3f5bee29, 0x3ef6c73e, 0xbe30434b ),
	NFlagsW( 4470, 68.790565 ),
	VERT( 0x404daa28, 0x3f271198, 0xbeb6268c ),
	NORM( 0x3f6bdbd0, 0x3ebfbf4e, 0xbdd5e8bb ),
	NFlagsW( 4471, 76.934372 ),
	VERT( 0x4047837d, 0x3f213eb0, 0xbf2be81b ),
	NORM( 0x3f5d6605, 0x3ee6d902, 0xbe62226c ),
	NFlagsW( 4472, 69.809395 ),
	VERT( 0x3fcfaf84, 0x3ef1514e, 0xbe9eee8c ),
	NORM( 0xbee24698, 0xbd963e20, 0x3f64dfa7 ),
	NFlagsW( 4473, 50.001431 ),
	VERT( 0x3da5d7ef, 0x3e908649, 0xc015d8ba ),
	NORM( 0x3ea0e533, 0x3c10ef8c, 0xbf73054e ),
	NFlagsW( 4474, 49.997047 ),
	VERT( 0x404373fd, 0x3f10906b, 0x3e2e7f61 ),
	NORM( 0x3f30189b, 0x3e59e989, 0x3f31a588 ),
	NFlagsW( 4475, 77.835175 ),
	VERT( 0x4007301b, 0x3ee2cb08, 0xbfa102ae ),
	NORM( 0x3edef4f5, 0x3d23442b, 0xbf663a1b ),
	NFlagsW( 4476, 50.198685 ),
	VERT( 0x40025e4d, 0x3ecc1aa0, 0x3e9e86b4 ),
	NORM( 0xbf04116e, 0xbce7b45c, 0x3f5b2f18 ),
	NFlagsW( 4477, 52.010918 ),
	VERT( 0x40158d95, 0x3ecebcd4, 0xbf952af8 ),
	NORM( 0x3f1fee49, 0x3d09110e, 0xbf47b634 ),
	NFlagsW( 4478, 50.997307 ),
	VERT( 0x401cd0a8, 0x3ec3c428, 0xbf8329c1 ),
	NORM( 0x3f251572, 0x3cf5da8e, 0xbf4382ae ),
	NFlagsW( 4479, 52.049805 ),
	VERT( 0x3f35cbee, 0x3e2c4b7a, 0xbff8a393 ),
	NORM( 0x3f18338d, 0xbd284362, 0xbf4d92a2 ),
	NFlagsW( 4480, 50.000000 ),
	VERT( 0x40226192, 0x3ea531d9, 0x3eb9b416 ),
	NORM( 0x3d717bee, 0xbd67f920, 0x3f7f24a6 ),
	NFlagsW( 4481, 62.308205 ),
	VERT( 0x3f11a49f, 0x3daf7a0e, 0x3e815b35 ),
	NORM( 0x3ec9c0bd, 0xbcf0bc6e, 0x3f6b2aac ),
	NFlagsW( 4482, 50.000000 ),
	VERT( 0x3fb215fc, 0x3e0b76a6, 0xbfb6aa87 ),
	NORM( 0x3eb1a5ef, 0xbf0065eb, 0xbf4ae13c ),
	NFlagsW( 4483, 50.000000 ),
	VERT( 0xbf466e04, 0xbda1dc35, 0xc0273463 ),
	NORM( 0x3f02d8e9, 0x3de5fffd, 0xbf5a25d3 ),
	NFlagsW( 4484, 6.116541 ),
	VERT( 0x404777b6, 0x3e8c89ec, 0xbf22ad16 ),
	NORM( 0x3f7d7cff, 0xbce1f186, 0xbe0c46f6 ),
	NFlagsW( 4485, 69.505157 ),
	VERT( 0x4049dbb3, 0x3e8bc348, 0xbf3e77f0 ),
	NORM( 0x3f65f45c, 0xbca17e92, 0xbee0c790 ),
	NFlagsW( 4486, 69.579575 ),
	VERT( 0x40472615, 0x3e80b03f, 0x3dc4ac63 ),
	NORM( 0x3f46c50a, 0xbd1f75cc, 0x3f210502 ),
	NFlagsW( 4487, 78.188011 ),
	VERT( 0x4053c861, 0x3e74443a, 0xbed063dc ),
	NORM( 0x3f7bb5b8, 0xbcf9fe64, 0xbe380cb2 ),
	NFlagsW( 4488, 78.808685 ),
	VERT( 0x3f9cb963, 0x3bc7f165, 0xbe88cb83 ),
	NORM( 0x3f6340ab, 0xbe90271b, 0x3eba84a9 ),
	NFlagsW( 4489, 50.000000 ),
	VERT( 0x3f9f7f23, 0xbc958877, 0xbf271440 ),
	NORM( 0xbdbdcba7, 0xbf7496dd, 0x3e8f841a ),
	NFlagsW( 4490, 50.000000 ),
	VERT( 0x3f3ee30d, 0xbdc379ad, 0xbffdc1b9 ),
	NORM( 0x3f2b0a27, 0xbe29c6e9, 0xbf39b011 ),
	NFlagsW( 4491, 50.000000 ),
	VERT( 0x400b8599, 0x3d1e7fe6, 0xbfa10af2 ),
	NORM( 0x3ecfadfd, 0xbea7908c, 0xbf5a7b11 ),
	NFlagsW( 4492, 50.294048 ),
	VERT( 0x3f87e9ab, 0xbd9c53df, 0xbfc4820c ),
	NORM( 0x3e99cd80, 0xbf5f7a12, 0xbec4c6de ),
	NFlagsW( 4493, 50.000000 ),
	VERT( 0x3fb5e6ab, 0xbd83db9f, 0xbf0917b5 ),
	NORM( 0xbea9d731, 0xbf37ab52, 0x3f1cd001 ),
	NFlagsW( 4494, 50.000000 ),
	VERT( 0x3f6e7775, 0xbe08c0b7, 0xbfe2cc14 ),
	NORM( 0x3f5146d6, 0x3e9663f7, 0xbefda726 ),
	NFlagsW( 4495, 50.000000 ),
	VERT( 0x3f89d620, 0xbe277d81, 0xbfb5e677 ),
	NORM( 0x3efa164b, 0x3f51d8b3, 0xbe99292f ),
	NFlagsW( 4496, 50.000000 ),
	VERT( 0x3fddc4a8, 0xbdf1f899, 0xbf0794c2 ),
	NORM( 0xbed910e9, 0xbf4d64eb, 0x3ed72041 ),
	NFlagsW( 4497, 50.003807 ),
	VERT( 0x3fba0f84, 0xbe197409, 0xbf95dd3b ),
	NORM( 0xbda9ff54, 0xbf7276a9, 0xbe9eb175 ),
	NFlagsW( 4498, 50.000000 ),
	VERT( 0x3fa124fd, 0xbe421c0e, 0xbf97a047 ),
	NORM( 0x3ea1c27e, 0x3f6d0186, 0xbe54836c ),
	NFlagsW( 4499, 50.000000 ),
	VERT( 0x402439c6, 0xbdc5ff54, 0xbf5c52a1 ),
	NORM( 0x3f172431, 0x3c7cb426, 0xbf4e955c ),
	NFlagsW( 4500, 53.779610 ),
	VERT( 0x40430ccf, 0xbd5065c0, 0x3e1845f2 ),
	NORM( 0x3f2a03f4, 0xbe9547f6, 0x3f303cb9 ),
	NFlagsW( 4501, 76.475563 ),
	VERT( 0x3efcd9a5, 0xbe9a3a29, 0x3ea65391 ),
	NORM( 0x3eba1615, 0xbcb5af17, 0x3f6e6cf4 ),
	NFlagsW( 4502, 50.000000 ),
	VERT( 0x3e46718d, 0xbeb131b3, 0xc00f8bde ),
	NORM( 0x3ee6218c, 0xbe3e42d7, 0xbf5fae82 ),
	NFlagsW( 4503, 50.000000 ),
	VERT( 0x40430eda, 0xbda12990, 0xbf1c1307 ),
	NORM( 0x3f56df52, 0xbef9cdf4, 0xbe7572c7 ),
	NFlagsW( 4504, 67.328712 ),
	VERT( 0x401d2653, 0xbe0d4d8b, 0xbf78db22 ),
	NORM( 0x3f059276, 0xbec44686, 0xbf431941 ),
	NFlagsW( 4505, 52.124966 ),
	VERT( 0x40470ed2, 0xbd9fe997, 0xbf347b73 ),
	NORM( 0x3f52332a, 0xbf034505, 0xbe80611c ),
	NFlagsW( 4506, 68.382248 ),
	VERT( 0x3fe2e279, 0xbe561300, 0xbf214dab ),
	NORM( 0x3e1b7ef5, 0x3f7af735, 0xbe010f83 ),
	NFlagsW( 4507, 50.006981 ),
	VERT( 0x3f8a216b, 0xbe966bd3, 0xbf146277 ),
	NORM( 0x3f7f59d8, 0x3cf7edcf, 0x3d83e8d9 ),
	NFlagsW( 4508, 50.000000 ),
	VERT( 0x4008e93c, 0xbe445866, 0x3d6320a7 ),
	NORM( 0xbefa1209, 0xbf27082e, 0x3f14551d ),
	NFlagsW( 4509, 51.983894 ),
	VERT( 0x3fba2e5d, 0xbe875d5d, 0xbf802bfc ),
	NORM( 0x3ea4a3cf, 0x3f6e953b, 0xbe2b7817 ),
	NFlagsW( 4510, 50.000000 ),
	VERT( 0x3f501454, 0xbea9130b, 0xbfe32b7a ),
	NORM( 0x3f27c075, 0xbe21330c, 0xbf3d220a ),
	NFlagsW( 4511, 50.000000 ),
	VERT( 0x3f894f31, 0xbea9745b, 0xbe455152 ),
	NORM( 0x3f5bc383, 0xbeb1d92c, 0x3ec13576 ),
	NFlagsW( 4512, 50.000000 ),
	VERT( 0xbf53e679, 0xbf040b78, 0xc02e3b56 ),
	NORM( 0x3eef3c99, 0xbd9c85e6, 0xbf617cd5 ),
	NFlagsW( 4513, 2.839545 ),
	VERT( 0x404d2b61, 0xbe1b327a, 0xbec4f32f ),
	NORM( 0x3f67102e, 0xbed2bc0b, 0xbe01372b ),
	NFlagsW( 4514, 75.415070 ),
	VERT( 0x403ac30a, 0xbe3f4617, 0x3e1597ac ),
	NORM( 0x3ea4697a, 0xbf26dc8a, 0x3f2fe27b ),
	NFlagsW( 4515, 71.974068 ),
	VERT( 0x4002bc81, 0xbe8e8239, 0xbefc8189 ),
	NORM( 0x3ebc370e, 0x3f6d6669, 0xbd8f53fb ),
	NFlagsW( 4516, 50.380295 ),
	VERT( 0x3ff85cd5, 0xbe94ca7e, 0xbf890e7b ),
	NORM( 0xbda609be, 0xbf62432b, 0xbeebe2e2 ),
	NFlagsW( 4517, 50.038506 ),
	VERT( 0x401c742a, 0xbe8311db, 0x3e02ea89 ),
	NORM( 0xbdfe8778, 0xbf3a8c3c, 0x3f2c67d1 ),
	NFlagsW( 4518, 57.468784 ),
	VERT( 0x4033d67f, 0xbe656625, 0xbf36cd24 ),
	NORM( 0x3ec226e9, 0xbc936778, 0xbf6cd5e4 ),
	NFlagsW( 4519, 59.467972 ),
	VERT( 0x3f87f8e5, 0xbed60d5d, 0xbee8902c ),
	NORM( 0xbf0c42dd, 0x3f2324e1, 0x3f0abba0 ),
	NFlagsW( 4520, 50.000000 ),
	VERT( 0x3f9ce89c, 0xbecea1a1, 0xbee68392 ),
	NORM( 0xbe95e1f7, 0x3f5130a2, 0x3efe3d26 ),
	NFlagsW( 4521, 50.000000 ),
	VERT( 0x4032f859, 0xbe95df0b, 0xbf3ca656 ),
	NORM( 0x3eeab2dd, 0xbed6a684, 0xbf489d7b ),
	NFlagsW( 4522, 59.022148 ),
	VERT( 0x3f93f223, 0xbef86dfe, 0xbfb5841c ),
	NORM( 0x3f26fc77, 0x3e777c88, 0xbf37e969 ),
	NFlagsW( 4523, 50.000000 ),
	VERT( 0x3fd48851, 0xbef333b9, 0x3dd31f38 ),
	NORM( 0xbea7e47d, 0x3f2fc795, 0x3f261aa4 ),
	NFlagsW( 4524, 50.046085 ),
	VERT( 0xbd8d9ce2, 0xbf2a2b15, 0xc00fcb01 ),
	NORM( 0x3eef8dd3, 0xbe68fc9b, 0xbf5a9ff5 ),
	NFlagsW( 4525, 49.885120 ),
	VERT( 0x404258db, 0xbec5efa6, 0xbed63e8b ),
	NORM( 0x3f10424e, 0xbf51f17e, 0xbdcbd303 ),
	NFlagsW( 4526, 69.412117 ),
	VERT( 0x40107c7b, 0xbeed2145, 0xbf3eef25 ),
	NORM( 0xbe0772dd, 0xbf75d096, 0xbe7bdad3 ),
	NFlagsW( 4527, 51.137077 ),
	VERT( 0x3ffa17c4, 0xbf016997, 0x3e2d6f06 ),
	NORM( 0x3de729c8, 0x3f31aa56, 0x3f36087e ),
	NFlagsW( 4528, 51.013069 ),
	VERT( 0x40229fee, 0xbef7a190, 0xbf17cc0f ),
	NORM( 0x3db26d4d, 0xbf7b6444, 0xbe2b9e05 ),
	NFlagsW( 4529, 54.877895 ),
	VERT( 0x3ffaf79f, 0xbf0e8fb5, 0xbf5d366b ),
	NORM( 0x3f230a86, 0x3ec9c6b0, 0xbf29a1f0 ),
	NFlagsW( 4530, 50.100677 ),
	VERT( 0x401e0b4f, 0xbf02f264, 0xbeb207dc ),
	NORM( 0x3f36eed6, 0x3f32985e, 0xbd53d7ef ),
	NFlagsW( 4531, 55.023827 ),
	VERT( 0x40108daf, 0xbf09597b, 0xbf241727 ),
	NORM( 0x3f198b8b, 0x3eb75274, 0xbf37305b ),
	NFlagsW( 4532, 51.384182 ),
	VERT( 0x3eabbe10, 0xbf3aad91, 0xc000e66a ),
	NORM( 0x3eeea67c, 0xbe9a63df, 0xbf54eda2 ),
	NFlagsW( 4533, 50.000000 ),
	VERT( 0x3fdb270d, 0xbf20a3d6, 0xbf969466 ),
	NORM( 0x3f12007a, 0x3e906f41, 0xbf457ea1 ),
	NFlagsW( 4534, 50.000538 ),
	VERT( 0x40113cbd, 0xbf155e9d, 0xbf1fe067 ),
	NORM( 0x3eb63420, 0xbbf3361b, 0xbf6f3be3 ),
	NFlagsW( 4535, 51.538010 ),
	VERT( 0x3e9bd53a, 0xbf48efc0, 0x3ea5f62b ),
	NORM( 0x3ea4d437, 0xbe1a2240, 0x3f6f49e4 ),
	NFlagsW( 4536, 50.000000 ),
	VERT( 0x40037130, 0xbf218567, 0xbf441407 ),
	NORM( 0x3f1e409f, 0x3c3634a6, 0xbf4934e3 ),
	NFlagsW( 4537, 50.315857 ),
	VERT( 0x3f3a3633, 0xbf594a80, 0x3b0c8215 ),
	NORM( 0x3f426454, 0xbec61a8d, 0x3f05ed65 ),
	NFlagsW( 4538, 50.000000 ),
	VERT( 0x3f48db22, 0xbf59fdbd, 0xbeba9599 ),
	NORM( 0x3eed692c, 0xbebe6c7c, 0x3f4ddd07 ),
	NFlagsW( 4539, 50.000000 ),
	VERT( 0x4017356b, 0xbf333b9e, 0x3e2f9801 ),
	NORM( 0x3ef8a96f, 0x3f0980ee, 0x3f308d4c ),
	NFlagsW( 4540, 56.970901 ),
	VERT( 0x3f82ef33, 0xbf652fe3, 0xbfd7971c ),
	NORM( 0x3eeb9741, 0xbe7ef639, 0xbf5a2b17 ),
	NFlagsW( 4541, 50.000000 ),
	VERT( 0x3f772f14, 0xbf6a5eea, 0xbe8655cd ),
	NORM( 0xbe426df1, 0x3bbfe729, 0x3f7b56b0 ),
	NFlagsW( 4542, 50.000000 ),
	VERT( 0x401e3a19, 0xbf495a3b, 0xbf0a6481 ),
	NORM( 0x3f604923, 0x3ee792eb, 0xbe2ae516 ),
	NFlagsW( 4543, 54.519798 ),
	VERT( 0x402709bd, 0xbf4675d0, 0xbeaa413b ),
	NORM( 0x3f6e21c3, 0x3eb4ae30, 0xbdcebe6c ),
	NFlagsW( 4544, 58.618198 ),
	VERT( 0xbd2f0ff9, 0xbf83ef95, 0xc01165a6 ),
	NORM( 0x3f061707, 0xbe6cfb37, 0xbf51df03 ),
	NFlagsW( 4545, 49.801682 ),
	VERT( 0x4021abf4, 0xbf4c1429, 0xbf2146b9 ),
	NORM( 0x3f5e5791, 0x3ee0bb01, 0xbe6bc3d3 ),
	NFlagsW( 4546, 54.964352 ),
	VERT( 0x3f8c8252, 0xbf70e626, 0xbe92a9c8 ),
	NORM( 0xbebc5a4f, 0x3c00ac5f, 0x3f6e0a1b ),
	NFlagsW( 4547, 50.000000 ),
	VERT( 0x401e2e17, 0xbf5c0a90, 0x3e273c1f ),
	NORM( 0x3f34c29e, 0x3e4fcf86, 0x3f2dac8f ),
	NFlagsW( 4548, 60.053806 ),
	VERT( 0x3fd42250, 0xbf7d2d53, 0xbf973e87 ),
	NORM( 0x3efde01e, 0x3d2743f1, 0xbf5e1108 ),
	NFlagsW( 4549, 50.001019 ),
	VERT( 0x3fc6f5ef, 0xbf828af0, 0x3e97768b ),
	NORM( 0xbef1ba38, 0xbc1c9b4e, 0x3f61a8b6 ),
	NFlagsW( 4550, 50.156902 ),
	VERT( 0x3feccfb4, 0xbf8285ba, 0xbf8c2136 ),
	NORM( 0x3f27ac12, 0x3c4a9f37, 0xbf416c05 ),
	NFlagsW( 4551, 50.044857 ),
	VERT( 0xbf82ed4f, 0xbfa9071b, 0xc0218d7c ),
	NORM( 0x3ee31fc9, 0xbe97e113, 0xbf58805a ),
	NFlagsW( 4552, 0.193301 ),
	VERT( 0x3ff945ef, 0xbf84d48e, 0xbf76979e ),
	NORM( 0x3f2bd645, 0x3ce763be, 0xbf3d9ebe ),
	NFlagsW( 4553, 50.160389 ),
	VERT( 0x3ea95b91, 0xbf99be7a, 0xbfe81386 ),
	NORM( 0x3f023549, 0xbef4a626, 0xbf375a8a ),
	NFlagsW( 4554, 50.000000 ),
	VERT( 0x3e04a9b1, 0xbfa21260, 0x3e81821a ),
	NORM( 0x3ef218d6, 0xbeac5559, 0x3f50779a ),
	NFlagsW( 4555, 50.000000 ),
	VERT( 0x40015f72, 0xbf8be644, 0x3eb0a279 ),
	NORM( 0x3d948e34, 0xbd6b41fc, 0x3f7ee6e6 ),
	NFlagsW( 4556, 53.546883 ),
	VERT( 0x3f8298a2, 0xbf9d51b2, 0xbfb04b13 ),
	NORM( 0x3e5efb5e, 0xbf1db316, 0xbf41cd5f ),
	NFlagsW( 4557, 50.000000 ),
	VERT( 0x4021a339, 0xbf90db58, 0xbf1871b4 ),
	NORM( 0x3f7d8c01, 0xbcd71d60, 0xbe0ad73e ),
	NFlagsW( 4558, 56.021553 ),
	VERT( 0x4023ab58, 0xbf90f866, 0xbf32d36d ),
	NORM( 0x3f65a5c1, 0xbc8d3443, 0xbee215b6 ),
	NFlagsW( 4559, 55.989872 ),
	VERT( 0x3ee47f1b, 0xbfad070e, 0xbe810541 ),
	NORM( 0x3f2fd3b2, 0xbf2eac99, 0x3e803732 ),
	NFlagsW( 4560, 50.000000 ),
	VERT( 0x40215ef6, 0xbf93a782, 0x3dbed33b ),
	NORM( 0x3f4b0cb3, 0xbd1a973d, 0x3f1b9b61 ),
	NFlagsW( 4561, 61.995285 ),
	VERT( 0x402c4d99, 0xbf94e633, 0xbec2ddf2 ),
	NORM( 0x3f7bfd9a, 0xbce7728c, 0xbe322ff1 ),
	NFlagsW( 4562, 61.707664 ),
	VERT( 0x3f0d4993, 0xbfafc61d, 0xbf22038a ),
	NORM( 0x3d0ead48, 0xbf75cfe4, 0x3e8de2c9 ),
	NFlagsW( 4563, 50.000000 ),
	VERT( 0x3d91398a, 0xbfb63f3e, 0xbfe3ea56 ),
	NORM( 0x3ed4410f, 0xbf4b6c00, 0xbee3174d ),
	NFlagsW( 4564, 49.999065 ),
	VERT( 0x3d4486ba, 0xbfb7f830, 0xbfe3c791 ),
	NORM( 0x3f2f9da7, 0xbeb2f00e, 0xbf235f3c ),
	NFlagsW( 4565, 49.996628 ),
	VERT( 0x3ee1377a, 0xbfb867af, 0xbfbfc641 ),
	NORM( 0x3e1084d9, 0xbf708b68, 0xbe9f9c86 ),
	NFlagsW( 4566, 50.000000 ),
	VERT( 0x3f6026b7, 0xbfb3b3ef, 0xbeff54b6 ),
	NORM( 0xbeabcaef, 0xbf338931, 0x3f2102ec ),
	NFlagsW( 4567, 50.000000 ),
	VERT( 0x3e749733, 0xbfbbc8aa, 0xbfb8b27a ),
	NORM( 0x3ed20881, 0x3f6391c6, 0xbe5099f9 ),
	NFlagsW( 4568, 50.000000 ),
	VERT( 0x3fd9af95, 0xbfaebc93, 0xbf974b85 ),
	NORM( 0x3edff767, 0xbebc0bd8, 0xbf5221c6 ),
	NFlagsW( 4569, 50.019161 ),
	VERT( 0x3f8960aa, 0xbfbd5867, 0xbefbafa9 ),
	NORM( 0xbedf6ab1, 0xbf490e73, 0x3ee0cc4f ),
	NFlagsW( 4570, 50.000000 ),
	VERT( 0x3efd77f0, 0xbfc64b1f, 0xbf971ae1 ),
	NORM( 0x3eacb575, 0x3f6d054c, 0xbe2e5c55 ),
	NFlagsW( 4571, 50.000000 ),
	VERT( 0x3e537956, 0xbfcc24a9, 0xbf176337 ),
	NORM( 0x3efe3c48, 0x3f4e7b91, 0x3ea4381d ),
	NFlagsW( 4572, 50.000000 ),
	VERT( 0x3f7fac03, 0xbfc4546e, 0xbf93e894 ),
	NORM( 0xbd77ccea, 0xbf6d152f, 0xbebea937 ),
	NFlagsW( 4573, 50.000000 ),
	VERT( 0x3f88bdcd, 0xbfc49448, 0xbf228bb9 ),
	NORM( 0x3e2c3181, 0x3f7a0669, 0xbe08d6a8 ),
	NFlagsW( 4574, 50.000000 ),
	VERT( 0xbd8f3ad4, 0xbfd36084, 0x3e9ace1c ),
	NORM( 0x3f0f5ba6, 0xbe43c2f6, 0x3f4e5f31 ),
	NFlagsW( 4575, 50.000000 ),
	VERT( 0x3e0b6183, 0xbfd15526, 0xbe4ec677 ),
	NORM( 0x3f5c0233, 0xbee6dac9, 0x3e76dc49 ),
	NFlagsW( 4576, 50.000000 ),
	VERT( 0x3daf2d1c, 0xbfd2b364, 0xbfe393bf ),
	NORM( 0x3f30b335, 0x3e25b41d, 0xbf348be2 ),
	NFlagsW( 4577, 49.992798 ),
	VERT( 0x3f3aa602, 0xbfcb346e, 0xbf80e286 ),
	NORM( 0x3e7ff665, 0x3f705fcd, 0xbe7209ef ),
	NFlagsW( 4578, 50.000000 ),
	VERT( 0x401dca76, 0xbfb8203c, 0x3e1256a9 ),
	NORM( 0x3f2f1615, 0xbe8f4490, 0x3f2c7aeb ),
	NFlagsW( 4579, 62.659019 ),
	VERT( 0x400309ae, 0xbfbe4c98, 0xbf4f0e62 ),
	NORM( 0x3f1eb9b9, 0x3c0985fa, 0xbf48d7a0 ),
	NFlagsW( 4580, 50.873638 ),
	VERT( 0x401dcbd9, 0xbfbb73fd, 0xbf123f5a ),
	NORM( 0x3f5c1601, 0xbee99c95, 0xbe6b1a36 ),
	NFlagsW( 4581, 56.237995 ),
	VERT( 0x40213b00, 0xbfbb4d14, 0xbf295c0f ),
	NORM( 0x3f53bd2c, 0xbefecbf1, 0xbe85c015 ),
	NFlagsW( 4582, 56.661682 ),
	VERT( 0xbecb433c, 0xbfdfda60, 0xc00c45c5 ),
	NORM( 0x3efe560e, 0xbcd35536, 0xbf5e1526 ),
	NFlagsW( 4583, 38.020962 ),
	VERT( 0x3ff9b491, 0xbfc39780, 0xbf69fab3 ),
	NORM( 0x3f09bbb3, 0xbec648a0, 0xbf3faae9 ),
	NFlagsW( 4584, 50.451672 ),
	VERT( 0x3fa85f88, 0xbfcd0530, 0xbefed6a2 ),
	NORM( 0x3ec3aaf0, 0x3f6c0307, 0xbd81b931 ),
	NFlagsW( 4585, 50.000816 ),
	VERT( 0x3fd2f7b5, 0xbfca0a4a, 0x3d6852a9 ),
	NORM( 0xbedb498e, 0xbf2c797f, 0x3f1a2a31 ),
	NFlagsW( 4586, 50.597847 ),
	VERT( 0x3f017e69, 0xbfdd2689, 0xbee8abfc ),
	NORM( 0xbea4d543, 0x3f5229ea, 0x3ef173a0 ),
	NFlagsW( 4587, 50.000000 ),
	VERT( 0x40268f43, 0xbfc3f815, 0xbeb823e2 ),
	NORM( 0x3f69ff4a, 0xbec616ae, 0xbdf95afc ),
	NFlagsW( 4588, 61.361919 ),
	VERT( 0x3ec469cd, 0xbfdfd4ed, 0xbeec776c ),
	NORM( 0xbda9a2ce, 0x3f339d71, 0x3f352d1d ),
	NFlagsW( 4589, 50.000000 ),
	VERT( 0x3fb155ee, 0xbfd48daa, 0xbf809fb3 ),
	NORM( 0xbdcf1f76, 0xbf68d98e, 0xbece5d7b ),
	NFlagsW( 4590, 50.000633 ),
	VERT( 0x40167ced, 0xbfc8cde8, 0x3e1052f7 ),
	NORM( 0x3eb19733, 0xbf2518bb, 0x3f2e5718 ),
	NFlagsW( 4591, 60.433422 ),
	VERT( 0x40109002, 0xbfcd4d31, 0xbf2ba727 ),
	NORM( 0x3ed289a9, 0xbca09f67, 0xbf694d06 ),
	NFlagsW( 4592, 53.117813 ),
	VERT( 0x3ff83371, 0xbfd1e3ac, 0x3dfcb4a0 ),
	NORM( 0xbde7b005, 0xbf3b6892, 0x3f2bf98d ),
	NFlagsW( 4593, 53.105812 ),
	VERT( 0x3ee9f7bd, 0xbfeaa010, 0xbfbdecf2 ),
	NORM( 0x3f20ed30, 0x3eae5786, 0xbf32ff37 ),
	NFlagsW( 4594, 50.000000 ),
	VERT( 0x400fc996, 0xbfd5ab4e, 0xbf311d61 ),
	NORM( 0x3efa8857, 0xbed65632, 0xbf43daf7 ),
	NFlagsW( 4595, 53.089451 ),
	VERT( 0x3f771e48, 0xbfe6cbd4, 0x3dc920e7 ),
	NORM( 0xbea2812b, 0x3f30589a, 0x3f26d775 ),
	NFlagsW( 4596, 50.000427 ),
	VERT( 0x3f9de302, 0xbfea350e, 0x3e288c37 ),
	NORM( 0x3de795cf, 0x3f31d351, 0x3f35de51 ),
	NFlagsW( 4597, 50.079613 ),
	VERT( 0x401d196a, 0xbfe0aa97, 0xbec87c2d ),
	NORM( 0x3f162ae0, 0xbf4e1121, 0xbdb6ce0c ),
	NFlagsW( 4598, 58.724339 ),
	VERT( 0x3fda457e, 0xbfea3d67, 0xbeb41a3c ),
	NORM( 0x3f3b74a7, 0x3f2e0314, 0xbd2c76ea ),
	NFlagsW( 4599, 50.532173 ),
	VERT( 0x3f9ee533, 0xbff0c830, 0xbf5e29a4 ),
	NORM( 0x3f283920, 0x3ec73a5a, 0xbf254505 ),
	NFlagsW( 4600, 50.000443 ),
	VERT( 0x3fe057f1, 0xbfeab173, 0xbf332ab5 ),
	NORM( 0xbde32307, 0xbf76aaad, 0xbe795528 ),
	NFlagsW( 4601, 50.350273 ),
	VERT( 0x3fc1aecc, 0xbfedc8e7, 0xbf25024a ),
	NORM( 0x3f217e55, 0x3eb2ef2a, 0xbf315881 ),
	NFlagsW( 4602, 50.065201 ),
	VERT( 0xbf19aafd, 0xc0054276, 0xc00cb1df ),
	NORM( 0x3e9a18a7, 0xbd2695e8, 0xbf73e87f ),
	NFlagsW( 4603, 14.481056 ),
	VERT( 0x400177cd, 0xbfed3474, 0xbf0e6152 ),
	NORM( 0x3dd35575, 0xbf7b072c, 0xbe2aca34 ),
	NFlagsW( 4604, 51.885689 ),
	VERT( 0x3fc2eea7, 0xbff3be82, 0xbf20b982 ),
	NORM( 0x3ec172c7, 0xbca03554, 0xbf6cf8a6 ),
	NFlagsW( 4605, 50.089943 ),
	VERT( 0x3f81c3ff, 0xbffa2698, 0xbf964240 ),
	NORM( 0x3f1a93f1, 0x3ea3556c, 0xbf3b0233 ),
	NFlagsW( 4606, 50.000000 ),
	VERT( 0xbe5d631f, 0xc004ec65, 0xc0014c6b ),
	NORM( 0x3f057cf6, 0xbc22e149, 0xbf5a6d60 ),
	NFlagsW( 4607, 45.824623 ),
	VERT( 0x3fa9c3ab, 0xbffa19ae, 0xbf44fb10 ),
	NORM( 0x3f26faf9, 0x3c4e114c, 0xbf4204c2 ),
	NFlagsW( 4608, 50.008427 ),
	VERT( 0xbe82b2a4, 0xc008ae75, 0x3e9bda8a ),
	NORM( 0x3f046b56, 0xbe746949, 0x3f52660f ),
	NFlagsW( 4609, 49.189117 ),
	VERT( 0xbd080809, 0xc009edcd, 0xbebcc28c ),
	NORM( 0x3f0fa726, 0xbea4bd64, 0x3f433b12 ),
	NFlagsW( 4610, 49.987251 ),
	VERT( 0xbd78a1a3, 0xc00a2ed7, 0xbc10c95c ),
	NORM( 0x3f601057, 0xbeb29020, 0x3eab955e ),
	NFlagsW( 4611, 49.979626 ),
	VERT( 0x3fcdc120, 0xc0013c22, 0x3e2ada68 ),
	NORM( 0x3f0209d7, 0x3f06e27f, 0x3f2e72b4 ),
	NFlagsW( 4612, 51.482559 ),
	VERT( 0x3e4d29e0, 0xc00ef03e, 0xbe883723 ),
	NORM( 0xbe158333, 0xbb90178b, 0x3f7d410c ),
	NFlagsW( 4613, 50.000000 ),
	VERT( 0x3eab3c4b, 0xc00e39a4, 0xbfd6d9d0 ),
	NORM( 0x3f18bc31, 0xbdb40113, 0xbf4c35c4 ),
	NFlagsW( 4614, 49.999992 ),
	VERT( 0x3feaa79b, 0xc005e41b, 0xbeac380b ),
	NORM( 0x3f707733, 0x3ea88334, 0xbdc6194a ),
	NFlagsW( 4615, 51.684601 ),
	VERT( 0x3fda9319, 0xc006bb45, 0xbf0b612f ),
	NORM( 0x3f64c057, 0x3ed6ae6c, 0xbe2448a5 ),
	NFlagsW( 4616, 50.664734 ),
	VERT( 0x3fe0ce28, 0xc0075cb2, 0xbf227a49 ),
	NORM( 0x3f5f7f96, 0x3ed8f12f, 0xbe772d31 ),
	NFlagsW( 4617, 50.745129 ),
	VERT( 0x3eaf9933, 0xc010abc9, 0xbe94c997 ),
	NORM( 0xbe9d63ee, 0xbcdb1f34, 0x3f738214 ),
	NFlagsW( 4618, 50.000000 ),
	VERT( 0x3fda8ff9, 0xc00b5b7f, 0x3e21e954 ),
	NORM( 0x3f39d619, 0x3e449430, 0x3f2912b0 ),
	NFlagsW( 4619, 52.763729 ),
	VERT( 0xbf137d5a, 0xc01c44ad, 0xc00e4ee2 ),
	NORM( 0x3df2d6c7, 0xbedaaa52, 0xbf657ad3 ),
	NFlagsW( 4620, 12.205968 ),
	VERT( 0x3f76df46, 0xc01443e2, 0xbf9946f0 ),
	NORM( 0x3f09c6e9, 0x3cfc3f98, 0xbf579e5e ),
	NFlagsW( 4621, 50.000095 ),
	VERT( 0x3f5e2889, 0xc0166443, 0x3e94e6b0 ),
	NORM( 0xbeebb9eb, 0xbcccaf12, 0x3f6329ef ),
	NFlagsW( 4622, 50.073463 ),
	VERT( 0x3f91fc3f, 0xc0161b25, 0xbf8c8c6e ),
	NORM( 0x3f32960e, 0x3c5b4c60, 0xbf376367 ),
	NFlagsW( 4623, 50.006645 ),
	VERT( 0x3f9d43a9, 0xc0172d42, 0xbf778ddc ),
	NORM( 0x3f332003, 0x3cd8890f, 0xbf36c4d3 ),
	NFlagsW( 4624, 50.025307 ),
	VERT( 0xbe6c53c7, 0xc022d9d6, 0xc0032895 ),
	NORM( 0x3ea7bcac, 0xbf0dcbd2, 0xbf43f2e4 ),
	NFlagsW( 4625, 40.986141 ),
	VERT( 0x3fa5d290, 0xc01aa3f9, 0x3eae264a ),
	NORM( 0x3dab2d08, 0xbd709c8a, 0x3f7ea921 ),
	NFlagsW( 4626, 51.207161 ),
	VERT( 0xbef9eca2, 0xc026a431, 0x3e791e03 ),
	NORM( 0x3f0ddf63, 0xbeb875df, 0x3f40192c ),
	NFlagsW( 4627, 33.237080 ),
	VERT( 0x3ec10757, 0xc02409f3, 0xbfb6a20a ),
	NORM( 0x3ed03495, 0xbf0c38c3, 0xbf3b2e2f ),
	NFlagsW( 4628, 49.999844 ),
	VERT( 0x3fe0b2d1, 0xc01caf12, 0xbf197ec3 ),
	NORM( 0x3f7dba6a, 0xbccada1f, 0xbe05bc6d ),
	NFlagsW( 4629, 51.454472 ),
	VERT( 0x3fe45658, 0xc01cb58f, 0xbf33f368 ),
	NORM( 0x3f65b2bb, 0xbc735208, 0xbee1ec51 ),
	NFlagsW( 4630, 51.412834 ),
	VERT( 0xbe9caa5e, 0xc02aaefa, 0xbe839b3c ),
	NORM( 0x3f6191dc, 0xbed14c3e, 0x3e7367d7 ),
	NFlagsW( 4631, 44.742111 ),
	VERT( 0x3fe055a7, 0xc01e16b4, 0x3db3de51 ),
	NORM( 0x3f4faa7c, 0xbd15765c, 0x3f15692c ),
	NFlagsW( 4632, 54.152946 ),
	VERT( 0x3ff42614, 0xc01e8f3c, 0xbec4c363 ),
	NORM( 0x3f7c562e, 0xbcd495dd, 0xbe2a8e5d ),
	NFlagsW( 4633, 53.489750 ),
	VERT( 0xbe55eed3, 0xc02c3667, 0xbf243150 ),
	NORM( 0x3da949ac, 0xbf73bc55, 0x3e96bf1e ),
	NFlagsW( 4634, 47.050877 ),
	VERT( 0x3e061cf9, 0xc02e6501, 0xbf024d01 ),
	NORM( 0xbe935419, 0xbf3dae7b, 0x3f1b5704 ),
	NFlagsW( 4635, 49.911556 ),
	VERT( 0xbe336695, 0xc031e83b, 0xbfc17a8c ),
	NORM( 0xbcf3a483, 0xbf7dbee2, 0xbe0421b0 ),
	NFlagsW( 4636, 44.430779 ),
	VERT( 0xbed524ff, 0xc033da0e, 0xbf9c8a11 ),
	NORM( 0x3d99d573, 0x3f7a1893, 0xbe4caca0 ),
	NFlagsW( 4637, 31.963095 ),
	VERT( 0xbe825842, 0xc032f3ed, 0xbfed3ba6 ),
	NORM( 0x3f369c3c, 0xbef9525a, 0xbf01081b ),
	NFlagsW( 4638, 38.415859 ),
	VERT( 0xbea330eb, 0xc033bf6f, 0xbf872f6b ),
	NORM( 0x3d875cf4, 0x3f7cda40, 0xbe111134 ),
	NFlagsW( 4639, 40.230648 ),
	VERT( 0x3f807566, 0xc02c4372, 0xbf97d9e2 ),
	NORM( 0x3ef4fc5b, 0xbeb932ea, 0xbf4cd56f ),
	NFlagsW( 4640, 50.018684 ),
	VERT( 0xbe2633b5, 0xc033ab38, 0xbf731e60 ),
	NORM( 0x3e397c57, 0x3f78cf87, 0xbe19d3ed ),
	NFlagsW( 4641, 46.645607 ),
	VERT( 0xbf02d655, 0xc0360251, 0xbfd90380 ),
	NORM( 0x3f0200b1, 0xbf0eae6f, 0xbf28289e ),
	NFlagsW( 4642, 17.971128 ),
	VERT( 0x3eb80063, 0xc030ac44, 0xbf24112c ),
	NORM( 0x3e216cfc, 0x3f73f104, 0xbe84a9e2 ),
	NFlagsW( 4643, 49.999996 ),
	VERT( 0x3cc57469, 0xc03406b8, 0xbf434397 ),
	NORM( 0x3dae1453, 0x3f79102d, 0xbe5c2ecd ),
	NFlagsW( 4644, 49.282448 ),
	VERT( 0x3ed8846d, 0xc03427e4, 0xbefee532 ),
	NORM( 0xbed8329e, 0xbf4d268a, 0x3ed8ec44 ),
	NFlagsW( 4645, 50.000351 ),
	VERT( 0x3f1b63a5, 0xc034dba5, 0xbf00bec4 ),
	NORM( 0x3eb5ccc9, 0x3f6e7918, 0xbda0c27d ),
	NFlagsW( 4646, 50.006138 ),
	VERT( 0xbeed7405, 0xc03bd3e6, 0xbe878511 ),
	NORM( 0xbf6a6d8a, 0x3ec578da, 0x3de695a1 ),
	NFlagsW( 4647, 29.730650 ),
	VERT( 0xbeb2abc5, 0xc03b7502, 0xbe32e889 ),
	NORM( 0xbdfb926c, 0x3f4a8cba, 0x3f195d5e ),
	NFlagsW( 4648, 39.330338 ),
	VERT( 0x3eb8a7f4, 0xc037ba49, 0xbf97919a ),
	NORM( 0xbc8fb1a0, 0xbf70eac2, 0xbeacea00 ),
	NFlagsW( 4649, 49.985195 ),
	VERT( 0xbe92b0ba, 0xc03c7add, 0xbe329c30 ),
	NORM( 0xbe26477f, 0x3f648654, 0x3ed742fc ),
	NFlagsW( 4650, 42.589863 ),
	VERT( 0x3fd9c557, 0xc0305416, 0x3e0cffe9 ),
	NORM( 0x3f34950e, 0xbe88893e, 0x3f281fa3 ),
	NFlagsW( 4651, 55.365799 ),
	VERT( 0xbe724b4a, 0xc03c8ad0, 0xbdb00155 ),
	NORM( 0xbec1b3e2, 0x3f41a8ba, 0x3f08927d ),
	NFlagsW( 4652, 44.669762 ),
	VERT( 0xbf42595f, 0xc0402786, 0x3e9adf54 ),
	NORM( 0x3efbb826, 0xbe00ba9c, 0x3f5c96e1 ),
	NFlagsW( 4653, 3.832030 ),
	VERT( 0x3fa8e4a7, 0xc033d2cf, 0xbf4ff666 ),
	NORM( 0x3f277a0c, 0x3bac81dc, 0xbf419cc4 ),
	NFlagsW( 4654, 50.371750 ),
	VERT( 0x3fd9b313, 0xc031f031, 0xbf132b85 ),
	NORM( 0x3f6154ba, 0xbed7e729, 0xbe5f037f ),
	NFlagsW( 4655, 52.128113 ),
	VERT( 0x3fdfe7fc, 0xc031ce1d, 0xbf2a7820 ),
	NORM( 0x3f55a611, 0xbef4ee8c, 0xbe8be3f6 ),
	NFlagsW( 4656, 52.227837 ),
	VERT( 0x3f9d9f57, 0xc0368b08, 0xbf6ae0e8 ),
	NORM( 0x3f128c19, 0xbec326e5, 0xbf39d8a8 ),
	NFlagsW( 4657, 50.244011 ),
	VERT( 0xbf030ada, 0xc0417614, 0xbfe4f83c ),
	NORM( 0x3f1927cf, 0x3c7bd9dd, 0xbf4d184d ),
	NFlagsW( 4658, 14.118534 ),
	VERT( 0xbeb8d7cc, 0xc0411c59, 0xbe7e9f72 ),
	NORM( 0x3f3be1b7, 0xbf2c6473, 0xbdb5f5bb ),
	NFlagsW( 4659, 37.043613 ),
	VERT( 0xbc9cc5ee, 0xc03fc5d2, 0xbf9da9ce ),
	NORM( 0x3efc9fc6, 0x3f21fc99, 0xbf18c78d ),
	NFlagsW( 4660, 47.247829 ),
	VERT( 0x3f73bb8e, 0xc03a08a8, 0x3d514705 ),
	NORM( 0xbee6d9e4, 0xbf2a56b6, 0x3f184ece ),
	NFlagsW( 4661, 50.463264 ),
	VERT( 0x3fe9ada7, 0xc03612db, 0xbeba0bb3 ),
	NORM( 0x3f6cfe83, 0xbeb834cf, 0xbdee3af8 ),
	NFlagsW( 4662, 54.393299 ),
	VERT( 0xbf5388c5, 0xc0468809, 0xbff014ae ),
	NORM( 0x3e8a854f, 0xbdccabfa, 0xbf751f12 ),
	NFlagsW( 4663, 0.412666 ),
	VERT( 0x3fcc4a98, 0xc038c59e, 0x3e0ba372 ),
	NORM( 0x3ec05e70, 0xbf22cd50, 0x3f2c91ab ),
	NFlagsW( 4664, 54.724873 ),
	VERT( 0x3e875af6, 0xc041928a, 0x3dc42be3 ),
	NORM( 0xbe06df57, 0x3f37c317, 0x3f2f0418 ),
	NFlagsW( 4665, 49.963886 ),
	VERT( 0x3f36ac00, 0xc03f823e, 0xbf81a918 ),
	NORM( 0xbda7bc4a, 0xbf6a63de, 0xbec99206 ),
	NFlagsW( 4666, 50.017269 ),
	VERT( 0xbecfeb4b, 0xc046b5ab, 0xbfccfa6e ),
	NORM( 0x3f50a1d6, 0xbdba1139, 0xbf1284be ),
	NFlagsW( 4667, 24.220722 ),
	VERT( 0x3fc18c07, 0xc03b16ab, 0xbf2c7dc3 ),
	NORM( 0x3ee2cc21, 0xbc591f36, 0xbf657d36 ),
	NFlagsW( 4668, 51.267708 ),
	VERT( 0x3f064706, 0xc041c2ad, 0x3e21ae6f ),
	NORM( 0x3cbbfee3, 0x3f3e5bb6, 0x3f2b1223 ),
	NFlagsW( 4669, 50.131607 ),
	VERT( 0x3f9bf0e8, 0xc03db08b, 0x3df2e346 ),
	NORM( 0xbde3f7b2, 0xbf3b9af7, 0x3f2bd679 ),
	NFlagsW( 4670, 51.669861 ),
	VERT( 0x3f7eab85, 0xc041f502, 0xbeb6d019 ),
	NORM( 0x3f2f9bc1, 0x3f38cdc3, 0xbdbace13 ),
	NFlagsW( 4671, 50.350605 ),
	VERT( 0x3fc01d17, 0xc03f43e7, 0xbf320402 ),
	NORM( 0x3f06422d, 0xbed3dc5c, 0xbf3e7f72 ),
	NFlagsW( 4672, 51.349468 ),
	VERT( 0x3f4dc29d, 0xc0445d1d, 0xbf26443c ),
	NORM( 0x3f1cbffe, 0x3eb81f45, 0xbf34401d ),
	NFlagsW( 4673, 50.095154 ),
	VERT( 0x3f0735a4, 0xc046678c, 0xbf604880 ),
	NORM( 0x3f07ed0c, 0x3edade31, 0xbf3b4ee5 ),
	NFlagsW( 4674, 50.011192 ),
	VERT( 0x3f4fde20, 0xc0472cfd, 0xbf2253e6 ),
	NORM( 0x3ed7cf62, 0x3d8d7a75, 0xbf677919 ),
	NFlagsW( 4675, 50.124706 ),
	VERT( 0x3e9b76bd, 0xc04b050e, 0xbf8529b4 ),
	NORM( 0x3f0012dd, 0x3eea74db, 0xbf3c1fc6 ),
	NFlagsW( 4676, 49.720104 ),
	VERT( 0x3f1e79bd, 0xc04b237a, 0xbf461d0b ),
	NORM( 0x3f2492f7, 0x3d4574e3, 0xbf43b398 ),
	NFlagsW( 4677, 50.046055 ),
	VERT( 0x3f66284d, 0xc0496e28, 0x3e244082 ),
	NORM( 0x3ed9aae9, 0x3f26ccf2, 0x3f20d676 ),
	NFlagsW( 4678, 50.907280 ),
	VERT( 0x3fd85d6d, 0xc0448fdc, 0xbeca808d ),
	NORM( 0x3f1cb100, 0xbf4975db, 0xbd9f80c8 ),
	NFlagsW( 4679, 53.890728 ),
	VERT( 0x3f861edb, 0xc04a3f62, 0xbf346f40 ),
	NORM( 0xbde0309b, 0xbf76b8ab, 0xbe792244 ),
	NFlagsW( 4680, 50.383396 ),
	VERT( 0x3fa5c5e4, 0xc04b4273, 0xbf0f8e56 ),
	NORM( 0x3e001329, 0xbf7aa8c3, 0xbe23fcd1 ),
	NFlagsW( 4681, 51.168865 ),
	VERT( 0x3f7fc283, 0xc04f2343, 0xbf0c8ea3 ),
	NORM( 0x3f50543f, 0x3f0d4d97, 0xbe3a441a ),
	NFlagsW( 4682, 50.492851 ),
	VERT( 0x3f8ff2f5, 0xc04ea45d, 0xbeae32f9 ),
	NORM( 0x3f6540a4, 0x3eddb3e0, 0xbdd2567c ),
	NFlagsW( 4683, 51.006878 ),
	VERT( 0x3f8047ac, 0xc04f75de, 0x3e1e7f25 ),
	NORM( 0x3f34b745, 0x3e9f14b2, 0x3f22f1f2 ),
	NFlagsW( 4684, 51.540970 ),
	VERT( 0x3f860273, 0xc04f6eb4, 0xbf240e3a ),
	NORM( 0x3f4e81de, 0x3f09c70e, 0xbe7a0f0d ),
	NFlagsW( 4685, 50.526913 ),
	VERT( 0xbf1a7042, 0xc05b25fe, 0xbfc274f2 ),
	NORM( 0x3ec4b39d, 0xbe89f480, 0xbf62108e ),
	NFlagsW( 4686, 4.691184 ),
	VERT( 0xbf46e1c1, 0xc05dc77a, 0xbfca913c ),
	NORM( 0x3ef13384, 0xbe9007f8, 0xbf56058b ),
	NFlagsW( 4687, 0.478020 ),
	VERT( 0xbf627185, 0xc0606e5a, 0x3e9d3f0b ),
	NORM( 0x3ec54a76, 0xbecf025f, 0x3f545937 ),
	NFlagsW( 4688, 0.232431 ),
	VERT( 0xbeea260f, 0xc05e177b, 0x3db852bf ),
	NORM( 0xbf5d6f2e, 0xb72f129f, 0x3f0076a7 ),
	NFlagsW( 4689, 19.856163 ),
	VERT( 0xbee81cca, 0xc05f37b0, 0x3db03207 ),
	NORM( 0x3ea599e0, 0x3f06e68c, 0x3f493381 ),
	NFlagsW( 4690, 19.870062 ),
	VERT( 0xbec01c0a, 0xc05f06fc, 0x3e0b19f2 ),
	NORM( 0xbecc2c65, 0xbd1513c2, 0x3f6a9456 ),
	NFlagsW( 4691, 27.077335 ),
	VERT( 0xbec75c59, 0xc05fd429, 0xbe8ada66 ),
	NORM( 0x3ddfd0d9, 0xbf01b108, 0xbf5aefde ),
	NFlagsW( 4692, 25.385988 ),
	VERT( 0xbd9b6365, 0xc05f17d2, 0xbfbe712b ),
	NORM( 0x3eb73d9e, 0x3cd145ce, 0xbf6ef433 ),
	NFlagsW( 4693, 39.315502 ),
	VERT( 0xbf135f60, 0xc0623394, 0xbb867d5f ),
	NORM( 0xbeaec835, 0x3d031f6b, 0x3f707b6f ),
	NFlagsW( 4694, 8.716101 ),
	VERT( 0xbf200bd1, 0xc0628660, 0xb91d9f34 ),
	NORM( 0x3ee625c5, 0xbeb39dcf, 0x3f524e48 ),
	NFlagsW( 4695, 5.663385 ),
	VERT( 0x3f17c19e, 0xc05b3205, 0x3ead0524 ),
	NORM( 0x3db2a533, 0x3cd47af5, 0x3f7ef014 ),
	NFlagsW( 4696, 50.956207 ),
	VERT( 0x3f865215, 0xc05b8448, 0x3db0a9e2 ),
	NORM( 0x3f53e874, 0xbcfbdb14, 0x3f0f6b50 ),
	NFlagsW( 4697, 52.256851 ),
	VERT( 0x3e83217d, 0xc0621c0f, 0xbf8a3e6a ),
	NORM( 0x3ecb90fb, 0x3d3824af, 0xbf6a9d33 ),
	NFlagsW( 4698, 48.183884 ),
	VERT( 0x3f86974e, 0xc05dd2d6, 0xbf19dcd4 ),
	NORM( 0x3f7e9205, 0xbc37d8da, 0xbdd6e9ae ),
	NFlagsW( 4699, 50.997879 ),
	VERT( 0x3e313b72, 0xc0636333, 0x3e952b27 ),
	NORM( 0xbe38eefd, 0xbdd9f708, 0x3f7a4fe9 ),
	NFlagsW( 4700, 48.243908 ),
	VERT( 0x3edaa2b4, 0xc062e129, 0xbf8ddcd9 ),
	NORM( 0x3ec94938, 0x3cee3b15, 0xbf6b44e9 ),
	NFlagsW( 4701, 49.549568 ),
	VERT( 0x3f05ddcf, 0xc0628762, 0xbf78675e ),
	NORM( 0x3f354f99, 0x3c1ca984, 0xbf34b5f4 ),
	NFlagsW( 4702, 49.999119 ),
	VERT( 0x3f8a3e29, 0xc05f1c8d, 0xbf343cf7 ),
	NORM( 0x3f65174f, 0xbb40f417, 0xbee47f43 ),
	NFlagsW( 4703, 51.019756 ),
	VERT( 0x3f9a0ca3, 0xc05f46a6, 0xbec5b389 ),
	NORM( 0x3f7c3bfc, 0xbcc971a5, 0xbe2d2b75 ),
	NFlagsW( 4704, 52.037346 ),
	VERT( 0xbf23ab40, 0xc0708dc6, 0xbfc26349 ),
	NORM( 0x3ec1ab1f, 0xbeb778af, 0xbf5a80db ),
	NFlagsW( 4705, 1.478097 ),
	VERT( 0x3f7f9b75, 0xc068fc8e, 0x3e0c1b90 ),
	NORM( 0x3f330f25, 0xbe8f4302, 0x3f285a74 ),
	NFlagsW( 4706, 53.047623 ),
	VERT( 0x3f7f7775, 0xc06cb8d1, 0xbf11901f ),
	NORM( 0x3f653494, 0xbedb60f2, 0xbdf90c82 ),
	NFlagsW( 4707, 51.489956 ),
	VERT( 0x3f85df64, 0xc06ef7c1, 0xbf27de35 ),
	NORM( 0x3f51f0d3, 0xbf0e1de1, 0xbe0e324c ),
	NFlagsW( 4708, 51.659100 ),
	VERT( 0x3f659ef2, 0xc0706421, 0x3e092eb9 ),
	NORM( 0x3ee53ebc, 0xbf199fb9, 0x3f29b2aa ),
	NFlagsW( 4709, 52.921188 ),
	VERT( 0x3f8f9b55, 0xc06fc17b, 0xbeb9f4dc ),
	NORM( 0x3f66310f, 0xbeda75ea, 0xbdc6a4d9 ),
	NFlagsW( 4710, 52.686672 ),
	VERT( 0x3f1d6cd3, 0xc0754d20, 0xbf509d71 ),
	NORM( 0x3f277768, 0xbc42d6ee, 0xbf419a1e ),
	NFlagsW( 4711, 50.384407 ),
	VERT( 0xbf31cc9e, 0xc07f54e5, 0xbe668d60 ),
	NORM( 0xbe027980, 0xbf3fb696, 0x3f267cca ),
	NFlagsW( 4712, 0.849427 ),
	VERT( 0x3e99579b, 0xc079768b, 0xbf89a4e7 ),
	NORM( 0x3eeeec89, 0xbee594b2, 0xbf432958 ),
	NFlagsW( 4713, 46.445911 ),
	VERT( 0x3f4fb8a5, 0xc077826a, 0xbf2bc664 ),
	NORM( 0x3ed02b1a, 0xbc10e731, 0xbf69dfed ),
	NFlagsW( 4714, 51.233059 ),
	VERT( 0xbf66af04, 0xc081a28b, 0xbea0a04d ),
	NORM( 0xbcd44b9b, 0xbf682a80, 0x3ed75280 ),
	NFlagsW( 4715, 0.014064 ),
	VERT( 0xbed34569, 0xc080501b, 0xbe6f86d3 ),
	NORM( 0xbe89b446, 0xbf595d63, 0x3ee8ca8c ),
	NFlagsW( 4716, 12.595445 ),
	VERT( 0xbf592668, 0xc081c15d, 0xbea282b3 ),
	NORM( 0x3d92f8ea, 0xbf62b3eb, 0x3eeafbc9 ),
	NFlagsW( 4717, 0.045724 ),
	VERT( 0x3f063916, 0xc07b6280, 0xbf6bf266 ),
	NORM( 0x3f19b768, 0xbecb2bf9, 0xbf31ba9c ),
	NFlagsW( 4718, 49.630337 ),
	VERT( 0xbd0cc522, 0xc07f6077, 0xbfa477e1 ),
	NORM( 0x3e9a16f6, 0xbf27ba23, 0xbf316434 ),
	NFlagsW( 4719, 33.397408 ),
	VERT( 0x3f4d436d, 0xc07a6708, 0xbf30dfad ),
	NORM( 0x3f2369db, 0xbea4f9f4, 0xbf32f683 ),
	NFlagsW( 4720, 51.298851 ),
	VERT( 0x3f068b74, 0xc07c48ca, 0x3dee4c8f ),
	NORM( 0x3e1aa675, 0xbf3534b4, 0x3f30a6b5 ),
	NFlagsW( 4721, 51.195763 ),
	VERT( 0xbf2b561b, 0xc0828cd6, 0xbf844731 ),
	NORM( 0x3e16b6c9, 0xbf794a55, 0xbe31913b ),
	NFlagsW( 4722, 0.586044 ),
	VERT( 0xbe8bc8a0, 0xc081672f, 0xbe124f7c ),
	NORM( 0xbea71362, 0xbf4a4271, 0x3f04d901 ),
	NFlagsW( 4723, 22.814556 ),
	VERT( 0x3f7da948, 0xc07c0c2f, 0xbeca07e7 ),
	NORM( 0x3f2f1995, 0xbf3a0b51, 0xbd81e032 ),
	NFlagsW( 4724, 52.719646 ),
	VERT( 0x3e868bb5, 0xc08093cc, 0x3d52f060 ),
	NORM( 0xbd608f5e, 0xbf467700, 0x3f2117a2 ),
	NFlagsW( 4725, 46.913002 ),
	VERT( 0xbf577238, 0xc08480ef, 0xbf904f7f ),
	NORM( 0x3e6454ef, 0xbf7809f3, 0xbddbb556 ),
	NFlagsW( 4726, 0.012568 ),
	VERT( 0xbe433ea3, 0xc08536d0, 0xbf7fd73a ),
	NORM( 0xbccb44e3, 0xbf75fe62, 0xbe8d2d57 ),
	NFlagsW( 4727, 22.706802 ),
	VERT( 0x3f1a61cc, 0xc084a5e6, 0xbf0f232e ),
	NORM( 0x3ee8930a, 0xbf630669, 0xbdadf901 ),
	NFlagsW( 4728, 50.641472 ),
	VERT( 0x3c7f40cc, 0xc086b587, 0xbf560a66 ),
	NORM( 0xbc761ead, 0xbf78f38a, 0xbe6e240a ),
	NFlagsW( 4729, 33.726189 ),
	VERT( 0x3eb51f70, 0xc0885535, 0xbf344d09 ),
	NORM( 0x3e47499d, 0xbf75d4ea, 0xbe4cc3e2 ),
	NFlagsW( 4730, 45.548759 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Toe0[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Toe0,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Toe0[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Toe0,
OPosition  (  8.364557F,  0.000000F, -12.445008F ),
OAngle     (  0.000004F, 89.980234F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy16,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Foot[]
START
	CnkV_VN(FV_CONT, 487),
	OffnbIdx(2150, 81),
	VERT( 0x40cb6992, 0x409f940d, 0xc12b4da3 ),
	NORM( 0xbe0b551c, 0x3f7d328a, 0xbd69e649 ),
	VERT( 0x40a778c1, 0x40932880, 0xc10b4638 ),
	NORM( 0xbd9d33f1, 0x3f7f36c7, 0x3c7d7986 ),
	VERT( 0x4102e489, 0x408b48cf, 0xc12b748a ),
	NORM( 0x3f31b97d, 0x3f37ce14, 0x3d4e0032 ),
	VERT( 0x40d40722, 0x4057f883, 0xc080195e ),
	NORM( 0x3ea051da, 0x3f70b218, 0x3e092c3f ),
	VERT( 0x410195c1, 0x406f290d, 0xc10cd4d1 ),
	NORM( 0x3f2d16e9, 0x3f31e1ba, 0x3e7ae469 ),
	VERT( 0x40e6b762, 0x405a2315, 0xc0c61a30 ),
	NORM( 0x3f0176a6, 0x3f585311, 0x3e31f171 ),
	VERT( 0x40d87c52, 0x4023a257, 0x4020dcf2 ),
	NORM( 0x3e182a2f, 0x3f6c6805, 0x3eb51e36 ),
	VERT( 0x40a56191, 0x407072d4, 0xc13442a3 ),
	NORM( 0xbf3def77, 0x3eeb6b59, 0xbef9d6f2 ),
	VERT( 0x410a3e0a, 0x4007dec0, 0x4000ca47 ),
	NORM( 0x3f3a4fd0, 0x3f282a05, 0x3e49c8e6 ),
	VERT( 0x4105d169, 0x401a4968, 0xc078db3d ),
	NORM( 0x3f5832e5, 0x3f091521, 0xbbcb8908 ),
	VERT( 0x40d8afe2, 0x3fcc06ca, 0x4074a994 ),
	NORM( 0x3df50a83, 0x3f24bfb1, 0x3f4188dc ),
	VERT( 0x40a11241, 0x402e8e70, 0xc133ad5d ),
	NORM( 0xbf4e0acb, 0x3d26a972, 0xbf17927e ),
	VERT( 0x410d098a, 0x3fe27a27, 0xbfb06974 ),
	NORM( 0x3f51c1cb, 0x3f12c200, 0xbaeaaea4 ),
	VERT( 0x410a531a, 0x3f9c2504, 0x4051b76c ),
	NORM( 0x3f41adf0, 0x3ecd1f41, 0x3f044efc ),
	VERT( 0x41046b71, 0x40010338, 0xc0c42b53 ),
	NORM( 0x3f79d505, 0x3e5cff30, 0x3d037094 ),
	VERT( 0x410b30f1, 0x400cb516, 0xc10c09eb ),
	NORM( 0x3f7f0231, 0xbca68069, 0x3daf31a4 ),
	VERT( 0x410a93c9, 0x40143066, 0xc12a806f ),
	NORM( 0x3f7f5d71, 0x3d8eb15a, 0x3c2462f4 ),
	VERT( 0x40d89b23, 0x3ed694fd, 0x40900473 ),
	NORM( 0x3defa32f, 0x3e66464c, 0x3f77a354 ),
	VERT( 0x409fe052, 0x3ff508c7, 0xc1333c33 ),
	NORM( 0xbf4d0f5e, 0xbd97bb2a, 0xbf18131a ),
	VERT( 0x410a3d21, 0x3ec62cc5, 0x406193ef ),
	NORM( 0x3f5012c8, 0x3da59e16, 0x3f13b126 ),
	VERT( 0x41105919, 0x3f55c662, 0xbfa631cb ),
	NORM( 0x3f7e8201, 0x3d91a057, 0xbda5f949 ),
	VERT( 0x4105e811, 0x3f5c35d5, 0xc0683a14 ),
	NORM( 0x3f7c7cb6, 0x3cb7e950, 0xbe277c81 ),
	VERT( 0x4102cbe9, 0x3f6fbb98, 0xc0c00db8 ),
	NORM( 0x3f7c14b3, 0xbe27b217, 0xbd748dfe ),
	VERT( 0x4106e219, 0x3ed38376, 0xc05e5218 ),
	NORM( 0x3f7a0e80, 0x3dd1ffbf, 0xbe409c0f ),
	VERT( 0x410a07e9, 0x3f87e3e3, 0xc126b7b2 ),
	NORM( 0x3f728fce, 0xbea2f424, 0x3cfa8988 ),
	VERT( 0x4102c629, 0x3f63300a, 0xc10b78f7 ),
	NORM( 0x3f7987f2, 0xbe59fb46, 0x3d8aae45 ),
	VERT( 0x409ecf82, 0x3f8628d7, 0xc12e5b1c ),
	NORM( 0xbf49f0eb, 0xbe0092e6, 0xbf1a0583 ),
	VERT( 0x41104079, 0xbc6bde82, 0xbf8e430c ),
	NORM( 0x3f7f9a65, 0x3c2a6092, 0xbd5ffd64 ),
	VERT( 0x41007f99, 0x3ecd125e, 0xc0c272f6 ),
	NORM( 0x3f7f6dd4, 0x3cffde55, 0xbd71a6b3 ),
	VERT( 0x41089b62, 0xbd338764, 0xc0565b91 ),
	NORM( 0x3f75724e, 0x3e6ba1ee, 0xbe2abc0d ),
	VERT( 0x40d7d3f2, 0xbf6093bd, 0x4090006d ),
	NORM( 0x3db82a47, 0xbea0d6f0, 0x3f71f2a0 ),
	VERT( 0x410356d1, 0x3ef1966e, 0xc126897d ),
	NORM( 0x3f7e9995, 0x3d95759d, 0x3d990594 ),
	VERT( 0x4101e4c9, 0x3e8d214e, 0xc10b15a8 ),
	NORM( 0x3f718320, 0x3ea56a75, 0x3d995229 ),
	VERT( 0x40a1bfa2, 0x3e9eb33d, 0xc12e4b45 ),
	NORM( 0xbf4650ba, 0xbe085e0f, 0xbf1e4169 ),
	VERT( 0x41038bf9, 0xbe2ef757, 0xc0c110fc ),
	NORM( 0x3f77c3f9, 0x3e803ab0, 0xbcc43e92 ),
	VERT( 0x410a00a1, 0xbf96346c, 0x4061c935 ),
	NORM( 0x3f4259b9, 0xbe89c827, 0x3f17b772 ),
	VERT( 0x410bdf51, 0xbf0e0956, 0xc03fbfbd ),
	NORM( 0x3f785af7, 0x3e452ea1, 0xbe17077a ),
	VERT( 0x410b1cf1, 0xbeb630d6, 0xc10ad995 ),
	NORM( 0x3f5ed2ee, 0x3ef6ed8a, 0x3dcabc20 ),
	VERT( 0x410accd1, 0xbe509e1a, 0xc1269407 ),
	NORM( 0x3f6db6ab, 0x3ebd6a30, 0x3cf575c5 ),
	VERT( 0x41103b3a, 0xbfa9c64c, 0xbdc9c6ce ),
	NORM( 0x3f7ee386, 0xbda443c2, 0x3d41689b ),
	VERT( 0x4104f831, 0xbf56cf3f, 0xc0c1105f ),
	NORM( 0x3f7a93b3, 0x3e507e74, 0x3cb05d7b ),
	VERT( 0x410f5681, 0xbfad0e2b, 0xbfc47999 ),
	NORM( 0x3f7e2c37, 0xbdd24b36, 0xbd788297 ),
	VERT( 0x410e71e1, 0xbfb055c9, 0xc03e2b5f ),
	NORM( 0x3f7f36b8, 0xbc102d3f, 0xbd9f601c ),
	VERT( 0x40a79f02, 0xbf292662, 0xc12e27cd ),
	NORM( 0xbf4d007a, 0xbe5d3238, 0xbf0f02f3 ),
	VERT( 0x410f375a, 0xbf8d1459, 0xc10a7479 ),
	NORM( 0x3f7be163, 0x3e265641, 0x3d986e22 ),
	VERT( 0x4106c999, 0xc0147a88, 0x402ccca6 ),
	NORM( 0x3f16cc59, 0xbf3b263c, 0x3eb04e67 ),
	VERT( 0x40d9b102, 0xc01d7030, 0x40446225 ),
	NORM( 0x3d7be499, 0xbf5cc608, 0x3f00a2c8 ),
	VERT( 0x410d4541, 0xc00ce062, 0x3e990098 ),
	NORM( 0x3f4ea498, 0xbf1673c2, 0x3d619720 ),
	VERT( 0x410e10c1, 0xbf9e7365, 0xc1265981 ),
	NORM( 0x3f7eac79, 0x3da0adce, 0xbd846777 ),
	VERT( 0x410c4f41, 0xc00cf2cd, 0xbfa913b4 ),
	NORM( 0x3f461b6d, 0xbf21f933, 0xbceb702e ),
	VERT( 0x410945f1, 0xbfe8a7dd, 0xc0bffdfd ),
	NORM( 0x3f7f8945, 0x3d3b853b, 0x3d1fed92 ),
	VERT( 0x410b591a, 0xc00d0536, 0xc03c33d3 ),
	NORM( 0x3f4d8d88, 0xbf188f8f, 0x3c42027d ),
	VERT( 0x4100266a, 0xc02557e3, 0x3ea76e9b ),
	NORM( 0x3e8fd1de, 0xbf759120, 0x3cfba6dc ),
	VERT( 0x40fe7023, 0xc0250198, 0xbf902ecc ),
	NORM( 0x3e91fe53, 0xbf75569c, 0xbc8232c9 ),
	VERT( 0x40b63152, 0xbfe032a0, 0xc12e12c8 ),
	NORM( 0xbf46b0f5, 0xbebe4d1c, 0xbf02666f ),
	VERT( 0x40fc93a2, 0xc024ab46, 0xc0251cbc ),
	NORM( 0x3e9a7631, 0xbf73228c, 0x3daaf9d2 ),
	VERT( 0x410f0e59, 0xc00befbb, 0xc109c740 ),
	NORM( 0x3f7e52a5, 0xbdcf49e0, 0x3d595679 ),
	VERT( 0x40c13792, 0xc0080428, 0xc133a51b ),
	NORM( 0xbf5bc1ab, 0xbef8fb90, 0xbe27185b ),
	VERT( 0x410de6aa, 0xc0145839, 0xc1262043 ),
	NORM( 0x3f7eb16f, 0xbda824ba, 0xbd705c41 ),
	VERT( 0x4106f581, 0xc0377349, 0xc0be9c4a ),
	NORM( 0x3f6053e3, 0xbeece15e, 0x3e09b1bf ),
	VERT( 0x40a2bd61, 0xc039ccd4, 0xc110e4fb ),
	NORM( 0xbf3ae82c, 0xbf1b8b9d, 0xbea01803 ),
	VERT( 0x40cff852, 0xc02d34d1, 0xc1319d34 ),
	NORM( 0xbf584a91, 0xbe9b7154, 0xbee18233 ),
	VERT( 0x40c6efc2, 0xc03b1161, 0xc12d0c78 ),
	NORM( 0xbf44f461, 0xbeb20c77, 0xbf092f3f ),
	VERT( 0x40fac6f2, 0xc05cc78f, 0xc0bd9059 ),
	NORM( 0x3ecf67a1, 0xbf6339c9, 0x3e608214 ),
	VERT( 0x40cc2dd2, 0xc065b2bd, 0xc0bc9b9a ),
	NORM( 0xbe13dce9, 0xbf7aefc4, 0x3e0a9617 ),
	VERT( 0x410adf49, 0xc05cfdd0, 0xc108ebb7 ),
	NORM( 0x3f5e8671, 0xbef7ff37, 0x3dcad7eb ),
	VERT( 0x40b36b41, 0xc05b7c7e, 0xc10f4827 ),
	NORM( 0xbf166794, 0xbf4d8b20, 0xbdce8502 ),
	VERT( 0x40cffe52, 0xc0524340, 0xc12f756d ),
	NORM( 0xbf71415b, 0xbe944839, 0xbe2b595b ),
	VERT( 0x40d02172, 0xc05ab422, 0xc1355a07 ),
	NORM( 0xbf73b11b, 0xbdfde200, 0xbe8f6ea4 ),
	VERT( 0x40cdae62, 0xc0620b4b, 0xc12ccb6d ),
	NORM( 0xbf1ff8be, 0xbefa7081, 0xbf1bc5d1 ),
	VERT( 0x410a7652, 0xc06516d3, 0xc125cf7f ),
	NORM( 0x3f657665, 0xbee2f119, 0x3c2ccce7 ),
	VERT( 0x40d51272, 0xc065c870, 0xc12e539f ),
	NORM( 0xbf4a000f, 0xbf0a4f0c, 0xbe95b3aa ),
	VERT( 0x41025fa1, 0xc07ceb75, 0xc10877c7 ),
	NORM( 0x3edad12b, 0xbf648598, 0x3e129d73 ),
	VERT( 0x40cf6442, 0xc0703d7f, 0xc133cdad ),
	NORM( 0xbf65e151, 0xbee04ffe, 0x3d2973d1 ),
	VERT( 0x40db38b2, 0xc0837456, 0xc10805ab ),
	NORM( 0xbe40fb13, 0xbf7a1bce, 0x3dcc9ab0 ),
	VERT( 0x40d82212, 0xc07a7055, 0xc1390e7a ),
	NORM( 0xbf309ba1, 0xbef52e6b, 0xbf0afc86 ),
	VERT( 0x40e2c382, 0xc07f1fcb, 0xc12f9e6e ),
	NORM( 0xbea2bb09, 0xbf728716, 0x3d1ccf67 ),
	VERT( 0x41038b29, 0xc082758b, 0xc12597db ),
	NORM( 0x3ef0ec71, 0xbf61e1ce, 0x3bbe6f12 ),
	VERT( 0x41032f71, 0xc07f26a0, 0xc1359992 ),
	NORM( 0x3ef10c56, 0xbf5eec12, 0xbe1115e4 ),
	VERT( 0x40e558c2, 0xc0877806, 0xc1254770 ),
	NORM( 0xbe606785, 0xbf77f5f1, 0xbdf08eae ),
	VERT( 0x40dbd832, 0xc084b3ef, 0xc1366264 ),
	NORM( 0xbecba5b2, 0xbf6a9fa2, 0xbd2f1d05 ),
	CnkV_VN_NF(FV_CONT|FW_START, 2640),
	OffnbIdx(4354, 377),
	VERT( 0x40d711d2, 0x409155e9, 0xc149d75b ),
	NORM( 0xbe5865ed, 0x3f6316dd, 0xbed223c1 ),
	NFlagsW( 0, 71.432465 ),
	VERT( 0x40dabce2, 0x408b17f1, 0xc14f5876 ),
	NORM( 0xbe0e7403, 0x3f4fbd00, 0xbf114d28 ),
	NFlagsW( 1, 54.465633 ),
	VERT( 0x40dcfca2, 0x4080ae4b, 0xc156391e ),
	NORM( 0xbe6755ca, 0x3f539582, 0xbf03ff78 ),
	NFlagsW( 2, 48.633324 ),
	VERT( 0x4104f279, 0x40702351, 0xc14ac0d8 ),
	NORM( 0x3f3f106d, 0x3ef16668, 0xbef08437 ),
	NFlagsW( 3, 52.175777 ),
	VERT( 0x40bbe342, 0x406bbbf0, 0xc1442ab8 ),
	NORM( 0xbf481ee9, 0x3e9d5090, 0xbf0aed4b ),
	NFlagsW( 4, 81.130775 ),
	VERT( 0x40c9b682, 0x406eedc4, 0xc14d6a6a ),
	NORM( 0xbf4b6f2b, 0x3ec4faf4, 0xbef06af5 ),
	NFlagsW( 5, 54.071445 ),
	VERT( 0x41017a11, 0x406cea00, 0xc14d1f2a ),
	NORM( 0x3f1d41c4, 0x3f0935db, 0xbf14415a ),
	NFlagsW( 6, 50.424320 ),
	VERT( 0x40e06122, 0x407244df, 0xc15f16c7 ),
	NORM( 0xbe5828ac, 0x3f7315da, 0xbe6d7e54 ),
	NFlagsW( 7, 46.835182 ),
	VERT( 0x40de8792, 0x406fd036, 0xc1630a2a ),
	NORM( 0xbe7d212c, 0x3f75f05f, 0xbe0153d9 ),
	NFlagsW( 8, 45.207401 ),
	VERT( 0x40de96c2, 0x406c7c40, 0xc166fcd4 ),
	NORM( 0xbeab8fe1, 0x3f6aa2c1, 0xbe5f8eea ),
	NFlagsW( 9, 42.790569 ),
	VERT( 0x40e73372, 0x406fc8c0, 0xc16fc643 ),
	NORM( 0xbe08a733, 0x3f7b2267, 0xbe103e48 ),
	NFlagsW( 10, 29.410061 ),
	VERT( 0x41013f51, 0x40652c98, 0xc1571c0e ),
	NORM( 0x3f3a5384, 0x3f247a58, 0xbe757562 ),
	NFlagsW( 11, 48.402061 ),
	VERT( 0x40fd5bb2, 0x406292a0, 0xc15d5796 ),
	NORM( 0x3f22f631, 0x3f40e3f0, 0xbe286be1 ),
	NFlagsW( 12, 46.694263 ),
	VERT( 0x41004431, 0x405fb600, 0xc163447c ),
	NORM( 0x3f3f3470, 0x3f13e74a, 0xbea889f2 ),
	NFlagsW( 13, 42.180038 ),
	VERT( 0x40fa83b2, 0x405c6e4a, 0xc165bbaf ),
	NORM( 0x3f0c6225, 0x3f4d82d1, 0xbe6fcb05 ),
	NFlagsW( 14, 41.404480 ),
	VERT( 0x40eb2462, 0x4061a405, 0xc17c79de ),
	NORM( 0xbd199f83, 0x3f70ef24, 0xbeabfbac ),
	NFlagsW( 15, 8.987299 ),
	VERT( 0x40cf0b42, 0x40561c1a, 0xc16485ff ),
	NORM( 0xbf4f33b8, 0x3f0ed537, 0xbe3bb44c ),
	NFlagsW( 16, 47.094719 ),
	VERT( 0x41024019, 0x4055a847, 0xc168b0f5 ),
	NORM( 0x3f379886, 0x3f1b0ed9, 0x3eb0790d ),
	NFlagsW( 17, 35.655888 ),
	VERT( 0x40c93a82, 0x4049bd24, 0xc156a5a9 ),
	NORM( 0xbf5fd168, 0x3ea62f2a, 0xbeb8cb3a ),
	NFlagsW( 18, 49.903046 ),
	VERT( 0x40ce0f12, 0x40459855, 0xc15c24df ),
	NORM( 0xbf6675cc, 0x3ed43ae7, 0xbe0873a0 ),
	NFlagsW( 19, 49.603504 ),
	VERT( 0x40badde2, 0x40357a2b, 0xc1425b5f ),
	NORM( 0xbf54a7e1, 0x3c8a51eb, 0xbf0e75c3 ),
	NFlagsW( 20, 73.396721 ),
	VERT( 0x4104df59, 0x404b3750, 0xc17e626b ),
	NORM( 0x3f2ff931, 0x3f2e3600, 0xbe81ec35 ),
	NFlagsW( 21, 3.236330 ),
	VERT( 0x40d82982, 0x4045b203, 0xc1745f84 ),
	NORM( 0xbf67a21c, 0x3eb04d69, 0xbe803d86 ),
	NFlagsW( 22, 32.475361 ),
	VERT( 0x40deb1a2, 0x4049701d, 0xc1815ec2 ),
	NORM( 0xbf4d0b5f, 0x3ee97fb4, 0xbec69e57 ),
	NFlagsW( 23, 6.309459 ),
	VERT( 0x40d544d2, 0x403d1475, 0xc16d28bf ),
	NORM( 0xbf6062b8, 0x3ec225ad, 0xbe97d6dc ),
	NFlagsW( 24, 43.332802 ),
	VERT( 0x40df48c2, 0x404305fe, 0xc1817c3c ),
	NORM( 0xbf7effb9, 0x3d18f419, 0xbda3fc6b ),
	NFlagsW( 25, 6.451746 ),
	VERT( 0x40da5472, 0x403dc572, 0xc1763245 ),
	NORM( 0xbf710074, 0x3c23a107, 0xbeac996e ),
	NFlagsW( 26, 29.901886 ),
	VERT( 0x40ebdeb2, 0x40450f0e, 0xc1849b07 ),
	NORM( 0xbda61033, 0x3f3b9b2a, 0xbf2cf13f ),
	NFlagsW( 27, 1.232661 ),
	VERT( 0x40c0beb2, 0x40287ebd, 0xc14b6258 ),
	NORM( 0xbf7831df, 0xbc3bebea, 0xbe7aa793 ),
	NFlagsW( 28, 50.950207 ),
	VERT( 0x41046089, 0x402b3d76, 0xc166e6af ),
	NORM( 0x3f539821, 0x3de7bf52, 0x3f0d27ad ),
	NFlagsW( 29, 42.368023 ),
	VERT( 0x40c44612, 0x402230bf, 0xc154ec5b ),
	NORM( 0xbf7616f6, 0x3c031456, 0xbe8d053b ),
	NFlagsW( 30, 49.999897 ),
	VERT( 0x4102f9c1, 0x40343e44, 0xc183d6e8 ),
	NORM( 0x3f1e7494, 0x3f062fd2, 0xbf15bd41 ),
	NFlagsW( 31, 0.803452 ),
	VERT( 0x40c64d82, 0x4021d80c, 0xc162e185 ),
	NORM( 0xbf7ec46a, 0x3cfb857c, 0xbdbea487 ),
	NFlagsW( 32, 49.468388 ),
	VERT( 0x41094c09, 0x401772c9, 0xc149c99d ),
	NORM( 0x3f79693f, 0xbc4eb2cd, 0xbe667769 ),
	NFlagsW( 33, 50.000000 ),
	VERT( 0x40e03622, 0x402eb24c, 0xc1842561 ),
	NORM( 0xbe8ed5b4, 0x3f0496e1, 0xbf4f0416 ),
	NFlagsW( 34, 3.033247 ),
	VERT( 0x40c93322, 0x401d1024, 0xc15a922d ),
	NORM( 0xbf7c9b38, 0xbc0e6d65, 0xbe25f1f9 ),
	NFlagsW( 35, 49.979347 ),
	VERT( 0x40dae3d2, 0x402e01a0, 0xc184a37b ),
	NORM( 0xbf0b428b, 0x3f069ea6, 0xbf27646d ),
	NFlagsW( 36, 2.941427 ),
	VERT( 0x40ea7432, 0x402ee2b1, 0xc1869ccf ),
	NORM( 0xbe3e910a, 0x3ed4fa07, 0xbf63dfb8 ),
	NFlagsW( 37, 0.727520 ),
	VERT( 0x4106c189, 0x401a93e0, 0xc158e05d ),
	NORM( 0x3f6f693f, 0xbd1bced7, 0xbeb442c9 ),
	NFlagsW( 38, 49.784870 ),
	VERT( 0x4102c461, 0x401c2782, 0xc15d4bad ),
	NORM( 0x3f7b1b1a, 0xbd59dbde, 0xbe3faf5e ),
	NFlagsW( 39, 49.436661 ),
	VERT( 0x41049361, 0x401ace04, 0xc160ab33 ),
	NORM( 0x3f7f35c8, 0xbd9db9c4, 0xbc78c32f ),
	NFlagsW( 40, 48.280727 ),
	VERT( 0x41078e09, 0x4013503e, 0xc14eeaa3 ),
	NORM( 0x3f783eda, 0xbdc637ac, 0xbe65a6f0 ),
	NFlagsW( 41, 50.000000 ),
	VERT( 0x4101f649, 0x4027053c, 0xc1855b46 ),
	NORM( 0x3f0d7c8f, 0x3ea4b3dd, 0xbf44d073 ),
	NFlagsW( 42, 0.534385 ),
	VERT( 0x40ccd6d2, 0x401b074e, 0xc16b98c1 ),
	NORM( 0xbf72c1e1, 0x3bfcd316, 0xbea27e39 ),
	NFlagsW( 43, 47.224400 ),
	VERT( 0x41020321, 0x4015901f, 0xc16467dc ),
	NORM( 0x3f7a30e0, 0xbe58ce0c, 0xbbd34278 ),
	NFlagsW( 44, 47.239883 ),
	VERT( 0x40d03152, 0x40191e0c, 0xc1715c0e ),
	NORM( 0xbf66f732, 0x3d733c51, 0xbedab8c5 ),
	NFlagsW( 45, 42.909180 ),
	VERT( 0x40d40b92, 0x4017fd5c, 0xc1737f4e ),
	NORM( 0xbf63446a, 0x3cf4bf6b, 0xbeeb2d72 ),
	NFlagsW( 46, 40.049961 ),
	VERT( 0x40b9d322, 0x3ffbc74b, 0xc143aa3b ),
	NORM( 0xbf49641b, 0xbd974adb, 0xbf1ce860 ),
	NFlagsW( 47, 57.825748 ),
	VERT( 0x40c78992, 0x40035404, 0xc1559d2a ),
	NORM( 0xbf6870cf, 0xbeb3473b, 0xbe6bb3c1 ),
	NFlagsW( 48, 50.000000 ),
	VERT( 0x4105b571, 0x400ae018, 0xc16db825 ),
	NORM( 0x3f6de9c0, 0xbe41bc87, 0x3ea253a9 ),
	NFlagsW( 49, 35.470810 ),
	VERT( 0x41098761, 0x40102aac, 0xc17e70c0 ),
	NORM( 0x3f7e28c9, 0xbc4ee774, 0xbdf3c8da ),
	NFlagsW( 50, 4.674706 ),
	VERT( 0x40d73902, 0x400f9373, 0xc185985c ),
	NORM( 0xbf20c402, 0x3a84ff53, 0xbf473972 ),
	NFlagsW( 51, 3.114659 ),
	VERT( 0x40dca8b2, 0x400f5877, 0xc18566ec ),
	NORM( 0xbe86a89e, 0xbc92c8ba, 0xbf76f1df ),
	NFlagsW( 52, 2.894897 ),
	VERT( 0x4101d631, 0x400e6b5a, 0xc1861082 ),
	NORM( 0x3f0ba3ba, 0xbd451b2f, 0xbf56353b ),
	NFlagsW( 53, 0.552865 ),
	VERT( 0x40cc6ef2, 0x3ff6abdd, 0xc15bc280 ),
	NORM( 0xbf61aee2, 0xbef0cf57, 0xbd2498f7 ),
	NFlagsW( 54, 49.999027 ),
	VERT( 0x40c72922, 0x3fe90bca, 0xc14d1657 ),
	NORM( 0xbf586a8b, 0xbede5c0f, 0xbe9f3cce ),
	NFlagsW( 55, 50.000000 ),
	VERT( 0x40e614a2, 0x400d334b, 0xc1877d48 ),
	NORM( 0xbe9a1c1d, 0xbbac94ae, 0xbf741fdb ),
	NFlagsW( 56, 0.877264 ),
	VERT( 0x40d3b3d2, 0x3fef7ce8, 0xc16cbbee ),
	NORM( 0xbf680031, 0xbecda9ba, 0xbe06e69f ),
	NFlagsW( 57, 47.880424 ),
	VERT( 0x40ccdd82, 0x3fe2aa2e, 0xc163fb7a ),
	NORM( 0xbf5b9203, 0xbf00b797, 0xbddc1536 ),
	NFlagsW( 58, 49.871929 ),
	VERT( 0x40f99692, 0x3fd25da2, 0xc15f4f67 ),
	NORM( 0x3eec79d7, 0xbf62a112, 0x3d5f6805 ),
	NFlagsW( 59, 49.969147 ),
	VERT( 0x40fd46a2, 0x3fd0846b, 0xc16182ac ),
	NORM( 0x3f393060, 0xbf2f57f2, 0x3db21ab0 ),
	NFlagsW( 60, 49.832600 ),
	VERT( 0x40ff4a72, 0x3fcc16a0, 0xc15c72c3 ),
	NORM( 0x3f168bab, 0xbf0c2b1d, 0xbf186599 ),
	NFlagsW( 61, 49.997250 ),
	VERT( 0x40d892f2, 0x3fdf5ed9, 0xc175cfa2 ),
	NORM( 0xbf73b4b1, 0x3ced511b, 0xbe9c0eb9 ),
	NFlagsW( 62, 39.513824 ),
	VERT( 0x4104eed1, 0x3fba5e2d, 0xc145e84e ),
	NORM( 0x3f7ded16, 0xbc8c484c, 0xbe00e437 ),
	NFlagsW( 63, 50.000000 ),
	VERT( 0x40d0c092, 0x3fc091de, 0xc14e73d1 ),
	NORM( 0xbf6a8b51, 0xbe5c6ebd, 0xbead1177 ),
	NFlagsW( 64, 50.000000 ),
	VERT( 0x40d4ea92, 0x3fc4c882, 0xc15815b5 ),
	NORM( 0xbf153661, 0xbf3e72bb, 0xbea758b0 ),
	NFlagsW( 65, 50.000000 ),
	VERT( 0x40f83a72, 0x3fc8412f, 0xc164cbee ),
	NORM( 0x3eefd2b6, 0xbf58efc8, 0x3e7ffd5a ),
	NFlagsW( 66, 49.550659 ),
	VERT( 0x40d98b32, 0x3fe40f16, 0xc1847aa8 ),
	NORM( 0xbef4b429, 0xbf07dbb8, 0xbf33304f ),
	NFlagsW( 67, 5.746803 ),
	VERT( 0x40ded262, 0x3fe2a994, 0xc183fc4b ),
	NORM( 0xbea9043c, 0xbf0ffe78, 0xbf420fe6 ),
	NFlagsW( 68, 6.013740 ),
	VERT( 0x40d61202, 0x3fd2d1a9, 0xc173de91 ),
	NORM( 0xbf6a43c9, 0xbeb45801, 0xbe49005a ),
	NFlagsW( 69, 42.841152 ),
	VERT( 0x4103d569, 0x3fe201b1, 0xc183dc41 ),
	NORM( 0x3f1de6f5, 0xbe8d00ef, 0xbf3cc3f2 ),
	NFlagsW( 70, 1.746224 ),
	VERT( 0x41000dd9, 0x3fb83c8b, 0xc153c2b1 ),
	NORM( 0x3f7864ea, 0x3d84d117, 0xbe6eafda ),
	NFlagsW( 71, 50.000000 ),
	VERT( 0x40dbf972, 0x3fb4b0be, 0xc15d3cbe ),
	NORM( 0xbe29d9b2, 0xbf75ff38, 0x3e62ecfc ),
	NFlagsW( 72, 50.000000 ),
	VERT( 0x40e8ff42, 0x3fd8d733, 0xc186718f ),
	NORM( 0xbe4d6bae, 0xbef937f8, 0xbf59a634 ),
	NFlagsW( 73, 1.786869 ),
	VERT( 0x40dab762, 0x3fb3ffdd, 0xc1617487 ),
	NORM( 0xbe99922c, 0xbf738d7d, 0x3d8f9451 ),
	NFlagsW( 74, 49.992702 ),
	VERT( 0x40db3732, 0x3fa4ffb1, 0xc1523c61 ),
	NORM( 0xbe22fd6a, 0x3f7cb7a4, 0xbc45e423 ),
	NFlagsW( 75, 50.000000 ),
	VERT( 0x40bab272, 0x3f94c8f3, 0xc13f9e91 ),
	NORM( 0xbf3d2cd8, 0xbe5cffa6, 0xbf2363d3 ),
	NFlagsW( 76, 67.812973 ),
	VERT( 0x40cdbfb2, 0x3f9e2639, 0xc14ceaa1 ),
	NORM( 0xbf5eb4fe, 0x3e930f56, 0xbecd3d9a ),
	NFlagsW( 77, 50.000000 ),
	VERT( 0x40db8aa2, 0x3fb12b39, 0xc168a254 ),
	NORM( 0xbedff9d4, 0xbf65bb61, 0x3d6c3ad7 ),
	NFlagsW( 78, 49.572121 ),
	VERT( 0x41052501, 0x3fc41d17, 0xc182b593 ),
	NORM( 0x3f2a95ed, 0xbf118312, 0xbef715c9 ),
	NFlagsW( 79, 2.849809 ),
	VERT( 0x40dd13e2, 0x3fc1b571, 0xc1813c73 ),
	NORM( 0xbf7ee673, 0xbcfd55cd, 0xbdb2c003 ),
	NFlagsW( 80, 15.373424 ),
	VERT( 0x4101f259, 0x3fb0bca9, 0xc16c9194 ),
	NORM( 0x3f1f2941, 0xbf2f83d8, 0x3ec1e369 ),
	NFlagsW( 81, 44.195263 ),
	VERT( 0x40e84522, 0x3fa00644, 0xc15eaa5e ),
	NORM( 0xbe9765d1, 0x3f6fa18c, 0xbe433f88 ),
	NFlagsW( 82, 49.999992 ),
	VERT( 0x40f867a2, 0x3f97bd75, 0xc15854d2 ),
	NORM( 0x3ecba5ae, 0x3f6ad6c5, 0x3c8a4720 ),
	NFlagsW( 83, 50.000000 ),
	VERT( 0x40dc3322, 0x3fb555e1, 0xc181120e ),
	NORM( 0xbf5950c5, 0xbee0602a, 0xbe975031 ),
	NFlagsW( 84, 16.656801 ),
	VERT( 0x40f635f2, 0x3fa1bc0f, 0xc16b1d46 ),
	NORM( 0xbe13c79a, 0x3f7a66a4, 0xbe196274 ),
	NFlagsW( 85, 47.809563 ),
	VERT( 0x40eb7c92, 0x3f9b3cb6, 0xc164dc97 ),
	NORM( 0xbeaf7d1f, 0x3f6c66a2, 0xbe30b400 ),
	NFlagsW( 86, 49.904537 ),
	VERT( 0x40cf2e12, 0x3f8abd27, 0xc1505183 ),
	NORM( 0xbf31c5cb, 0x3f0244e3, 0xbf023dcf ),
	NFlagsW( 87, 50.000000 ),
	VERT( 0x41038db9, 0x3fac0d02, 0xc17d966b ),
	NORM( 0x3f1c950c, 0xbf49fe0b, 0xbd6bb88f ),
	NFlagsW( 88, 12.150705 ),
	VERT( 0x40e97632, 0x3fb1bbd5, 0xc18451d3 ),
	NORM( 0xbe25bcaa, 0xbf471ca6, 0xbf1b7a94 ),
	NFlagsW( 89, 4.724586 ),
	VERT( 0x40fc5c22, 0x3f8d0ed6, 0xc15cf498 ),
	NORM( 0x3f399005, 0x3f30352b, 0x3ce9f2fa ),
	NFlagsW( 90, 50.000000 ),
	VERT( 0x410b02d9, 0x3f7767e9, 0xc14afc1b ),
	NORM( 0x3f648d00, 0x3d92b00d, 0x3ee3b8e5 ),
	NFlagsW( 91, 50.000000 ),
	VERT( 0x40fadbb2, 0x3f97d88e, 0xc170196a ),
	NORM( 0xbd9a84e8, 0x3f6e9742, 0xbeb5850a ),
	NFlagsW( 92, 42.624557 ),
	VERT( 0x4102a549, 0x3f81a262, 0xc1555ddc ),
	NORM( 0x3f2b0033, 0x3eedcacd, 0xbf14db78 ),
	NFlagsW( 93, 50.000000 ),
	VERT( 0x40e3b952, 0x3f93c78c, 0xc170339a ),
	NORM( 0xbe8f220d, 0xbf729e29, 0x3e1d8643 ),
	NFlagsW( 94, 46.273060 ),
	VERT( 0x40fc68e2, 0x3f87ac08, 0xc1617990 ),
	NORM( 0x3f1c313c, 0x3f4568ff, 0x3e3a4d0c ),
	NFlagsW( 95, 49.981770 ),
	VERT( 0x40c1df82, 0x3f59d1ac, 0xc14812e8 ),
	NORM( 0xbf5f4f16, 0x3ef89600, 0xbd6d80fe ),
	NFlagsW( 96, 50.024120 ),
	VERT( 0x40dfac02, 0x3f716d0b, 0xc15d5705 ),
	NORM( 0xbf3d8a71, 0x3f1172bd, 0xbeb7e72b ),
	NFlagsW( 97, 50.000000 ),
	VERT( 0x41079011, 0x3f7ab83b, 0xc16951a3 ),
	NORM( 0x3f281ca5, 0x3f2bd826, 0x3eaffff5 ),
	NFlagsW( 98, 46.582798 ),
	VERT( 0x40e7a162, 0x3f8ab8c1, 0xc17b9441 ),
	NORM( 0xbe4c6884, 0xbf79ec0b, 0xbdac3f10 ),
	NFlagsW( 99, 28.142941 ),
	VERT( 0x4108ac51, 0x3f723f1a, 0xc16e7920 ),
	NORM( 0x3f368333, 0x3f316eb5, 0xbdda0f9c ),
	NFlagsW( 100, 39.748158 ),
	VERT( 0x40ee3f82, 0x3f64dc8a, 0xc16e8ae3 ),
	NORM( 0xbf322246, 0x3ed30af7, 0xbf169066 ),
	NFlagsW( 101, 46.978462 ),
	VERT( 0x40f5d792, 0x3f691825, 0xc1740f58 ),
	NORM( 0xbf3c9f2b, 0x3eb8687d, 0xbf127abf ),
	NFlagsW( 102, 38.937149 ),
	VERT( 0x40ffccb2, 0x3f6f03bf, 0xc177f41c ),
	NORM( 0xbd77e7e6, 0x3f367efa, 0xbf32dc57 ),
	NFlagsW( 103, 27.874262 ),
	VERT( 0x40e46b92, 0x3f535543, 0xc169e319 ),
	NORM( 0xbf49a152, 0x3ec44681, 0xbef6fbe0 ),
	NFlagsW( 104, 49.546700 ),
	VERT( 0x40f668d2, 0x3f5c6794, 0xc1744155 ),
	NORM( 0xbf720faf, 0xbc000a52, 0xbea697fe ),
	NFlagsW( 105, 38.612335 ),
	VERT( 0x40c1a0a2, 0x3f140d8d, 0xc147308e ),
	NORM( 0xbf75b9ef, 0x3d6478c2, 0xbe8cb8eb ),
	NFlagsW( 106, 50.040989 ),
	VERT( 0x40f19d62, 0x3f505258, 0xc17047e3 ),
	NORM( 0xbf4f3e1e, 0x3c0abe2b, 0xbf1645bd ),
	NFlagsW( 107, 45.168911 ),
	VERT( 0x40c748f2, 0x3f1896f6, 0xc14f70c4 ),
	NORM( 0xbf5fbfd2, 0x3dc92838, 0xbef3a39f ),
	NFlagsW( 108, 50.000000 ),
	VERT( 0x410b4809, 0x3f08db8a, 0xc14f0516 ),
	NORM( 0x3f7a6002, 0x3d72bd7e, 0xbe4cac5d ),
	NFlagsW( 109, 50.000000 ),
	VERT( 0x40ff4522, 0x3f16132a, 0xc15bde28 ),
	NORM( 0x3f7b833b, 0xbe1a457f, 0x3de0d841 ),
	NFlagsW( 110, 50.000000 ),
	VERT( 0x4105f4c9, 0x3f11d716, 0xc159b25c ),
	NORM( 0x3f3014bc, 0x3e0570f7, 0xbf36ceba ),
	NFlagsW( 111, 50.000000 ),
	VERT( 0x4108b4f1, 0x3f3c04e1, 0xc175fe9f ),
	NORM( 0x3f326f7d, 0x3f0b9ffd, 0xbeee5782 ),
	NFlagsW( 112, 25.761705 ),
	VERT( 0x40d67e82, 0x3f10f5d7, 0xc15cc463 ),
	NORM( 0xbf612b0e, 0x3da83a3e, 0xbeeff14d ),
	NFlagsW( 113, 50.000000 ),
	VERT( 0x40bb91c2, 0x3eb72ac5, 0xc13b92ef ),
	NORM( 0xbf58352c, 0xbc6782fa, 0xbf09079f ),
	NFlagsW( 114, 89.363014 ),
	VERT( 0x41014d89, 0x3f04a9e7, 0xc15ca8d1 ),
	NORM( 0x3f601cf7, 0xbddb01f6, 0x3ef1541a ),
	NFlagsW( 115, 50.000000 ),
	VERT( 0x40f93c12, 0x3f246ee9, 0xc177ffc7 ),
	NORM( 0xbe2ff584, 0x3ef6c73b, 0xbf5bf20e ),
	NFlagsW( 116, 31.209433 ),
	VERT( 0x41002891, 0x3f271212, 0xc17a89cb ),
	NORM( 0xbdd541ea, 0x3ebfbf4c, 0xbf6bde2c ),
	NFlagsW( 117, 23.065628 ),
	VERT( 0x40f63642, 0x3f213f25, 0xc1790092 ),
	NORM( 0xbe61d41f, 0x3ee6d8fe, 0xbf5d6b03 ),
	NFlagsW( 118, 30.190601 ),
	VERT( 0x4100e011, 0x3ef15242, 0xc1611521 ),
	NORM( 0x3f64d5a5, 0xbd963dbd, 0x3ee26f10 ),
	NFlagsW( 119, 49.998569 ),
	VERT( 0x40c0be52, 0x3e908704, 0xc1486dc0 ),
	NORM( 0xbf72fe30, 0x3c10ec38, 0xbea1102d ),
	NFlagsW( 120, 50.002956 ),
	VERT( 0x41089389, 0x3f1090ed, 0xc177fb82 ),
	NORM( 0x3f31b518, 0x3e59e9b2, 0xbf3008e6 ),
	NFlagsW( 121, 22.164825 ),
	VERT( 0x40e36fc2, 0x3ee2cbe2, 0xc168ec8e ),
	NORM( 0xbf66303f, 0x3d234363, 0xbedf1daa ),
	NFlagsW( 122, 49.801315 ),
	VERT( 0x410acc51, 0x3ecc1ba5, 0xc167b5e3 ),
	NORM( 0x3f5b2369, 0xbce7b2de, 0x3f0424cf ),
	NFlagsW( 123, 47.989086 ),
	VERT( 0x40e66652, 0x3ecebdb0, 0xc16c83cb ),
	NORM( 0xbf47a80f, 0x3d091061, 0xbf1ffff1 ),
	NFlagsW( 124, 49.002697 ),
	VERT( 0x40eae6f2, 0x3ec3c508, 0xc16e545d ),
	NORM( 0xbf437415, 0x3cf5d93a, 0xbf2526ba ),
	NFlagsW( 125, 47.950195 ),
	VERT( 0x40cd8392, 0x3e2c4d04, 0xc1527e3e ),
	NORM( 0xbf4d852c, 0xbd284417, 0xbf1845b9 ),
	NFlagsW( 126, 50.000000 ),
	VERT( 0x410ba671, 0x3ea532e0, 0xc16fb6a1 ),
	NORM( 0x3f7f25f9, 0xbd67f842, 0xbd7012f7 ),
	NFlagsW( 127, 37.691792 ),
	VERT( 0x4109e0e1, 0x3daf7e18, 0xc15038af ),
	NORM( 0x3f6b3395, 0xbcf0bad1, 0xbec99726 ),
	NFlagsW( 128, 50.000000 ),
	VERT( 0x40de03c2, 0x3e0b784c, 0xc15d6384 ),
	NORM( 0xbf4ad961, 0xbf0065f7, 0xbeb1c9cf ),
	NFlagsW( 129, 50.000000 ),
	VERT( 0x40b80e11, 0xbda1d971, 0xc13abb92 ),
	NORM( 0xbf5a1a40, 0x3de5ffa0, 0xbf02ec33 ),
	NFlagsW( 130, 93.883453 ),
	VERT( 0x40f75da2, 0x3e8c8ad7, 0xc178fd94 ),
	NORM( 0xbe0bed53, 0xbce1f1c4, 0xbf7d8018 ),
	NFlagsW( 131, 30.494843 ),
	VERT( 0x40f3e462, 0x3e8bc430, 0xc17996ba ),
	NORM( 0xbee09ee6, 0xbca17f57, 0xbf65fe4b ),
	NFlagsW( 132, 30.420420 ),
	VERT( 0x410762f9, 0x3e80b13e, 0xc178e822 ),
	NORM( 0x3f211693, 0xbd1f753f, 0xbf46b6cd ),
	NFlagsW( 133, 21.811989 ),
	VERT( 0x40fead92, 0x3e74461b, 0xc17c116c ),
	NORM( 0xbe37b3b0, 0xbcf9feb5, 0xbf7bb9c9 ),
	NFlagsW( 134, 21.191317 ),
	VERT( 0x41019099, 0x3bc82e45, 0xc15ab64d ),
	NORM( 0x3ebaacd5, 0xbe902711, 0xbf63386b ),
	NFlagsW( 135, 50.000000 ),
	VERT( 0x40f6cb72, 0xbc9579ee, 0xc15b0f91 ),
	NORM( 0x3e8f7fe5, 0xbf7496db, 0x3dbdfe6a ),
	NFlagsW( 136, 50.000000 ),
	VERT( 0x40cc3c22, 0xbdc376a1, 0xc1530fbf ),
	NORM( 0xbf39a0f1, 0xbe29c713, 0xbf2b1a92 ),
	NFlagsW( 137, 50.000000 ),
	VERT( 0x40e36de2, 0x3d1e86a5, 0xc16a01ee ),
	NORM( 0xbf5a71e2, 0xbea790a5, 0xbecfd49f ),
	NFlagsW( 138, 49.705952 ),
	VERT( 0x40da8cf2, 0xbd9c50a1, 0xc1581e21 ),
	NORM( 0xbec4b946, 0xbf5f7a19, 0xbe99dee6 ),
	NFlagsW( 139, 50.000000 ),
	VERT( 0x40fa8b82, 0xbd83d7f1, 0xc15ddc57 ),
	NORM( 0x3f1cc87d, 0xbf37ab4b, 0x3ea9f2eb ),
	NFlagsW( 140, 50.000000 ),
	VERT( 0x40d2fa12, 0xbe08bf26, 0xc15608b9 ),
	NORM( 0xbefd8224, 0x3e9663eb, 0xbf51520c ),
	NFlagsW( 141, 50.000000 ),
	VERT( 0x40de33e2, 0xbe277bdc, 0xc1585b87 ),
	NORM( 0xbe991311, 0x3f51d8b1, 0xbefa23d5 ),
	NFlagsW( 142, 50.000000 ),
	VERT( 0x40fabcc2, 0xbdf1f4ea, 0xc162d815 ),
	NORM( 0x3ed70d0d, 0xbf4d64e7, 0x3ed923ed ),
	NFlagsW( 143, 49.996193 ),
	VERT( 0x40e63742, 0xbe197256, 0xc15e6259 ),
	NORM( 0xbe9eb538, 0xbf7276b0, 0x3da9c733 ),
	NFlagsW( 144, 50.000000 ),
	VERT( 0x40e5c5f2, 0xbe421a5c, 0xc15b450d ),
	NORM( 0xbe5466cc, 0x3f6d0185, 0xbea1cbe3 ),
	NFlagsW( 145, 50.000000 ),
	VERT( 0x40f02762, 0xbdc5fbc9, 0xc1702e69 ),
	NORM( 0xbf4e87fe, 0x3c7cb154, 0xbf173674 ),
	NFlagsW( 146, 46.220394 ),
	VERT( 0x41083aa1, 0xbd505dc7, 0xc177e1be ),
	NORM( 0x3f304bbe, 0xbe9547e4, 0xbf29f45e ),
	NFlagsW( 147, 23.524431 ),
	VERT( 0x410b0889, 0xbe9a3927, 0xc14f0518 ),
	NORM( 0x3f6e752b, 0xbcb5ad74, 0xbeb9ebeb ),
	NFlagsW( 148, 50.000000 ),
	VERT( 0x40c3e512, 0xbeb130f8, 0xc14a3bb3 ),
	NORM( 0xbf5fa454, 0xbe3e430a, 0xbee64919 ),
	NFlagsW( 149, 50.000000 ),
	VERT( 0x40f830b2, 0xbda125e9, 0xc177e353 ),
	NORM( 0xbe7526cd, 0xbef9cdfd, 0xbf56e4be ),
	NFlagsW( 150, 32.671284 ),
	VERT( 0x40ec9602, 0xbe0d4bcd, 0xc16e69b5 ),
	NORM( 0xbf430d72, 0xbec4469d, 0xbf05a3b6 ),
	NFlagsW( 151, 47.875031 ),
	VERT( 0x40f523d2, 0xbd9fe5fa, 0xc178e374 ),
	NORM( 0xbe803bf2, 0xbf034509, 0xbf5238d6 ),
	NFlagsW( 152, 31.617746 ),
	VERT( 0x40f785c2, 0xbe56112f, 0xc1637bf3 ),
	NORM( 0xbe0101be, 0x3f7af736, 0xbe1b8a5e ),
	NFlagsW( 153, 49.993023 ),
	VERT( 0x40f92132, 0xbe966aea, 0xc15863bf ),
	NORM( 0x3d849d6d, 0x3cf7edef, 0xbf7f5861 ),
	NFlagsW( 154, 50.000000 ),
	VERT( 0x4106bb61, 0xbe44566e, 0xc16958fb ),
	NORM( 0x3f144a0e, 0xbf270827, 0x3efa2c43 ),
	NFlagsW( 155, 48.016106 ),
	VERT( 0x40eba392, 0xbe875c7f, 0xc15e65f6 ),
	NORM( 0xbe2b5af6, 0x3f6e953b, 0xbea4ab63 ),
	NFlagsW( 156, 50.000000 ),
	VERT( 0x40d2e1e2, 0xbea91244, 0xc1542288 ),
	NORM( 0xbf3d1335, 0xbe213336, 0xbf27d12e ),
	NFlagsW( 157, 50.000000 ),
	VERT( 0x4102c179, 0xbea97367, 0xc15848ec ),
	NORM( 0x3ec15c4e, 0xbeb1d922, 0xbf5bbaf7 ),
	NFlagsW( 158, 50.000000 ),
	VERT( 0x40b48a72, 0xbf040b22, 0xc139e433 ),
	NORM( 0xbf617240, 0xbd9c864a, 0xbeef6478 ),
	NFlagsW( 159, 97.160454 ),
	VERT( 0x40ff6452, 0xbe1b309a, 0xc17a6a23 ),
	NORM( 0xbe00e578, 0xbed2bc10, 0xbf671308 ),
	NFlagsW( 160, 24.584934 ),
	VERT( 0x41082fb9, 0xbe3f441a, 0xc175cf4e ),
	NORM( 0x3f2fe9be, 0xbf26dc81, 0xbea44a5f ),
	NFlagsW( 161, 28.025930 ),
	VERT( 0x40fbe822, 0xbe8e814d, 0xc167ce93 ),
	NORM( 0xbd8f1164, 0x3f6d666a, 0xbebc3a38 ),
	NFlagsW( 162, 49.619705 ),
	VERT( 0x40e96c52, 0xbe94c9a2, 0xc1662bde ),
	NORM( 0xbeebe68d, 0xbf624333, 0x3da5b650 ),
	NFlagsW( 163, 49.961498 ),
	VERT( 0x4107e459, 0xbe8310dd, 0xc16e3b9c ),
	NORM( 0x3f2c64fe, 0xbf3a8c34, 0x3dff016c ),
	NFlagsW( 164, 42.531219 ),
	VERT( 0x40f4d8c2, 0xbe656458, 0xc1741562 ),
	NORM( 0xbf6ccd4e, 0xbc936918, 0xbec250cb ),
	NFlagsW( 165, 40.532032 ),
	VERT( 0x40fd2472, 0xbed60c71, 0xc1581e81 ),
	NORM( 0x3f0aaf3a, 0x3f2324ea, 0x3f0c4f21 ),
	NFlagsW( 166, 50.000000 ),
	VERT( 0x40fd45b2, 0xbecea0b4, 0xc15abc77 ),
	NORM( 0x3efe2fe6, 0x3f5130aa, 0x3e95f871 ),
	NFlagsW( 167, 50.000000 ),
	VERT( 0x40f41d92, 0xbe95de26, 0xc173dde1 ),
	NORM( 0xbf48931b, 0xbed6a69c, 0xbeead656 ),
	NFlagsW( 168, 40.977852 ),
	VERT( 0x40de4cb2, 0xbef86d2d, 0xc1599f06 ),
	NORM( 0xbf37daa4, 0x3e777c62, 0xbf270cba ),
	NFlagsW( 169, 50.000000 ),
	VERT( 0x41077dd1, 0xbef332bd, 0xc161afa5 ),
	NORM( 0x3f261338, 0x3f2fc79f, 0x3ea801dc ),
	NFlagsW( 170, 49.953918 ),
	VERT( 0x40c3c4c2, 0xbf2a2ab8, 0xc14606b4 ),
	NORM( 0xbf5a955d, 0xbe68fccd, 0xbeefb47b ),
	NFlagsW( 171, 50.114883 ),
	VERT( 0x40fe4f22, 0xbec5eeb8, 0xc177b58e ),
	NORM( 0xbdcb6d04, 0xbf51f181, 0xbf10448e ),
	NFlagsW( 172, 30.587879 ),
	VERT( 0x40f3d2f2, 0xbeed2060, 0xc16b3eed ),
	NORM( 0xbe7be6cf, 0xbf75d09b, 0x3e075c98 ),
	NFlagsW( 173, 48.862926 ),
	VERT( 0x41088db9, 0xbf016919, 0xc166617b ),
	NORM( 0x3f360b0b, 0x3f31aa61, 0xbde6a904 ),
	NFlagsW( 174, 48.986931 ),
	VERT( 0x40f8b822, 0xbef7a0a7, 0xc16fc792 ),
	NORM( 0xbe2b9625, 0xbf7b6448, 0xbdb28ba5 ),
	NFlagsW( 175, 45.122105 ),
	VERT( 0x40f00932, 0xbf0e8f45, 0xc1667eed ),
	NORM( 0xbf299384, 0x3ec9c69f, 0xbf231985 ),
	NFlagsW( 176, 49.899319 ),
	VERT( 0x41004879, 0xbf02f1ed, 0xc16ea212 ),
	NORM( 0xbd52d523, 0x3f32985e, 0xbf36f001 ),
	NFlagsW( 177, 44.976170 ),
	VERT( 0x40f72df2, 0xbf095907, 0xc16b4314 ),
	NORM( 0xbf3722c6, 0x3eb75261, 0xbf199bbd ),
	NFlagsW( 178, 48.615818 ),
	VERT( 0x40cb3832, 0xbf3aad31, 0xc14c7f8a ),
	NORM( 0xbf54e315, 0xbe9a63f7, 0xbeeecc23 ),
	NFlagsW( 179, 50.000000 ),
	VERT( 0x40e60a32, 0xbf20a36a, 0xc162854c ),
	NORM( 0xbf4571b8, 0x3e906f2d, 0xbf1211f0 ),
	NFlagsW( 180, 49.999462 ),
	VERT( 0x40f7b4d2, 0xbf155e2a, 0xc16b6ed1 ),
	NORM( 0xbf6f33d4, 0xbbf33cab, 0xbeb65e6e ),
	NFlagsW( 181, 48.461990 ),
	VERT( 0x410b0559, 0xbf48ef40, 0xc14bfcf5 ),
	NORM( 0x3f6f512b, 0xbe1a220c, 0xbea4a9e6 ),
	NFlagsW( 182, 50.000000 ),
	VERT( 0x40f32dc2, 0xbf2184f5, 0xc167fc21 ),
	NORM( 0xbf4926e4, 0x3c3631e7, 0xbf1e5268 ),
	NFlagsW( 183, 49.684143 ),
	VERT( 0x4105df09, 0xbf594a04, 0xc152c223 ),
	NORM( 0x3f05fe92, 0xbec61a80, 0xbf42587c ),
	NFlagsW( 184, 50.000000 ),
	VERT( 0x410001a9, 0xbf59fd47, 0xc153acf6 ),
	NORM( 0x3f4de784, 0xbebe6c67, 0xbeed44c4 ),
	NFlagsW( 185, 50.000000 ),
	VERT( 0x410896f1, 0xbf333b1f, 0xc16cebdd ),
	NORM( 0x3f309849, 0x3f0980f9, 0xbef88a36 ),
	NFlagsW( 186, 43.029102 ),
	VERT( 0x40d5c792, 0xbf652f7f, 0xc1577f08 ),
	NORM( 0xbf5a20ac, 0xbe7ef66b, 0xbeebbdd5 ),
	NFlagsW( 187, 50.000000 ),
	VERT( 0x4101a3e9, 0xbf6a5e72, 0xc1569210 ),
	NORM( 0x3f7b5262, 0x3bbfee10, 0x3e42c6d6 ),
	NFlagsW( 188, 50.000000 ),
	VERT( 0x40fa64e2, 0xbf4959c7, 0xc16eae0a ),
	NORM( 0xbe2a95c4, 0x3ee792e8, 0xbf604ce9 ),
	NFlagsW( 189, 45.480202 ),
	VERT( 0x410086e1, 0xbf467558, 0xc170e1a8 ),
	NORM( 0xbdce1600, 0x3eb4ae2f, 0xbf6e240b ),
	NFlagsW( 190, 41.381798 ),
	VERT( 0x40c2f782, 0xbf83ef67, 0xc14672e7 ),
	NORM( 0xbf51d327, 0xbe6cfb67, 0xbf062995 ),
	NFlagsW( 191, 50.198318 ),
	VERT( 0x40f788c2, 0xbf4c13b6, 0xc16f8aa1 ),
	NORM( 0xbe6b7531, 0x3ee0bafd, 0xbf5e5cc6 ),
	NFlagsW( 192, 45.035641 ),
	VERT( 0x41014179, 0xbf70e5ae, 0xc158af72 ),
	NORM( 0x3f6e01c6, 0x3c00afa4, 0x3ebc8467 ),
	NFlagsW( 193, 50.000000 ),
	VERT( 0x410875a9, 0xbf5c0a12, 0xc16eaa0a ),
	NORM( 0x3f2dbc89, 0x3e4fcfae, 0xbf34b342 ),
	NFlagsW( 194, 39.946194 ),
	VERT( 0x40e5df82, 0xbf7d2ce8, 0xc161a4b6 ),
	NORM( 0xbf5e05cd, 0x3d27432f, 0xbefe0762 ),
	NFlagsW( 195, 49.998985 ),
	VERT( 0x410a9321, 0xbf828ab0, 0xc15ffd13 ),
	NORM( 0x3f619e05, 0xbc1c9838, 0x3ef1e21f ),
	NFlagsW( 196, 49.843094 ),
	VERT( 0x40e8a762, 0xbf828584, 0xc164ba43 ),
	NORM( 0xbf415d31, 0x3c4a9c93, 0xbf27bd2b ),
	NFlagsW( 197, 49.955143 ),
	VERT( 0x40bae0d2, 0xbfa906f0, 0xc136c4a9 ),
	NORM( 0xbf58764f, 0xbe97e12c, 0xbee34611 ),
	NFlagsW( 198, 99.806694 ),
	VERT( 0x40ecdd02, 0xbf84d457, 0xc16648db ),
	NORM( 0xbf3d8f8c, 0x3ce76273, 0xbf2be708 ),
	NFlagsW( 199, 49.839611 ),
	VERT( 0x40d1a682, 0xbf99be4a, 0xc14c6c2d ),
	NORM( 0xbf374f06, 0xbef4a63c, 0xbf02457f ),
	NFlagsW( 200, 50.000000 ),
	VERT( 0x4109e179, 0xbfa21221, 0xc149310b ),
	NORM( 0x3f50824b, 0xbeac5543, 0xbef1f3f8 ),
	NFlagsW( 201, 50.000000 ),
	VERT( 0x410b5d29, 0xbf8be604, 0xc1677620 ),
	NORM( 0x3f7ee888, 0xbd6b411e, 0xbd93d9e4 ),
	NFlagsW( 202, 46.453121 ),
	VERT( 0x40df9a92, 0xbf9d517e, 0xc15773c7 ),
	NORM( 0xbf41c870, 0xbf1db321, 0xbe5f3fe8 ),
	NFlagsW( 203, 50.000000 ),
	VERT( 0x40f8a362, 0xbf90db1e, 0xc16f8866 ),
	NORM( 0xbe0a7d96, 0xbcd71d9c, 0xbf7d8f12 ),
	NFlagsW( 204, 43.978443 ),
	VERT( 0x40f55742, 0xbf90f82d, 0xc1700a93 ),
	NORM( 0xbee1ed1a, 0xbc8d3509, 0xbf65afbf ),
	NFlagsW( 205, 44.010128 ),
	VERT( 0x4101cdb1, 0xbfad06d3, 0xc14e4314 ),
	NORM( 0x3e805645, 0xbf2eac97, 0xbf2fce07 ),
	NFlagsW( 206, 50.000000 ),
	VERT( 0x41075671, 0xbf93a744, 0xc16f765c ),
	NORM( 0x3f1bad53, 0xbd1a96b5, 0xbf4afef0 ),
	NFlagsW( 207, 38.004711 ),
	VERT( 0x40ff8432, 0xbf94e5f8, 0xc17232b0 ),
	NORM( 0xbe31d6d5, 0xbce772da, 0xbf7c0189 ),
	NFlagsW( 208, 38.292336 ),
	VERT( 0x40f76b92, 0xbfafc5e4, 0xc14ff43e ),
	NORM( 0x3e8de459, 0xbf75cfe2, 0xbd0e48e9 ),
	NFlagsW( 209, 50.000000 ),
	VERT( 0x40d2b012, 0xbfb63f0d, 0xc14843b8 ),
	NORM( 0xbee3048a, 0xbf4b6c08, 0xbed45523 ),
	NFlagsW( 210, 50.000931 ),
	VERT( 0x40d2b8b2, 0xbfb7f7ff, 0xc147e5cb ),
	NORM( 0xbf234fb5, 0xbeb2f021, 0xbf2fac18 ),
	NFlagsW( 211, 50.003368 ),
	VERT( 0x40dbba22, 0xbfb8677c, 0xc14e2a9b ),
	NORM( 0xbe9f9624, 0xbf708b6e, 0xbe10a111 ),
	NFlagsW( 212, 50.000000 ),
	VERT( 0x40fbb7a2, 0xbfb3b3b5, 0xc15521e0 ),
	NORM( 0x3f20fb52, 0xbf33892a, 0x3eabe768 ),
	NFlagsW( 213, 50.000000 ),
	VERT( 0x40dd7e82, 0xbfbbc877, 0xc14af327 ),
	NORM( 0xbe5074d1, 0x3f6391c4, 0xbed211b9 ),
	NFlagsW( 214, 50.000000 ),
	VERT( 0x40e5dc62, 0xbfaebc5d, 0xc162565f ),
	NORM( 0xbf5217df, 0xbebc0bf1, 0xbee01c8f ),
	NFlagsW( 215, 49.980839 ),
	VERT( 0x40fbf282, 0xbfbd582d, 0xc1584b87 ),
	NORM( 0x3ee0b88b, 0xbf490e6f, 0x3edf7e91 ),
	NFlagsW( 216, 50.000000 ),
	VERT( 0x40e5e522, 0xbfc64aeb, 0xc14f0c2b ),
	NORM( 0xbe2e3dc7, 0x3f6d054b, 0xbeacbd2a ),
	NFlagsW( 217, 50.000000 ),
	VERT( 0x40f8bea2, 0xbfcc2470, 0xc14a6d7c ),
	NORM( 0x3ea44e97, 0x3f4e7b97, 0xbefe2dc2 ),
	NFlagsW( 218, 50.000000 ),
	VERT( 0x40e6b322, 0xbfc45439, 0xc1571b23 ),
	NORM( 0xbebeabf5, 0xbf6d1536, 0x3d77460d ),
	NFlagsW( 219, 50.000000 ),
	VERT( 0x40f75c02, 0xbfc4940f, 0xc1583760 ),
	NORM( 0xbe08c769, 0x3f7a0669, 0xbe2c3d9a ),
	NFlagsW( 220, 50.000000 ),
	VERT( 0x410aab91, 0xbfd36045, 0xc145ffdd ),
	NORM( 0x3f4e6bdb, 0xbe43c2ca, 0xbf0f4966 ),
	NFlagsW( 221, 50.000000 ),
	VERT( 0x41029a51, 0xbfd154ea, 0xc1494c8f ),
	NORM( 0x3e772a10, 0xbee6dac4, 0xbf5bfcbd ),
	NFlagsW( 222, 50.000000 ),
	VERT( 0x40d2c5c2, 0xbfd2b334, 0xc1487f9e ),
	NORM( 0xbf347c42, 0x3e25b3f7, 0xbf30c32b ),
	NFlagsW( 223, 50.007206 ),
	VERT( 0x40eb73e2, 0xbfcb3438, 0xc152ca8d ),
	NORM( 0xbe71f348, 0x3f705fcc, 0xbe8005e5 ),
	NFlagsW( 224, 50.000000 ),
	VERT( 0x41082211, 0xbfb81ffe, 0xc16e912a ),
	NORM( 0x3f2c8a63, 0xbe8f447e, 0xbf2f06d4 ),
	NFlagsW( 225, 37.340973 ),
	VERT( 0x40f1ce72, 0xbfbe4c60, 0xc167e250 ),
	NORM( 0xbf48c996, 0x3c09833c, 0xbf1ecb7a ),
	NFlagsW( 226, 49.126366 ),
	VERT( 0x40f96982, 0xbfbb73c3, 0xc16e9285 ),
	NORM( 0xbe6acc64, 0xbee99c9d, 0xbf5c1b32 ),
	NFlagsW( 227, 43.762001 ),
	VERT( 0x40f68612, 0xbfbb4cdc, 0xc16f6e6f ),
	NORM( 0xbe859aa6, 0xbefecbfa, 0xbf53c314 ),
	NFlagsW( 228, 43.338318 ),
	VERT( 0x40c58672, 0xbfdfda32, 0xc140c7c0 ),
	NORM( 0xbf5e09e6, 0xbcd356bc, 0xbefe7d53 ),
	NFlagsW( 229, 61.979031 ),
	VERT( 0x40ee70a2, 0xbfc39749, 0xc166569d ),
	NORM( 0xbf3f9ebc, 0xbec648b6, 0xbf09cca5 ),
	NFlagsW( 230, 49.548325 ),
	VERT( 0x40fbc0c2, 0xbfcd04f6, 0xc15c2b65 ),
	NORM( 0xbd8173f8, 0x3f6c0308, 0xbec3adce ),
	NFlagsW( 231, 49.999184 ),
	VERT( 0x4106bfe1, 0xbfca0a0d, 0xc1617da2 ),
	NORM( 0x3f1a207e, 0xbf2c7978, 0x3edb64d0 ),
	NFlagsW( 232, 49.402149 ),
	VERT( 0x40fd2122, 0xbfdd264f, 0xc14f374b ),
	NORM( 0x3ef1650e, 0x3f5229f2, 0x3ea4ea9b ),
	NFlagsW( 233, 50.000000 ),
	VERT( 0x410017c9, 0xbfc3f7db, 0xc170c313 ),
	NORM( 0xbdf8b583, 0xbec616b3, 0xbf6a020a ),
	NFlagsW( 234, 38.638081 ),
	VERT( 0x40fce413, 0xbfdfd4b3, 0xc14d42b6 ),
	NORM( 0x3f352b3c, 0x3f339d7c, 0x3daa22f5 ),
	NFlagsW( 235, 50.000000 ),
	VERT( 0x40eb8672, 0xbfd48d74, 0xc15d4aea ),
	NORM( 0xbece620f, 0xbf68d995, 0x3dced679 ),
	NFlagsW( 236, 49.999367 ),
	VERT( 0x410819d9, 0xbfc8cdaa, 0xc16cbdc8 ),
	NORM( 0x3f2e5ef0, 0xbf2518b3, 0xbeb1785e ),
	NFlagsW( 237, 39.566574 ),
	VERT( 0x40f63bf2, 0xbfcd4cf8, 0xc16b43b3 ),
	NORM( 0xbf6943b5, 0xbca0a102, 0xbed2b2ea ),
	NFlagsW( 238, 46.882187 ),
	VERT( 0x4107d161, 0xbfd1e36e, 0xc1662501 ),
	NORM( 0x3f2bf6fb, 0xbf3b688a, 0x3de829ab ),
	NFlagsW( 239, 46.894188 ),
	VERT( 0x40dc3082, 0xbfea9fde, 0xc14e7097 ),
	NORM( 0xbf32f0fb, 0x3eae5774, 0xbf20fd03 ),
	NFlagsW( 240, 50.000000 ),
	VERT( 0x40f58d22, 0xbfd5ab16, 0xc16b1220 ),
	NORM( 0xbf43cfe4, 0xbed6564a, 0xbefaaaf9 ),
	NFlagsW( 241, 46.910553 ),
	VERT( 0x410768d9, 0xbfe6cb96, 0xc1569081 ),
	NORM( 0x3f26d046, 0x3f3058a4, 0x3ea29eab ),
	NFlagsW( 242, 49.999573 ),
	VERT( 0x41087929, 0xbfea34d0, 0xc15adae5 ),
	NORM( 0x3f35e0df, 0x3f31d35d, 0xbde71529 ),
	NFlagsW( 243, 49.920387 ),
	VERT( 0x40ff29a2, 0xbfe0aa5c, 0xc16e65a8 ),
	NORM( 0xbdb663e0, 0xbf4e1124, 0xbf162ce4 ),
	NFlagsW( 244, 41.275665 ),
	VERT( 0x410036d1, 0xbfea3d2d, 0xc16267ef ),
	NORM( 0xbd2b6db9, 0x3f2e0315, 0xbf3b759b ),
	NFlagsW( 245, 49.467819 ),
	VERT( 0x40efe8c2, 0xbff0c7f9, 0xc15afca1 ),
	NORM( 0xbf253624, 0x3ec73a49, 0xbf2847bc ),
	NFlagsW( 246, 49.999557 ),
	VERT( 0x40f54a12, 0xbfeab13b, 0xc1632abc ),
	NORM( 0xbe795f35, 0xbf76aab2, 0x3de2f6ef ),
	NFlagsW( 247, 49.649723 ),
	VERT( 0x40f70e72, 0xbfedc8af, 0xc15f5583 ),
	NORM( 0xbf314a38, 0x3eb2ef18, 0xbf218e03 ),
	NFlagsW( 248, 49.934795 ),
	VERT( 0x40c54fd2, 0xc005425f, 0xc13d872d ),
	NORM( 0xbf73e1ae, 0xbd2696c0, 0xbe9a43c8 ),
	NFlagsW( 249, 85.518944 ),
	VERT( 0x40f9e402, 0xbfed343b, 0xc1677d7d ),
	NORM( 0xbe2ac0e0, 0xbf7b0731, 0xbdd373a7 ),
	NFlagsW( 250, 48.114311 ),
	VERT( 0x40f79792, 0xbff3be4a, 0xc15f7d78 ),
	NORM( 0xbf6cf018, 0xbca036f5, 0xbec19caf ),
	NFlagsW( 251, 49.910057 ),
	VERT( 0x40e61cc2, 0xbffa2663, 0xc15758e9 ),
	NORM( 0xbf3af487, 0x3ea35558, 0xbf1aa47a ),
	NFlagsW( 252, 50.000000 ),
	VERT( 0x40cb03a2, 0xc004ec4e, 0xc143ac0f ),
	NORM( 0xbf5a6191, 0xbc22e448, 0xbf059046 ),
	NFlagsW( 253, 54.175377 ),
	VERT( 0x40f30ed2, 0xbffa1977, 0xc15c584c ),
	NORM( 0xbf41f5fe, 0x3c4e0ea6, 0xbf270c20 ),
	NFlagsW( 254, 49.991573 ),
	VERT( 0x410ab3b2, 0xc008ae55, 0xc14308bd ),
	NORM( 0x3f5271c1, 0xbe74691d, 0xbf0458bb ),
	NFlagsW( 255, 50.810886 ),
	VERT( 0x40ffde33, 0xc009edb0, 0xc146973e ),
	NORM( 0x3f4347c3, 0xbea4bd50, 0xbf0f95e3 ),
	NFlagsW( 256, 50.012756 ),
	VERT( 0x4105b0f1, 0xc00a2eb9, 0xc1462622 ),
	NORM( 0x3eabbcf9, 0xbeb29018, 0xbf6008c0 ),
	NFlagsW( 257, 50.020374 ),
	VERT( 0x410882e9, 0xc0013c03, 0xc160d6a8 ),
	NORM( 0x3f2e7e32, 0x3f06e28a, 0xbf01fa6a ),
	NFlagsW( 258, 48.517445 ),
	VERT( 0x410193c9, 0xc00ef021, 0xc14a53c8 ),
	NORM( 0x3f7d3dbc, 0xbb901099, 0x3e15dcc5 ),
	NFlagsW( 259, 50.000000 ),
	VERT( 0x40d5f4f2, 0xc00e398b, 0xc14c7b02 ),
	NORM( 0xbf4c2842, 0xbdb4016e, 0xbf18ce3e ),
	NFlagsW( 260, 50.000008 ),
	VERT( 0x41007611, 0xc005e3fe, 0xc164742d ),
	NORM( 0xbdc56f38, 0x3ea88332, 0xbf707963 ),
	NFlagsW( 261, 48.315399 ),
	VERT( 0x40fa4322, 0xc006bb29, 0xc16271e8 ),
	NORM( 0xbe23f7bf, 0x3ed6ae69, 0xbf64c3f7 ),
	NFlagsW( 262, 49.335266 ),
	VERT( 0x40f76022, 0xc0075c95, 0xc163396b ),
	NORM( 0xbe76de26, 0x3ed8f12a, 0xbf5f850c ),
	NFlagsW( 263, 49.254875 ),
	VERT( 0x41012f69, 0xc010abac, 0xc14c9bf3 ),
	NORM( 0x3f737b1d, 0xbcdb1d8b, 0x3e9d8efd ),
	NFlagsW( 264, 50.000000 ),
	VERT( 0x41085f49, 0xc00b5b60, 0xc1627086 ),
	NORM( 0x3f29231d, 0x3e449457, 0xbf39c725 ),
	NFlagsW( 265, 47.236271 ),
	VERT( 0x40c48162, 0xc01c4497, 0xc13dea10 ),
	NORM( 0xbf657823, 0xbedaaa6d, 0xbdf37919 ),
	NFlagsW( 266, 87.794029 ),
	VERT( 0x40e55b72, 0xc01443c8, 0xc1568e66 ),
	NORM( 0xbf57922e, 0x3cfc3e20, 0xbf09d9f9 ),
	NFlagsW( 267, 49.999908 ),
	VERT( 0x410a7da9, 0xc0166423, 0xc15500df ),
	NORM( 0x3f631f82, 0xbcccad86, 0x3eebe217 ),
	NFlagsW( 268, 49.926540 ),
	VERT( 0x40e88a92, 0xc0161b0b, 0xc1595fd6 ),
	NORM( 0xbf37539c, 0x3c5b49e0, 0xbf32a644 ),
	NFlagsW( 269, 49.993359 ),
	VERT( 0x40ecbc32, 0xc0172d28, 0xc15ac893 ),
	NORM( 0xbf36b4fc, 0x3cd887d1, 0xbf33302c ),
	NFlagsW( 270, 49.974693 ),
	VERT( 0x40ca1582, 0xc022d9bf, 0xc1437057 ),
	NORM( 0xbf43eb79, 0xbf0dcbde, 0xbea7df53 ),
	NFlagsW( 271, 59.013855 ),
	VERT( 0x410b4841, 0xc01aa3da, 0xc15bd897 ),
	NORM( 0x3f7eab03, 0xbd709bac, 0xbdaa78e4 ),
	NFlagsW( 272, 48.792835 ),
	VERT( 0x4109b901, 0xc026a412, 0xc13f4f03 ),
	NORM( 0x3f4025b4, 0xbeb875cc, 0xbf0dce66 ),
	NFlagsW( 273, 66.762917 ),
	VERT( 0x40de0302, 0xc02409da, 0xc14d2900 ),
	NORM( 0xbf3b24fa, 0xbf0c38ce, 0xbed055ae ),
	NFlagsW( 274, 50.000160 ),
	VERT( 0x40f87f92, 0xc01caef6, 0xc16335f3 ),
	NORM( 0xbe0562b5, 0xbccada59, 0xbf7dbd5e ),
	NFlagsW( 275, 48.545532 ),
	VERT( 0x40f53112, 0xc01cb573, 0xc163aa8a ),
	NORM( 0xbee1c3b3, 0xbc735393, 0xbf65bcb7 ),
	NFlagsW( 276, 48.587170 ),
	VERT( 0x4101b7f1, 0xc02aaedc, 0xc14239ca ),
	NORM( 0x3e73b796, 0xbed14c39, 0xbf618c7a ),
	NFlagsW( 277, 55.257893 ),
	VERT( 0x41073f71, 0xc01e1695, 0xc1632955 ),
	NORM( 0x3f157b86, 0xbd1575d9, 0xbf4f9d45 ),
	NFlagsW( 278, 45.847054 ),
	VERT( 0x40ff63a2, 0xc01e8f1f, 0xc165a40e ),
	NORM( 0xbe2a3522, 0xbcd49628, 0xbf7c59f3 ),
	NFlagsW( 279, 46.510254 ),
	VERT( 0x40f723b2, 0xc02c364b, 0xc143c7ed ),
	NORM( 0x3e96c2d8, 0xbf73bc53, 0xbda91459 ),
	NFlagsW( 280, 52.949123 ),
	VERT( 0x40fb6132, 0xc02e64e5, 0xc14937ec ),
	NORM( 0x3f1b507f, 0xbf3dae74, 0x3e936f91 ),
	NFlagsW( 281, 50.088440 ),
	VERT( 0x40db4b52, 0xc031e823, 0xc1445349 ),
	NORM( 0xbe042465, 0xbf7dbee5, 0x3cf3470e ),
	NFlagsW( 282, 55.569221 ),
	VERT( 0x40e486c2, 0xc033d9f5, 0xc1407753 ),
	NORM( 0xbe4ca5cd, 0x3f7a1892, 0xbd99f9a6 ),
	NFlagsW( 283, 68.036903 ),
	VERT( 0x40d05ad2, 0xc032f3d5, 0xc1430e9d ),
	NORM( 0xbf00f7f6, 0xbef9526b, 0xbf36a7a4 ),
	NFlagsW( 284, 61.584137 ),
	VERT( 0x40e9ddb2, 0xc033bf55, 0xc14206b7 ),
	NORM( 0xbe110b33, 0x3f7cda40, 0xbd87769c ),
	NFlagsW( 285, 59.769352 ),
	VERT( 0x40e5b6d2, 0xc02c4358, 0xc1572f1a ),
	NORM( 0xbf4cca9a, 0xbeb93302, 0xbef52093 ),
	NFlagsW( 286, 49.981316 ),
	VERT( 0x40ed4632, 0xc033ab1e, 0xc1448749 ),
	NORM( 0xbe19c381, 0x3f78cf87, 0xbe3989f1 ),
	NFlagsW( 287, 53.354393 ),
	VERT( 0x40d56822, 0xc0360239, 0xc13ef3c1 ),
	NORM( 0xbf281d1f, 0xbf0eae79, 0xbf020f8f ),
	NFlagsW( 288, 82.028870 ),
	VERT( 0x40f72952, 0xc030ac28, 0xc14cdfab ),
	NORM( 0xbe84a2bd, 0x3f73f102, 0xbe218472 ),
	NFlagsW( 289, 50.000008 ),
	VERT( 0x40f34212, 0xc034069d, 0xc147828f ),
	NORM( 0xbe5c2715, 0x3f79102c, 0xbdae3b43 ),
	NFlagsW( 290, 50.717556 ),
	VERT( 0x40fbbd53, 0xc03427c8, 0xc14de398 ),
	NORM( 0x3ed8d923, 0xbf4d2686, 0x3ed845cc ),
	NFlagsW( 291, 49.999653 ),
	VERT( 0x40fb9452, 0xc034db89, 0xc150d5b1 ),
	NORM( 0xbda0822a, 0x3f6e7919, 0xbeb5d056 ),
	NFlagsW( 292, 49.993862 ),
	VERT( 0x41019869, 0xc03bd3c9, 0xc13fb380 ),
	NORM( 0x3de5efda, 0x3ec578df, 0x3f6a7016 ),
	NFlagsW( 293, 70.269348 ),
	VERT( 0x41030919, 0xc03b74e5, 0xc14189a1 ),
	NORM( 0x3f195a96, 0x3f4a8cc4, 0x3dfbfee6 ),
	NFlagsW( 294, 60.669662 ),
	VERT( 0x40e5c712, 0xc037ba2f, 0xc14ce5ad ),
	NORM( 0xbeaceacd, 0xbf70eac9, 0x3c8ebd02 ),
	NFlagsW( 295, 50.014812 ),
	VERT( 0x41030a61, 0xc03c7abf, 0xc1428979 ),
	NORM( 0x3ed73ba3, 0x3f64865c, 0x3e266d8f ),
	NFlagsW( 296, 57.410133 ),
	VERT( 0x41080ba1, 0xc03053f7, 0xc1625739 ),
	NORM( 0x3f282f98, 0xbe88892c, 0xbf348630 ),
	NFlagsW( 297, 44.634201 ),
	VERT( 0x410474e1, 0xc03c8ab3, 0xc14355b2 ),
	NORM( 0x3f0889ed, 0x3f41a8c3, 0x3ec1cc07 ),
	NFlagsW( 298, 55.330242 ),
	VERT( 0x410aab21, 0xc0402767, 0xc13af8bd ),
	NORM( 0x3f5ca1ff, 0xbe00ba6c, 0xbefb9123 ),
	NFlagsW( 299, 96.167969 ),
	VERT( 0x40f1af62, 0xc033d2b4, 0xc15c3c7b ),
	NORM( 0xbf418df4, 0x3bac7c92, 0xbf278b2a ),
	NFlagsW( 300, 49.628250 ),
	VERT( 0x40f949d2, 0xc031f015, 0xc16255f3 ),
	NORM( 0xbe5eb3d2, 0xbed7e731, 0xbf6159a7 ),
	NFlagsW( 301, 47.871883 ),
	VERT( 0x40f66062, 0xc031ce01, 0xc1631cb1 ),
	NORM( 0xbe8bbe30, 0xbef4ee95, 0xbf55ac40 ),
	NFlagsW( 302, 47.772163 ),
	VERT( 0x40ee51d2, 0xc0368aed, 0xc15ad3f7 ),
	NORM( 0xbf39cbb2, 0xbec326fb, 0xbf129c87 ),
	NFlagsW( 303, 49.755989 ),
	VERT( 0x40d26af2, 0xc04175fc, 0xc13ef09a ),
	NORM( 0xbf4d0ac1, 0x3c7bd710, 0xbf1939f1 ),
	NFlagsW( 304, 85.881462 ),
	VERT( 0x4101da39, 0xc0411c3c, 0xc141585c ),
	NORM( 0xbdb570e2, 0xbf2c6475, 0xbf3be3b9 ),
	NFlagsW( 305, 62.956383 ),
	VERT( 0x40e43ff2, 0xc03fc5b8, 0xc146d21b ),
	NORM( 0xbf18bc61, 0x3f21fc92, 0xbefcbac9 ),
	NFlagsW( 306, 52.752174 ),
	VERT( 0x4106a7d9, 0xc03a088a, 0xc1565a66 ),
	NORM( 0x3f184498, 0xbf2a56af, 0x3ee6f4d2 ),
	NFlagsW( 307, 49.536736 ),
	VERT( 0x41000771, 0xc03612be, 0xc16454f8 ),
	NORM( 0xbded9360, 0xbeb834d3, 0xbf6d0124 ),
	NFlagsW( 308, 45.606701 ),
	VERT( 0x40cfa2f2, 0xc04687f2, 0xc139e8db ),
	NORM( 0xbf7518f1, 0xbdccac67, 0xbe8ab0a8 ),
	NFlagsW( 309, 99.587341 ),
	VERT( 0x41080609, 0xc038c57f, 0xc160a7e2 ),
	NORM( 0x3f2c9a2a, 0xbf22cd47, 0xbec03fea ),
	NFlagsW( 310, 45.275135 ),
	VERT( 0x41075df1, 0xc041926c, 0xc14b5975 ),
	NORM( 0x3f2f011c, 0x3f37c322, 0x3e071d3d ),
	NFlagsW( 311, 50.036114 ),
	VERT( 0x40eb4232, 0xc03f8224, 0xc1528aef ),
	NORM( 0xbec995bc, 0xbf6a63e6, 0x3da774ff ),
	NFlagsW( 312, 49.982735 ),
	VERT( 0x40d86ab2, 0xc046b593, 0xc140a1aa ),
	NORM( 0xbf12724b, 0xbdba117b, 0xbf50aec9 ),
	NFlagsW( 313, 75.779274 ),
	VERT( 0x40f61f02, 0xc03b1690, 0xc15f5135 ),
	NORM( 0xbf65732e, 0xbc59225c, 0xbee2f4b6 ),
	NFlagsW( 314, 48.732288 ),
	VERT( 0x41085cb1, 0xc041c28e, 0xc14f82f7 ),
	NORM( 0x3f2b12a7, 0x3f3e5bc1, 0xbcba1adb ),
	NFlagsW( 315, 49.868397 ),
	VERT( 0x4107bcb9, 0xc03db06d, 0xc15a9cb2 ),
	NORM( 0x3f2bd3f2, 0xbf3b9aef, 0x3de4713f ),
	NFlagsW( 316, 48.330143 ),
	VERT( 0x41002021, 0xc041f4e6, 0xc15709fa ),
	NORM( 0xbdba51db, 0x3f38cdc4, 0xbf2f9dd1 ),
	NFlagsW( 317, 49.649395 ),
	VERT( 0x40f56e32, 0xc03f43cc, 0xc15f235f ),
	NORM( 0xbf3e7392, 0xbed3dc72, 0xbf065304 ),
	NFlagsW( 318, 48.650532 ),
	VERT( 0x40f6e432, 0xc0445d02, 0xc153fbd5 ),
	NORM( 0xbf34323f, 0x3eb81f32, 0xbf1ccfee ),
	NFlagsW( 319, 49.904842 ),
	VERT( 0x40efa2e2, 0xc0466771, 0xc14f9358 ),
	NORM( 0xbf3b42df, 0x3edade1e, 0xbf07fd9b ),
	NFlagsW( 320, 49.988800 ),
	VERT( 0x40f76243, 0xc0472ce1, 0xc1541d88 ),
	NORM( 0xbf676f8e, 0x3d8d7a11, 0xbed7f851 ),
	NFlagsW( 321, 49.875294 ),
	VERT( 0x40ea60e2, 0xc04b04f4, 0xc14bfbef ),
	NORM( 0xbf3c1472, 0x3eea74c8, 0xbf00237f ),
	NFlagsW( 322, 50.279892 ),
	VERT( 0x40f2e892, 0xc04b235f, 0xc1510774 ),
	NORM( 0xbf43a50a, 0x3d45743a, 0xbf24a444 ),
	NFlagsW( 323, 49.953941 ),
	VERT( 0x41086781, 0xc0496e0a, 0xc155810b ),
	NORM( 0x3f20e015, 0x3f26ccfc, 0xbed98e77 ),
	NFlagsW( 324, 49.092724 ),
	VERT( 0x40ff0733, 0xc0448fbf, 0xc1622afd ),
	NORM( 0xbd9f11ff, 0xbf4975de, 0xbf1cb2c2 ),
	NFlagsW( 325, 46.109276 ),
	VERT( 0x40f51f82, 0xc04a3f46, 0xc157e39b ),
	NORM( 0xbe792c30, 0xbf76b8b0, 0x3de0048c ),
	NFlagsW( 326, 49.616600 ),
	VERT( 0x40f9bc52, 0xc04b4257, 0xc15bd848 ),
	NORM( 0xbe23f182, 0xbf7aa8c7, 0xbe0021a8 ),
	NFlagsW( 327, 48.831139 ),
	VERT( 0x40fa1b72, 0xc04f2328, 0xc1571baf ),
	NORM( 0xbe39fa6c, 0x3f0d4d96, 0xbf50585c ),
	NFlagsW( 328, 49.507149 ),
	VERT( 0x41006539, 0xc04ea440, 0xc1591d9a ),
	NORM( 0xbdd1b456, 0x3eddb3df, 0xbf6542f6 ),
	NFlagsW( 329, 48.993130 ),
	VERT( 0x410850a1, 0xc04f75c0, 0xc157277e ),
	NORM( 0x3f2301ea, 0x3e9f14c5, 0xbf34a8dc ),
	NFlagsW( 330, 48.459030 ),
	VERT( 0x40f72ba2, 0xc04f6e98, 0xc157dff6 ),
	NORM( 0xbe79c604, 0x3f09c70c, 0xbf4e8765 ),
	NFlagsW( 331, 49.473087 ),
	VERT( 0x40db0b82, 0xc05b25e6, 0xc13d79e2 ),
	NORM( 0xbf6207db, 0xbe89f49a, 0xbec4db96 ),
	NFlagsW( 332, 95.308807 ),
	VERT( 0x40d903f2, 0xc05dc762, 0xc13ab2e1 ),
	NORM( 0xbf55fae1, 0xbe900810, 0xbef1595c ),
	NFlagsW( 333, 99.521980 ),
	VERT( 0x410abdf2, 0xc0606e3c, 0xc138f739 ),
	NORM( 0x3f5461ee, 0xbecf024a, 0xbec524e8 ),
	NFlagsW( 334, 99.767563 ),
	VERT( 0x41074539, 0xc05e175d, 0xc13fcd6f ),
	NORM( 0x3f006313, 0xb7281254, 0x3f5d7a89 ),
	NFlagsW( 335, 80.143829 ),
	VERT( 0x410734f9, 0xc05f3792, 0xc13fddbb ),
	NORM( 0x3f493ad2, 0x3f06e698, 0xbea5764a ),
	NFlagsW( 336, 80.129936 ),
	VERT( 0x41080119, 0xc05f06de, 0xc1411daf ),
	NORM( 0x3f6a8b4e, 0xbd1512f5, 0x3ecc55e0 ),
	NFlagsW( 337, 72.922668 ),
	VERT( 0x41017dd9, 0xc05fd40c, 0xc140e440 ),
	NORM( 0xbf5aed64, 0xbf01b115, 0xbde06bb6 ),
	NFlagsW( 338, 74.614014 ),
	VERT( 0x40dc0df2, 0xc05f17ba, 0xc145ea14 ),
	NORM( 0xbf6eec18, 0x3cd1442d, 0xbeb767df ),
	NFlagsW( 339, 60.684502 ),
	VERT( 0x4105c399, 0xc0623377, 0xc13de8cc ),
	NORM( 0x3f7073b4, 0x3d03203f, 0x3eaef2bc ),
	NFlagsW( 340, 91.283897 ),
	VERT( 0x4105d3ba, 0xc0628643, 0xc13d1e03 ),
	NORM( 0x3f525873, 0xbeb39db9, 0xbee60093 ),
	NFlagsW( 341, 94.336617 ),
	VERT( 0x410b3e39, 0xc05b31e6, 0xc1509a60 ),
	NORM( 0x3f7ef20b, 0x3cd47cb7, 0xbdb1f0dd ),
	NFlagsW( 342, 49.043785 ),
	VERT( 0x41073809, 0xc05b842b, 0xc157e8e3 ),
	NORM( 0x3f0f7e0a, 0xbcfbda18, 0xbf53dbc5 ),
	NFlagsW( 343, 47.743141 ),
	VERT( 0x40e91b92, 0xc0621bf6, 0xc14b3953 ),
	NORM( 0xbf6a9432, 0x3d3823e2, 0xbecbba78 ),
	NFlagsW( 344, 51.816116 ),
	VERT( 0x40f871d2, 0xc05dd2ba, 0xc157f283 ),
	NORM( 0xbdd635a5, 0xbc37d936, 0xbf7e9464 ),
	NFlagsW( 345, 49.002121 ),
	VERT( 0x410a7ed1, 0xc0636314, 0xc149e344 ),
	NORM( 0x3f7a4bd1, 0xbdd9f69c, 0x3e394784 ),
	NFlagsW( 346, 51.756096 ),
	VERT( 0x40e83472, 0xc062e10f, 0xc14df567 ),
	NORM( 0xbf6b3c02, 0x3cee397a, 0xbec972d2 ),
	NFlagsW( 347, 50.450432 ),
	VERT( 0x40ec9f02, 0xc0628748, 0xc14f7dfc ),
	NORM( 0xbf34a5ec, 0x3c1ca70d, 0xbf355f92 ),
	NFlagsW( 348, 50.000881 ),
	VERT( 0x40f525e3, 0xc05f1c72, 0xc1586784 ),
	NORM( 0xbee456c0, 0xbb40fa51, 0xbf652168 ),
	NFlagsW( 349, 48.980244 ),
	VERT( 0x40ff52a2, 0xc05f4689, 0xc15a60e0 ),
	NORM( 0xbe2cd243, 0xbcc971f1, 0xbf7c3fcf ),
	NFlagsW( 350, 47.962654 ),
	VERT( 0x40db0fd2, 0xc0708dae, 0xc13ce632 ),
	NORM( 0xbf5a784a, 0xbeb778c9, 0xbec1d1c2 ),
	NFlagsW( 351, 98.521896 ),
	VERT( 0x41080711, 0xc068fc70, 0xc1571846 ),
	NORM( 0x3f286a46, 0xbe8f42f1, 0xbf330042 ),
	NFlagsW( 352, 46.952377 ),
	VERT( 0x40f97b42, 0xc06cb8b5, 0xc1571705 ),
	NORM( 0xbdf86a6d, 0xbedb60f7, 0xbf653754 ),
	NFlagsW( 353, 48.510040 ),
	VERT( 0x40f6b1a2, 0xc06ef7a5, 0xc157db9a ),
	NORM( 0xbe0de812, 0xbf0e1de4, 0xbf51f3f6 ),
	NFlagsW( 354, 48.340900 ),
	VERT( 0x4107fb39, 0xc0706403, 0xc155787f ),
	NORM( 0x3f29bcca, 0xbf199fb1, 0xbee520b9 ),
	NFlagsW( 355, 47.078815 ),
	VERT( 0x41000729, 0xc06fc15f, 0xc15912ae ),
	NORM( 0xbdc60212, 0xbeda75ee, 0xbf663340 ),
	NFlagsW( 356, 47.313320 ),
	VERT( 0x40f19882, 0xc0754d06, 0xc150f6b4 ),
	NORM( 0xbf418b4f, 0xbc42d996, 0xbf278886 ),
	NFlagsW( 357, 49.615597 ),
	VERT( 0x41023a09, 0xc07f54c9, 0xc13c0248 ),
	NORM( 0x3f2679e5, 0xbf3fb68e, 0x3e02b462 ),
	NFlagsW( 358, 99.150566 ),
	VERT( 0x40e94212, 0xc0797671, 0xc14beb02 ),
	NORM( 0xbf431ec7, 0xbee594c9, 0xbeef0f0b ),
	NFlagsW( 359, 53.554089 ),
	VERT( 0x40f633f2, 0xc077824f, 0xc1541b3d ),
	NORM( 0xbf69d6b7, 0xbc10ea66, 0xbed05475 ),
	NFlagsW( 360, 48.766941 ),
	VERT( 0x4100cef1, 0xc081a27d, 0xc138b442 ),
	NORM( 0x3ed75150, 0xbf682a7c, 0x3cd57c3d ),
	NFlagsW( 361, 99.985939 ),
	VERT( 0x41021689, 0xc080500c, 0xc14084ea ),
	NORM( 0x3ee8be5c, 0xbf595d5e, 0x3e89c8db ),
	NFlagsW( 362, 87.404556 ),
	VERT( 0x4100bff1, 0xc081c14f, 0xc1398ccd ),
	NORM( 0x3eeaff05, 0xbf62b3e7, 0xbd92a5cd ),
	NFlagsW( 363, 99.954277 ),
	VERT( 0x40ee2da2, 0xc07b6266, 0xc14f839f ),
	NORM( 0xbf31ad04, 0xbecb2c0e, 0xbf19c71f ),
	NFlagsW( 364, 50.369663 ),
	VERT( 0x40e28c62, 0xc07f605f, 0xc14693cc ),
	NORM( 0xbf315d64, 0xbf27ba2e, 0xbe9a3655 ),
	NFlagsW( 365, 66.602592 ),
	VERT( 0x40f590c2, 0xc07a66ed, 0xc153f3f1 ),
	NORM( 0xbf32e810, 0xbea4fa09, 0xbf2379ad ),
	NFlagsW( 366, 48.701149 ),
	VERT( 0x4107b291, 0xc07c48ac, 0xc14f874d ),
	NORM( 0x3f30aa1e, 0xbf3534ac, 0xbe1a67f9 ),
	NFlagsW( 367, 48.804234 ),
	VERT( 0x40ea96c2, 0xc0828cc9, 0xc13c6ad5 ),
	NORM( 0xbe3183ec, 0xbf794a59, 0xbe16c67c ),
	NFlagsW( 368, 99.413956 ),
	VERT( 0x41038b99, 0xc0816720, 0xc142c0af ),
	NORM( 0x3f04d19d, 0xbf4a426b, 0x3ea72ae0 ),
	NFlagsW( 369, 77.185448 ),
	VERT( 0x40ff0cc2, 0xc07c0c13, 0xc156f9e3 ),
	NORM( 0xbd816464, 0xbf3a0b54, 0xbf2f1b04 ),
	NFlagsW( 370, 47.280350 ),
	VERT( 0x4106a889, 0xc08093bd, 0xc14b530b ),
	NORM( 0x3f211662, 0xbf4676f8, 0x3d617345 ),
	NFlagsW( 371, 53.086998 ),
	VERT( 0x40e79432, 0xc08480e3, 0xc139a935 ),
	NORM( 0xbddb8d00, 0xbf7809f7, 0xbe645ea4 ),
	NFlagsW( 372, 99.987427 ),
	VERT( 0x40ebaf02, 0xc08536c3, 0xc1441330 ),
	NORM( 0xbe8d2e77, 0xbf75fe68, 0x3cca7d2b ),
	NFlagsW( 373, 77.293198 ),
	VERT( 0x40f9c7c2, 0xc084a5d8, 0xc150c5a7 ),
	NORM( 0xbdada6cc, 0xbf63066c, 0xbee896e1 ),
	NFlagsW( 374, 49.358532 ),
	VERT( 0x40f0e932, 0xc086b57a, 0xc1475fbf ),
	NORM( 0xbe6e2569, 0xbf78f38f, 0x3c74cdca ),
	NFlagsW( 375, 66.273811 ),
	VERT( 0x40f521d2, 0xc0885528, 0xc14cc8bb ),
	NORM( 0xbe4cb247, 0xbf75d4ef, 0xbe475bb7 ),
	NFlagsW( 376, 54.451241 ),
	CnkV_VN_NF(FV_CONT|FW_END, 617),
	OffnbIdx(0, 88),
	VERT( 0xc0390f00, 0x40978b33, 0xbf18bd0a ),
	NORM( 0x3e5e1d50, 0x3f78201c, 0x3dee2d3a ),
	NFlagsW( 4266, 23.167706 ),
	VERT( 0xc039f40f, 0x40940ec6, 0xc019243d ),
	NORM( 0x3e14bd75, 0x3f72313e, 0xbe9445ae ),
	NFlagsW( 4267, 39.379692 ),
	VERT( 0xc03db130, 0x40890a0e, 0x3f84d87a ),
	NORM( 0x3e535da0, 0x3f6458d8, 0x3ecded35 ),
	NFlagsW( 4268, 2.821049 ),
	VERT( 0x3ea3d5f5, 0x40866db9, 0xc0283c0c ),
	NORM( 0x3e33e76a, 0x3f782271, 0xbe304ac9 ),
	NFlagsW( 4269, 50.000000 ),
	VERT( 0x3ea10d03, 0x40805bc7, 0xbf475aba ),
	NORM( 0x3e814e67, 0x3f74a890, 0x3e1ad434 ),
	NFlagsW( 4270, 49.989590 ),
	VERT( 0x406cbba2, 0x408f03b9, 0xc0c3e071 ),
	NORM( 0xbd9728cb, 0x3f7f267f, 0x3d0ca2e8 ),
	NFlagsW( 4271, 93.851151 ),
	VERT( 0x3ec444e2, 0x406de817, 0x3f25ce8e ),
	NORM( 0x3e8e38b6, 0x3f6c3a4c, 0x3e88c24f ),
	NFlagsW( 4272, 49.232113 ),
	VERT( 0xc03d52e4, 0x40612651, 0x40127f1d ),
	NORM( 0x3e135905, 0x3f445f26, 0x3f200dc7 ),
	NFlagsW( 4273, 0.236578 ),
	VERT( 0x3f911102, 0x407ebcca, 0xc02ac737 ),
	NORM( 0x3de321f5, 0x3f7e555d, 0xbcd54fdb ),
	NFlagsW( 4274, 50.006943 ),
	VERT( 0xc0c48be8, 0x4082feb5, 0xc0855b06 ),
	NORM( 0x3e1d2809, 0x3f2c30ef, 0xbf39514b ),
	NFlagsW( 4275, 0.824603 ),
	VERT( 0x3f8f4c7e, 0x40713cda, 0xbf5e5938 ),
	NORM( 0x3e640b17, 0x3f7580a0, 0x3e3386b4 ),
	NFlagsW( 4276, 50.000000 ),
	VERT( 0x406eb261, 0x4076a374, 0xc0713b0f ),
	NORM( 0x3e33067e, 0x3f77a241, 0x3e3c0f36 ),
	NFlagsW( 4277, 86.999153 ),
	VERT( 0x3ed9cef1, 0x404fc03b, 0x3ffd8093 ),
	NORM( 0x3e336734, 0x3f5e1992, 0x3eee4b6a ),
	NFlagsW( 4278, 40.982510 ),
	VERT( 0x3f9049c1, 0x4051cac8, 0x3f7221e1 ),
	NORM( 0x3e81a73a, 0x3f6f69a1, 0x3e7d75f0 ),
	NFlagsW( 4279, 49.761688 ),
	VERT( 0x40685fa4, 0x405c674b, 0xbf65890c ),
	NORM( 0x3e3142d2, 0x3f76c4b8, 0x3e4efaa8 ),
	NFlagsW( 4280, 84.865074 ),
	VERT( 0xc03472fe, 0x406d5120, 0xc07a5ae1 ),
	NORM( 0x3daa6990, 0x3f3378cf, 0xbf354e80 ),
	NFlagsW( 4281, 48.524441 ),
	VERT( 0x3f9e7f01, 0x404207db, 0x40009362 ),
	NORM( 0x3e20ee50, 0x3f5fae6f, 0x3eeba91f ),
	NFlagsW( 4282, 46.084476 ),
	VERT( 0x400e8882, 0x406fc62c, 0xc0c76fd1 ),
	NORM( 0xbf326032, 0x3f1d52f1, 0xbebd6405 ),
	NFlagsW( 4283, 61.811489 ),
	VERT( 0x3eb1ed0a, 0x405e263c, 0xc081af88 ),
	NORM( 0xbdea7b02, 0x3f3c8b0e, 0xbf2aab9f ),
	NFlagsW( 4284, 50.000000 ),
	VERT( 0x40779d03, 0x407adea0, 0xc1133ee3 ),
	NORM( 0xbf31abb8, 0x3f15dd85, 0xbed69073 ),
	NFlagsW( 4285, 99.802940 ),
	VERT( 0x3f8cb7c3, 0x4057c94f, 0xc0903a8f ),
	NORM( 0xbf11c845, 0x3f20dc67, 0xbf07ac60 ),
	NFlagsW( 4286, 50.069416 ),
	VERT( 0x40688203, 0x4026637f, 0x401ef7d2 ),
	NORM( 0x3d713071, 0x3f6548aa, 0x3ee1b909 ),
	NFlagsW( 4287, 92.565689 ),
	VERT( 0xc04ef924, 0x401e1abd, 0x40542b02 ),
	NORM( 0x3da85ee0, 0x3eee204a, 0x3f61a5e8 ),
	NFlagsW( 4288, 0.014648 ),
	VERT( 0x40cc50c2, 0x4036ccc5, 0xbfad6b7a ),
	NORM( 0x3e9083fd, 0x3f72d209, 0x3e13230a ),
	NFlagsW( 4289, 99.986221 ),
	VERT( 0x3eebf612, 0x400fee3c, 0x404a4085 ),
	NORM( 0x3e5c6e53, 0x3ef58094, 0x3f59c98f ),
	NFlagsW( 4290, 17.456398 ),
	VERT( 0x3f9e7d3a, 0x4000f716, 0x40389bcf ),
	NORM( 0x3e2d6b43, 0x3ec77811, 0x3f67c0bf ),
	NFlagsW( 4291, 36.431595 ),
	VERT( 0x4080a6a2, 0x3ff061f9, 0x40568b56 ),
	NORM( 0xbdc53eb2, 0x3f1581f3, 0x3f4e56a7 ),
	NFlagsW( 4292, 96.784851 ),
	VERT( 0x3ffb330a, 0x40256568, 0xc0ca6a05 ),
	NORM( 0xbf580356, 0x3e149a8d, 0xbf0443ff ),
	NFlagsW( 4293, 55.354507 ),
	VERT( 0x3f8ab040, 0x401390ee, 0xc0a064d9 ),
	NORM( 0xbf2161be, 0x3e72512b, 0xbf3d4466 ),
	NFlagsW( 4294, 50.022240 ),
	VERT( 0x406cf9e2, 0x402ab8b7, 0xc11354a5 ),
	NORM( 0xbf593ede, 0x3d9ea4a7, 0xbf05f786 ),
	NFlagsW( 4295, 98.791275 ),
	VERT( 0x3ec5350f, 0x40089700, 0xc09aa47f ),
	NORM( 0xbe0e226b, 0x3e9321a6, 0xbf729d21 ),
	NFlagsW( 4296, 50.000000 ),
	VERT( 0xc0316842, 0x3ff868bf, 0xc09e12fd ),
	NORM( 0x3d8faa21, 0x3ead6b87, 0xbf703296 ),
	NFlagsW( 4297, 49.995510 ),
	VERT( 0xc0c15072, 0x3ff8e8c1, 0xc0aaf755 ),
	NORM( 0x3e157261, 0x3ea235da, 0xbf6febc4 ),
	NFlagsW( 4298, 10.400416 ),
	VERT( 0x3eeb0f16, 0x3f8099bb, 0x4059fd84 ),
	NORM( 0x3e852187, 0xb83f9b63, 0x3f7731c2 ),
	NFlagsW( 4299, 16.764496 ),
	VERT( 0x3ff415be, 0x3ff38ec6, 0xc0c989fa ),
	NORM( 0xbf5705a9, 0xbdb18e92, 0xbf092547 ),
	NFlagsW( 4300, 53.701527 ),
	VERT( 0xc05b6b83, 0x3f710ed3, 0x4067d6af ),
	NORM( 0x3dafcad7, 0xbb26832a, 0x3f7f0deb ),
	NFlagsW( 4301, 0.017296 ),
	VERT( 0x3f970c42, 0x3f666a0a, 0x403ce302 ),
	NORM( 0x3e1bcd2b, 0x3cdf0ee4, 0x3f7cec6a ),
	NFlagsW( 4302, 39.224152 ),
	VERT( 0x406a2ec1, 0x3ff4a40e, 0xc112d986 ),
	NORM( 0xbf56e8ea, 0xbc0610f1, 0xbf0b1675 ),
	NFlagsW( 4303, 97.994118 ),
	VERT( 0x3f8994fd, 0x3fc05015, 0xc0a312be ),
	NORM( 0xbf2098fe, 0xbdba0405, 0xbf45ffda ),
	NFlagsW( 4304, 50.005520 ),
	VERT( 0x4071ace3, 0x3ee091b8, 0x407c3369 ),
	NORM( 0xbe7ffcea, 0x3e132f75, 0x3f752013 ),
	NFlagsW( 4305, 93.013611 ),
	VERT( 0x406a3b43, 0x3f92cf1f, 0xc112394c ),
	NORM( 0xbf54953d, 0xbcc75371, 0xbf0e7f82 ),
	NFlagsW( 4306, 97.540558 ),
	VERT( 0x3e884a03, 0x3f1654ff, 0xc0a170df ),
	NORM( 0x3e1b82a1, 0x3af6ea1f, 0xbf7d07bf ),
	NFlagsW( 4307, 50.000000 ),
	VERT( 0x3f8369ba, 0x3ebe4844, 0xc09b5a8f ),
	NORM( 0xbe90606a, 0xbe33727e, 0xbf717ab8 ),
	NFlagsW( 4308, 50.000008 ),
	VERT( 0x3ef52eeb, 0xbf1585da, 0x4044cdab ),
	NORM( 0x3e0a8c18, 0xbeb4ab7c, 0x3f6d03ba ),
	NFlagsW( 4309, 29.566616 ),
	VERT( 0x401c82a2, 0x3e48d488, 0xc0c6a1ad ),
	NORM( 0xbf4ab151, 0xbebc2e78, 0xbef9ca12 ),
	NFlagsW( 4310, 57.057320 ),
	VERT( 0x3f926b80, 0xbf30793d, 0x40380049 ),
	NORM( 0xbcaec4c7, 0xbebbe8d3, 0x3f6e12a8 ),
	NFlagsW( 4311, 41.335018 ),
	VERT( 0x406c91a1, 0x3ed86d50, 0xc112b067 ),
	NORM( 0xbf579d23, 0xbe2f71b6, 0xbf02dac7 ),
	NFlagsW( 4312, 97.811470 ),
	VERT( 0xc0377761, 0xbcbd19fd, 0xc0a9c06a ),
	NORM( 0x3ddcd01b, 0x3d2bcc17, 0xbf7e47f5 ),
	NFlagsW( 4313, 50.000000 ),
	VERT( 0x4073da62, 0xbf8319c2, 0x407244f9 ),
	NORM( 0xbe82466d, 0xbecdf5c2, 0x3f6123f8 ),
	NFlagsW( 4314, 94.694855 ),
	VERT( 0xc05fc546, 0xbf7ba787, 0x404d2925 ),
	NORM( 0x3e078ec1, 0xbedb8ba9, 0x3f64c618 ),
	NFlagsW( 4315, 0.051128 ),
	VERT( 0xc0c3aee1, 0xbe951c06, 0xc0b569d0 ),
	NORM( 0x3e0cdc6d, 0xbbbab37a, 0xbf7d8fe9 ),
	NFlagsW( 4316, 12.800026 ),
	VERT( 0x3f91a7c3, 0xbf507e56, 0xc08f56de ),
	NORM( 0x3d85d765, 0xbf22c92e, 0xbf44de1e ),
	NFlagsW( 4317, 50.000019 ),
	VERT( 0x3e8dbc08, 0xbf6a3d94, 0xc098e8f3 ),
	NORM( 0x3e6f2888, 0xbedae169, 0xbf5f9233 ),
	NFlagsW( 4318, 50.000000 ),
	VERT( 0x4080d0e2, 0xbf4ea465, 0xc111497d ),
	NORM( 0xbf5ca1a8, 0xbe77130d, 0xbee4682f ),
	NFlagsW( 4319, 99.367554 ),
	VERT( 0x3eceddf0, 0xbff94565, 0x4010ff71 ),
	NORM( 0x3e0492e3, 0xbf3685de, 0x3f306ab4 ),
	NFlagsW( 4320, 44.094780 ),
	VERT( 0xc0372d88, 0xbfa5b119, 0xc0a7287f ),
	NORM( 0x3e1a1ecc, 0xbec0dab8, 0xbf69fe7c ),
	NFlagsW( 4321, 49.999176 ),
	VERT( 0x3f8f3701, 0xc0025bf2, 0x3ff69f5f ),
	NORM( 0xbc7f3bf9, 0xbf4df2ff, 0x3f1800dd ),
	NFlagsW( 4322, 49.239902 ),
	VERT( 0x401035c0, 0xbfcca770, 0xc05e5d0c ),
	NORM( 0xbebbf1b3, 0xbf568f46, 0xbece9602 ),
	NFlagsW( 4323, 50.972916 ),
	VERT( 0xc05bf0b2, 0xc00bbd8a, 0x400d8d6e ),
	NORM( 0x3e17e918, 0xbf3f7ee6, 0x3f259964 ),
	NFlagsW( 4324, 0.403741 ),
	VERT( 0x3fa4443b, 0xbfdaff9a, 0xc05a1cfb ),
	NORM( 0x3e806ef5, 0xbf5889df, 0xbef10659 ),
	NFlagsW( 4325, 50.000000 ),
	VERT( 0x4014ea01, 0xc012743d, 0x40034054 ),
	NORM( 0xbe6dae0e, 0xbf5369ad, 0x3f039134 ),
	NFlagsW( 4326, 59.185589 ),
	VERT( 0xc0c7df31, 0xbfcfd97e, 0xc0af453c ),
	NORM( 0x3e112ab4, 0xbec998e3, 0xbf688144 ),
	NFlagsW( 4327, 7.777962 ),
	VERT( 0x3f9c8903, 0xbffeaf97, 0xc0231949 ),
	NORM( 0x3e5f4db3, 0xbf6cf523, 0xbe9e5fac ),
	NFlagsW( 4328, 50.000000 ),
	VERT( 0x40509443, 0xbfd17aa8, 0xc0c70e04 ),
	NORM( 0xbf4cd3ea, 0xbf07da51, 0xbe8f2fff ),
	NFlagsW( 4329, 78.350243 ),
	VERT( 0x401b7bc2, 0xc0021310, 0xc0205b17 ),
	NORM( 0xbe8eb6ad, 0xbf64952c, 0xbeb50b25 ),
	NFlagsW( 4330, 52.053421 ),
	VERT( 0x3e9c7709, 0xbffa17f3, 0xc074af28 ),
	NORM( 0x3e96d027, 0xbf452b79, 0xbf10d2dc ),
	NFlagsW( 4331, 50.000000 ),
	VERT( 0x406f8bc4, 0xc02595e0, 0x4015b0a2 ),
	NORM( 0xbe38dfb0, 0xbf6059ce, 0x3ee49e53 ),
	NFlagsW( 4332, 95.699280 ),
	VERT( 0x40b3d222, 0xc02be2b8, 0x401e73d6 ),
	NORM( 0xbd164c24, 0xbf6b87e1, 0x3ec7bae5 ),
	NFlagsW( 4333, 99.963257 ),
	VERT( 0x40895772, 0xbfe475d4, 0xc1116c9e ),
	NORM( 0xbf5056d4, 0xbecbafdb, 0xbed8e026 ),
	NFlagsW( 4334, 99.899826 ),
	VERT( 0x3eaad609, 0xc01c4ff2, 0xc02f09f1 ),
	NORM( 0x3ea4c594, 0xbf69f1f1, 0xbe7d8edc ),
	NFlagsW( 4335, 50.000000 ),
	VERT( 0x3ed158f5, 0xc0325f0d, 0x3f249139 ),
	NORM( 0x3e1909e8, 0xbf74207e, 0x3e85c78c ),
	NFlagsW( 4336, 49.991066 ),
	VERT( 0x3f927e83, 0xc027d1c0, 0xbf8faf0b ),
	NORM( 0xbd88fca6, 0xbf742846, 0xbe961114 ),
	NFlagsW( 4337, 50.000000 ),
	VERT( 0x4074a263, 0xc03221a1, 0x3eb263c6 ),
	NORM( 0xbd3a9f47, 0xbf7f4725, 0x3d744e14 ),
	NFlagsW( 4338, 93.515106 ),
	VERT( 0x406cf244, 0xc02a8dc1, 0xbf92bb11 ),
	NORM( 0xbd23b8dd, 0xbf7ee570, 0xbdab6efb ),
	NFlagsW( 4339, 87.853378 ),
	VERT( 0x3f917ec2, 0xc032eced, 0x3e2b4cd9 ),
	NORM( 0xbd61484f, 0xbf7e700f, 0x3dc3d441 ),
	NFlagsW( 4340, 50.000000 ),
	VERT( 0x3eb4ed07, 0xc02e4750, 0xbf3820dd ),
	NORM( 0x3e18f0f6, 0xbf7b4f50, 0xbdf24fe0 ),
	NFlagsW( 4341, 50.000000 ),
	VERT( 0x40654202, 0xc022f9d3, 0xc0290794 ),
	NORM( 0xbe906ffd, 0xbf74922f, 0xbdb3ddcb ),
	NFlagsW( 4342, 82.874748 ),
	VERT( 0x401af320, 0xc02ea84f, 0xbf9c3f26 ),
	NORM( 0xbdad829e, 0xbf755669, 0xbe8ba4db ),
	NFlagsW( 4343, 54.121147 ),
	VERT( 0x40b259f2, 0xc03eb939, 0x3ec6f042 ),
	NORM( 0x3cf3ee9e, 0xbf7f8607, 0x3d59fb73 ),
	NFlagsW( 4344, 99.930054 ),
	VERT( 0x401c5960, 0xc03e3f24, 0x3db4cfc5 ),
	NORM( 0xbccdc76f, 0xbf7f20f0, 0x3da0cd7c ),
	NFlagsW( 4345, 58.366035 ),
	VERT( 0xc0423584, 0xc02956dd, 0xc0837c3b ),
	NORM( 0x3e3df3f9, 0xbf4e833b, 0xbf0fa4ab ),
	NFlagsW( 4346, 49.530777 ),
	VERT( 0x40b07182, 0xc03c74d4, 0xbf8bbd6a ),
	NORM( 0x3b12e2c2, 0xbf7fe626, 0xbce55dba ),
	NFlagsW( 4347, 99.889046 ),
	VERT( 0xc04db4a5, 0xc04692f6, 0x3f07aa31 ),
	NORM( 0x3e2bb785, 0xbf6ce7fb, 0x3eadfe9d ),
	NFlagsW( 4348, 13.313882 ),
	VERT( 0x40ae8932, 0xc03a3059, 0xc0249b91 ),
	NORM( 0xbd28d420, 0xbf7f0338, 0x3d9ea4e5 ),
	NFlagsW( 4349, 99.875092 ),
	VERT( 0x408b60e1, 0xc02c60c5, 0xc0c724b0 ),
	NORM( 0xbf0de2c3, 0xbf53ebbf, 0xbdb1d075 ),
	NFlagsW( 4350, 98.784668 ),
	VERT( 0xc0479680, 0xc0428af4, 0xc03d1c29 ),
	NORM( 0x3e675d8f, 0xbf71bbf3, 0xbe751c40 ),
	NFlagsW( 4351, 47.805618 ),
	VERT( 0xc048caf1, 0xc056090f, 0xbf639103 ),
	NORM( 0x3e67f30f, 0xbf795779, 0x3bbc49c2 ),
	NFlagsW( 4352, 38.366856 ),
	VERT( 0xc0d1e9b7, 0xc058ff58, 0xc08802b8 ),
	NORM( 0x3e3b982c, 0xbf3d3f65, 0xbf25e5a8 ),
	NFlagsW( 4353, 0.387705 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Foot[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Foot,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Foot[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Foot,
OPosition  ( 22.378115F, -0.000002F,  0.000000F ),
OAngle     ( -4.959254F,  9.720253F,  2.018946F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Toe0,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Calf[]
START
	CnkV_VN(FV_CONT, 493),
	OffnbIdx(2068, 82),
	VERT( 0x4103187d, 0x40c7e1b9, 0x3f527d55 ),
	NORM( 0xbd296c8d, 0x3f7f5238, 0xbd754348 ),
	VERT( 0x4124e7c4, 0x40c6a73b, 0x3f411a77 ),
	NORM( 0x3d5e0932, 0x3f7edc47, 0xbd9de62c ),
	VERT( 0x40b42f88, 0x40bdf50d, 0x3f0c8853 ),
	NORM( 0xbe3bd73e, 0x3f7ad854, 0xbda17e9a ),
	VERT( 0x4149e305, 0x40c0b66a, 0x3f2023dc ),
	NORM( 0x3e0b452f, 0x3f7d2d9d, 0xbd6fc215 ),
	VERT( 0x40f7cb72, 0x40b7fb44, 0x404b3bba ),
	NORM( 0xbdbccdaa, 0x3f6adb4a, 0x3ec634bb ),
	VERT( 0x40449e1d, 0x40b23046, 0x3d576241 ),
	NORM( 0x3e59538e, 0x3f79e5c1, 0x3d3a206a ),
	VERT( 0x4121f83c, 0x40b86e99, 0x404d2eca ),
	NORM( 0x3da31704, 0x3f6a23ea, 0x3ecaf722 ),
	VERT( 0x40839701, 0x40af9d42, 0x3e8161d5 ),
	NORM( 0xbdcfeae0, 0x3f7e4f58, 0xbd5acb56 ),
	VERT( 0x409fa2fe, 0x40aba370, 0x402dd9c4 ),
	NORM( 0xbe722f6f, 0x3f695a3f, 0x3eac3db3 ),
	VERT( 0x41467af7, 0x40afe1a0, 0x4037d5b5 ),
	NORM( 0x3e4b0c2e, 0x3f63a403, 0x3ed31520 ),
	VERT( 0x4104fb18, 0x40ab8e3a, 0xbfdad4eb ),
	NORM( 0xbc8c4f89, 0x3f5c2b90, 0xbf028b68 ),
	VERT( 0x4057f7de, 0x40a0ea44, 0x400162ee ),
	NORM( 0xbe370d70, 0x3f6ca2fe, 0x3eac9115 ),
	VERT( 0x41273a14, 0x40a956c5, 0xbfd9e2cd ),
	NORM( 0x3d62af13, 0x3f5b3170, 0xbf037d7a ),
	VERT( 0x40be2846, 0x40a40e8a, 0xbfe610c6 ),
	NORM( 0xbd9d100e, 0x3f5d5c9c, 0xbefe2962 ),
	VERT( 0x40543a9c, 0x409ebfcb, 0xc00cbd46 ),
	NORM( 0x3e632145, 0x3f57c43f, 0xbefb0cd0 ),
	VERT( 0x417b99a5, 0x40a979eb, 0x3ec55a69 ),
	NORM( 0x3e56c7d4, 0x3f7a36d6, 0x3cd84a0c ),
	VERT( 0x408c9e84, 0x409c5a8d, 0xc000764d ),
	NORM( 0x3d02073f, 0x3f5fea09, 0xbef7a5e9 ),
	VERT( 0x414abeb0, 0x40a174a9, 0xbfdc03b4 ),
	NORM( 0x3d8cf72c, 0x3f5a10fb, 0xbf04f035 ),
	VERT( 0x417b32e4, 0x4099d577, 0x40019e41 ),
	NORM( 0x3e803829, 0x3f66432e, 0x3eb75c05 ),
	VERT( 0x417a55b7, 0x40985ea4, 0xbfe79366 ),
	NORM( 0x3daf672a, 0x3f639514, 0xbee65158 ),
	VERT( 0x40e7f8b4, 0x408a4859, 0x40a60a94 ),
	NORM( 0xbdd2474f, 0x3f3a9bab, 0x3f2d4528 ),
	VERT( 0x411b8f96, 0x408abf16, 0x40a871c0 ),
	NORM( 0x3dc497a9, 0x3f34343e, 0x3f3429ab ),
	VERT( 0x40829925, 0x4083bf06, 0x4093c26a ),
	NORM( 0xbe85f9d2, 0x3f4107b4, 0x3f1a3bce ),
	VERT( 0x414a79c8, 0x40842a99, 0x40912735 ),
	NORM( 0x3e7141f9, 0x3f2c0d44, 0x3f33b63d ),
	VERT( 0x40be5ff2, 0x4070e1db, 0xc0553254 ),
	NORM( 0xbccbd3cd, 0x3f1b3dc5, 0xbf4b7584 ),
	VERT( 0x41044ab2, 0x4074535e, 0xc0587bef ),
	NORM( 0xbb55b682, 0x3f195d65, 0xbf4cf97a ),
	VERT( 0x417e4e20, 0x40801430, 0x4060de3b ),
	NORM( 0x3e864c89, 0x3f3c4952, 0x3f1fec25 ),
	VERT( 0x4043e0df, 0x4066bf1e, 0xc0680ecc ),
	NORM( 0x3e646b92, 0x3f09df26, 0xbf50017f ),
	VERT( 0x40880b9b, 0x40667773, 0xc05b27a7 ),
	NORM( 0x3d862f04, 0x3f13ff4a, 0xbf5035d2 ),
	VERT( 0x4127eb22, 0x4071b9a3, 0xc0561a32 ),
	NORM( 0x3d0d0aa3, 0x3f1820f5, 0xbf4db4dc ),
	VERT( 0x41490c59, 0x406a147f, 0xc053d214 ),
	NORM( 0x3d1c8081, 0x3f1a5447, 0xbf4c0449 ),
	VERT( 0x41164baa, 0x4029de4a, 0x40d24603 ),
	NORM( 0x3de32186, 0x3eda92f5, 0x3f65c0af ),
	VERT( 0x4146f25f, 0x4025079c, 0x40b728fb ),
	NORM( 0x3e873c47, 0x3ed338da, 0x3f5f2e92 ),
	VERT( 0x40cfc041, 0x40168410, 0x40d4a5ab ),
	NORM( 0xbdf3a9c2, 0x3edcd7fa, 0x3f64f1aa ),
	VERT( 0x417ef0c1, 0x40243f5c, 0x40934788 ),
	NORM( 0x3e887ee4, 0x3edefbc0, 0x3f5c1bd5 ),
	VERT( 0x40600da6, 0x400528fa, 0x40c27572 ),
	NORM( 0xbe8e8ad7, 0x3ed460a2, 0x3f5dc43a ),
	VERT( 0x40475632, 0x3fe83205, 0xc08b6281 ),
	NORM( 0x3e870d6d, 0x3e47ce16, 0xbf71d423 ),
	VERT( 0x40831580, 0x3fdff222, 0xc087bc12 ),
	NORM( 0x3d5f4cd6, 0x3e428240, 0xbf7af393 ),
	VERT( 0x40b24ecb, 0x3fe503cc, 0xc0888a2f ),
	NORM( 0xbd01825f, 0x3e5cf2ed, 0xbf79d6b1 ),
	VERT( 0x41036d4e, 0x3fd856b4, 0xc08de1da ),
	NORM( 0xbc8a10e7, 0x3e64ce1a, 0xbf797d85 ),
	VERT( 0x41273bed, 0x3fc0cf8b, 0xc08d3609 ),
	NORM( 0x3c70a106, 0x3e6a0e1f, 0xbf7931db ),
	VERT( 0x4146e319, 0x3fb48684, 0xc08d38a4 ),
	NORM( 0x3c842062, 0x3e76b065, 0xbf786d12 ),
	VERT( 0x417c8baf, 0x3f167543, 0x40a56456 ),
	NORM( 0x3e950f4f, 0x3da7af3b, 0x3f740321 ),
	VERT( 0x41438f60, 0x3e8692dd, 0x40cd6ff8 ),
	NORM( 0x3e935da2, 0x3d251bda, 0x3f74f321 ),
	VERT( 0x410facc1, 0xbe804be5, 0x40eb396c ),
	NORM( 0x3dfd9710, 0xbc530602, 0x3f7e022f ),
	VERT( 0x4071c16b, 0xbea69491, 0xc087771c ),
	NORM( 0x3d024be8, 0xbe71e5fb, 0xbf789f0a ),
	VERT( 0x40c39190, 0xbec67a2a, 0x40e90d12 ),
	NORM( 0xbe017ba8, 0xbc211005, 0x3f7deec6 ),
	VERT( 0x40a90cbc, 0xbf2e2ec4, 0xc0879073 ),
	NORM( 0xbd9fd357, 0xbe5cd2cf, 0xbf792d54 ),
	VERT( 0x40fac7d3, 0xbfad072c, 0xc08b0650 ),
	NORM( 0xbdbb008c, 0xbe6ad2d1, 0xbf78143f ),
	VERT( 0x41432bd6, 0xbfb3e665, 0xc0900825 ),
	NORM( 0xbbc376ee, 0xbe2c1b0b, 0xbf7c5a90 ),
	VERT( 0x4120069d, 0xbfbe2f91, 0xc08ee465 ),
	NORM( 0xbd0b9114, 0xbe4be5df, 0xbf7ab8d6 ),
	VERT( 0x417be1f6, 0xbfb7e80e, 0x40a1797b ),
	NORM( 0x3ea0f96a, 0xbe953eb6, 0x3f674711 ),
	VERT( 0x4141be25, 0xbff5c55e, 0x40c1f416 ),
	NORM( 0x3e8d0f9c, 0xbea456d5, 0x3f67f812 ),
	VERT( 0x40b8cd9d, 0xc025089c, 0x40d44337 ),
	NORM( 0xbdf53595, 0xbedde540, 0x3f64a9ed ),
	VERT( 0x410ddbc8, 0xc01edf74, 0x40d887fc ),
	NORM( 0x3df6a87b, 0xbed19cb9, 0x3f6784e1 ),
	VERT( 0x4092d1c9, 0xc031722f, 0xc04b003b ),
	NORM( 0xbe1bc8ea, 0xbf13a303, 0xbf4d7b3b ),
	VERT( 0x4142265c, 0xc031a4f2, 0xc07dc31b ),
	NORM( 0x3bd95479, 0xbf04923c, 0xbf5afe40 ),
	VERT( 0x40ea853c, 0xc03f1b35, 0xc06156d9 ),
	NORM( 0xbe047450, 0xbf0dd10b, 0xbf528a87 ),
	VERT( 0x411b1f78, 0xc0411a9d, 0xc0732775 ),
	NORM( 0xbd5e9c43, 0xbf0ab759, 0xbf56b5ae ),
	VERT( 0x417b776a, 0xc03de760, 0x40835f6a ),
	NORM( 0x3ea821a9, 0xbf26860f, 0x3f2f532f ),
	VERT( 0x413e9194, 0xc068a768, 0x40a526ea ),
	NORM( 0x3e86cb76, 0xbf248710, 0x3f382f7a ),
	VERT( 0x410b6c38, 0xc07c6d86, 0x40b9e1a8 ),
	NORM( 0x3da6a0d1, 0xbf28f166, 0x3f3f3538 ),
	VERT( 0x40b0390b, 0xc08369bf, 0x40af268f ),
	NORM( 0xbe03ea48, 0xbf331683, 0x3f33eedf ),
	VERT( 0x4080118d, 0xc08552e1, 0xbfca6a04 ),
	NORM( 0xbe62727c, 0xbf4e86fc, 0xbf0c46df ),
	VERT( 0x417a8c8d, 0xc0867044, 0x401a0419 ),
	NORM( 0x3ea18672, 0xbf562d12, 0x3ee54701 ),
	VERT( 0x403435ab, 0xc0998a5e, 0x40614da8 ),
	NORM( 0xbe928f39, 0xbf5f931c, 0x3ec9cbea ),
	VERT( 0x40d720ff, 0xc0960154, 0xbfe6cd7d ),
	NORM( 0xbe19037a, 0xbf4e5257, 0xbf12a484 ),
	VERT( 0x406d2882, 0xc09cc793, 0x3e38acfa ),
	NORM( 0xbe6ce3f1, 0xbf6c7f1a, 0xbe9c2e42 ),
	VERT( 0x414149ef, 0xc0930ea9, 0xc01a8e90 ),
	NORM( 0x3d383ec0, 0xbf489b61, 0xbf1e9eaf ),
	VERT( 0x41171432, 0xc0989f3c, 0xc00ba937 ),
	NORM( 0xbd5ed817, 0xbf4bcb47, 0xbf1a4e0f ),
	VERT( 0x41787015, 0xc097ae48, 0xbfa05ea4 ),
	NORM( 0x3e63bc1b, 0xbf70f76c, 0xbe82128c ),
	VERT( 0x413e976f, 0xc09d9870, 0x40546c83 ),
	NORM( 0x3e8609b8, 0xbf56dac2, 0x3ef3fbc8 ),
	VERT( 0x404db72a, 0xc0a7694b, 0x400dc4a6 ),
	NORM( 0xbe7fd5b8, 0xbf77c8de, 0x3cddd79f ),
	VERT( 0x4177d4a8, 0xc09bfc96, 0x3f4998e5 ),
	NORM( 0x3e9201ea, 0xbf731680, 0x3e058cf0 ),
	VERT( 0x40b50274, 0xc0a85034, 0x407b8cbc ),
	NORM( 0xbe095a4c, 0xbf5e78c1, 0x3ef3d470 ),
	VERT( 0x410e435b, 0xc0ac18ab, 0x40814eeb ),
	NORM( 0x3db11fcb, 0xbf5905f3, 0x3f05f722 ),
	VERT( 0x40c6272f, 0xc0b08bf6, 0x3e2b68af ),
	NORM( 0xbe2dda96, 0xbf720f7e, 0xbe8e2d8c ),
	VERT( 0x41408de9, 0xc0adf233, 0xbf600bfe ),
	NORM( 0x3dd2b304, 0xbf742671, 0xbe90adf2 ),
	VERT( 0x40bccab3, 0xc0ba6bf1, 0x4025bad5 ),
	NORM( 0xbe1f5b92, 0xbf7ad840, 0x3e001bee ),
	VERT( 0x413f2975, 0xc0b4984c, 0x3fd6b6b9 ),
	NORM( 0x3e531582, 0xbf777984, 0x3e1b4e7e ),
	VERT( 0x4112bb68, 0xc0b7b2f3, 0xbe6592ba ),
	NORM( 0xbc9875de, 0xbf758f5d, 0xbe906905 ),
	VERT( 0x41101ea8, 0xc0c4128c, 0x4018aac6 ),
	NORM( 0x3d650e2d, 0xbf7ca2af, 0x3e1b3f77 ),
	CnkV_VN_NF(FV_CONT|FW_START, 617),
	OffnbIdx(4266, 88),
	VERT( 0x41999195, 0x4091d446, 0xbf004d64 ),
	NORM( 0x3e3d2253, 0x3f7b9799, 0xbba42397 ),
	NFlagsW( 0, 76.832291 ),
	VERT( 0x41972149, 0x408909ca, 0xc010367f ),
	NORM( 0x3d45bce9, 0x3f6b7556, 0xbec76cf0 ),
	NFlagsW( 1, 60.620308 ),
	VERT( 0x419b5629, 0x408824c7, 0x3f93cbdc ),
	NORM( 0x3e66cca9, 0x3f6e92ec, 0x3e91743b ),
	NFlagsW( 2, 97.178955 ),
	VERT( 0x41b067e1, 0x407cb9d0, 0xc03f908b ),
	NORM( 0x3dc5993e, 0x3f746ae1, 0xbe900723 ),
	NFlagsW( 3, 50.000000 ),
	VERT( 0x41b2e18c, 0x407b9020, 0xbf946c8e ),
	NORM( 0x3e67ac8c, 0x3f7948a9, 0x3cc7e29e ),
	NFlagsW( 4, 50.010406 ),
	VERT( 0x41c65087, 0x4080580b, 0xc0e0832d ),
	NORM( 0xbdeeb4e8, 0x3f7e0fc4, 0xbd1eb480 ),
	NFlagsW( 5, 6.148851 ),
	VERT( 0x41b56c65, 0x40716cd0, 0x3e8252ae ),
	NORM( 0x3e8b311f, 0x3f73db97, 0x3e0c0b8e ),
	NFlagsW( 6, 50.767891 ),
	VERT( 0x419d567f, 0x4067008f, 0x401ca23d ),
	NORM( 0x3e53c972, 0x3f537825, 0x3f0636c6 ),
	NFlagsW( 7, 99.763420 ),
	VERT( 0x41b6d9ae, 0x40703f61, 0xc049a5dc ),
	NORM( 0x3d63adb3, 0x3f7d76b5, 0xbe040a4e ),
	NFlagsW( 8, 49.993053 ),
	VERT( 0x4176fcdf, 0x405e70ab, 0xc059da2f ),
	NORM( 0xbae24823, 0x3f1b9b7a, 0xbf4b4750 ),
	NFlagsW( 9, 99.175392 ),
	VERT( 0x41b933b3, 0x406d6ad6, 0xbfae78de ),
	NORM( 0x3e4d7898, 0x3f7a6da8, 0x3d58717a ),
	NFlagsW( 10, 50.000000 ),
	VERT( 0x41c9e816, 0x40677425, 0xc09518c9 ),
	NORM( 0x3e1e2bf4, 0x3f7c521d, 0x3d8c1456 ),
	NFlagsW( 11, 13.000851 ),
	VERT( 0x41b7b3be, 0x405b6279, 0x3fcc54a8 ),
	NORM( 0x3e533dec, 0x3f6992e8, 0x3eb50032 ),
	NFlagsW( 12, 59.017490 ),
	VERT( 0x41bbda9b, 0x4058dcc8, 0x3eeb1370 ),
	NORM( 0x3e79ae0b, 0x3f765894, 0x3df7043c ),
	NFlagsW( 13, 50.238312 ),
	VERT( 0x41cd1586, 0x405e1987, 0xbfe4b912 ),
	NORM( 0x3e1fba82, 0x3f7be187, 0x3db26bf3 ),
	NFlagsW( 14, 15.134922 ),
	VERT( 0x41962ace, 0x404ec7f5, 0xc06b9761 ),
	NORM( 0xbd8ee141, 0x3f229929, 0xbf44ec65 ),
	NFlagsW( 15, 51.475555 ),
	VERT( 0x41be3afa, 0x404fb4c8, 0x3fc0af80 ),
	NORM( 0x3e3fdcc2, 0x3f6add9f, 0x3eb3b448 ),
	NFlagsW( 16, 53.915531 ),
	VERT( 0x41badb31, 0x404ebaed, 0xc0da15db ),
	NORM( 0xbf472705, 0x3f0d9eee, 0xbe988cc0 ),
	NFlagsW( 17, 38.188515 ),
	VERT( 0x41af084a, 0x4045e4a7, 0xc08aafea ),
	NORM( 0xbe84d17f, 0x3f2ad990, 0xbf32b4f7 ),
	NFlagsW( 18, 50.000000 ),
	VERT( 0x41c3cdab, 0x404bde9b, 0xc120624e ),
	NORM( 0xbf482a39, 0x3f050f9d, 0xbeb03c70 ),
	NFlagsW( 19, 0.197062 ),
	VERT( 0x41b46584, 0x403e8bfc, 0xc09cc240 ),
	NORM( 0xbf2dfc78, 0x3f0e7d3e, 0xbef4a2b5 ),
	NFlagsW( 20, 49.930580 ),
	VERT( 0x41d1e65c, 0x403c5391, 0x3fcd54ef ),
	NORM( 0x3db0ae98, 0x3f6f1bc9, 0x3eb17c83 ),
	NFlagsW( 21, 7.434306 ),
	VERT( 0x419cefa1, 0x4029bbd9, 0x4065d00b ),
	NORM( 0x3e503dac, 0x3f0c0b85, 0x3f4fe0b3 ),
	NFlagsW( 22, 99.985352 ),
	VERT( 0x41e26a3a, 0x403c17a3, 0xc029b692 ),
	NORM( 0x3e825dd3, 0x3f778a94, 0x3c4ec4c8 ),
	NFlagsW( 23, 0.013783 ),
	VERT( 0x41b9ef83, 0x4022ecb1, 0x40355bc9 ),
	NORM( 0x3ea84320, 0x3f102c0f, 0x3f4217ff ),
	NFlagsW( 24, 82.543602 ),
	VERT( 0x41bfca45, 0x40142179, 0x401ce8bb ),
	NORM( 0x3e980163, 0x3ef44c3d, 0x3f53c0b8 ),
	NFlagsW( 25, 63.568409 ),
	VERT( 0x41d662e1, 0x40145899, 0x401cfd45 ),
	NORM( 0x3c15ecae, 0x3f26f8b5, 0x3f4209eb ),
	NFlagsW( 26, 3.215142 ),
	VERT( 0x41b91c3b, 0x400393c0, 0xc0d86927 ),
	NORM( 0xbf6c74ef, 0x3d8a1135, 0xbec1256c ),
	NFlagsW( 27, 44.645496 ),
	VERT( 0x41b4073c, 0x3fef4751, 0xc0a9a3e5 ),
	NORM( 0xbf41373b, 0x3e14d416, 0xbf23c41d ),
	NFlagsW( 28, 49.977768 ),
	VERT( 0x41c2fc01, 0x3ff76c4d, 0xc11e4faa ),
	NORM( 0xbf6d1754, 0xba35cad1, 0xbec11e97 ),
	NFlagsW( 29, 1.208730 ),
	VERT( 0x41aed4a9, 0x3fd873fe, 0xc09fc086 ),
	NORM( 0xbe9d673c, 0x3e464cfb, 0xbf6e8123 ),
	NFlagsW( 30, 50.000000 ),
	VERT( 0x4195e305, 0x3fb08100, 0xc091895c ),
	NORM( 0xbdd21e78, 0x3e8178c0, 0xbf764883 ),
	NFlagsW( 31, 50.004494 ),
	VERT( 0x41772f24, 0x3f9db60a, 0xc08c8b58 ),
	NORM( 0xbcda7b46, 0x3e6f6e37, 0xbf78cf63 ),
	NFlagsW( 32, 89.599586 ),
	VERT( 0x41babdb0, 0x3faa435b, 0x404b9de9 ),
	NORM( 0x3ed4bdbb, 0x3dc8f6f7, 0x3f677ee9 ),
	NFlagsW( 33, 83.235504 ),
	VERT( 0x41b8fab2, 0x3fb06bd9, 0xc0d56492 ),
	NORM( 0xbf69566d, 0xbe28db01, 0xbec0f392 ),
	NFlagsW( 34, 46.298477 ),
	VERT( 0x419c6abf, 0x3f938267, 0x4081c87e ),
	NORM( 0x3e7f1a44, 0x3dbd4c3f, 0x3f76cc0c ),
	NFlagsW( 35, 99.982712 ),
	VERT( 0x41bfdd0c, 0x3f9ac407, 0x4027d194 ),
	NORM( 0x3e9f88f6, 0x3dfd1c51, 0x3f713065 ),
	NFlagsW( 36, 60.775852 ),
	VERT( 0x41c2fb10, 0x3f974109, 0xc11cb0a4 ),
	NORM( 0xbf6a8bd4, 0xbdb3197e, 0xbec83a90 ),
	NFlagsW( 37, 2.005888 ),
	VERT( 0x41b42b3a, 0x3f87eec5, 0xc0aa08c3 ),
	NORM( 0xbf3db830, 0xbe3bfa1f, 0xbf255487 ),
	NFlagsW( 38, 49.994484 ),
	VERT( 0x41d5cfad, 0x3f6e6f87, 0x404c7431 ),
	NORM( 0xbdc34378, 0x3e641929, 0x3f785f22 ),
	NFlagsW( 39, 6.986392 ),
	VERT( 0x41c35799, 0x3ed975bf, 0xc11b0915 ),
	NORM( 0xbf689c96, 0xbdd5e247, 0xbecf01f1 ),
	NFlagsW( 40, 2.459437 ),
	VERT( 0x41ae3a3b, 0x3e02ecf1, 0xc0a1911f ),
	NORM( 0xbc5f83c4, 0xbdac3cf4, 0xbf7f11b6 ),
	NFlagsW( 41, 50.000000 ),
	VERT( 0x41b48e9c, 0xbd2ef46d, 0xc09f1c45 ),
	NORM( 0xbed9790c, 0xbe8ae2c6, 0xbf5d1c6d ),
	NFlagsW( 42, 49.999996 ),
	VERT( 0x41bb1757, 0xbe8fb996, 0x403f4330 ),
	NORM( 0x3e9b7459, 0xbe859f11, 0x3f6a9626 ),
	NFlagsW( 43, 70.433388 ),
	VERT( 0x41be0588, 0xbe96001d, 0xc0d0cb52 ),
	NORM( 0xbf579935, 0xbee0668f, 0xbea0cd97 ),
	NFlagsW( 44, 42.942680 ),
	VERT( 0x41c01c08, 0xbec2fee0, 0x402c1448 ),
	NORM( 0x3e1a55a3, 0xbe8f6a39, 0x3f72b44b ),
	NFlagsW( 45, 58.664982 ),
	VERT( 0x41c3e124, 0xbe984432, 0xc11a9a89 ),
	NORM( 0xbf67ce3c, 0xbe7cdb8f, 0xbeb0b456 ),
	NFlagsW( 46, 2.188536 ),
	VERT( 0x41957080, 0xbf1cbc09, 0xc0972328 ),
	NORM( 0xbd750c91, 0xbd3d4eb0, 0xbf7f4477 ),
	NFlagsW( 47, 50.000000 ),
	VERT( 0x41d674b6, 0xbf0996ce, 0x404a4fa8 ),
	NORM( 0xbdaf1521, 0xbea7e8d8, 0x3f70d990 ),
	NFlagsW( 48, 5.305145 ),
	VERT( 0x419c188b, 0xbf4dbf2e, 0x40749998 ),
	NORM( 0x3e993176, 0xbeade185, 0x3f6446e2 ),
	NFlagsW( 49, 99.948868 ),
	VERT( 0x4176eec1, 0xbf834453, 0xc0904e8a ),
	NORM( 0xbce2ebb0, 0xbdbd1974, 0xbf7ececb ),
	NFlagsW( 50, 87.199974 ),
	VERT( 0x41b666ae, 0xbf979cf8, 0xc090ae18 ),
	NORM( 0xbcfda568, 0xbf3395fb, 0xbf3644f2 ),
	NFlagsW( 51, 49.999981 ),
	VERT( 0x41af42a9, 0xbfabc90f, 0xc09526bf ),
	NORM( 0x3ddb718c, 0xbefef0e2, 0xbf5c4e6a ),
	NFlagsW( 52, 50.000000 ),
	VERT( 0x41c713d6, 0xbfc03a83, 0xc1187074 ),
	NORM( 0xbf691c2d, 0xbe9f57e4, 0xbe8b41d6 ),
	NFlagsW( 53, 0.632440 ),
	VERT( 0x41b9f978, 0xbfdb7ce6, 0x4014a293 ),
	NORM( 0x3e8dab49, 0xbf243202, 0x3f37307f ),
	NFlagsW( 54, 55.905224 ),
	VERT( 0x4196165b, 0xbfef5543, 0xc0912604 ),
	NORM( 0x3c83e948, 0xbee8714f, 0xbf640f82 ),
	NFlagsW( 55, 50.000828 ),
	VERT( 0x41bf3215, 0xbfe7b4d4, 0x3ff034f0 ),
	NORM( 0x3dfb2540, 0xbf3f0cf1, 0x3f277b58 ),
	NFlagsW( 56, 50.760101 ),
	VERT( 0x41c0d43d, 0xbfeab2d2, 0xc069fada ),
	NORM( 0xbec5e89a, 0xbf624ff9, 0xbe868fef ),
	NFlagsW( 57, 49.027084 ),
	VERT( 0x419bbb77, 0xc005a0cd, 0x403c09fc ),
	NORM( 0x3e948369, 0xbf2df487, 0x3f2c83ee ),
	NFlagsW( 58, 99.596252 ),
	VERT( 0x41b9515f, 0xbffc7fcc, 0xc05ab6de ),
	NORM( 0x3e587dd3, 0xbf6060e5, 0xbedd7576 ),
	NFlagsW( 59, 50.000000 ),
	VERT( 0x41c8fa65, 0xc00073c6, 0x3fe8703e ),
	NORM( 0xbdd27c4e, 0xbf484c87, 0x3f1d3d2d ),
	NFlagsW( 60, 40.814411 ),
	VERT( 0x41766f99, 0xc015a90d, 0xc085ef20 ),
	NORM( 0x3c18577c, 0xbef105f8, 0xbf61d912 ),
	NFlagsW( 61, 92.222038 ),
	VERT( 0x41ba1677, 0xc00b0fc8, 0xc0228505 ),
	NORM( 0x3e56c5cc, 0xbf712c94, 0xbe85fc7a ),
	NFlagsW( 62, 50.000000 ),
	VERT( 0x41c524ce, 0xc005bd5d, 0xc0d09bc0 ),
	NORM( 0xbf4ed43f, 0xbf14e981, 0xbdc12618 ),
	NFlagsW( 63, 21.649757 ),
	VERT( 0x41c3ab38, 0xc00ad86e, 0xc02ca160 ),
	NORM( 0xbe93bee3, 0xbf6e4d80, 0xbe657490 ),
	NFlagsW( 64, 47.946575 ),
	VERT( 0x41b12951, 0xc01258e1, 0xc068ea81 ),
	NORM( 0x3e70ae43, 0xbf4ef5c6, 0xbf0a243e ),
	NFlagsW( 65, 50.000000 ),
	VERT( 0x41d4a302, 0xc00ea41c, 0x3ff14e70 ),
	NORM( 0xbd783319, 0xbf564f07, 0x3f0b2a79 ),
	NFlagsW( 66, 4.300716 ),
	VERT( 0x41e3a4d9, 0xc00fee73, 0x3fdb0910 ),
	NORM( 0x3d9775e1, 0xbf617d2d, 0x3eef6f63 ),
	NFlagsW( 67, 0.036746 ),
	VERT( 0x41c98de4, 0xc01dd65e, 0xc117f5ff ),
	NORM( 0xbf5a0f19, 0xbeed2f1a, 0xbe7a82c8 ),
	NFlagsW( 68, 0.100180 ),
	VERT( 0x41b30380, 0xc02af7de, 0xc0222ab0 ),
	NORM( 0x3ea4a076, 0xbf6bcbb3, 0xbe60e331 ),
	NFlagsW( 69, 50.000000 ),
	VERT( 0x41b83422, 0xc02ccb7a, 0x3f4cb7d2 ),
	NORM( 0x3e736d72, 0xbf6b6eca, 0x3ea00c58 ),
	NFlagsW( 70, 50.008934 ),
	VERT( 0x41bb9a91, 0xc02b1718, 0xbf8939e0 ),
	NORM( 0xbd88f79a, 0xbf7a7d06, 0xbe47f027 ),
	NFlagsW( 71, 50.000000 ),
	VERT( 0x41d2b67e, 0xc026b5b6, 0xbd875650 ),
	NORM( 0x3c6db762, 0xbf7d074b, 0x3e1adb39 ),
	NFlagsW( 72, 6.484895 ),
	VERT( 0x41cfbed6, 0xc028448a, 0xbfc30782 ),
	NORM( 0xbb73bb18, 0xbf7ffca8, 0x3c19d9c2 ),
	NFlagsW( 73, 12.146620 ),
	VERT( 0x41bd507b, 0xc02e89eb, 0x3e579e16 ),
	NORM( 0x3c34011a, 0xbf7b6d14, 0x3e406017 ),
	NFlagsW( 74, 50.000000 ),
	VERT( 0x41b5f135, 0xc030e4ae, 0xbf08ae3f ),
	NORM( 0x3e349973, 0xbf7b8d90, 0xbd6c8e9f ),
	NFlagsW( 75, 50.000000 ),
	VERT( 0x41ccc729, 0xc029d352, 0xc03eccd5 ),
	NORM( 0xbe7aca16, 0xbf77f636, 0x3d2f4644 ),
	NFlagsW( 76, 17.125261 ),
	VERT( 0x41c5939d, 0xc02fa34d, 0xbfaffc68 ),
	NORM( 0xbda597e8, 0xbf7b571a, 0xbe2ffbb7 ),
	NFlagsW( 77, 45.878849 ),
	VERT( 0x41e0a497, 0xc02f1caf, 0xbe9c71a3 ),
	NORM( 0x3db39fdc, 0xbf7cc14e, 0x3e0773e9 ),
	NFlagsW( 78, 0.069942 ),
	VERT( 0x41c792fc, 0xc0375e58, 0xbd9472f3 ),
	NORM( 0x3d1a8c75, 0xbf7c4092, 0x3e2a3f5d ),
	NFlagsW( 79, 41.633965 ),
	VERT( 0x4196bcfe, 0xc04788dc, 0xc05301a3 ),
	NORM( 0x3e0550af, 0xbf591e24, 0xbf037904 ),
	NFlagsW( 80, 50.469227 ),
	VERT( 0x41de3453, 0xc035bc0b, 0xbfe0439a ),
	NORM( 0x3d418aa3, 0xbf7f4b01, 0x3d6ab416 ),
	NFlagsW( 81, 0.110952 ),
	VERT( 0x419ba12e, 0xc0499e1a, 0x3fa9e8db ),
	NORM( 0x3e88d552, 0xbf623a91, 0x3ec4baf5 ),
	NFlagsW( 82, 86.686119 ),
	VERT( 0x41dbc415, 0xc03c5b50, 0xc04cb591 ),
	NORM( 0x3cb1955a, 0xbf7c4e02, 0x3e2bee70 ),
	NFlagsW( 83, 0.124911 ),
	VERT( 0x41ce337c, 0xc046a0bd, 0xc0d3bcf3 ),
	NORM( 0xbf04e6c9, 0xbf59ddc0, 0x3da17eeb ),
	NFlagsW( 84, 1.215330 ),
	VERT( 0x4197c1a2, 0xc059fbb2, 0xc0076c50 ),
	NORM( 0x3e6b7cc2, 0xbf743440, 0xbe455c80 ),
	NFlagsW( 85, 52.194382 ),
	VERT( 0x419a74ff, 0xc061375c, 0xbd6e7d4d ),
	NORM( 0x3e8b8053, 0xbf75f9fe, 0x3d4e642f ),
	NFlagsW( 86, 61.633141 ),
	VERT( 0x41762292, 0xc07fa14b, 0xc031bd89 ),
	NORM( 0x3de1bc7f, 0xbf4a030a, 0xbf1ab24f ),
	NFlagsW( 87, 99.612289 ),
	CnkV_VN_NF(FV_CONT|FW_END, 239),
	OffnbIdx(0, 34),
	VERT( 0xbb5d6458, 0x40d6f55d, 0xbed05958 ),
	NORM( 0x3e8d1395, 0x3f75f3c1, 0xbd03d446 ),
	NFlagsW( 4232, 0.149007 ),
	VERT( 0x3fd1d2c8, 0x40c4c353, 0xbe7ac651 ),
	NORM( 0x3ea9757b, 0x3f71881b, 0x3c8cd923 ),
	NFlagsW( 4233, 88.978607 ),
	VERT( 0x3f5adc6d, 0x40b36205, 0x3fea5fd6 ),
	NORM( 0x3e959259, 0x3f4992f0, 0x3f0af6ce ),
	NFlagsW( 4234, 0.692499 ),
	VERT( 0x3e2a9df7, 0x40b290c6, 0xc03bb70d ),
	NORM( 0x3e7788b4, 0x3f47bb98, 0xbf13b170 ),
	NFlagsW( 4235, 0.171358 ),
	VERT( 0x3fe3166a, 0x40a6fdcf, 0xc0284782 ),
	NORM( 0x3e91e77b, 0x3f4a174c, 0xbf0b3010 ),
	NFlagsW( 4236, 91.040627 ),
	VERT( 0x4011a01b, 0x40a215c9, 0x3ff1f134 ),
	NORM( 0x3df7d257, 0x3f5b535a, 0x3f00588d ),
	NFlagsW( 4237, 92.360710 ),
	VERT( 0xbde011ec, 0x407bb8a1, 0xc08d8e78 ),
	NORM( 0x3e8615f7, 0x3f188e4d, 0xbf4256ff ),
	NFlagsW( 4238, 0.037720 ),
	VERT( 0x3f4979a0, 0x407093d3, 0x4065642a ),
	NORM( 0x3d62981f, 0x3f2b1589, 0x3f3de8df ),
	NFlagsW( 4239, 0.151524 ),
	VERT( 0x4009e65b, 0x406d863e, 0x4076d9ae ),
	NORM( 0xbe784112, 0x3f4422c9, 0x3f185d3a ),
	NFlagsW( 4240, 52.685410 ),
	VERT( 0x3fc8b674, 0x406ec2ae, 0xc082834e ),
	NORM( 0x3e8eedd2, 0x3f0b5997, 0xbf4a82a3 ),
	NFlagsW( 4241, 47.974369 ),
	VERT( 0x3d3a3bb8, 0x4002c623, 0x409a7c65 ),
	NORM( 0xbcc7de97, 0x3ed75626, 0x3f682c6d ),
	NFlagsW( 4242, 0.012559 ),
	VERT( 0x3fa4dcef, 0x40042831, 0x40a36741 ),
	NORM( 0xbe911b51, 0x3eef3462, 0x3f56665f ),
	NFlagsW( 4243, 0.925483 ),
	VERT( 0xbdc89c60, 0x4005f021, 0xc0b90003 ),
	NORM( 0x3ec5cdce, 0x3ea6bd8a, 0xbf5cea78 ),
	NFlagsW( 4244, 0.054759 ),
	VERT( 0x3fb81dfb, 0x3ffd0ba5, 0xc0a373ff ),
	NORM( 0x3ecaa2ea, 0x3e7edf25, 0xbf624c39 ),
	NFlagsW( 4245, 29.704433 ),
	VERT( 0xbf0749a7, 0xbdb9839c, 0xc0c6146c ),
	NORM( 0x3eeed37e, 0xbe54ee13, 0xbf5c18e9 ),
	NFlagsW( 4246, 0.011211 ),
	VERT( 0x3f8509e3, 0xbd718d5c, 0xc0a8f51d ),
	NORM( 0x3edebe3e, 0xbe8d5e08, 0xbf5b664f ),
	NFlagsW( 4247, 3.864068 ),
	VERT( 0x3f37820b, 0xbe82947a, 0x40afd314 ),
	NORM( 0xbe8be7a6, 0xbc82f737, 0x3f76392c ),
	NFlagsW( 4248, 0.096503 ),
	VERT( 0x40332ebe, 0xbdc51467, 0xc08dee25 ),
	NORM( 0x3e8d2d62, 0xbe8227ff, 0xbf6d5079 ),
	NFlagsW( 4249, 99.863541 ),
	VERT( 0x403fbd69, 0xbeb44672, 0x40cf1e80 ),
	NORM( 0xbea33acc, 0x3ca69d96, 0x3f7295ff ),
	NFlagsW( 4250, 99.984207 ),
	VERT( 0x3ed382fa, 0xc001cf7d, 0x409ed347 ),
	NORM( 0xbe93eb44, 0xbec14648, 0x3f613a23 ),
	NFlagsW( 4251, 0.036338 ),
	VERT( 0x3de76e50, 0xc00a68eb, 0xc085fc57 ),
	NORM( 0x3ebc7838, 0xbf311a91, 0xbf1f074c ),
	NFlagsW( 4252, 0.051656 ),
	VERT( 0x3fed11dd, 0xc00b66c0, 0xc05bd3a9 ),
	NORM( 0x3e342ed0, 0xbf2d7f86, 0xbf36c56a ),
	NFlagsW( 4253, 36.010902 ),
	VERT( 0x401fa6ff, 0xc0142585, 0x40be1799 ),
	NORM( 0xbeab9e06, 0xbebc3fac, 0x3f5e1101 ),
	NFlagsW( 4254, 96.540504 ),
	VERT( 0x4041ff9a, 0xc01706a2, 0xc04c270a ),
	NORM( 0xbd5c9757, 0xbf1d7044, 0xbf49648c ),
	NFlagsW( 4255, 99.935944 ),
	VERT( 0x3f260fd9, 0xc051bbfd, 0x408823bd ),
	NORM( 0xbe8f768c, 0xbf281926, 0x3f334228 ),
	NFlagsW( 4256, 0.085717 ),
	VERT( 0x3f2f7c12, 0xc05d2a60, 0xbff3096d ),
	NORM( 0x3e255884, 0xbf58b33d, 0xbf01e0d1 ),
	NFlagsW( 4257, 0.198227 ),
	VERT( 0x4009f308, 0xc06709ab, 0xbfc95d74 ),
	NORM( 0xbdcb8289, 0xbf5631a6, 0xbf09e04b ),
	NFlagsW( 4258, 62.585155 ),
	VERT( 0x40196c8a, 0xc06c190c, 0x409cf049 ),
	NORM( 0xbea05fcb, 0xbf2ded77, 0x3f29de48 ),
	NFlagsW( 4259, 94.995270 ),
	VERT( 0x3dbe9c55, 0xc089e63f, 0x40395be3 ),
	NORM( 0xbd263116, 0xbf613db7, 0x3ef2713e ),
	NFlagsW( 4260, 0.015002 ),
	VERT( 0x3f004576, 0xc08a1cd0, 0xbeb94af8 ),
	NORM( 0x3e205543, 0xbf6c9b33, 0xbeb24a2c ),
	NFlagsW( 4261, 0.083118 ),
	VERT( 0x3fe0eb91, 0xc08a7442, 0xbd0c31e6 ),
	NORM( 0xbd980f32, 0xbf6f3a7a, 0xbeb2437c ),
	NFlagsW( 4262, 14.982228 ),
	VERT( 0x3fa8004a, 0xc08bec94, 0x4040e8b8 ),
	NORM( 0xbe72e257, 0xbf63d04c, 0x3ec77f8b ),
	NFlagsW( 4263, 1.803610 ),
	VERT( 0x3eaccd5d, 0xc0973690, 0x3fab0ca5 ),
	NORM( 0x3d45eaf6, 0xbf7fa3eb, 0x3cb23b71 ),
	NFlagsW( 4264, 0.041420 ),
	VERT( 0x3fd76f6e, 0xc09843b9, 0x3fd9a81a ),
	NORM( 0xbe297cd9, 0xbf7c725c, 0xbc56f2bc ),
	NFlagsW( 4265, 12.992801 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Calf[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Calf,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Calf[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Calf,
OPosition  ( 26.514751F, -0.000000F, -0.000000F ),
OAngle     ( -0.000000F, -6.459175F,  0.000004F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Foot,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Thigh[]
START
	CnkV_VN(FV_CONT, 907),
	OffnbIdx(1916, 151),
	VERT( 0x40f1810e, 0x40fc8a63, 0xc0005818 ),
	NORM( 0xbbbbc22f, 0x3f7f9918, 0xbd643ec3 ),
	VERT( 0x41250263, 0x40f600e5, 0xbff3e6e6 ),
	NORM( 0x3da3c7c7, 0x3f7f0fe3, 0xbcf85735 ),
	VERT( 0x410aab69, 0x40ed6fb7, 0x40135e98 ),
	NORM( 0x3d3b334a, 0x3f71054c, 0x3eaaf9aa ),
	VERT( 0x412a19bb, 0x40e9efab, 0x3fb964ef ),
	NORM( 0x3e39e299, 0x3f706a1e, 0x3e955cc7 ),
	VERT( 0x40ebd030, 0x40e4c44c, 0x4027379f ),
	NORM( 0xbcbb8321, 0x3f70eb7d, 0x3eacbbfd ),
	VERT( 0x41539cae, 0x40ebf244, 0xc006548e ),
	NORM( 0x3db18269, 0x3f7f07f6, 0x3bd66ae4 ),
	VERT( 0x41162011, 0x40e57d82, 0xc0b70c60 ),
	NORM( 0x3cfd93c8, 0x3f5f1b45, 0xbefa92a7 ),
	VERT( 0x417a63f0, 0x40eaaa6a, 0xc0188110 ),
	NORM( 0x3d904c0b, 0x3f7f5be4, 0xbbc93122 ),
	VERT( 0x41915353, 0x40e36e3e, 0xc0144818 ),
	NORM( 0x3d610298, 0x3f7f8633, 0xbcd81dcb ),
	VERT( 0x41588089, 0x40db35a8, 0x3f37c6f7 ),
	NORM( 0x3e47f45e, 0x3f6c88e8, 0x3ea862b5 ),
	VERT( 0x41b9eaa4, 0x40e592dc, 0xbf9cb40c ),
	NORM( 0x3ce54161, 0x3f7f7986, 0xbd6be2af ),
	VERT( 0x414addee, 0x40da8642, 0xc0acfb04 ),
	NORM( 0x3de4b440, 0x3f62f1ad, 0xbee5ea06 ),
	VERT( 0x41a6dcf9, 0x40dfb3f6, 0xbfed0d45 ),
	NORM( 0xba828bfe, 0x3f7ffff6, 0x39b1dc42 ),
	VERT( 0x41c75735, 0x40e22b43, 0xbf619c68 ),
	NORM( 0x3e18b945, 0x3f7c46d1, 0xbda6cd25 ),
	VERT( 0x4173128f, 0x40d1a9be, 0xc0a3c1da ),
	NORM( 0x3e069eab, 0x3f60925a, 0xbeec65af ),
	VERT( 0x4184961c, 0x40d08173, 0x3ebef1bc ),
	NORM( 0x3dd9743a, 0x3f66cda2, 0x3ed6ba54 ),
	VERT( 0x419540a3, 0x40cf7670, 0x3e12b90f ),
	NORM( 0x3cb5a19d, 0x3f67145a, 0x3edc0e14 ),
	VERT( 0x41b065cd, 0x40d14b9f, 0x3f8c02d7 ),
	NORM( 0xbe16a7eb, 0x3f617d28, 0x3ee668f7 ),
	VERT( 0x41ac44ae, 0x40cfe18e, 0xc0849ee2 ),
	NORM( 0x3de419b8, 0x3f604a71, 0xbef02392 ),
	VERT( 0x4191dfe8, 0x40cbb155, 0xc0946cd3 ),
	NORM( 0x3dcf768c, 0x3f5fbbab, 0xbef35e35 ),
	VERT( 0x41be4912, 0x40d008a1, 0x3fbc44c4 ),
	NORM( 0xbcc2c9de, 0x3f5c8004, 0x3f01eb00 ),
	VERT( 0x41a1d6ae, 0x40c9bb13, 0x3f088d0d ),
	NORM( 0xbe05d54c, 0x3f6387e2, 0x3ee0e94e ),
	VERT( 0x41be5bde, 0x40caec35, 0xc067331b ),
	NORM( 0x3e815a5f, 0x3f5a698a, 0xbee9a881 ),
	VERT( 0x41ccdb63, 0x40c6b3fd, 0x3feff2fe ),
	NORM( 0x3e18d76a, 0x3f4fede9, 0x3f105d89 ),
	VERT( 0x4108a00d, 0x40acc1ef, 0x40afcdbd ),
	NORM( 0x3dd20bd9, 0x3f3394d7, 0x3f348bfe ),
	VERT( 0x40e0adc8, 0x40a64d75, 0x40b6f5ae ),
	NORM( 0x3e32bfd3, 0x3f26f05a, 0x3f3cddc4 ),
	VERT( 0x41cac39b, 0x40bb3f4b, 0xc05385b9 ),
	NORM( 0x3e97c8ec, 0x3f4a1d2c, 0xbf0992a6 ),
	VERT( 0x4128fb3c, 0x40a8b66c, 0x409e132f ),
	NORM( 0x3e6fe874, 0x3f379f41, 0x3f27fe3e ),
	VERT( 0x41514b93, 0x40a2a261, 0x4084c0d8 ),
	NORM( 0x3e812547, 0x3f405e1d, 0x3f1c148d ),
	VERT( 0x413d465a, 0x4093c01c, 0xc10384f7 ),
	NORM( 0x3d30579b, 0x3f1bd7da, 0xbf4acc8d ),
	VERT( 0x4186b912, 0x4094e809, 0x403de486 ),
	NORM( 0x3e5c8034, 0x3f42ffa9, 0x3f1c700a ),
	VERT( 0x4109b649, 0x408964d5, 0xc1064701 ),
	NORM( 0xbdc2855e, 0x3f12719d, 0xbf50906b ),
	VERT( 0x416bec00, 0x408fec0f, 0xc0fd9e45 ),
	NORM( 0x3dee48ed, 0x3f1f4ace, 0xbf462dc2 ),
	VERT( 0x41a7d0d5, 0x40907c33, 0x40429ae9 ),
	NORM( 0xbdd8c676, 0x3f2d11a2, 0x3f3aadbd ),
	VERT( 0x419bceca, 0x408cffed, 0x40330345 ),
	NORM( 0xbdfd98ee, 0x3f3ca3f9, 0x3f2a228b ),
	VERT( 0x41962fd5, 0x408b9fb8, 0x4030ed26 ),
	NORM( 0x3d17fddd, 0x3f400f25, 0x3f28fe85 ),
	VERT( 0x41b5ff50, 0x408a71f6, 0x40557347 ),
	NORM( 0xbd8041df, 0x3f1ac953, 0x3f4b4608 ),
	VERT( 0x41c3d904, 0x408ade03, 0x40624975 ),
	NORM( 0x3c1eff16, 0x3f192cad, 0x3f4d1a78 ),
	VERT( 0x419150e2, 0x40849678, 0xc0f22f58 ),
	NORM( 0x3e399d51, 0x3f1dddc8, 0xbf441d56 ),
	VERT( 0x41c03ace, 0x4089559f, 0xc0b90027 ),
	NORM( 0x3e9ffb7c, 0x3f20cae4, 0xbf366fd1 ),
	VERT( 0x41ae8639, 0x40846a52, 0xc0cf3f23 ),
	NORM( 0x3e413511, 0x3f1aa1e5, 0xbf4638b5 ),
	VERT( 0x41cbc42d, 0x4085aada, 0x40608ce3 ),
	NORM( 0x3dda2671, 0x3f19b6c8, 0x3f4ae3e3 ),
	VERT( 0x41ca24dd, 0x40815adc, 0xc0a49eeb ),
	NORM( 0x3ece1c6e, 0x3f1ff4b6, 0xbf2b4253 ),
	VERT( 0x41832056, 0x4017895e, 0x40af62f3 ),
	NORM( 0x3e8a740a, 0x3ef9c097, 0x3f547c03 ),
	VERT( 0x41473412, 0x40070e3e, 0x40da8a58 ),
	NORM( 0x3e7233d5, 0x3ed07b67, 0x3f61d6e4 ),
	VERT( 0x41bd0ef0, 0x401a487c, 0x409795ab ),
	NORM( 0xbd8df2b6, 0x3ec420a5, 0x3f6bce73 ),
	VERT( 0x41afd277, 0x401606d7, 0x408e7bf0 ),
	NORM( 0x3b387ffe, 0x3eb5b649, 0x3f6f5575 ),
	VERT( 0x419801a3, 0x400ce194, 0x409c300b ),
	NORM( 0x3da5499b, 0x3ef6892f, 0x3f5f6a2e ),
	VERT( 0x41930bf8, 0x400b4789, 0x409f3c85 ),
	NORM( 0x3e3429fb, 0x3efb0998, 0x3f5a85ed ),
	VERT( 0x41a309cd, 0x400d0043, 0x40982e05 ),
	NORM( 0x3de59267, 0x3ec32a1f, 0x3f6aed0e ),
	VERT( 0x41c6c59d, 0x401569e3, 0x409702a9 ),
	NORM( 0x3ceb8844, 0x3ec5c5bd, 0x3f6c03fd ),
	VERT( 0x411ba508, 0x3fdc6e4a, 0x40f45043 ),
	NORM( 0x3e0d3aec, 0x3eb0a849, 0x3f6dabbd ),
	VERT( 0x41c086bf, 0x400ef890, 0xc0e1b273 ),
	NORM( 0x3e736b6d, 0x3eab70c6, 0xbf696b6e ),
	VERT( 0x41ca042a, 0x40110dba, 0xc0d5b5b0 ),
	NORM( 0x3ec54f4f, 0x3ebadefb, 0xbf58f694 ),
	VERT( 0x418ecbc2, 0x3fe27421, 0xc10d6da3 ),
	NORM( 0x3e46d216, 0x3e89fa31, 0xbf71775f ),
	VERT( 0x41af4f3c, 0x3ff2aa81, 0xc0f3bca6 ),
	NORM( 0x3e6cd5ce, 0x3e8d8115, 0xbf6ecc48 ),
	VERT( 0x41654b60, 0x3fc15f2e, 0xc115fa52 ),
	NORM( 0x3dbf1835, 0x3e868cd9, 0xbf75d82e ),
	VERT( 0x413166c9, 0x3fa0a481, 0xc11a6816 ),
	NORM( 0x3d10ec0c, 0x3e67c422, 0xbf793133 ),
	VERT( 0x40f56ae1, 0x3f8835ae, 0xc11b4989 ),
	NORM( 0xbd83482d, 0x3e5e1f3d, 0xbf795d88 ),
	VERT( 0x40e7057e, 0x3f6d3ab8, 0x4100c00f ),
	NORM( 0xbcd6a1f4, 0x3e9934c5, 0x3f742d9f ),
	VERT( 0x40b1314f, 0x3f502fea, 0x40f7a369 ),
	NORM( 0x3dc5f5aa, 0x3e9900bb, 0x3f730bb6 ),
	VERT( 0x407fa407, 0x3f08b457, 0xc11640de ),
	NORM( 0xbe491296, 0x3e5fc034, 0xbf74b440 ),
	VERT( 0x4193427e, 0xbe0449bc, 0x40b3b4fd ),
	NORM( 0x3e6fb53b, 0x3d2b1576, 0x3f78a843 ),
	VERT( 0x419f72c7, 0xbe0ec9ea, 0x40a8175e ),
	NORM( 0x3e5cb03c, 0xbc8ef1f7, 0x3f79f1b7 ),
	VERT( 0x418eb42c, 0xbe6f3e9b, 0x40b8b3bd ),
	NORM( 0x3e907a22, 0x3d3199f5, 0x3f75586f ),
	VERT( 0x41c1815b, 0xbdaba44a, 0x40a80f91 ),
	NORM( 0xbcb4c8cd, 0xbd3aaafd, 0x3f7fabf0 ),
	VERT( 0x41cbc2ab, 0xbd59e676, 0x40a7f5c1 ),
	NORM( 0xbe0ace26, 0xbc8ae718, 0x3f7d999e ),
	VERT( 0x41b8868e, 0xbe4018f1, 0x40a6d516 ),
	NORM( 0xbdb133e9, 0xbd754354, 0x3f7e9430 ),
	VERT( 0x41abfd3c, 0xbea74567, 0x409e288e ),
	NORM( 0x3cfa2872, 0xbd838d44, 0x3f7f5a09 ),
	VERT( 0x4174bf88, 0xbf1919e1, 0x40d43201 ),
	NORM( 0x3e99dd44, 0x3ceba84a, 0x3f740e48 ),
	VERT( 0x41bcd67a, 0xbedb314b, 0xc0f16d56 ),
	NORM( 0x3e690b0c, 0xbe30fbd1, 0xbf755302 ),
	VERT( 0x41c89809, 0xbecfdbce, 0xc0e6be2a ),
	NORM( 0x3ec7b6e0, 0xbe50e60d, 0xbf65dd02 ),
	VERT( 0x41ad2c7e, 0xbf1bd656, 0xc0fdaec5 ),
	NORM( 0x3e86eb08, 0xbe24e1fc, 0xbf737cca ),
	VERT( 0x418bc08e, 0xbf79573d, 0xc1122fc2 ),
	NORM( 0x3e6a318c, 0xbdf2a7ab, 0xbf775cbc ),
	VERT( 0x415d185e, 0xbfa486ba, 0xc11b23b4 ),
	NORM( 0x3dda3a79, 0xbdc6881d, 0xbf7d5474 ),
	VERT( 0x4134c305, 0xbfc98834, 0x40f78937 ),
	NORM( 0x3e5d948c, 0xbda7bfba, 0x3f790dbb ),
	VERT( 0x4109d07c, 0xc003f5fc, 0x4102b7c7 ),
	NORM( 0x3e1757c4, 0xbe069ec0, 0x3f7af11c ),
	VERT( 0x4126a663, 0xbff5016a, 0xc11e067f ),
	NORM( 0x3d1ea7e7, 0xbe0e846d, 0xbf7d5084 ),
	VERT( 0x41c9f00a, 0xbffb69ac, 0x409590a0 ),
	NORM( 0xbe129922, 0xbed4be5d, 0x3f65f3ae ),
	VERT( 0x41c0a3f0, 0xc0056bac, 0x40932c19 ),
	NORM( 0xbd0139da, 0xbee7e04d, 0x3f641956 ),
	VERT( 0x41a9d29e, 0xc00cde18, 0x408b931e ),
	NORM( 0x3df79dce, 0xbef3a20f, 0x3f5f0593 ),
	VERT( 0x41b6f970, 0xc00b3fda, 0x408f2913 ),
	NORM( 0xbd5200f9, 0xbef20523, 0x3f613632 ),
	VERT( 0x40ce25a4, 0xc02aeeca, 0xc11cdd8d ),
	NORM( 0xbd9ed0aa, 0xbe2db9b8, 0xbf7b81b9 ),
	VERT( 0x40ba757d, 0xc032d7f1, 0x41067e6a ),
	NORM( 0x3e044cff, 0xbe2119dc, 0x3f7aa39b ),
	VERT( 0x419e3d1f, 0xc017e4cf, 0x4098dc95 ),
	NORM( 0x3e88cc16, 0xbee86035, 0x3f599e74 ),
	VERT( 0x41d0a2b8, 0xc00c1632, 0xc0a3dd7d ),
	NORM( 0x3f08104b, 0xbf219f15, 0xbf10928f ),
	VERT( 0x4191a4d9, 0xc0224fed, 0x40a76dd6 ),
	NORM( 0x3ea200a1, 0xbee02540, 0x3f5770b6 ),
	VERT( 0x40449d00, 0xc057803f, 0x410ac89b ),
	NORM( 0x3ebcc866, 0xbe891dad, 0x3f63df79 ),
	VERT( 0x41872b0b, 0xc03cce42, 0x40b359cd ),
	NORM( 0x3ebc0d06, 0xbef028c2, 0x3f4d9c90 ),
	VERT( 0x41c3b50a, 0xc02cd62d, 0xc0bf71c9 ),
	NORM( 0x3ec5862f, 0xbf27c2ac, 0xbf263f91 ),
	VERT( 0x401bd462, 0xc05fec98, 0xc11042a1 ),
	NORM( 0xbe488a21, 0xbe632b56, 0xbf7488d6 ),
	VERT( 0x41b781b2, 0xc036cb04, 0xc0ce9441 ),
	NORM( 0x3e971db4, 0xbf1ff545, 0xbf390aa8 ),
	VERT( 0x41a8b7f6, 0xc0475ae1, 0xc0e1e381 ),
	NORM( 0x3eaa9e67, 0xbf118777, 0xbf408f83 ),
	VERT( 0x41cc1834, 0xc04f4eb5, 0x407a7ab5 ),
	NORM( 0xbe29d042, 0xbf22a0d1, 0x3f411866 ),
	VERT( 0x415ba3f7, 0xc06b9b1c, 0x40d17855 ),
	NORM( 0x3e93b0f9, 0xbeffd857, 0x3f51170e ),
	VERT( 0x41c17bdd, 0xc05fb376, 0x40640b02 ),
	NORM( 0xbd307864, 0xbf2baa2f, 0x3f3d97da ),
	VERT( 0x41b912bf, 0xc066ef70, 0x405baf9a ),
	NORM( 0xbcfd35cb, 0xbf30f333, 0x3f38d473 ),
	VERT( 0x41d185ad, 0xc06258d9, 0xc01ed4ee ),
	NORM( 0x3ed1d22d, 0xbf4fdf07, 0xbed4c8f5 ),
	VERT( 0x4189263e, 0xc07a3b93, 0xc1046a2b ),
	NORM( 0x3e86ff93, 0xbf051278, 0xbf5004b9 ),
	VERT( 0x41abac70, 0xc077b569, 0x4046b6c8 ),
	NORM( 0x3db1593c, 0xbf34a2ae, 0x3f340af1 ),
	VERT( 0x41c90d42, 0xc07469a0, 0xc05624ca ),
	NORM( 0x3ee61144, 0xbf4fb7b3, 0xbebf617c ),
	VERT( 0x4125a809, 0xc08e23ec, 0x40dd0823 ),
	NORM( 0x3e53c020, 0xbf141358, 0x3f4a020e ),
	VERT( 0x4153707b, 0xc089f4b0, 0xc10d8445 ),
	NORM( 0x3dfe43d6, 0xbf038bbe, 0xbf594e1f ),
	VERT( 0x419fc44d, 0xc0854382, 0x404f15fe ),
	NORM( 0x3e3ea2e0, 0xbf35f0d9, 0x3f2dac2e ),
	VERT( 0x41bdc933, 0xc083c951, 0xc0874930 ),
	NORM( 0x3ea707fc, 0xbf5aff82, 0xbecdec18 ),
	VERT( 0x419275b6, 0xc0910983, 0x404fe6e9 ),
	NORM( 0x3e76b982, 0xbf3d3103, 0x3f210d8a ),
	VERT( 0x41b23138, 0xc08c03b6, 0xc0950460 ),
	NORM( 0x3e9a07a4, 0xbf5cd7fa, 0xbed0294c ),
	VERT( 0x411db68b, 0xc09accf7, 0xc10dda76 ),
	NORM( 0x3d6395fb, 0xbf0b4dfd, 0xbf564ed5 ),
	VERT( 0x40e2ab5e, 0xc0a31993, 0x40e790bc ),
	NORM( 0x3e4f338a, 0xbf1862c8, 0x3f471379 ),
	VERT( 0x41c55c74, 0xc08f306d, 0x40223dba ),
	NORM( 0xbc46cb8e, 0xbf5f5fec, 0x3efa0a74 ),
	VERT( 0x41cd3dd6, 0xc090545e, 0xbf702c29 ),
	NORM( 0x3e99dcc9, 0xbf6940fe, 0xbe905d1a ),
	VERT( 0x41bb4b34, 0xc095f97c, 0x4007db22 ),
	NORM( 0x3c0509e7, 0xbf6467e7, 0x3ee7312a ),
	VERT( 0x41a4e5b1, 0xc09a3325, 0xc0a5da1c ),
	NORM( 0x3eb490fe, 0xbf56da8b, 0xbed3e037 ),
	VERT( 0x41c4024f, 0xc0979527, 0xbfbebe6f ),
	NORM( 0x3e82d2dd, 0xbf70a347, 0xbe678ade ),
	VERT( 0x41af5684, 0xc09c79b7, 0x3fdcaf20 ),
	NORM( 0x3db24843, 0xbf66ddac, 0x3ed8b492 ),
	VERT( 0x41b7efb2, 0xc09e0d71, 0xc0048b5c ),
	NORM( 0x3e4954e5, 0xbf75c68a, 0xbe4bd7a4 ),
	VERT( 0x41ca1d1a, 0xc09d9a0f, 0x3f3c1257 ),
	NORM( 0x3e07b36d, 0xbf7d964c, 0x3d0de7a9 ),
	VERT( 0x40baff1b, 0xc0b23e17, 0xc1084282 ),
	NORM( 0xbcc94cbc, 0xbf187510, 0xbf4d8e4e ),
	VERT( 0x417ba1da, 0xc0a997bf, 0x4066aa53 ),
	NORM( 0x3e9ba4e0, 0xbf453806, 0x3f0f790e ),
	VERT( 0x4079d902, 0xc0b8ded8, 0x40f27a0c ),
	NORM( 0x3e22b876, 0xbf1bd3b5, 0x3f46fec5 ),
	VERT( 0x41a3b71d, 0xc0a5dcaa, 0x3fd7ab4e ),
	NORM( 0x3e38d521, 0xbf64decb, 0x3ed1f1dd ),
	VERT( 0x41becfa0, 0xc0a317a2, 0x3ed432f4 ),
	NORM( 0x3de2fe0e, 0xbf7dd8fb, 0x3d88c797 ),
	VERT( 0x41ac5250, 0xc0a55b25, 0xc012513b ),
	NORM( 0x3e81892a, 0xbf740392, 0xbe29a04a ),
	VERT( 0x41b41c39, 0xc0a88c7d, 0x3d34d5e1 ),
	NORM( 0x3e010bd7, 0xbf7d6b60, 0x3d845ed0 ),
	VERT( 0x41965478, 0xc0b09a9c, 0x3fd28e78 ),
	NORM( 0x3e68895a, 0xbf628e48, 0x3ed01fc0 ),
	VERT( 0x41a758f7, 0xc0b0e0c0, 0xbeb2f768 ),
	NORM( 0x3e5a257d, 0xbf799a40, 0x3d81146d ),
	VERT( 0x3fcbe77f, 0xc0c671e1, 0xc0f24254 ),
	NORM( 0xbe1c13c9, 0xbf1e9978, 0xbf4520ef ),
	VERT( 0x419d3b5a, 0xc0b7bb09, 0xc033f235 ),
	NORM( 0x3ea4b544, 0xbf6fb6a3, 0xbe0fbcfa ),
	VERT( 0x418655c3, 0xc0be17dd, 0xc0c90b3a ),
	NORM( 0x3e8c8ed8, 0xbf547d3b, 0xbef88eb9 ),
	VERT( 0x41467cff, 0xc0c64112, 0x407c98f5 ),
	NORM( 0x3e6a3df8, 0xbf518a90, 0x3f06e777 ),
	VERT( 0x419a7fdb, 0xc0bea53e, 0xbf2690b4 ),
	NORM( 0x3e8ab178, 0xbf757512, 0x3daedc65 ),
	VERT( 0x410d1f8d, 0xc0d93a62, 0x408c0211 ),
	NORM( 0x3e54ede4, 0xbf525425, 0x3f07e207 ),
	VERT( 0x41744708, 0xc0d38e09, 0x3fd6bbc9 ),
	NORM( 0x3e87addd, 0xbf64788c, 0x3ebaebbb ),
	VERT( 0x41482c56, 0xc0d8c70e, 0xc0cccd1f ),
	NORM( 0x3e179bbf, 0xbf587ca6, 0xbf034624 ),
	VERT( 0x40b7adcb, 0xc0e571e3, 0x409e6234 ),
	NORM( 0x3e54c8be, 0xbf50de65, 0x3f0a2169 ),
	VERT( 0x41828abe, 0xc0d93d51, 0xc06eb2df ),
	NORM( 0x3e8a9a71, 0xbf72c033, 0xbe29f50f ),
	VERT( 0x4018ce4c, 0xc0f0d054, 0x40b41db3 ),
	NORM( 0x3e164bc6, 0xbf4cdf69, 0x3f14d558 ),
	VERT( 0x41121367, 0xc0e9e9c9, 0xc0c8e797 ),
	NORM( 0x3daea15f, 0xbf58552f, 0xbf0720d7 ),
	VERT( 0x417c55b9, 0xc0e39ac1, 0xbf6119c1 ),
	NORM( 0x3e865bd0, 0xbf7624b3, 0x3da71e5d ),
	VERT( 0x413d50d7, 0xc0eec288, 0x3fd894f7 ),
	NORM( 0x3e60b9a3, 0xbf6b01b5, 0x3ea92229 ),
	VERT( 0x41420d39, 0xc0f5f8fa, 0xc072b3ce ),
	NORM( 0x3e3ebf62, 0xbf767bfd, 0xbe484c20 ),
	VERT( 0x40a80c6b, 0xc0fe586e, 0xc0b45221 ),
	NORM( 0x3c757e98, 0xbf5b287f, 0xbf0440e2 ),
	VERT( 0x413ce2c1, 0xc0fff364, 0xbf227f13 ),
	NORM( 0x3e62af3f, 0xbf78f60e, 0x3d941a3d ),
	VERT( 0x40fe8bcd, 0xc103a985, 0x400b8424 ),
	NORM( 0x3e63deb7, 0xbf662f12, 0x3ec0efac ),
	VERT( 0x410872ea, 0xc1055027, 0xc065414c ),
	NORM( 0x3e189e07, 0xbf769076, 0xbe654dff ),
	VERT( 0x409d7bb6, 0xc10c416b, 0x4029ae77 ),
	NORM( 0x3e55aed7, 0xbf643918, 0x3ecde0e0 ),
	VERT( 0x4101b6d1, 0xc10d7b8d, 0xbae7e96a ),
	NORM( 0x3e539dce, 0xbf798b9e, 0x3dac6017 ),
	VERT( 0x40a2102b, 0xc10f398b, 0xc04a1088 ),
	NORM( 0x3da4fc5c, 0xbf770d60, 0xbe7f5ecb ),
	VERT( 0x3fa94ca7, 0xc1121a0f, 0x406b2615 ),
	NORM( 0x3ddc9076, 0xbf631825, 0x3ee5d154 ),
	VERT( 0x409b62e7, 0xc116ca77, 0x3f222fba ),
	NORM( 0x3e255723, 0xbf7ba0da, 0x3db4c591 ),
	VERT( 0x3f70fb12, 0xc11dd827, 0x3fc7466c ),
	NORM( 0x3cc365ee, 0xbf7ec37c, 0x3dc3032e ),
	CnkV_VN_NF(FV_CONT|FW_START, 239),
	OffnbIdx(4232, 34),
	VERT( 0x41d47516, 0x40d6f55d, 0xbecf38a2 ),
	NORM( 0x3e8e08e2, 0x3f75f3c1, 0xba80ed51 ),
	NFlagsW( 0, 99.850998 ),
	VERT( 0x41e15e7f, 0x40c4c353, 0xbd7166a6 ),
	NORM( 0x3ea76495, 0x3f71881c, 0x3d5e7bc9 ),
	NFlagsW( 1, 11.021393 ),
	VERT( 0x41d94421, 0x40b36205, 0x3ff5326b ),
	NORM( 0x3e6ab696, 0x3f4992f0, 0x3f127eb9 ),
	NFlagsW( 2, 99.307503 ),
	VERT( 0x41d81506, 0x40b290c6, 0xc03952eb ),
	NORM( 0x3e9c35fb, 0x3f47bb98, 0xbf0bcb43 ),
	NFlagsW( 3, 99.828644 ),
	VERT( 0x41e49653, 0x40a6fdcf, 0xc01a7022 ),
	NORM( 0x3eb04b3f, 0x3f4a174d, 0xbf0218f2 ),
	NFlagsW( 4, 8.959369 ),
	VERT( 0x41e4812a, 0x40a215ca, 0x400895d9 ),
	NORM( 0x3d82bdf6, 0x3f5b535a, 0x3f03041b ),
	NFlagsW( 5, 7.639293 ),
	VERT( 0x41d73aba, 0x407bb8a1, 0xc08d0d43 ),
	NORM( 0x3eb0f590, 0x3f188e4d, 0xbf39906f ),
	NFlagsW( 6, 99.962280 ),
	VERT( 0x41d72602, 0x407093d3, 0x406999f2 ),
	NORM( 0xbce9558e, 0x3f2b1589, 0x3f3e4c1d ),
	NFlagsW( 7, 99.848473 ),
	VERT( 0x41e1c65f, 0x406d863e, 0x408265f0 ),
	NORM( 0xbe9d9ea2, 0x3f4422c9, 0x3f106a46 ),
	NFlagsW( 8, 47.314590 ),
	VERT( 0x41e440e1, 0x406ec2ae, 0xc078144d ),
	NORM( 0x3ebb95a6, 0x3f0b5998, 0xbf412f76 ),
	NFlagsW( 9, 52.025635 ),
	VERT( 0x41d0227c, 0x4002c623, 0x4099ab3f ),
	NORM( 0xbe014c7b, 0x3ed75626, 0x3f65ff43 ),
	NFlagsW( 10, 99.987442 ),
	VERT( 0x41d9c2d2, 0x40042831, 0x40a700ad ),
	NORM( 0xbec06c6d, 0x3eef3461, 0x3f4ce084 ),
	NFlagsW( 11, 99.074516 ),
	VERT( 0x41d88ad1, 0x4005f021, 0xc0b82da7 ),
	NORM( 0x3ef64094, 0x3ea6bd8b, 0xbf506338 ),
	NFlagsW( 12, 99.945244 ),
	VERT( 0x41e42632, 0x3ffd0ba5, 0xc09d3ccc ),
	NORM( 0x3efc43d0, 0x3e7edf27, 0xbf5576a4 ),
	NFlagsW( 13, 70.295563 ),
	VERT( 0x41d57ce4, 0xbdb983a5, 0xc0c6b98e ),
	NORM( 0x3f0f6a3b, 0xbe54ee11, 0xbf4d444c ),
	NFlagsW( 14, 99.988785 ),
	VERT( 0x41e121c2, 0xbd718d52, 0xc0a424b8 ),
	NORM( 0x3f075894, 0xbe8d5e07, 0xbf4d7a69 ),
	NFlagsW( 15, 96.135933 ),
	VERT( 0x41d4df13, 0xbe82947a, 0x40b149f5 ),
	NORM( 0xbec26a28, 0xbc82f743, 0x3f6cca81 ),
	NFlagsW( 16, 99.903496 ),
	VERT( 0x41ee5d83, 0xbdc51452, 0xc082f363 ),
	NORM( 0x3ec1acb0, 0xbe8227ff, 0xbf63ddf7 ),
	NFlagsW( 17, 0.136455 ),
	VERT( 0x41e61bbf, 0xbeb4466e, 0x40d896db ),
	NORM( 0xbed8c5e6, 0x3ca69d8a, 0x3f67dd61 ),
	NFlagsW( 18, 0.015793 ),
	VERT( 0x41d2ef65, 0xc001cf7d, 0x409f4de2 ),
	NORM( 0xbec5a76b, 0xbec14648, 0x3f577a31 ),
	NFlagsW( 19, 99.963661 ),
	VERT( 0x41d8c8d4, 0xc00a68eb, 0xc084ba79 ),
	NORM( 0x3edf0d9b, 0xbf311a91, 0xbf136b06 ),
	NFlagsW( 20, 99.948349 ),
	VERT( 0x41e5ee98, 0xc00b66c0, 0xc04d18c8 ),
	NORM( 0x3e82a42e, 0xbf2d7f86, 0xbf308b25 ),
	NFlagsW( 21, 63.989098 ),
	VERT( 0x41e29a0d, 0xc0142585, 0x40c5dd95 ),
	NORM( 0xbedc7d9e, 0xbebc3fad, 0x3f5300f5 ),
	NFlagsW( 22, 3.459493 ),
	VERT( 0x41ef15ac, 0xc01706a1, 0xc035085f ),
	NORM( 0x3d0f4cfe, 0xbf1d7044, 0xbf49aa53 ),
	NFlagsW( 23, 0.064061 ),
	VERT( 0x41d5721c, 0xc051bbfd, 0x40899c4d ),
	NORM( 0xbeb6e241, 0xbf281927, 0x3f2a0d13 ),
	NFlagsW( 24, 99.914284 ),
	VERT( 0x41db46a0, 0xc05d2a61, 0xbfe79fa0 ),
	NORM( 0x3e5ebd2b, 0xbf58b33d, 0xbef8cea4 ),
	NFlagsW( 25, 99.801773 ),
	VERT( 0x41e6ab03, 0xc06709ab, 0xbfa90cb3 ),
	NORM( 0xbd1c44fc, 0xbf5631a6, 0xbf0bdcd8 ),
	NFlagsW( 26, 37.414841 ),
	VERT( 0x41e2c2b4, 0xc06c190b, 0x40a49277 ),
	NORM( 0xbec5932b, 0xbf2ded77, 0x3f1fc4f3 ),
	NFlagsW( 27, 5.004734 ),
	VERT( 0x41d24059, 0xc089e63f, 0x4038da35 ),
	NORM( 0xbdbfa9a5, 0xbf613db7, 0x3eee9100 ),
	NFlagsW( 28, 99.985001 ),
	VERT( 0x41d86d3f, 0xc08a1cd0, 0xbe9b41cb ),
	NORM( 0x3e476dc8, 0xbf6c9b33, 0xbea823bf ),
	NFlagsW( 29, 99.916885 ),
	VERT( 0x41e21dfa, 0xc08a7442, 0x3e2797c9 ),
	NORM( 0xbd0dc1f1, 0xbf6f3a7a, 0xbeb56894 ),
	NFlagsW( 30, 85.017769 ),
	VERT( 0x41dbd6b9, 0xc08bec94, 0x40492258 ),
	NORM( 0xbe8f1d1e, 0xbf63d04d, 0x3eb891f8 ),
	NFlagsW( 31, 98.196388 ),
	VERT( 0x41d59928, 0xc0973691, 0x3faed2cb ),
	NORM( 0x3d3aa2f8, 0xbf7fa3eb, 0x3cdda165 ),
	NFlagsW( 32, 99.958580 ),
	VERT( 0x41dff788, 0xc09843b9, 0x3ff082a9 ),
	NORM( 0xbe26e685, 0xbf7c725c, 0xbd01a980 ),
	NFlagsW( 33, 87.007202 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 15),
	OffnbIdx(0, 2),
	VERT( 0x405ddd2d, 0x4102d274, 0x3fb2af21 ),
	NORM( 0x3f7c96b6, 0x3e14467e, 0xbd97f7d9 ),
	NFlagsW( 3572, 2.217376 ),
	VERT( 0x4048a4b9, 0x41022ebd, 0x40d3c848 ),
	NORM( 0x3f74e1eb, 0x3d04687e, 0x3e945334 ),
	NFlagsW( 3573, 0.089895 ),
	CnkV_VN_NF(FV_CONT|FW_END, 316),
	OffnbIdx(0, 45),
	VERT( 0x3fd0a5a0, 0x4102411b, 0xc06cf580 ),
	NORM( 0x3f5511cb, 0x3dc569fc, 0xbf0bbe87 ),
	NFlagsW( 3482, 0.406745 ),
	VERT( 0xbf7bb013, 0x40bee734, 0xc0e2e371 ),
	NORM( 0x3f1bf40b, 0x3d62e78f, 0xbf4a8490 ),
	NFlagsW( 3488, 3.120612 ),
	VERT( 0x3ee35938, 0x40a71b66, 0xc0d93568 ),
	NORM( 0x3e7b4f24, 0x3ee1c482, 0xbf5d02e3 ),
	NFlagsW( 3493, 15.078322 ),
	VERT( 0xc082a427, 0x4066ae53, 0xc1183e66 ),
	NORM( 0x3f179f9e, 0xbe83c571, 0xbf437649 ),
	NFlagsW( 3497, 0.032001 ),
	VERT( 0x3f9dc6d1, 0x405391e5, 0xc0e76304 ),
	NORM( 0x3cf00b57, 0x3e9a8300, 0xbf73f307 ),
	NFlagsW( 3498, 33.263824 ),
	VERT( 0x3fc1bcf8, 0x404ce7a3, 0x413f3303 ),
	NORM( 0x3f295e92, 0xbe186f39, 0x3f3c2494 ),
	NFlagsW( 3499, 2.024794 ),
	VERT( 0x40058097, 0x402d64f8, 0xc0ef1fcf ),
	NORM( 0xbe31e2db, 0x3ee0904b, 0xbf61b934 ),
	NFlagsW( 3502, 52.890457 ),
	VERT( 0xbff336ea, 0x3fb19b09, 0xc0f613aa ),
	NORM( 0x3e52f6ce, 0xbca08c96, 0xbf7a7541 ),
	NFlagsW( 3504, 17.564871 ),
	VERT( 0x3f96077e, 0x3f01a1f0, 0x413be91d ),
	NORM( 0x3f2bf4f4, 0xbe40ce2d, 0x3f376bee ),
	NFlagsW( 3506, 16.574360 ),
	VERT( 0x403493b6, 0x3ebb6d71, 0x41114bfe ),
	NORM( 0x3f30412d, 0xbda01f1d, 0x3f389471 ),
	NFlagsW( 3508, 95.886353 ),
	VERT( 0x3f105faa, 0xbce45d77, 0xc108a82a ),
	NORM( 0xbea17d5a, 0x3e7f8bb6, 0xbf6a61bb ),
	NFlagsW( 3509, 45.541824 ),
	VERT( 0xbf726b7a, 0xbee45ad5, 0xc10100f5 ),
	NORM( 0xbe894056, 0x3dd34240, 0xbf753668 ),
	NFlagsW( 3512, 25.245249 ),
	VERT( 0xc0be12a4, 0xbf5ddaed, 0xc108a252 ),
	NORM( 0x3eda07f5, 0xbeccd5b6, 0xbf4fc160 ),
	NFlagsW( 3513, 0.010987 ),
	VERT( 0xc0969a39, 0xc00c713b, 0xc0f7d7d3 ),
	NORM( 0x3e453964, 0xbe7da106, 0xbf7312ab ),
	NFlagsW( 3514, 0.460066 ),
	VERT( 0xc059e72d, 0xc069bcaf, 0xc0e8915f ),
	NORM( 0xbdc6b4fd, 0xbea63f01, 0xbf70da14 ),
	NFlagsW( 3516, 4.454171 ),
	VERT( 0xbfd7a5db, 0xc073377a, 0x413c76a7 ),
	NORM( 0x3ec3ca49, 0xbeddd8c7, 0x3f50ec21 ),
	NFlagsW( 3517, 0.026977 ),
	VERT( 0x3f8e56a7, 0xc06f16b4, 0x41249809 ),
	NORM( 0x3f1100fa, 0xbeece812, 0x3f2e94e3 ),
	NFlagsW( 3518, 70.175484 ),
	VERT( 0xbfa50325, 0xc079b5cc, 0xc0fcabb8 ),
	NORM( 0xbe8919b5, 0xbe86a5ff, 0xbf6d490c ),
	NFlagsW( 3519, 26.058220 ),
	VERT( 0xbfba5013, 0xc09f214f, 0x412e8993 ),
	NORM( 0x3ec88bfe, 0xbf2d696a, 0x3f1f6766 ),
	NFlagsW( 3522, 0.194309 ),
	VERT( 0xc0980db3, 0xc0c38bfc, 0xc0ae4549 ),
	NORM( 0xbdb7dccf, 0xbf3a153f, 0xbf2e4d1d ),
	NFlagsW( 3525, 0.361638 ),
	VERT( 0x3f40b754, 0xc0c0fe95, 0x40f78985 ),
	NORM( 0x3e763a63, 0xbf3c3b2a, 0x3f2238ae ),
	NFlagsW( 3526, 73.049072 ),
	VERT( 0xc01c8cb2, 0xc0c7fed7, 0xc0c99557 ),
	NORM( 0xbe84b3cd, 0xbf20286c, 0xbf3c5e87 ),
	NFlagsW( 3527, 7.141019 ),
	VERT( 0xbfd6abd7, 0xc0cb211f, 0x410b36c6 ),
	NORM( 0x3e998a68, 0xbf52294b, 0x3ef8cb22 ),
	NFlagsW( 3528, 1.770355 ),
	VERT( 0xc0bbc031, 0xc0ef3ee8, 0xc04b8e72 ),
	NORM( 0xbdd2d229, 0xbf6649bf, 0xbed95684 ),
	NFlagsW( 3530, 0.029058 ),
	VERT( 0xbf66ecf6, 0xc0f03792, 0x40c35807 ),
	NORM( 0x3e275a35, 0xbf550f32, 0x3f079d51 ),
	NFlagsW( 3531, 12.919262 ),
	VERT( 0xc063ec28, 0xc0f59f61, 0x40e5393d ),
	NORM( 0x3d995ea6, 0xbf68cce7, 0x3ed17fb2 ),
	NFlagsW( 3532, 0.027517 ),
	VERT( 0xc05d7907, 0xc0fe781c, 0xc0660138 ),
	NORM( 0xbe665168, 0xbf5b86e1, 0xbeece269 ),
	NFlagsW( 3534, 1.016799 ),
	VERT( 0xc0c311df, 0xc10580fa, 0xbf1fa354 ),
	NORM( 0xbdf552e0, 0xbf79a084, 0xbe3f149f ),
	NFlagsW( 3535, 0.010155 ),
	VERT( 0x3f196acc, 0xc106e658, 0xc091e640 ),
	NORM( 0xbdf7fcc1, 0xbf5cffe7, 0xbefadf65 ),
	NFlagsW( 3538, 99.671829 ),
	VERT( 0xc065530d, 0xc10cc858, 0xbf993d81 ),
	NORM( 0xbe5ae357, 0xbf729a81, 0xbe72d153 ),
	NFlagsW( 3539, 0.390745 ),
	VERT( 0xc00f21fb, 0xc10d3179, 0x408a54e9 ),
	NORM( 0x3caceb38, 0xbf69e973, 0x3ecfc4ee ),
	NFlagsW( 3540, 0.799084 ),
	VERT( 0xc04a0d60, 0xc11796d7, 0x40168782 ),
	NORM( 0xbe2c0670, 0xbf7b8811, 0x3da3a190 ),
	NFlagsW( 3541, 0.073532 ),
	VERT( 0x3f10cf52, 0xc115b73e, 0xc0042373 ),
	NORM( 0xbd92bba7, 0xbf77685f, 0xbe7ca282 ),
	NFlagsW( 3542, 98.582809 ),
	VERT( 0x40b50bb8, 0x40f76a98, 0xbfddd95b ),
	NORM( 0xbe1dbae2, 0x3f7cdd1f, 0xbccce5d1 ),
	NFlagsW( 3577, 82.393768 ),
	VERT( 0x40880a2b, 0x40f12b16, 0x4090c66c ),
	NORM( 0x3f3379ef, 0x3f352b6c, 0x3db33668 ),
	NFlagsW( 3578, 24.955952 ),
	VERT( 0x40820213, 0x40ea4280, 0xbef31a19 ),
	NORM( 0x3e4dd9cd, 0x3f799aa2, 0xbdc1901f ),
	NFlagsW( 3579, 34.964668 ),
	VERT( 0x409972de, 0x40e124db, 0x4052a61d ),
	NORM( 0x3ec4cf86, 0x3f686c82, 0x3e2b2fb7 ),
	NFlagsW( 3580, 46.607178 ),
	VERT( 0x40baff90, 0x40e230ea, 0xc0b89ebc ),
	NORM( 0xbdd6661c, 0x3f52e9f9, 0xbf0e9816 ),
	NFlagsW( 3581, 97.773041 ),
	VERT( 0x4084f646, 0x40d7fe4e, 0x40fa096f ),
	NORM( 0x3f5b64b5, 0x3ee2131f, 0x3e88042d ),
	NFlagsW( 3583, 23.447845 ),
	VERT( 0x40699e79, 0x40d81bf2, 0xc0af3e97 ),
	NORM( 0xbe4c61d9, 0x3f555c1b, 0xbf03eb7d ),
	NFlagsW( 3584, 36.389042 ),
	VERT( 0x4011ff58, 0x40d50b93, 0xc0741f7c ),
	NORM( 0x3ea7b57f, 0x3f53ea29, 0xbee93578 ),
	NFlagsW( 3585, 29.275661 ),
	VERT( 0x40743574, 0x40c34d02, 0x411b0be1 ),
	NORM( 0x3f57395d, 0x3e89f78d, 0x3ef07717 ),
	NFlagsW( 3587, 13.402255 ),
	VERT( 0x408edb61, 0x40b09f38, 0x40d2101a ),
	NORM( 0x3f476476, 0x3ec81808, 0x3efb26d2 ),
	NFlagsW( 3588, 58.680828 ),
	VERT( 0x406bd82c, 0x404ebf0f, 0x4107d8bf ),
	NORM( 0x3f49d900, 0xbd92e1f1, 0x3f1c62b0 ),
	NFlagsW( 3592, 70.250519 ),
	VERT( 0x409d967c, 0x405098d3, 0xc101a6ac ),
	NORM( 0xbe6928b1, 0x3f0712e1, 0xbf5181ed ),
	NFlagsW( 3593, 99.939743 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Thigh[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Thigh,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Thigh[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Thigh,
OPosition  ( -7.085585F,  8.059856F, -0.015709F ),
OAngle     ( -0.201673F, -3.228325F, 178.021582F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Calf,
Sibling     object_kihon11_Bip01_Bip01_R_Thigh,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy05[]
START
EvalFlags ( 0x0000001c ),
CNKModel   NULL,
OPosition  (  2.272977F,  0.000001F, -0.000005F ),
OAngle     (  0.000010F, -180.000042F,  0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger42[]
START
	CnkV_VN(FV_CONT, 181),
	OffnbIdx(40, 30),
	VERT( 0x3fb03956, 0xbedd7674, 0xbede2d83 ),
	NORM( 0x3f7165bd, 0xbea40023, 0xbdb9c545 ),
	VERT( 0x3fa16ae6, 0xbf29d7f6, 0xbeecca98 ),
	NORM( 0x3f474248, 0xbf1c233f, 0xbe1877d0 ),
	VERT( 0x3fa2a165, 0xbeb72e58, 0xbf545797 ),
	NORM( 0x3f4d1c9e, 0xbe5782d4, 0xbf0f654c ),
	VERT( 0x3faafca1, 0xbef01981, 0xbe602880 ),
	NORM( 0x3f6ebcc2, 0xbeb2cc87, 0x3dbb4fa1 ),
	VERT( 0x3fb96617, 0xbd8d5cb7, 0xbeb970c9 ),
	NORM( 0x3f7d533c, 0x3e107993, 0x3cf345ba ),
	VERT( 0x3f966877, 0xbf001b5e, 0xbf5e94de ),
	NORM( 0x3f244c5c, 0xbee2f679, 0xbf203333 ),
	VERT( 0x3fab03c1, 0xbef1cd5e, 0xbd84b133 ),
	NORM( 0x3f43c39a, 0xbe938476, 0x3f138dba ),
	VERT( 0x3fa967a2, 0xbdb828d0, 0xbf45ef66 ),
	NORM( 0x3f5c9f83, 0x3dd2ffa4, 0xbefe4a24 ),
	VERT( 0x3f91a6ff, 0xbf4559c0, 0xbe220fac ),
	NORM( 0x3f075a6c, 0xbf370d75, 0x3eea27f0 ),
	VERT( 0x3fb19742, 0xbd9f50f1, 0xbe346acc ),
	NORM( 0x3f6f0d26, 0x3e033759, 0x3eab0c38 ),
	VERT( 0x3f8fe52d, 0xbf2aa438, 0xbdb2f5f5 ),
	NORM( 0x3e5b1ea3, 0xbedddefb, 0x3f601df7 ),
	VERT( 0x3f6c3f11, 0xbf6ed846, 0xbed99416 ),
	NORM( 0x3ecca862, 0xbf68f925, 0xbde09c13 ),
	VERT( 0x3fa8f4da, 0xbda6e790, 0xbc05f0c5 ),
	NORM( 0x3f22b8ce, 0x3daac08e, 0x3f447954 ),
	VERT( 0x3f5bfe95, 0xbf3570ee, 0xbf761551 ),
	NORM( 0x3eb0be5a, 0xbf1fd11d, 0xbf3366da ),
	VERT( 0x3f9aaeee, 0x3e2874b3, 0xbf53ee12 ),
	NORM( 0x3f3c19ff, 0x3ec62fa4, 0xbf0e993d ),
	VERT( 0x3fa46da4, 0x3e8eefaa, 0xbedb0697 ),
	NORM( 0x3f5909bc, 0x3f066d5b, 0xbd97bfdd ),
	VERT( 0x3f713ffa, 0xbdb1b7d6, 0xbf8c9d11 ),
	NORM( 0x3ec2c291, 0x3db6d142, 0xbf6ba662 ),
	VERT( 0x3f9d4975, 0x3ea07472, 0xbe63b036 ),
	NORM( 0x3f505920, 0x3f12894b, 0x3dcc9c52 ),
	VERT( 0x3f897d64, 0x3e980ea6, 0xbf5bc9c8 ),
	NORM( 0x3f06148f, 0x3f187dbf, 0xbf1be677 ),
	VERT( 0x3f9e33d4, 0x3e9e6a91, 0xbd88e58b ),
	NORM( 0x3f2ca3bd, 0x3ef566b8, 0x3f0fcab9 ),
	VERT( 0x3f8da4f4, 0x3ef3acb3, 0xbeee9455 ),
	NORM( 0x3f162a96, 0x3f4bbe85, 0xbe1996ac ),
	VERT( 0x3f02d618, 0xbf864174, 0xbead823f ),
	NORM( 0x3e58627f, 0xbf797148, 0x3d9d9614 ),
	VERT( 0x3f38afe6, 0xbf24ae70, 0xbc94933b ),
	NORM( 0x3ea4b047, 0xbda7e407, 0x3f717c26 ),
	VERT( 0x3edff352, 0xbf495978, 0xbf7880d6 ),
	NORM( 0x3dbfe762, 0xbf30551a, 0xbf3807f5 ),
	VERT( 0x3f1b63b5, 0xbf42a065, 0x3d0c4b16 ),
	NORM( 0x3eb46d36, 0xbef1dc56, 0x3f4ed13c ),
	VERT( 0x3f78c815, 0x3ee992e8, 0xbdb62228 ),
	NORM( 0x3e088657, 0x3ef4a9e9, 0x3f5e4648 ),
	VERT( 0x3f6f1ea3, 0x3f0e05b9, 0xbe217c96 ),
	NORM( 0x3e931dd5, 0x3f57950c, 0x3ee9a977 ),
	VERT( 0x3f35261b, 0x3edd8cfa, 0xbf73b059 ),
	NORM( 0x3e29bff0, 0x3f2e1eaa, 0xbf36cddb ),
	VERT( 0x3e9e0b6b, 0xbe3c5619, 0xbf9eebe2 ),
	NORM( 0x3cbd2bbd, 0x3c990405, 0xbf7fe314 ),
	VERT( 0x3f347a37, 0x3f27fae4, 0xbed9a332 ),
	NORM( 0x3e17d742, 0x3f7ce56b, 0xbd3c550c ),
	CnkV_VN_NF(FV_CONT|FW_END, 99),
	OffnbIdx(0, 14),
	VERT( 0x3f182f86, 0xbe1d8477, 0x3db723bf ),
	NORM( 0x3eaaf9b3, 0x3d716a0d, 0x3f70d50f ),
	NFlagsW( 2740, 99.161057 ),
	VERT( 0x3f180062, 0x3eb00c71, 0xbc95f27c ),
	NORM( 0x3e8171ce, 0x3e4a7c17, 0x3f727485 ),
	NFlagsW( 2741, 99.715164 ),
	VERT( 0x3ed33ef3, 0xbe34be0a, 0x3e4a7976 ),
	NORM( 0x3ec7b7bc, 0x3db72adb, 0x3f6a9b23 ),
	NFlagsW( 2742, 83.050522 ),
	VERT( 0xbdba9898, 0xbf906acd, 0xbe28f7df ),
	NORM( 0x3e3408ed, 0xbf76c8ff, 0x3e4c3f36 ),
	NFlagsW( 2743, 1.843840 ),
	VERT( 0x3e8992b4, 0x3ed61a75, 0xbf76bfaa ),
	NORM( 0xbd3fc968, 0x3f347bb6, 0xbf35285e ),
	NFlagsW( 2744, 99.830399 ),
	VERT( 0x3ee06c63, 0x3ee27905, 0x3ca1346f ),
	NORM( 0x3e553ef2, 0x3f16cea6, 0x3f47e0ac ),
	NFlagsW( 2745, 94.950584 ),
	VERT( 0x3c9be975, 0xbf38204d, 0x3e9db520 ),
	NORM( 0x3e1b66be, 0xbed51e76, 0x3f6580d0 ),
	NFlagsW( 2746, 49.421085 ),
	VERT( 0x3e878d72, 0x3f2d1dbf, 0xbeaac054 ),
	NORM( 0xbc70add9, 0x3f7f4194, 0x3d99146c ),
	NFlagsW( 2747, 88.405418 ),
	VERT( 0xbda1d836, 0xbe6bad35, 0x3eb05a12 ),
	NORM( 0x3d980cfb, 0x3d0b34d9, 0x3f7f2529 ),
	NFlagsW( 2748, 49.895199 ),
	VERT( 0xbed1a754, 0xbf0e4524, 0x3eb130e1 ),
	NORM( 0x3e25011d, 0xbd67d359, 0x3f7c3d20 ),
	NFlagsW( 2749, 1.393845 ),
	VERT( 0xbdef819f, 0x3e8b4efb, 0x3e9af844 ),
	NORM( 0x3dba21ec, 0x3ee45b0a, 0x3f63f173 ),
	NFlagsW( 2750, 49.651077 ),
	VERT( 0xbeeb8da0, 0xbe8d8cf2, 0x3e91eb47 ),
	NORM( 0x3e426fa7, 0xbc453802, 0x3f7b52e5 ),
	NFlagsW( 2751, 4.137476 ),
	VERT( 0xbeabe03b, 0x3f20a7fb, 0xbe23aabb ),
	NORM( 0xbc55d80c, 0x3f7b44b4, 0x3e4382dd ),
	NFlagsW( 2752, 6.872643 ),
	VERT( 0xbef811aa, 0x3cb820dd, 0x3eb26ac4 ),
	NORM( 0x3e6ed01b, 0x3e2fe934, 0x3f750684 ),
	NFlagsW( 2753, 3.430178 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger42[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger42,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger42[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger42,
OPosition  (  2.254792F,  0.000000F, -0.000004F ),
OAngle     ( -0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy05,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger41[]
START
	CnkV_VN(FV_CONT, 139),
	OffnbIdx(102, 23),
	VERT( 0x40060f25, 0xbf6f7bd0, 0xbf5ec6e6 ),
	NORM( 0x3c9a5949, 0xbf3e2d74, 0xbf2b4df2 ),
	VERT( 0x3fea4839, 0xbf7c6af3, 0xbf513a65 ),
	NORM( 0x3e153fdf, 0xbf41d7e2, 0xbf22ffa6 ),
	VERT( 0x3ff272a5, 0xbf957b22, 0xbdef0293 ),
	NORM( 0x3e523bcf, 0xbf70dd11, 0x3e89f635 ),
	VERT( 0x3ff82a25, 0xbe7fddae, 0xbf9504f0 ),
	NORM( 0xbe1f1bc9, 0xbc7a4f1b, 0xbf7cdc4f ),
	VERT( 0x3fcb3d3b, 0xbf84b092, 0xbf5da957 ),
	NORM( 0x3e66a31c, 0xbf314579, 0xbf2f75cb ),
	VERT( 0x3fd270ed, 0xbf9d0899, 0xbdfe23c4 ),
	NORM( 0x3e825c95, 0xbf73b200, 0x3e2e5bb2 ),
	VERT( 0x3fd64345, 0xbe8e3c20, 0xbf8e3716 ),
	NORM( 0x3a9933ad, 0x3bf8b222, 0xbf7ffe0f ),
	VERT( 0x3ff4487a, 0x3edf9ee6, 0xbf5c7ce4 ),
	NORM( 0xbdf9ca81, 0x3f4136cb, 0xbf250368 ),
	VERT( 0x3fb6cb4e, 0xbe9c0ade, 0xbf93ce95 ),
	NORM( 0x3dd47656, 0x3cf2a1d8, 0xbf7e8179 ),
	VERT( 0x3fc14d9d, 0xbf52b1a2, 0x3ed8ba15 ),
	NORM( 0x3ed13a04, 0xbec721e2, 0x3f535f88 ),
	VERT( 0x3fd38253, 0x3edb38bf, 0xbf4f0671 ),
	NORM( 0xbd10d941, 0x3f475dea, 0xbf20556d ),
	VERT( 0x3f57d131, 0xbf9dcbcf, 0xbf589724 ),
	NORM( 0x3d8eed02, 0xbf42fc98, 0xbf24ea46 ),
	VERT( 0x3fd55e7a, 0x3f1d1b5f, 0xbe0346f0 ),
	NORM( 0xbbf2ae0f, 0x3f7819cc, 0x3e7c4c62 ),
	VERT( 0x3f67e5ae, 0xbfb3bb9d, 0x3d97f7dd ),
	NORM( 0x3e56fc9c, 0xbf7063c1, 0x3e8b6dc7 ),
	VERT( 0x3fb3810f, 0xbea353f7, 0x3ef36e07 ),
	NORM( 0x3ebbec15, 0x3cd803e0, 0x3f6e0988 ),
	VERT( 0x3fb0e622, 0x3edb3d32, 0xbf58d0d5 ),
	NORM( 0x3cdf5c5c, 0x3f408aff, 0xbf2890e3 ),
	VERT( 0x3fae6e9f, 0x3e5ae798, 0x3eda69bf ),
	NORM( 0x3e8e6e42, 0x3f03acdd, 0x3f4fab01 ),
	VERT( 0x3faf1e8a, 0x3f1ca58a, 0xbe0d77dc ),
	NORM( 0x3a6ef217, 0x3f7da40f, 0x3e0ab19c ),
	VERT( 0x3f644283, 0xbf6e8023, 0x3f2b35b5 ),
	NORM( 0x3e1638db, 0xbeee79db, 0x3f5f6693 ),
	VERT( 0x3f288b03, 0xbecdaf5b, 0xbf987c4b ),
	NORM( 0xbd9b9159, 0x3b3b3065, 0xbf7f4261 ),
	VERT( 0x3f457d2e, 0xbecb6ceb, 0x3f375b6d ),
	NORM( 0x3da3fb25, 0x3d0fa396, 0x3f7f0523 ),
	VERT( 0x3f1c0b68, 0x3edceefe, 0xbf5369ae ),
	NORM( 0xbdb138a5, 0x3f427730, 0xbf2502a0 ),
	VERT( 0x3f3cbf59, 0x3e232e21, 0x3f2b108d ),
	NORM( 0x3ca03807, 0x3ef3d014, 0x3f610e14 ),
	CnkV_VN_NF(FV_CONT|FW_START, 99),
	OffnbIdx(2740, 14),
	VERT( 0x40365a62, 0xbe1d8477, 0x3db723bf ),
	NORM( 0x3eaaf9b3, 0x3d716a0d, 0x3f70d50f ),
	NFlagsW( 0, 0.838937 ),
	VERT( 0x40364e99, 0x3eb00c71, 0xbc95f27c ),
	NORM( 0x3e8171ce, 0x3e4a7c17, 0x3f727485 ),
	NFlagsW( 1, 0.284835 ),
	VERT( 0x402ab65e, 0xbe34be0a, 0x3e4a7976 ),
	NORM( 0x3ec7b7bc, 0x3db72adb, 0x3f6a9b23 ),
	NFlagsW( 2, 16.949482 ),
	VERT( 0x400a79bb, 0xbf906acd, 0xbe28f7df ),
	NORM( 0x3e3408ed, 0xbf76c8ff, 0x3e4c3f36 ),
	NFlagsW( 3, 98.156151 ),
	VERT( 0x402180d6, 0x3ed61a75, 0xbf76bfaa ),
	NORM( 0xbd3fc968, 0x3f347bb6, 0xbf35285e ),
	NFlagsW( 4, 0.169608 ),
	VERT( 0x402c5c0c, 0x3ee27905, 0x3ca1346f ),
	NORM( 0x3e553ef2, 0x3f16cea6, 0x3f47e0ac ),
	NFlagsW( 5, 5.049414 ),
	VERT( 0x40118653, 0xbf38204d, 0x3e9db520 ),
	NORM( 0x3e1b66be, 0xbed51e76, 0x3f6580d0 ),
	NFlagsW( 6, 50.578915 ),
	VERT( 0x4021402e, 0x3f2d1dbf, 0xbeaac054 ),
	NORM( 0xbc70add9, 0x3f7f4194, 0x3d99146c ),
	NFlagsW( 7, 11.594584 ),
	VERT( 0x400b3fbe, 0xbe6bad35, 0x3eb05a12 ),
	NORM( 0x3d980cfb, 0x3d0b34d9, 0x3f7f2529 ),
	NFlagsW( 8, 50.104797 ),
	VERT( 0x3fec332b, 0xbf0e4524, 0x3eb130e1 ),
	NORM( 0x3e25011d, 0xbd67d359, 0x3f7c3d20 ),
	NFlagsW( 9, 98.606155 ),
	VERT( 0x4008d273, 0x3e8b4efb, 0x3e9af844 ),
	NORM( 0x3dba21ec, 0x3ee45b0a, 0x3f63f173 ),
	NFlagsW( 10, 50.348927 ),
	VERT( 0x3fe5b998, 0xbe8d8cf2, 0x3e91eb47 ),
	NORM( 0x3e426fa7, 0xbc453802, 0x3f7b52e5 ),
	NFlagsW( 11, 95.862518 ),
	VERT( 0x3ff5a4f1, 0x3f20a7fb, 0xbe23aabb ),
	NORM( 0xbc55d80c, 0x3f7b44b4, 0x3e4382dd ),
	NFlagsW( 12, 93.127357 ),
	VERT( 0x3fe29896, 0x3cb820dd, 0x3eb26ac4 ),
	NORM( 0x3e6ed01b, 0x3e2fe934, 0x3f750684 ),
	NFlagsW( 13, 96.569817 ),
	CnkV_VN_NF(FV_CONT|FW_END, 134),
	OffnbIdx(0, 19),
	VERT( 0x3fc03782, 0x3fb9617b, 0xbf2797b4 ),
	NORM( 0x3d4a088d, 0xbf491049, 0xbf1df4a3 ),
	NFlagsW( 2766, 0.212690 ),
	VERT( 0x3fc9ca2f, 0x3fa8f16a, 0x3eb053fe ),
	NORM( 0x3e676051, 0xbf6c3f22, 0x3e9fb832 ),
	NFlagsW( 2767, 20.645189 ),
	VERT( 0x3f8c6346, 0x3fb133a5, 0xbf0a9439 ),
	NORM( 0x3e33b656, 0xbf543885, 0xbf07f0c0 ),
	NFlagsW( 2768, 9.516314 ),
	VERT( 0x3f93b5b5, 0x3f9b5ac5, 0x3edd975f ),
	NORM( 0x3e42fa00, 0xbf637059, 0x3ed5d647 ),
	NFlagsW( 2769, 45.786446 ),
	VERT( 0x3f4ebe9b, 0x3fadb437, 0xbf36a719 ),
	NORM( 0x3e9c6a4a, 0xbf320aab, 0xbf267ed5 ),
	NFlagsW( 2770, 3.562189 ),
	VERT( 0x3f5f6362, 0x3f965a6d, 0x3eca4bf3 ),
	NORM( 0x3dfc9a50, 0xbf70a1d1, 0x3ea2e9ca ),
	NFlagsW( 2771, 56.159664 ),
	VERT( 0x3eddee4b, 0xbfa4dba3, 0xbf4368a8 ),
	NORM( 0x3e06cb5b, 0xbf4cfe87, 0xbf15978b ),
	NFlagsW( 2810, 99.499619 ),
	VERT( 0x3efc2c2b, 0xbfbbf035, 0x3e31acd4 ),
	NORM( 0x3e6d168b, 0xbf6502e7, 0x3ec3b872 ),
	NFlagsW( 2811, 99.923218 ),
	VERT( 0x3e7c50ca, 0xbee3f09f, 0xbf8e937b ),
	NORM( 0x3d46c17a, 0x3c31897e, 0xbf7faef1 ),
	NFlagsW( 2812, 99.860176 ),
	VERT( 0x3eae440d, 0xbf55e543, 0x3f25ec90 ),
	NORM( 0x3d3e132d, 0xbe7f4c4f, 0x3f77a1a0 ),
	NFlagsW( 2813, 99.974792 ),
	VERT( 0x3e8279eb, 0xbee6a2c6, 0x3f1a90c9 ),
	NORM( 0x3cdb3931, 0x3c945d8c, 0x3f7fddc4 ),
	NFlagsW( 2815, 85.473412 ),
	VERT( 0x3e5727b3, 0x3ecbe557, 0xbf3df1f2 ),
	NORM( 0xbd7f5605, 0x3f4c4aae, 0xbf19729d ),
	NFlagsW( 2816, 86.635223 ),
	VERT( 0x3e6e9420, 0xbcac13f3, 0x3f21540f ),
	NORM( 0x3d8931c4, 0x3e90cd5d, 0x3f74f2ec ),
	NFlagsW( 2817, 69.627022 ),
	VERT( 0x3e57e7af, 0x3f2c63be, 0x3e24ccc4 ),
	NORM( 0x3c9425bf, 0x3f716f2a, 0x3ea9fd31 ),
	NFlagsW( 2819, 71.893539 ),
	VERT( 0xbe395af6, 0x3eb019b6, 0xbf64940a ),
	NORM( 0x3d270ec8, 0x3f42f7d2, 0xbf2592b3 ),
	NFlagsW( 2820, 8.925775 ),
	VERT( 0xbea3e998, 0xbf056039, 0x3f4212d0 ),
	NORM( 0x3e87f379, 0x3d17a083, 0x3f76a0d6 ),
	NFlagsW( 2822, 0.511292 ),
	VERT( 0xbe448819, 0x3f10dacf, 0x3dc60917 ),
	NORM( 0xbe5b68b1, 0x3f76af37, 0x3e23a88c ),
	NFlagsW( 2823, 39.115128 ),
	VERT( 0xbead24d7, 0x3d8a9c65, 0x3f3560f6 ),
	NORM( 0x3dbca7d0, 0x3ef41f6e, 0x3f5fc9a1 ),
	NFlagsW( 2824, 4.704092 ),
	VERT( 0x3f1c7afa, 0x3f1896b8, 0x3d960b62 ),
	NORM( 0x3dccf06f, 0x3f74329d, 0x3e90e017 ),
	NFlagsW( 2922, 99.965904 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger41[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger41,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger41[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger41,
OPosition  (  2.400267F, -0.000001F,  0.000007F ),
OAngle     ( -0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Finger42,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger4[]
START
	CnkV_VN_NF(FV_CONT|FW_START, 8),
	OffnbIdx(2922, 1),
	VERT( 0x4040bcbf, 0x3f1896b8, 0x3d960b62 ),
	NORM( 0x3dccf06f, 0x3f74329d, 0x3e90e017 ),
	NFlagsW( 0, 0.026213 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 57),
	OffnbIdx(0, 8),
	VERT( 0x4029ed3d, 0xbee6a2c6, 0x3f1a90c9 ),
	NORM( 0x3cdb3931, 0x3c945d8c, 0x3f7fddc4 ),
	NFlagsW( 2815, 14.468082 ),
	VERT( 0x4027107b, 0x3ecbe557, 0xbf3df1f2 ),
	NORM( 0xbd7f5605, 0x3f4c4aae, 0xbf19729d ),
	NFlagsW( 2816, 13.250309 ),
	VERT( 0x40288742, 0xbcac13f3, 0x3f21540f ),
	NORM( 0x3d8931c4, 0x3e90cd5d, 0x3f74f2ec ),
	NFlagsW( 2817, 30.298773 ),
	VERT( 0x40271c7b, 0x3f2c63be, 0x3e24ccc4 ),
	NORM( 0x3c9425bf, 0x3f716f2a, 0x3ea9fd31 ),
	NFlagsW( 2819, 27.980555 ),
	VERT( 0x400e0851, 0x3eb019b6, 0xbf64940a ),
	NORM( 0x3d270ec8, 0x3f42f7d2, 0xbf2592b3 ),
	NFlagsW( 2820, 89.103859 ),
	VERT( 0x400520cd, 0xbf056039, 0x3f4212d0 ),
	NORM( 0x3e87f379, 0x3d17a083, 0x3f76a0d6 ),
	NFlagsW( 2822, 97.410538 ),
	VERT( 0x400d557e, 0x3f10dacf, 0x3dc60917 ),
	NORM( 0xbe5b68b1, 0x3f76af37, 0x3e23a88c ),
	NFlagsW( 2823, 58.590363 ),
	VERT( 0x4003f965, 0x3d8a9c65, 0x3f3560f6 ),
	NORM( 0x3dbca7d0, 0x3ef41f6e, 0x3f5fc9a1 ),
	NFlagsW( 2824, 91.930679 ),
	CnkV_VN_NF(FV_CONT|FW_END, 113),
	OffnbIdx(0, 16),
	VERT( 0x4010e045, 0xbefa2caf, 0xbf9a9851 ),
	NORM( 0x3e794b8b, 0x3d697e86, 0xbf77de52 ),
	NFlagsW( 2814, 68.904015 ),
	VERT( 0x400d7393, 0xbf892d67, 0x3f3503f9 ),
	NORM( 0x3e821953, 0xbed71a25, 0x3f5f04c7 ),
	NFlagsW( 2818, 88.572716 ),
	VERT( 0x3fd8a489, 0xbf18369f, 0xbfae81fd ),
	NORM( 0x3c0f8318, 0xbc01c181, 0xbf7ffb6c ),
	NFlagsW( 2821, 22.842358 ),
	VERT( 0x3fcfa1e4, 0xbf9636e2, 0x3f5df404 ),
	NORM( 0x3e6d3cbc, 0xbef74aad, 0x3f582be5 ),
	NFlagsW( 2825, 45.118423 ),
	VERT( 0x3fd3a1e3, 0x3e4e0e08, 0xbf82d77c ),
	NORM( 0x3e13f841, 0x3f309895, 0xbf359b97 ),
	NFlagsW( 2826, 82.426926 ),
	VERT( 0x3f93bfad, 0xbf265eae, 0xbf9b0e38 ),
	NORM( 0x3e3108f4, 0xbdf0fa90, 0xbf7a56e0 ),
	NFlagsW( 2828, 35.282089 ),
	VERT( 0x40029b9b, 0x3f84a9ee, 0x3edf41ae ),
	NORM( 0x3ea6fb5a, 0xbf60fa14, 0x3eb25540 ),
	NFlagsW( 2829, 36.912052 ),
	VERT( 0x3fbb565a, 0xbf25a158, 0x3f79b932 ),
	NORM( 0x3e34b6b4, 0x3cc3e794, 0x3f7be855 ),
	NFlagsW( 2830, 77.694405 ),
	VERT( 0x3fc958bd, 0x3ee559f3, 0x3dbd4a34 ),
	NORM( 0xbd6d7899, 0x3f79a12b, 0x3e5b1e38 ),
	NFlagsW( 2832, 64.808014 ),
	VERT( 0x3fbd8680, 0xbd9049ec, 0x3f5b486b ),
	NORM( 0x3da56b16, 0x3f03c05f, 0x3f5a848a ),
	NFlagsW( 2833, 72.139923 ),
	VERT( 0x3f9b9139, 0x3eda5984, 0xbf7ba616 ),
	NORM( 0x3f1be140, 0x3e22df6a, 0xbf46f227 ),
	NFlagsW( 2834, 54.203300 ),
	VERT( 0x3f10ce0e, 0xbf66c19e, 0x3f89a91e ),
	NORM( 0xbca4c284, 0xbda5bcd1, 0x3f7f1bbd ),
	NFlagsW( 2839, 4.542508 ),
	VERT( 0x3f5658d0, 0x3ecf2452, 0x3ec2505d ),
	NORM( 0x3f10010f, 0xbd025ee0, 0x3f538017 ),
	NFlagsW( 2841, 39.273712 ),
	VERT( 0x3f1edd33, 0xbe1ac9b3, 0x3f7344fd ),
	NORM( 0x3db64326, 0x3eae942e, 0x3f6f93e6 ),
	NFlagsW( 2846, 39.418152 ),
	VERT( 0xbcad0715, 0xbed67b9e, 0x3f5e9d80 ),
	NORM( 0xbe268fb5, 0x3d6f8292, 0x3f7c2592 ),
	NFlagsW( 2851, 10.249703 ),
	VERT( 0x3d18c79e, 0x3e9ee034, 0x3f6fdca1 ),
	NORM( 0x3d668713, 0xbe48a317, 0x3f7a9fc5 ),
	NFlagsW( 2856, 10.483722 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger4[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger4,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger4[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger4,
OPosition  (  8.016157F, -3.241308F, -0.002586F ),
OAngle     (  0.044934F,  0.007921F, -9.999984F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Finger41,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy04[]
START
EvalFlags ( 0x0000001c ),
CNKModel   NULL,
OPosition  (  2.727576F, -0.000001F,  0.000001F ),
OAngle     (  0.000004F, -180.000042F,  0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger32[]
START
	CnkV_VN(FV_CONT, 235),
	OffnbIdx(0, 39),
	VERT( 0x4012abbe, 0xbeb74eaa, 0xbe96b1b1 ),
	NORM( 0x3f6d366d, 0xbebfff80, 0xbce316be ),
	VERT( 0x400aab24, 0xbf1512e6, 0xbea2b718 ),
	NORM( 0x3f401003, 0xbf265c77, 0xbdf967e9 ),
	VERT( 0x400bc806, 0xbe909527, 0xbf3c4767 ),
	NORM( 0x3f49a1d5, 0xbe8622f7, 0xbf0ec43d ),
	VERT( 0x4005d834, 0xbed992fc, 0xbf423f00 ),
	NORM( 0x3f23ce15, 0xbf0132c6, 0xbf145d08 ),
	VERT( 0x4011a0c3, 0xbec5c673, 0x3d39bce2 ),
	NORM( 0x3f4b5e20, 0xbec49a71, 0x3ef0f37e ),
	VERT( 0x400eb543, 0xbec70892, 0xbde165bf ),
	NORM( 0x3f68cad1, 0xbed43d73, 0x3d1125c9 ),
	VERT( 0x40199d99, 0x3cce7bd6, 0xbe7bcab1 ),
	NORM( 0x3f7de1d4, 0x3dafb460, 0x3dc38bb5 ),
	VERT( 0x4010c79f, 0xba8875ff, 0xbf2d8247 ),
	NORM( 0x3f5d09a3, 0x3d1f51f4, 0xbf00c29e ),
	VERT( 0x400239d3, 0xbf2d2cdd, 0x3c73eb34 ),
	NORM( 0x3f0777a4, 0xbf28db84, 0x3f08a502 ),
	VERT( 0x40028dd5, 0xbf10dfa8, 0x3d3ade7b ),
	NORM( 0x3e526104, 0xbe5b4152, 0x3f747820 ),
	VERT( 0x4013f0c6, 0x3cd39305, 0xbd91ff19 ),
	NORM( 0x3f7b8023, 0x3dd04992, 0x3e204796 ),
	VERT( 0x4014a026, 0x3d07471e, 0x3dc2675c ),
	NORM( 0x3f485332, 0x3dbbcffa, 0x3f1da762 ),
	VERT( 0x3fe41636, 0xbf5d425c, 0xbe8376d8 ),
	NORM( 0x3ebc6e6e, 0xbf6d70b2, 0xbd863cf5 ),
	VERT( 0x3fde979b, 0xbf25ecc8, 0xbf59e287 ),
	NORM( 0x3ea14f86, 0xbf2f40cb, 0xbf2846da ),
	VERT( 0x4009a632, 0x3e861a7e, 0xbf41ab81 ),
	NORM( 0x3f40f2c5, 0x3e9c8768, 0xbf14ef56 ),
	VERT( 0x400fbd6c, 0x3ec568b7, 0xbea5647e ),
	NORM( 0x3f61f168, 0x3eefd1ab, 0xbd25dcb6 ),
	VERT( 0x3fe51e2b, 0xbd475055, 0xbf88e222 ),
	NORM( 0x3ead64e4, 0xbbd23d38, 0xbf70ddf2 ),
	VERT( 0x4002a6c8, 0x3ec6e3dc, 0xbf4a4ecd ),
	NORM( 0x3f123024, 0x3f068ba3, 0xbf217065 ),
	VERT( 0x400e6629, 0x3edfe700, 0x3c5bb0d3 ),
	NORM( 0x3f420fe2, 0x3efca5db, 0x3eda573e ),
	VERT( 0x400b8a42, 0x3ed7d2e8, 0xbe10f843 ),
	NORM( 0x3f5d62f6, 0x3f008b30, 0x3b332f11 ),
	VERT( 0x3faf244e, 0xbf7758ad, 0xbe1d33ac ),
	NORM( 0x3e3d63ec, 0xbf79743d, 0x3e02a73d ),
	VERT( 0x3fa843f6, 0xbf33a4e2, 0xbf5bd02b ),
	NORM( 0x3d59cea9, 0xbf36cc28, 0xbf32b4ae ),
	VERT( 0x3fca7a7a, 0xbf094f28, 0x3df572ce ),
	NORM( 0x3eb96fb5, 0x3de172bc, 0x3f6cf31d ),
	VERT( 0x3fbf9eae, 0xbf266b9a, 0x3e498a6b ),
	NORM( 0x3ebff0f3, 0xbed2eefc, 0x3f549bc8 ),
	VERT( 0x3fd52db7, 0x3f0dc247, 0xbf65d7fa ),
	NORM( 0x3e548970, 0x3f26fd7d, 0xbf3a9eb7 ),
	VERT( 0x3f9b4be7, 0xbdbb856a, 0xbf932bb5 ),
	NORM( 0xbcafdefa, 0xbd1318a4, 0xbf7fc699 ),
	VERT( 0x3fb93a0e, 0xbcb04a7b, 0x3e74f8d1 ),
	NORM( 0x3f053aa2, 0x3d9490ce, 0x3f59cf53 ),
	VERT( 0x3fad5fe7, 0xbcc42e6f, 0x3eaec9ea ),
	NORM( 0x3f01a519, 0x3dd75797, 0x3f5b18e6 ),
	VERT( 0x3f2ba043, 0xbf578af0, 0xbf398889 ),
	NORM( 0xbd32df49, 0xbf43ffec, 0xbf244d4e ),
	VERT( 0x3fc254c3, 0x3efe2b7f, 0x3da3226f ),
	NORM( 0x3ec94aad, 0x3d8df903, 0x3f6ab737 ),
	VERT( 0x3f3977f0, 0xbf824c62, 0x3d58d56b ),
	NORM( 0x3e135f35, 0xbf73bfa7, 0x3e8a0f92 ),
	VERT( 0x3f9e750c, 0x3f0c413e, 0xbf683cc3 ),
	NORM( 0xbd2667d2, 0x3f29e789, 0xbf3f351e ),
	VERT( 0x3fb5ce58, 0x3f1a77e0, 0x3e17d020 ),
	NORM( 0x3ea64390, 0x3f06d36a, 0x3f491d51 ),
	VERT( 0x3f672273, 0xbf0abc21, 0x3f02dd92 ),
	NORM( 0x3e32eded, 0xbeaf6424, 0x3f6c5078 ),
	VERT( 0x3f00418c, 0xbf85981b, 0x3da9da53 ),
	NORM( 0x3e3b796d, 0xbf6ecff2, 0x3e9ed8a0 ),
	VERT( 0x3f0c137e, 0xbe0876c1, 0xbf855b34 ),
	NORM( 0xbe53a71a, 0xbd62f23d, 0xbf7a11e8 ),
	VERT( 0x3f519ee7, 0xbd608eda, 0x3efdabe8 ),
	NORM( 0x3da2bd50, 0x3d8ca901, 0x3f7e9581 ),
	VERT( 0x3f57bff9, 0x3ee0e96b, 0x3ef22a6b ),
	NORM( 0x3e33189c, 0x3ed14f73, 0x3f654cd7 ),
	VERT( 0x3f14f416, 0x3f1bdf12, 0xbf47f940 ),
	NORM( 0xbdf3d01b, 0x3f388549, 0xbf2ecfea ),
	CnkV_VN_NF(FV_CONT|FW_END, 225),
	OffnbIdx(0, 32),
	VERT( 0x40061732, 0x3f169251, 0xbeb9f31b ),
	NORM( 0x3f2a5a04, 0x3f3a73f4, 0xbe2768d8 ),
	NFlagsW( 2730, 99.854385 ),
	VERT( 0x3ffc1950, 0x3f15338d, 0x3a803916 ),
	NORM( 0x3e00df13, 0x3ea967d5, 0x3f6f6c51 ),
	NFlagsW( 2731, 99.715630 ),
	VERT( 0x3ff9c44b, 0x3f3056c9, 0xbd1bf445 ),
	NORM( 0x3ec7ecdf, 0x3f43c4ee, 0x3f033784 ),
	NFlagsW( 2732, 96.418175 ),
	VERT( 0x400e3dd2, 0x3fcfdafe, 0xbee0b146 ),
	NORM( 0x3e97bbcb, 0xbf39d3b8, 0xbf1ee5dc ),
	NFlagsW( 2733, 0.682214 ),
	VERT( 0x40104e14, 0x3fb7b149, 0x3e29d6da ),
	NORM( 0x3ea83712, 0xbf71c0b9, 0xbc85d925 ),
	NFlagsW( 2734, 19.155365 ),
	VERT( 0x3fd6ea64, 0x3f51aeed, 0xbea4e9f3 ),
	NORM( 0x3e5e8e3c, 0x3f796439, 0xbd7a0746 ),
	NFlagsW( 2735, 91.830429 ),
	VERT( 0x3fe5f5f2, 0x3fcb82e3, 0xbee7f894 ),
	NORM( 0x3d096b60, 0xbf3f978a, 0xbf299280 ),
	NFlagsW( 2736, 9.747492 ),
	VERT( 0x3feb3044, 0x3fadcd02, 0x3e878e0b ),
	NORM( 0x3e0bb5de, 0xbf79818f, 0x3e35abc7 ),
	NFlagsW( 2737, 42.003941 ),
	VERT( 0x3ffc1d57, 0x3fd78a22, 0x3f1a416e ),
	NORM( 0x3eae8be7, 0xbec325c8, 0x3f5bff41 ),
	NFlagsW( 2738, 0.169940 ),
	VERT( 0x3fa0b5c1, 0x3f5f04fe, 0xbe665868 ),
	NORM( 0x3d212c9a, 0x3f7f67f2, 0x3d638f96 ),
	NFlagsW( 2739, 96.508720 ),
	VERT( 0x3ee5ef38, 0xbf5f38cc, 0xbf299ad1 ),
	NORM( 0x3e24e7b1, 0xbf488453, 0xbf19b7ed ),
	NFlagsW( 2754, 99.980087 ),
	VERT( 0x3e8e2b82, 0xbf6a42dd, 0xbf376849 ),
	NORM( 0x3e60b23f, 0xbf384b4b, 0xbf289227 ),
	NFlagsW( 2755, 98.698540 ),
	VERT( 0x3ea6c387, 0xbf8b0e40, 0x3d8110c5 ),
	NORM( 0x3e3a396f, 0xbf75f1c2, 0x3e56a8af ),
	NFlagsW( 2756, 98.758141 ),
	VERT( 0x3ea5e882, 0xbe159956, 0xbf7ae38e ),
	NORM( 0x3d37c557, 0xbd279750, 0xbf7f870f ),
	NFlagsW( 2757, 96.022881 ),
	VERT( 0x3f03ee16, 0xbecc5f58, 0x3f108e70 ),
	NORM( 0x3e85561e, 0xbd2bcce6, 0x3f76eee9 ),
	NFlagsW( 2758, 98.141685 ),
	VERT( 0x3e18f865, 0xbe244099, 0xbf847a01 ),
	NORM( 0x3e10c11e, 0xbd02d1b0, 0xbf7d4c1a ),
	NFlagsW( 2759, 77.448990 ),
	VERT( 0x3eefd27e, 0xbda59e36, 0x3ee5053c ),
	NORM( 0x3e6df658, 0x3d539952, 0x3f78a3e3 ),
	NFlagsW( 2760, 85.988007 ),
	VERT( 0x3e4cde7f, 0xbf1befb7, 0x3f20b06a ),
	NORM( 0x3e8ed71d, 0xbec258e1, 0x3f61d0a6 ),
	NFlagsW( 2761, 72.052589 ),
	VERT( 0x3ef399c6, 0x3e7f3aa8, 0x3f0a1bd7 ),
	NORM( 0x3e7e8c7d, 0x3e177c91, 0x3f750e1e ),
	NFlagsW( 2762, 93.141907 ),
	VERT( 0x3eb73294, 0x3f1cde6b, 0xbf3857e7 ),
	NORM( 0x3d53fba5, 0x3f40dff8, 0xbf27cf02 ),
	NFlagsW( 2763, 96.540543 ),
	VERT( 0x3dee3276, 0xbdca3c09, 0x3f1c51d0 ),
	NORM( 0x3e79259d, 0x3d5a09db, 0x3f77eec6 ),
	NFlagsW( 2764, 51.596664 ),
	VERT( 0x3e0c6c48, 0x3ed65db5, 0x3f166fa4 ),
	NORM( 0x3e6ad708, 0x3ef20f80, 0x3f59cf20 ),
	NFlagsW( 2765, 55.632393 ),
	VERT( 0x3f92e8eb, 0x3fbe45c9, 0xbea752de ),
	NORM( 0xbd892210, 0xbf4b5a29, 0xbf1a9066 ),
	NFlagsW( 2772, 33.066990 ),
	VERT( 0x3f984977, 0x3fac5328, 0x3eeb317c ),
	NORM( 0x3dbe8f87, 0xbf71827f, 0x3ea2fe15 ),
	NFlagsW( 2773, 54.200108 ),
	VERT( 0x3f6cac35, 0x3fbc2b34, 0xbe893d1c ),
	NORM( 0x3e0993db, 0xbf512708, 0xbf0f8e4a ),
	NFlagsW( 2775, 30.849352 ),
	VERT( 0x3f1c1e65, 0x3f599fdc, 0xbc9fb943 ),
	NORM( 0x3d0a18e5, 0x3f7b7ea7, 0x3e3c1fac ),
	NFlagsW( 2776, 96.705162 ),
	VERT( 0x3f7712f9, 0x3faa9146, 0x3ef8a697 ),
	NORM( 0x3e07615b, 0xbf6ca3a5, 0x3eb73848 ),
	NFlagsW( 2777, 62.129669 ),
	VERT( 0x3f40c8e7, 0x3fb757d3, 0xbea5b559 ),
	NORM( 0x3e57a5a4, 0xbf40dc89, 0xbf1f7af6 ),
	NFlagsW( 2778, 32.150917 ),
	VERT( 0x3e3bb78f, 0x3f20b85c, 0xbf46beff ),
	NORM( 0x3dfe3b6e, 0x3f31b2b0, 0xbf35851e ),
	NFlagsW( 2780, 79.394379 ),
	VERT( 0x3f4a0694, 0x3fa60a79, 0x3eed9c0a ),
	NORM( 0x3e168714, 0xbf746219, 0x3e849d77 ),
	NFlagsW( 2781, 65.276596 ),
	VERT( 0x3ec54798, 0x3f58e5d6, 0x3c1b8ed7 ),
	NORM( 0x3d4ae051, 0x3f787d6a, 0x3e70ee6f ),
	NFlagsW( 2782, 83.319595 ),
	VERT( 0x3e53422a, 0x3f5d23e1, 0xbc4e6b83 ),
	NORM( 0x3d60cb63, 0x3f7d9efb, 0x3dfedf1f ),
	NFlagsW( 2785, 58.413101 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger32[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger32,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger32[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger32,
OPosition  (  2.705752F,  0.000002F,  0.000001F ),
OAngle     (  0.000000F,  0.000000F,  0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy04,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger31[]
START
	CnkV_VN(FV_CONT, 49),
	OffnbIdx(310, 8),
	VERT( 0x3fb48d26, 0xbf358d7c, 0x3f732da8 ),
	NORM( 0x3d865418, 0xbec804b3, 0x3f6b0ed0 ),
	VERT( 0x3f93b525, 0xbe80f971, 0xbf851328 ),
	NORM( 0xbe17f15c, 0xbd376ca8, 0xbf7ce808 ),
	VERT( 0x3fa8318c, 0xbe28c045, 0x3f6e62de ),
	NORM( 0x3b362f29, 0x3d83d100, 0x3f7f77d8 ),
	VERT( 0x3f4a6d12, 0xbe885fd4, 0xbf6e5331 ),
	NORM( 0x3d83ff41, 0xbd8f7f19, 0xbf7ed652 ),
	VERT( 0x3f5dff29, 0xbf248b4b, 0x3f6a95df ),
	NORM( 0x3c2e9add, 0xbe7add1a, 0x3f782f13 ),
	VERT( 0x3fabf5e9, 0x3ec6c720, 0x3f683a99 ),
	NORM( 0x3d331f85, 0x3ed5564a, 0x3f6872e8 ),
	VERT( 0x3f51833f, 0xbe4364c2, 0x3f52c595 ),
	NORM( 0x3c9ce019, 0x3d267760, 0x3f7fbdd0 ),
	VERT( 0x3f5a8d9b, 0x3e89b010, 0x3f5ffe55 ),
	NORM( 0x3cd179d5, 0x3e84f248, 0x3f7721e6 ),
	CnkV_VN_NF(FV_CONT|FW_START, 127),
	OffnbIdx(2754, 18),
	VERT( 0x4049e8e7, 0xbf5f3899, 0xbf299acf ),
	NORM( 0x3e24e7b1, 0xbf488452, 0xbf19b7ed ),
	NFlagsW( 0, 0.019917 ),
	VERT( 0x403ef070, 0xbf6a42aa, 0xbf376847 ),
	NORM( 0x3e60b23f, 0xbf384b4a, 0xbf289227 ),
	NFlagsW( 1, 1.301457 ),
	VERT( 0x40420371, 0xbf8b0e26, 0x3d8110d1 ),
	NORM( 0x3e3a396f, 0xbf75f1c1, 0x3e56a8af ),
	NFlagsW( 2, 1.241854 ),
	VERT( 0x4041e810, 0xbe15988c, 0xbf7ae38d ),
	NORM( 0x3d37c557, 0xbd27974d, 0xbf7f870f ),
	NFlagsW( 3, 3.977119 ),
	VERT( 0x404e2685, 0xbecc5ef3, 0x3f108e72 ),
	NORM( 0x3e85561e, 0xbd2bcce7, 0x3f76eee9 ),
	NFlagsW( 4, 1.858311 ),
	VERT( 0x4036ba86, 0xbe243fcf, 0xbf847a00 ),
	NORM( 0x3e10c11e, 0xbd02d1ae, 0xbf7d4c1a ),
	NFlagsW( 5, 22.551016 ),
	VERT( 0x404b2550, 0xbda59ca4, 0x3ee5053f ),
	NORM( 0x3e6df658, 0x3d53994e, 0x3f78a3e3 ),
	NFlagsW( 6, 14.011992 ),
	VERT( 0x4039f8e8, 0xbf1bef84, 0x3f20b06c ),
	NORM( 0x3e8ed71d, 0xbec258e0, 0x3f61d0a6 ),
	NFlagsW( 7, 27.947409 ),
	VERT( 0x404b9e39, 0x3e7f3b70, 0x3f0a1bd9 ),
	NORM( 0x3e7e8c7d, 0x3e177c90, 0x3f750e1e ),
	NFlagsW( 8, 6.858088 ),
	VERT( 0x40441152, 0x3f1cde9d, 0xbf3857e5 ),
	NORM( 0x3d53fba5, 0x3f40dff7, 0xbf27cf02 ),
	NFlagsW( 9, 3.459434 ),
	VERT( 0x40349c94, 0xbdca3a77, 0x3f1c51d2 ),
	NORM( 0x3e79259d, 0x3d5a09d8, 0x3f77eec6 ),
	NFlagsW( 10, 48.403336 ),
	VERT( 0x4035f1c5, 0x3ed65e18, 0x3f166fa6 ),
	NORM( 0x3e6ad708, 0x3ef20f7e, 0x3f59cf20 ),
	NFlagsW( 11, 44.367607 ),
	VERT( 0x3fa6b4f1, 0xbf8fc287, 0xbf279783 ),
	NORM( 0xbd075817, 0xbf494834, 0xbf1df4a3 ),
	NFlagsW( 12, 99.787308 ),
	VERT( 0x3fae8253, 0xbfa11bb5, 0x3eb0545b ),
	NORM( 0x3e03549d, 0xbf70ffb2, 0x3e9fb82e ),
	NFlagsW( 13, 79.354813 ),
	VERT( 0x3f649d0c, 0xbf9279fb, 0xbf0a9409 ),
	NORM( 0x3db3fd7f, 0xbf57c125, 0xbf07f0c1 ),
	NFlagsW( 14, 90.483688 ),
	VERT( 0x3f6e9c25, 0xbfa8f827, 0x3edd97bb ),
	NORM( 0x3dc5a034, 0xbf6749c0, 0x3ed5d642 ),
	NFlagsW( 15, 54.213554 ),
	VERT( 0x3f1a41bb, 0xbf9215ff, 0xbf36a6e8 ),
	NORM( 0x3e6cacc1, 0xbf393dc4, 0xbf267ed5 ),
	NFlagsW( 16, 96.437439 ),
	VERT( 0x3f25ed77, 0xbfaa2dba, 0x3eca4c4f ),
	NORM( 0x3cc7fb2d, 0xbf729d4b, 0x3ea2e9c6 ),
	NFlagsW( 17, 43.840145 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 29),
	OffnbIdx(0, 4),
	VERT( 0x40543299, 0x3f59a00d, 0xbc9fb90a ),
	NORM( 0x3d0a18e5, 0x3f7b7ea6, 0x3e3c1fac ),
	NFlagsW( 2776, 0.024284 ),
	VERT( 0x4038e679, 0x3f20b88e, 0xbf46befe ),
	NORM( 0x3dfe3b6e, 0x3f31b2af, 0xbf35851e ),
	NFlagsW( 2780, 20.572828 ),
	VERT( 0x4045d3f3, 0x3f58e607, 0x3c1b8f47 ),
	NORM( 0x3d4ae051, 0x3f787d69, 0x3e70ee6f ),
	NFlagsW( 2782, 4.579473 ),
	VERT( 0x403a5f23, 0x3f5d2413, 0xbc4e6b13 ),
	NORM( 0x3d60cb63, 0x3f7d9efa, 0x3dfedf20 ),
	NFlagsW( 2785, 22.618464 ),
	CnkV_VN_NF(FV_CONT|FW_END, 113),
	OffnbIdx(0, 16),
	VERT( 0x3fe2f4c5, 0x3fa0b974, 0xbe9183a4 ),
	NORM( 0xbd7964b5, 0xbf5038da, 0xbf141c2f ),
	NFlagsW( 2800, 47.826683 ),
	VERT( 0x3fe9258c, 0x3f9543d2, 0x3f38961d ),
	NORM( 0x3e4f2618, 0xbf6fa0bf, 0x3e93695b ),
	NFlagsW( 2801, 44.321995 ),
	VERT( 0x3f98b843, 0x3f28c140, 0xbf39465d ),
	NORM( 0xbe046a35, 0x3f3ada78, 0xbf2bd4c5 ),
	NFlagsW( 2802, 95.828041 ),
	VERT( 0x3fb87321, 0x3fa13583, 0xbe38484d ),
	NORM( 0x3dbf26eb, 0xbf5b27d6, 0xbf022352 ),
	NFlagsW( 2803, 49.200947 ),
	VERT( 0x3fbe6b01, 0x3f8b091e, 0x3f529d30 ),
	NORM( 0x3d51ef94, 0xbf67584b, 0x3ed9a78c ),
	NFlagsW( 2804, 53.287704 ),
	VERT( 0x3f9dcdc1, 0x3f60ded7, 0x3e85d2d7 ),
	NORM( 0x3e1b54f0, 0x3f7a23d8, 0x3e18bbd9 ),
	NFlagsW( 2805, 60.758255 ),
	VERT( 0x3f5d90b9, 0x3f22e374, 0xbf1e2bec ),
	NORM( 0x3d4e799c, 0x3f4bf52f, 0xbf1a2d6f ),
	NFlagsW( 2806, 99.063736 ),
	VERT( 0x3f936a7d, 0x3f9eb0fb, 0xbeb3c25a ),
	NORM( 0x3e726f83, 0xbf3e032f, 0xbf207e0f ),
	NFlagsW( 2807, 48.852966 ),
	VERT( 0x3f99c627, 0x3f8d1c3a, 0x3f43b538 ),
	NORM( 0xbcb68e4a, 0xbf6e942c, 0x3eb94ba5 ),
	NFlagsW( 2808, 55.177181 ),
	VERT( 0x3f666216, 0x3f75da35, 0x3eb96ed4 ),
	NORM( 0xbc60b7ab, 0x3f740730, 0x3e9a9533 ),
	NFlagsW( 2809, 66.043777 ),
	VERT( 0x3f008c69, 0xbe85fadc, 0xbf8475df ),
	NORM( 0x3e80d389, 0xbd188415, 0xbf779495 ),
	NFlagsW( 2924, 99.755775 ),
	VERT( 0x3ec0b589, 0xbf3df45a, 0x3f77b6e9 ),
	NORM( 0x3e2782aa, 0xbeb8bc94, 0x3f6b0dcc ),
	NFlagsW( 2925, 99.262016 ),
	VERT( 0x3f15d75c, 0x3f22a42c, 0xbf4a5ec4 ),
	NORM( 0x3e670791, 0x3f2d7297, 0xbf333598 ),
	NFlagsW( 2926, 99.944496 ),
	VERT( 0x3ea44773, 0xbe2f6141, 0x3f71efe0 ),
	NORM( 0x3e58542c, 0x3d15213e, 0x3f7a0c66 ),
	NFlagsW( 2927, 85.839378 ),
	VERT( 0x3ec29f80, 0x3ecb2eab, 0x3f6b0209 ),
	NORM( 0x3e29360f, 0x3ee26394, 0x3f61af37 ),
	NFlagsW( 2928, 94.480591 ),
	VERT( 0x3f1fccf1, 0x3f6aa30b, 0x3e9827bd ),
	NORM( 0xbd251778, 0x3f79dbce, 0x3e5b18bb ),
	NFlagsW( 2953, 83.476898 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger31[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger31,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger31[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger31,
OPosition  (  2.880313F, -0.000000F,  0.000002F ),
OAngle     (  0.000000F,  0.000000F,  0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Finger32,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger3[]
START
	CnkV_VN_NF(FV_CONT|FW_START, 36),
	OffnbIdx(2924, 5),
	VERT( 0x40587a3a, 0xbe85faf6, 0xbf8475df ),
	NORM( 0x3e80d389, 0xbd188412, 0xbf779495 ),
	NFlagsW( 0, 0.244176 ),
	VERT( 0x40506dd1, 0xbf3df467, 0x3f77b6e9 ),
	NORM( 0x3e2782aa, 0xbeb8bc94, 0x3f6b0dcc ),
	NFlagsW( 1, 0.735498 ),
	VERT( 0x405dccf7, 0x3f22a41e, 0xbf4a5ec3 ),
	NORM( 0x3e670791, 0x3f2d7297, 0xbf333597 ),
	NFlagsW( 2, 0.055501 ),
	VERT( 0x404ce00e, 0xbe2f6178, 0x3f71efe1 ),
	NORM( 0x3e58542c, 0x3d15213b, 0x3f7a0c66 ),
	NFlagsW( 3, 14.159460 ),
	VERT( 0x4050ab10, 0x3ecb2e8e, 0x3f6b020a ),
	NORM( 0x3e29360f, 0x3ee26393, 0x3f61af37 ),
	NFlagsW( 4, 5.519384 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 29),
	OffnbIdx(0, 4),
	VERT( 0x4019fe10, 0xbfe96f3f, 0x3dc60a8a ),
	NORM( 0xbde62110, 0x3f7b1112, 0x3e23a891 ),
	NFlagsW( 2823, 0.865907 ),
	VERT( 0x40127928, 0xbfab4926, 0x3edf420b ),
	NORM( 0x3e6e116a, 0xbf6878bb, 0x3eb2553c ),
	NFlagsW( 2829, 58.838947 ),
	VERT( 0x3fe18822, 0xbfeff0e6, 0x3dbd4ba7 ),
	NORM( 0x3d35533b, 0x3f79d03f, 0x3e5b1e3d ),
	NFlagsW( 2832, 6.344137 ),
	VERT( 0x40604a5c, 0x3f6aa2fc, 0x3e9827be ),
	NORM( 0xbd251778, 0x3f79dbcc, 0x3e5b18bc ),
	NFlagsW( 2953, 0.034268 ),
	CnkV_VN_NF(FV_CONT|FW_END, 127),
	OffnbIdx(0, 18),
	VERT( 0x4016fcd5, 0xbf8c3ee8, 0xbf5eeafd ),
	NORM( 0x3ea82a5f, 0xbf30443f, 0xbf258493 ),
	NFlagsW( 2827, 95.656494 ),
	VERT( 0x401393ee, 0xbe8cdf99, 0xbf9d6ab4 ),
	NORM( 0xbd99d24b, 0xbae658d1, 0xbf7f46c5 ),
	NFlagsW( 2831, 96.117691 ),
	VERT( 0x3fecc664, 0xbf1d5ac8, 0xbf7cbb50 ),
	NORM( 0xbe0177bf, 0x3d7855f8, 0xbf7d7887 ),
	NFlagsW( 2835, 73.155022 ),
	VERT( 0x401a02f7, 0x3f113b61, 0xbf70fdf8 ),
	NORM( 0x3e8271c2, 0x3f2a16e2, 0xbf33dd9a ),
	NFlagsW( 2836, 97.935570 ),
	VERT( 0x400ad22b, 0xbf3650db, 0x3f9487ee ),
	NORM( 0x3e549d55, 0xbecdb87b, 0x3f645223 ),
	NFlagsW( 2837, 91.755692 ),
	VERT( 0x401f49b8, 0x3fa18f88, 0xbf0057d0 ),
	NORM( 0x3ed9dfc2, 0xbf44c5e4, 0xbef4886c ),
	NFlagsW( 2838, 38.646347 ),
	VERT( 0x40079054, 0xbe28d88e, 0x3f9b3a90 ),
	NORM( 0x3e295d12, 0x3d730d9b, 0x3f7c044c ),
	NFlagsW( 2840, 90.328033 ),
	VERT( 0x40173973, 0x3f6ad97d, 0x3eaf9a64 ),
	NORM( 0xbcc942bc, 0x3f7e3153, 0x3deda86f ),
	NFlagsW( 2842, 53.726017 ),
	VERT( 0x3fc9c14b, 0xbf74e0f5, 0x3f9f89cd ),
	NORM( 0x3e5b7e61, 0xbee390c0, 0x3f5ea97b ),
	NFlagsW( 2843, 53.127773 ),
	VERT( 0x3fff72cb, 0x3f5cb010, 0xbf78c3e6 ),
	NORM( 0x3f0efde8, 0x3e1f526c, 0xbf5092c8 ),
	NFlagsW( 2844, 64.673683 ),
	VERT( 0x400cc96d, 0x3ebb75f9, 0x3f8ed766 ),
	NORM( 0x3deeed0b, 0x3f008d32, 0x3f5b5bfe ),
	NFlagsW( 2845, 93.351212 ),
	VERT( 0x401d328b, 0x3f890dc4, 0x3f4ffd6d ),
	NORM( 0x3e02e540, 0xbf72cc81, 0x3e9482b7 ),
	NFlagsW( 2847, 50.585007 ),
	VERT( 0x3fc82f4f, 0xbe97ddb0, 0x3fa4cad7 ),
	NORM( 0xbc6347bb, 0x3d46d753, 0x3f7fac67 ),
	NFlagsW( 2849, 56.896324 ),
	VERT( 0x3f3ca08a, 0xbf0c6d62, 0xbfbeec66 ),
	NORM( 0x3ea37de7, 0x3b9e145f, 0xbf72982c ),
	NFlagsW( 2850, 16.447588 ),
	VERT( 0x3fc21a91, 0x3eae6acd, 0x3f98cef8 ),
	NORM( 0x3dd6e577, 0x3e3c0b64, 0x3f7a3569 ),
	NFlagsW( 2852, 52.790016 ),
	VERT( 0x3fe0e937, 0x3f7732f5, 0x3f8433aa ),
	NORM( 0x3eea5497, 0xbedb2dfd, 0x3f477eca ),
	NFlagsW( 2854, 49.876907 ),
	VERT( 0x3eea9179, 0xbf134ae8, 0x3f716b14 ),
	NORM( 0xbdbb91f8, 0x3e603b67, 0x3f78af1c ),
	NFlagsW( 2858, 25.529293 ),
	VERT( 0x3f100258, 0x3d0a77bb, 0x3f8afb46 ),
	NORM( 0xbe026ab5, 0xbe16c5d1, 0x3f7b1a16 ),
	NFlagsW( 2863, 25.451269 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger3[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger3,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger3[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger3,
OPosition  (  8.016155F, -1.080435F, -0.000863F ),
OAngle     (  0.045510F,  0.003181F, -3.999973F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Finger31,
Sibling     object_kihon11_Bip01_Bip01_R_Finger4,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy03[]
START
EvalFlags ( 0x0000001c ),
CNKModel   NULL,
OPosition  (  3.182163F,  0.000002F, -0.000001F ),
OAngle     ( -0.000000F, 180.000029F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger22[]
START
	CnkV_VN(FV_CONT, 187),
	OffnbIdx(70, 31),
	VERT( 0x3ffaa994, 0xbf559fc0, 0x3deccb3f ),
	NORM( 0x3f62e76e, 0xbeed11bb, 0x3a90be36 ),
	VERT( 0x3fe82d14, 0xbf85a074, 0x3dccdb4f ),
	NORM( 0x3f2e2f17, 0xbf3a6dff, 0xbda7cac2 ),
	VERT( 0x3fee41d0, 0xbf44c4b3, 0xbea96465 ),
	NORM( 0x3f438155, 0xbeb9430b, 0xbf08de88 ),
	VERT( 0x3fe0c854, 0xbf66833d, 0xbeb2e2cb ),
	NORM( 0x3f16ee49, 0xbf17e380, 0xbf0c4e44 ),
	VERT( 0x40067309, 0xbeed9ef4, 0x3e17bacc ),
	NORM( 0x3f7e9df2, 0xbb93b405, 0x3dd463f5 ),
	VERT( 0x3ff7f9c5, 0xbf58121e, 0x3ee95655 ),
	NORM( 0x3f3f17ad, 0xbedfc4b7, 0x3f00755b ),
	VERT( 0x3ff24f16, 0xbf595671, 0x3e995cc9 ),
	NORM( 0x3f5d29af, 0xbeff9674, 0x3d88a300 ),
	VERT( 0x3ffb6bd5, 0xbefda7d3, 0xbe91cd69 ),
	NORM( 0x3f5e4aa1, 0xbd84fbf0, 0xbefbc346 ),
	VERT( 0x3fd5ef8b, 0xbf8d8515, 0x3ede06c8 ),
	NORM( 0x3ee48b5a, 0xbf2fbe93, 0x3f12f0fa ),
	VERT( 0x4000c112, 0xbee3c417, 0x3ea41966 ),
	NORM( 0x3f7c8e83, 0x3c9b7f69, 0x3e26407c ),
	VERT( 0x3fd7e687, 0xbf7ec05c, 0x3eeb3006 ),
	NORM( 0x3e28e75e, 0xbe3ed58d, 0x3f77f1fa ),
	VERT( 0x40016816, 0xbedc9429, 0x3ef8f1ce ),
	NORM( 0x3f47ec01, 0x3d4298fa, 0x3f1f6f2c ),
	VERT( 0x3ff063b2, 0xbe66b4e5, 0xbec1b7b2 ),
	NORM( 0x3f4972d3, 0x3e50ebfa, 0xbf1515d7 ),
	VERT( 0x3ffd94cc, 0xbdbd51da, 0x3d4ffe6c ),
	NORM( 0x3f6c88f7, 0x3ec20c80, 0xbd52b39e ),
	VERT( 0x3fbf1dc9, 0xbf01d8f7, 0xbf2f2004 ),
	NORM( 0x3eb30cdc, 0xbdae54dc, 0xbf6ed803 ),
	VERT( 0x3fe3f603, 0xbdb568b8, 0xbed74228 ),
	NORM( 0x3f21aea7, 0x3ede28de, 0xbf247cc5 ),
	VERT( 0x3ff57131, 0xbd238d77, 0x3e6a56ac ),
	NORM( 0x3f68a6c0, 0x3ed58a85, 0xbc43d089 ),
	VERT( 0x3ffb360f, 0xbcb430f3, 0x3ec47d58 ),
	NORM( 0x3f4c3ab1, 0x3ee04159, 0x3ed42ae8 ),
	VERT( 0x3fecbcfc, 0x3dff1d83, 0xbb0c4bb2 ),
	NORM( 0x3f3d4a9a, 0x3f25858a, 0xbe402370 ),
	VERT( 0x3f9dcf51, 0xbf68a205, 0x3f05a21b ),
	NORM( 0x3eb7c188, 0x3df55320, 0x3f6cf7ea ),
	VERT( 0x3fdc6222, 0x3e1b2389, 0x3eb7bdcd ),
	NORM( 0x3e18a288, 0x3eb9e9a7, 0x3f6b7473 ),
	VERT( 0x3fdb48af, 0x3e83bd50, 0x3ea0fbdb ),
	NORM( 0x3eedf029, 0x3f3e4bbe, 0x3ef654e5 ),
	VERT( 0x3fb610ec, 0x3de9c19c, 0xbf0b353d ),
	NORM( 0x3e94c7c7, 0x3f16ec9f, 0xbf40ef5f ),
	VERT( 0x3f6a5e2a, 0xbef9115e, 0xbf4661dd ),
	NORM( 0xbc1f936f, 0xbda9d85e, 0xbf7f1b1c ),
	VERT( 0x3f92875f, 0xbec08446, 0x3f1d371f ),
	NORM( 0x3f03e054, 0x3d8bf0a5, 0x3f5ab86f ),
	VERT( 0x3fba6967, 0x3eceeff0, 0x3c9ad49a ),
	NORM( 0x3ea7ad7d, 0x3f707196, 0xbdd2ba50 ),
	VERT( 0x3f86ad2e, 0xbeb9ce99, 0x3f36d297 ),
	NORM( 0x3f014464, 0x3dcbe9b1, 0x3f5b7db0 ),
	VERT( 0x3fa1ca12, 0x3dfa42e7, 0x3edd20ae ),
	NORM( 0x3ec60789, 0x3d9dc523, 0x3f6b404f ),
	VERT( 0x3f7f13e6, 0x3e216ed4, 0xbf0fec21 ),
	NORM( 0x3d4778ac, 0x3f2069db, 0xbf471e41 ),
	VERT( 0x3f967fba, 0x3e7907c6, 0x3efc7beb ),
	NORM( 0x3ebdc796, 0x3f08049a, 0x3f4303f3 ),
	VERT( 0x3f84fa1c, 0x3f02887c, 0x3dd579a4 ),
	NORM( 0x3e1d94c0, 0x3f7cf19f, 0x3bec4928 ),
	CnkV_VN_NF(FV_CONT|FW_START, 71),
	OffnbIdx(2730, 10),
	VERT( 0x3f97de09, 0xc0070941, 0xbeb9f4a0 ),
	NORM( 0x3f36f15e, 0x3f2e1d9d, 0xbe2768d0 ),
	NFlagsW( 0, 0.145622 ),
	VERT( 0x3f87c6c1, 0xc006d123, 0x3a7d66d0 ),
	NORM( 0x3e183104, 0x3ea47f82, 0x3f6f6c52 ),
	NFlagsW( 1, 0.284378 ),
	VERT( 0x3f86657e, 0xbfffef79, 0xbd1c0071 ),
	NORM( 0x3ee2c018, 0x3f3c51c0, 0x3f033785 ),
	NFlagsW( 2, 3.581824 ),
	VERT( 0x3fb1607d, 0xbf8af675, 0xbee0b2c8 ),
	NORM( 0x3e7ae0b4, 0xbf3eaa9e, 0xbf1ee5dc ),
	NFlagsW( 3, 99.317787 ),
	VERT( 0x3fb3cef0, 0xbfa35acc, 0x3e29d3d5 ),
	NORM( 0x3e8613f4, 0xbf7707e8, 0xbc85d946 ),
	NFlagsW( 4, 80.844627 ),
	VERT( 0x3f499618, 0xbfecdf71, 0xbea4eb79 ),
	NORM( 0x3e91ccc0, 0x3f74e71e, 0xbd7a0729 ),
	NFlagsW( 5, 8.169567 ),
	VERT( 0x3f755e6f, 0xbf8b7e39, 0xbee7fa17 ),
	NORM( 0xbc997ffe, 0xbf3fb96c, 0xbf299281 ),
	NFlagsW( 6, 90.252510 ),
	VERT( 0x3f7ba770, 0xbfa97eee, 0x3e878c87 ),
	NORM( 0x3d8b80fc, 0xbf7b55ae, 0x3e35abc1 ),
	NFlagsW( 7, 57.996063 ),
	VERT( 0x3f919f97, 0xbf810a19, 0x3f1a40ad ),
	NORM( 0x3ea08230, 0xbeced910, 0x3f5bff41 ),
	NFlagsW( 8, 99.830063 ),
	VERT( 0x3ebcbd2c, 0xbfe27097, 0xbe665b75 ),
	NORM( 0x3ddeeb66, 0x3f7e14c7, 0x3d638fb0 ),
	NFlagsW( 9, 3.491288 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 43),
	OffnbIdx(0, 6),
	VERT( 0x3e9ba648, 0xbf92e7fc, 0xbea75464 ),
	NORM( 0xbdfa4774, 0xbf49a93b, 0xbf1a9067 ),
	NFlagsW( 2772, 61.611130 ),
	VERT( 0x3eac190d, 0xbfa52f72, 0x3eeb2ff7 ),
	NORM( 0x3cdd4a30, 0xbf729540, 0x3ea2fe12 ),
	NFlagsW( 2773, 45.429852 ),
	VERT( 0x3da43022, 0xbf930301, 0xbe893ea2 ),
	NORM( 0x3d9dc493, 0xbf530aca, 0xbf0f8e4b ),
	NFlagsW( 2775, 42.143726 ),
	VERT( 0x3de38d49, 0xbfa4eed4, 0x3ef8a511 ),
	NORM( 0x3d8a0b83, 0xbf6e6c75, 0x3eb73845 ),
	NFlagsW( 2777, 28.849300 ),
	VERT( 0xbdbf722a, 0xbf964b81, 0xbea5b6df ),
	NORM( 0x3e214f0e, 0xbf4426fc, 0xbf1f7af7 ),
	NFlagsW( 2778, 23.651730 ),
	VERT( 0xbd890279, 0xbfa7e094, 0x3eed9a83 ),
	NORM( 0x3da3f1c4, 0xbf7669b5, 0x3e849d74 ),
	NFlagsW( 2781, 11.063502 ),
	CnkV_VN_NF(FV_CONT|FW_END, 127),
	OffnbIdx(0, 18),
	VERT( 0x3f0dc5a8, 0xbf50e962, 0x3f65f512 ),
	NORM( 0x3df64606, 0xbe9fef93, 0x3f713bb1 ),
	NFlagsW( 2774, 99.962715 ),
	VERT( 0x3e7e2a63, 0xbee3f285, 0xbf2e03c9 ),
	NORM( 0xbe4982e2, 0xbdaae815, 0xbf7a1552 ),
	NFlagsW( 2779, 60.467720 ),
	VERT( 0x3f03d510, 0xbea5ae1e, 0x3f5ba3cc ),
	NORM( 0x3d93c89c, 0x3de0937b, 0x3f7dc8e3 ),
	NFlagsW( 2783, 96.617851 ),
	VERT( 0x3cca190a, 0xbedbb039, 0xbf1f46d1 ),
	NORM( 0x3d5f6662, 0xbdbf88c7, 0xbf7e7ec6 ),
	NFlagsW( 2784, 50.282013 ),
	VERT( 0x3e395f26, 0xbf20741d, 0x3f6fcdcf ),
	NORM( 0x3e76786a, 0xbc9730e2, 0x3f786dcd ),
	NFlagsW( 2786, 72.367134 ),
	VERT( 0x3f157539, 0x3e27382a, 0x3f500c69 ),
	NORM( 0x3e53c529, 0x3eddf0d5, 0x3f608a7c ),
	NFlagsW( 2787, 97.877388 ),
	VERT( 0x3eb23fd1, 0x3e99f72e, 0xbee82cda ),
	NORM( 0xbcc11340, 0x3f31a6f5, 0xbf3839e5 ),
	NFlagsW( 2788, 57.755310 ),
	VERT( 0xbe1a3e0a, 0xbed9bb1a, 0xbf2e1afc ),
	NORM( 0x3e1b55a5, 0xbdb75653, 0xbf7bff59 ),
	NFlagsW( 2789, 46.060925 ),
	VERT( 0x3e27eb85, 0xbe9f2de6, 0x3f4db36e ),
	NORM( 0x3e63d151, 0x3da1761d, 0x3f78c440 ),
	NFlagsW( 2790, 56.604027 ),
	VERT( 0xbe1bd2ae, 0xbf4ba77a, 0x3f8051bb ),
	NORM( 0x3e689d0c, 0xbeb7178d, 0x3f67e421 ),
	NFlagsW( 2791, 21.697563 ),
	VERT( 0x3e0066e6, 0x3eaac010, 0xbecb9f13 ),
	NORM( 0x3e1a129f, 0x3f358830, 0xbf3058fb ),
	NFlagsW( 2792, 50.029881 ),
	VERT( 0x3e4d9064, 0x3ca8c16b, 0x3f614f49 ),
	NORM( 0x3e7cfed3, 0x3e2f582f, 0x3f7428e0 ),
	NFlagsW( 2793, 60.012066 ),
	VERT( 0x3ec9383e, 0x3f12f823, 0x3e97b6d4 ),
	NORM( 0x3e14ec4c, 0x3f7adedd, 0x3e0b5be1 ),
	NFlagsW( 2794, 68.358276 ),
	VERT( 0xbd407397, 0x3ebb7df7, 0xbeeaa5a3 ),
	NORM( 0x3e4f61c0, 0x3f255bce, 0xbf3c6d30 ),
	NFlagsW( 2795, 49.985504 ),
	VERT( 0xbe41c727, 0xbe8f35f6, 0x3f75b3fc ),
	NORM( 0x3e6e63d0, 0x3d9ddd14, 0x3f782ecf ),
	NFlagsW( 2796, 34.274094 ),
	VERT( 0x3e2cd1ce, 0x3f195e0d, 0x3ea41afb ),
	NORM( 0x3e22cec1, 0x3f781851, 0x3e410199 ),
	NFlagsW( 2797, 51.629620 ),
	VERT( 0xbbf92cd9, 0x3f229835, 0x3e96662c ),
	NORM( 0x3e1cfece, 0x3f7c33e8, 0x3d9dd75e ),
	NFlagsW( 2798, 49.951645 ),
	VERT( 0xbdf7e299, 0x3e6bf930, 0x3f69aad2 ),
	NORM( 0x3e862c80, 0x3efd3fa0, 0x3f5422c7 ),
	NFlagsW( 2799, 42.958313 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger22[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger22,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger22[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger22,
OPosition  (  3.156712F, -0.000002F,  0.000009F ),
OAngle     ( -0.000000F, -0.000000F, -0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy03,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger21[]
START
	CnkV_VN(FV_CONT, 91),
	OffnbIdx(318, 15),
	VERT( 0x3fa6d1ec, 0xbebd1532, 0xbf368acf ),
	NORM( 0xbe1dfa8a, 0xbda73824, 0xbf7c11e4 ),
	VERT( 0x3fc07c05, 0xbf41699d, 0x3fa67d77 ),
	NORM( 0x3d552843, 0xbea1bc60, 0x3f7286a8 ),
	VERT( 0x3f79b04b, 0xbeb01420, 0xbf1b900e ),
	NORM( 0x3d39b0f7, 0xbdd74501, 0xbf7e512f ),
	VERT( 0x3fba864d, 0xbe51a5a1, 0x3fa091ce ),
	NORM( 0xbc65829d, 0x3de58051, 0x3f7e5cb9 ),
	VERT( 0x3fb6314c, 0x3f0bd557, 0xbee12f40 ),
	NORM( 0xbd227e9b, 0x3f31c592, 0xbf37edf0 ),
	VERT( 0x3f83eed0, 0xbf24a0a7, 0x3fa07454 ),
	NORM( 0xbd375da4, 0xbe1d123f, 0x3f7cb5ed ),
	VERT( 0x3fc4c903, 0x3eadde82, 0x3f9a3ae0 ),
	NORM( 0x3cddf946, 0x3efbecbe, 0x3f5ec22a ),
	VERT( 0x3fbced5a, 0x3f4ec3c7, 0x3f08d8e2 ),
	NORM( 0x3e2e1a9b, 0x3f776857, 0x3e45380f ),
	VERT( 0x3f805fea, 0xbe44938d, 0x3f92314c ),
	NORM( 0x3c753f24, 0x3da839c8, 0x3f7f1b27 ),
	VERT( 0x3f8bd6cb, 0x3f120adc, 0xbeabaa2f ),
	NORM( 0x3db4e688, 0x3f436890, 0xbf23d46a ),
	VERT( 0x3f0b783b, 0xbf3aab8a, 0x3fa7f27a ),
	NORM( 0x3e0618a7, 0xbea63ee6, 0x3f6fcc16 ),
	VERT( 0x3f877a88, 0x3e88e671, 0x3f9646bf ),
	NORM( 0x3db1745f, 0x3ea61b12, 0x3f712299 ),
	VERT( 0x3f91d170, 0x3f6430eb, 0x3f1d56d2 ),
	NORM( 0x3e2af84a, 0x3f722287, 0x3e8e8b81 ),
	VERT( 0x3f5b61d5, 0x3f657129, 0x3f11c39d ),
	NORM( 0x3d31173f, 0x3f7d67b5, 0x3e0a866d ),
	VERT( 0x3f147cde, 0x3ed1cc77, 0x3f9b3530 ),
	NORM( 0x3e11c177, 0x3ee98bc9, 0x3f60e1fb ),
	CnkV_VN_NF(FV_CONT|FW_START, 267),
	OffnbIdx(2772, 38),
	VERT( 0x405d7c69, 0xbf92e80f, 0xbea75364 ),
	NORM( 0xbdfa4774, 0xbf49a93b, 0xbf1a9067 ),
	NFlagsW( 0, 5.321883 ),
	VERT( 0x405f8ac2, 0xbfa52f85, 0x3eeb30f7 ),
	NORM( 0x3cdd4a30, 0xbf729540, 0x3ea2fe12 ),
	NFlagsW( 1, 0.370043 ),
	VERT( 0x406d790a, 0xbf50e988, 0x3f65f592 ),
	NORM( 0x3df64606, 0xbe9fef93, 0x3f713bb1 ),
	NFlagsW( 2, 0.037281 ),
	VERT( 0x404f2921, 0xbf930314, 0xbe893da2 ),
	NORM( 0x3d9dc493, 0xbf530aca, 0xbf0f8e4b ),
	NFlagsW( 3, 27.006927 ),
	VERT( 0x40384dae, 0xbfdf5d9d, 0xbc9fc1cb ),
	NORM( 0x3dd139f7, 0x3f7a47ae, 0x3e3c1fb2 ),
	NFlagsW( 4, 3.270565 ),
	VERT( 0x4051240a, 0xbfa4eee7, 0x3ef8a611 ),
	NORM( 0x3d8a0b83, 0xbf6e6c75, 0x3eb73845 ),
	NFlagsW( 5, 9.021032 ),
	VERT( 0x40440c0f, 0xbf964b94, 0xbea5b5df ),
	NORM( 0x3e214f0e, 0xbf4426fc, 0xbf1f7af7 ),
	NFlagsW( 6, 44.197350 ),
	VERT( 0x4059ea46, 0xbee3f2d2, 0xbf2e0349 ),
	NORM( 0xbe4982e2, 0xbdaae817, 0xbf7a1552 ),
	NFlagsW( 7, 39.532272 ),
	VERT( 0x401c1489, 0xbff7f0b0, 0xbf46bf44 ),
	NORM( 0x3e306371, 0x3f2f0c60, 0xbf35851c ),
	NFlagsW( 8, 0.032786 ),
	VERT( 0x4045bf8c, 0xbfa7e0a7, 0x3eed9b83 ),
	NORM( 0x3da3f1c4, 0xbf7669b5, 0x3e849d74 ),
	NFlagsW( 9, 23.659904 ),
	VERT( 0x4029f4bf, 0xbfddb92e, 0x3c1b7db2 ),
	NORM( 0x3defdc34, 0x3f770004, 0x3e70ee75 ),
	NFlagsW( 10, 12.100931 ),
	VERT( 0x406afce4, 0xbea5ae6a, 0x3f5ba44c ),
	NORM( 0x3d93c89c, 0x3de0937d, 0x3f7dc8e3 ),
	NFlagsW( 11, 3.382152 ),
	VERT( 0x404b9bd2, 0xbedbb085, 0xbf1f4651 ),
	NORM( 0x3d5f6662, 0xbdbf88c9, 0xbf7e7ec6 ),
	NFlagsW( 12, 49.717991 ),
	VERT( 0x401e9a04, 0xbfda0252, 0xbc4e7cb6 ),
	NORM( 0x3dfda7f1, 0x3f7c05eb, 0x3dfedf2c ),
	NFlagsW( 13, 18.968439 ),
	VERT( 0x40559d92, 0xbf207443, 0x3f6fce4f ),
	NORM( 0x3e76786a, 0xbc9730db, 0x3f786dcd ),
	NFlagsW( 14, 27.632868 ),
	VERT( 0x406f64ee, 0x3e273793, 0x3f500ce9 ),
	NORM( 0x3e53c529, 0x3eddf0d5, 0x3f608a7c ),
	NFlagsW( 15, 2.122607 ),
	VERT( 0x40604f9a, 0x3e99f6e1, 0xbee82bda ),
	NORM( 0xbcc11340, 0x3f31a6f5, 0xbf3839e5 ),
	NFlagsW( 16, 42.244690 ),
	VERT( 0x404063bf, 0xbed9bb67, 0xbf2e1a7c ),
	NORM( 0x3e1b55a5, 0xbdb75654, 0xbf7bff59 ),
	NFlagsW( 17, 53.939079 ),
	VERT( 0x40548658, 0xbe9f2e32, 0x3f4db3ee ),
	NORM( 0x3e63d151, 0x3da1761f, 0x3f78c440 ),
	NFlagsW( 18, 43.395977 ),
	VERT( 0x40404a75, 0xbf4ba7a0, 0x3f8051fb ),
	NORM( 0x3e689d0c, 0xbeb7178c, 0x3f67e421 ),
	NFlagsW( 19, 78.302437 ),
	VERT( 0x40520e0e, 0x3eaabfc4, 0xbecb9e13 ),
	NORM( 0x3e1a129f, 0x3f35882f, 0xbf3058fb ),
	NFlagsW( 20, 49.970116 ),
	VERT( 0x4056e0a6, 0x3ca8bcb0, 0x3f614fc9 ),
	NORM( 0x3e7cfed3, 0x3e2f5830, 0x3f7428e0 ),
	NFlagsW( 21, 39.987934 ),
	VERT( 0x40632ea8, 0x3f12f7fd, 0x3e97b7d4 ),
	NORM( 0x3e14ec4c, 0x3f7adedd, 0x3e0b5be1 ),
	NFlagsW( 22, 31.641718 ),
	VERT( 0x404705d2, 0x3ebb7daa, 0xbeeaa4a3 ),
	NORM( 0x3e4f61c0, 0x3f255bce, 0xbf3c6d30 ),
	NFlagsW( 23, 50.014503 ),
	VERT( 0x403deb2e, 0xbe8f3642, 0x3f75b47c ),
	NORM( 0x3e6e63d0, 0x3d9ddd16, 0x3f782ecf ),
	NFlagsW( 24, 65.725914 ),
	VERT( 0x4054d4bd, 0x3f195de7, 0x3ea41bfb ),
	NORM( 0x3e22cec1, 0x3f781851, 0x3e410199 ),
	NFlagsW( 25, 48.370380 ),
	VERT( 0x40498b0a, 0x3f22980f, 0x3e96672c ),
	NORM( 0x3e1cfece, 0x3f7c33e8, 0x3d9dd75e ),
	NFlagsW( 26, 50.048351 ),
	VERT( 0x4042488b, 0x3e6bf898, 0x3f69ab52 ),
	NORM( 0x3e862c80, 0x3efd3fa1, 0x3f5422c7 ),
	NFlagsW( 27, 57.041695 ),
	VERT( 0x3faf4514, 0xbf9dcec8, 0xbe918433 ),
	NORM( 0xbdf09736, 0xbf4ea0a6, 0xbf141c30 ),
	NFlagsW( 28, 52.173317 ),
	VERT( 0x3fb4a55a, 0xbfa9abd1, 0x3f3895d5 ),
	NORM( 0x3e0bc842, 0xbf72a81a, 0x3e936959 ),
	NFlagsW( 29, 55.678005 ),
	VERT( 0x3f3fc6fe, 0xbfe4ca51, 0xbf3946a6 ),
	NORM( 0xbd9fe952, 0x3f3cb519, 0xbf2bd4c5 ),
	NFlagsW( 30, 4.171961 ),
	VERT( 0x3f84e699, 0xbf9a5bf7, 0xbe38496c ),
	NORM( 0x3d08c63b, 0xbf5c49da, 0xbf022353 ),
	NFlagsW( 31, 50.799061 ),
	VERT( 0x3f894ec9, 0xbfb0e51c, 0x3f529ce8 ),
	NORM( 0xbc431d57, 0xbf67b255, 0x3ed9a789 ),
	NFlagsW( 32, 46.712296 ),
	VERT( 0x3f4dd5b8, 0xbfc927cf, 0x3e85d246 ),
	NORM( 0x3e60bf98, 0x3f76d263, 0x3e18bbdf ),
	NFlagsW( 33, 39.241749 ),
	VERT( 0x3ed7657d, 0xbfe4ca7e, 0xbf1e2c36 ),
	NORM( 0x3dd8cde4, 0x3f4a8f8c, 0xbf1a2d6e ),
	NFlagsW( 34, 0.936266 ),
	VERT( 0x3f3f902f, 0xbf9a4998, 0xbeb3c2eb ),
	NORM( 0x3e3cd3ba, 0xbf41c703, 0xbf207e0f ),
	NFlagsW( 35, 51.147038 ),
	VERT( 0x3f49cbac, 0xbfac44ed, 0x3f43b4ef ),
	NORM( 0xbdb2aa8a, 0xbf6d9983, 0x3eb94ba2 ),
	NFlagsW( 36, 44.822815 ),
	VERT( 0x3ef49042, 0xbfbbb7b8, 0x3eb96e42 ),
	NORM( 0x3d5850e4, 0x3f73adb4, 0x3e9a9536 ),
	NFlagsW( 37, 33.956223 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 8),
	OffnbIdx(0, 1),
	VERT( 0x3e4c5ae4, 0xbfbed997, 0x3e98272a ),
	NORM( 0x3ce45a57, 0x3f79f83e, 0x3e5b18c1 ),
	NFlagsW( 2953, 16.434988 ),
	CnkV_VN_NF(FV_CONT|FW_END, 57),
	OffnbIdx(0, 8),
	VERT( 0x40213639, 0x40039a6e, 0xbe87b790 ),
	NORM( 0x3e437ea7, 0xbf6c5915, 0x3eaaba47 ),
	NFlagsW( 2933, 0.016671 ),
	VERT( 0x4015ef40, 0x4000b141, 0xbe92387d ),
	NORM( 0x3e507cc2, 0xbf735f40, 0x3e6fa4e3 ),
	NFlagsW( 2935, 0.716367 ),
	VERT( 0x3f5d0e28, 0x3fe83fe9, 0xbc9484b0 ),
	NORM( 0x3e0be993, 0xbf6f74c6, 0x3ea70322 ),
	NFlagsW( 2948, 18.062840 ),
	VERT( 0x3f07cca1, 0x3fe539bd, 0x3db6fc72 ),
	NORM( 0x3e5b85a7, 0xbf5d0d8b, 0x3ee9bfe9 ),
	NFlagsW( 2949, 8.333036 ),
	VERT( 0x3e7c2d07, 0x3fdb3cff, 0x3cf7c551 ),
	NORM( 0x3e14cffa, 0xbf72a076, 0x3e91625e ),
	NFlagsW( 2950, 3.938116 ),
	VERT( 0x3f2fe082, 0xbead337f, 0xbf35daf0 ),
	NORM( 0x3e5ed301, 0xbdc62d64, 0xbf78a273 ),
	NFlagsW( 2952, 99.241310 ),
	VERT( 0x3f4d6e59, 0x3f11b93d, 0xbf0168d1 ),
	NORM( 0x3e79d9f1, 0x3f20dd02, 0xbf3d189e ),
	NFlagsW( 2954, 99.893936 ),
	VERT( 0x3f007e7a, 0xbe202c60, 0x3fa1dcb9 ),
	NORM( 0x3e384604, 0x3d95eed8, 0x3f7b1f51 ),
	NFlagsW( 2955, 99.975189 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger21[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger21,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger21[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger21,
OPosition  (  3.360371F, -0.000002F,  0.000004F ),
OAngle     ( -0.000000F, -0.000000F, -0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Finger22,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger2[]
START
	CnkV_VN_NF(FV_CONT|FW_START, 29),
	OffnbIdx(2952, 4),
	VERT( 0x40818430, 0xbead337f, 0xbf35da70 ),
	NORM( 0x3e5ed301, 0xbdc62d64, 0xbf78a273 ),
	NFlagsW( 0, 0.758694 ),
	VERT( 0x4063d5ee, 0xbfbed997, 0x3e98282a ),
	NORM( 0x3ce45a57, 0x3f79f83e, 0x3e5b18c1 ),
	NFlagsW( 1, 0.053847 ),
	VERT( 0x408535eb, 0x3f11b93d, 0xbf016851 ),
	NORM( 0x3e79d9f1, 0x3f20dd02, 0xbf3d189e ),
	NFlagsW( 2, 0.106071 ),
	VERT( 0x40772fde, 0xbe202c60, 0x3fa1dcf9 ),
	NORM( 0x3e384604, 0x3d95eed8, 0x3f7b1f51 ),
	NFlagsW( 3, 0.024807 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 43),
	OffnbIdx(0, 6),
	VERT( 0x401c2b3b, 0xbfe1a37f, 0xbf70fdc4 ),
	NORM( 0x3e99db2b, 0x3f25201c, 0xbf33dd99 ),
	NFlagsW( 2836, 0.155569 ),
	VERT( 0x402488db, 0xbf89a591, 0xbf00579b ),
	NORM( 0x3ebde422, 0xbf4be487, 0xbef4886d ),
	NFlagsW( 2838, 60.817863 ),
	VERT( 0x401af389, 0xbfb48cd8, 0x3eaf9acd ),
	NORM( 0x3d37516b, 0x3f7e031f, 0x3deda879 ),
	NFlagsW( 2842, 44.514557 ),
	VERT( 0x400342eb, 0xbfb855d3, 0xbf78c3b2 ),
	NORM( 0x3f116c03, 0x3dee1250, 0xbf5092c7 ),
	NFlagsW( 2844, 22.841061 ),
	VERT( 0x4021982b, 0xbfa1cd64, 0x3f4ffda1 ),
	NORM( 0x3d7b51e0, 0xbf747d76, 0x3e9482b5 ),
	NFlagsW( 2847, 48.652351 ),
	VERT( 0x3fe8fc02, 0xbfa8fb54, 0x3f8433c4 ),
	NORM( 0x3eda7870, 0xbeeafde1, 0x3f477eca ),
	NFlagsW( 2854, 28.042095 ),
	CnkV_VN_NF(FV_CONT|FW_END, 113),
	OffnbIdx(0, 16),
	VERT( 0x401f0409, 0xbe829d80, 0xbf66d26f ),
	NORM( 0x3dfc4312, 0x3beb339f, 0xbf7e0b3a ),
	NFlagsW( 2848, 98.596977 ),
	VERT( 0x40185376, 0xbf177c6d, 0x3fc0d42e ),
	NORM( 0x3e007567, 0xbeb788d2, 0x3f6cd1c0 ),
	NFlagsW( 2853, 97.178604 ),
	VERT( 0x402346ca, 0x3f19c264, 0xbf281569 ),
	NORM( 0x3ed32cc5, 0x3ef24132, 0xbf47498c ),
	NFlagsW( 2855, 99.054344 ),
	VERT( 0x4013c32d, 0xbd1334e3, 0x3fc44f0b ),
	NORM( 0x3e02d4fb, 0x3dc4cd8f, 0x3f7cb511 ),
	NFlagsW( 2857, 96.821960 ),
	VERT( 0x3ff82d8d, 0x3f06c054, 0xbf4a6a1d ),
	NORM( 0x3e907a2c, 0xbe608274, 0xbf6f18c7 ),
	NFlagsW( 2859, 79.311462 ),
	VERT( 0x40177334, 0x3f0066f3, 0x3fb49a77 ),
	NORM( 0x3e264e35, 0x3f04718a, 0x3f571875 ),
	NFlagsW( 2860, 97.862915 ),
	VERT( 0x401f7ae2, 0x3f831e1f, 0x3f1ce2fc ),
	NORM( 0x3e9f23e7, 0x3f6bbe75, 0x3e70f9ee ),
	NFlagsW( 2861, 93.092224 ),
	VERT( 0x400457b7, 0x3f9adf40, 0xbf9aecd3 ),
	NORM( 0x3f356ce9, 0xbe506f12, 0xbf2cee9b ),
	NFlagsW( 2862, 78.639977 ),
	VERT( 0x3fc6001a, 0xbf28a1dc, 0x3fcbb6e3 ),
	NORM( 0x3d08ceea, 0xbe9aa758, 0x3f73e46a ),
	NFlagsW( 2864, 37.511860 ),
	VERT( 0x400cd483, 0x3fcc91b2, 0x3db92fac ),
	NORM( 0x3eda385e, 0xbf52e24f, 0x3ebf6780 ),
	NFlagsW( 2866, 37.212048 ),
	VERT( 0x3fc781f5, 0x3beadb63, 0x3fcce9c5 ),
	NORM( 0xbd1b86d1, 0x3db4602a, 0x3f7ed1dd ),
	NFlagsW( 2867, 52.926361 ),
	VERT( 0x3f460f19, 0x3e1b6bee, 0xbf969f6f ),
	NORM( 0x3ecedb6d, 0xbe645750, 0xbf631ca0 ),
	NFlagsW( 2868, 26.781845 ),
	VERT( 0x3fc498b5, 0x3f316c91, 0x3fbc9368 ),
	NORM( 0x3e25d8de, 0x3ec58259, 0x3f688480 ),
	NFlagsW( 2870, 50.917034 ),
	VERT( 0x3fd99b8b, 0x3fb702f6, 0x3f45b8f5 ),
	NORM( 0x3f0f53b4, 0x3f081738, 0x3f22b44a ),
	NFlagsW( 2871, 32.430386 ),
	VERT( 0x3f113a15, 0xbd083000, 0x3f9f416c ),
	NORM( 0xbd4d0fca, 0x3dd60786, 0x3f7e467d ),
	NFlagsW( 2875, 23.728252 ),
	VERT( 0x3f2922eb, 0x3f138cba, 0x3fb57c92 ),
	NORM( 0xbe215bcc, 0xbd093675, 0x3f7ca7fa ),
	NFlagsW( 2877, 15.255536 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger2[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger2,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger2[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger2,
OPosition  (  8.016157F,  1.080437F,  0.000860F ),
OAngle     (  0.045617F,  0.000003F,  0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Finger21,
Sibling     object_kihon11_Bip01_Bip01_R_Finger3,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy02[]
START
EvalFlags ( 0x0000001c ),
CNKModel   NULL,
OPosition  (  2.727571F,  0.000001F, -0.000005F ),
OAngle     (  0.000009F, 180.000042F,  0.000003F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger12[]
START
	CnkV_VN(FV_CONT, 253),
	OffnbIdx(126, 42),
	VERT( 0x3ff9e83d, 0xbf301a1d, 0xbf28ff9e ),
	NORM( 0x3f253d67, 0xbf41eedd, 0xbdc77b19 ),
	VERT( 0x40075322, 0xbef69f33, 0xbf24240e ),
	NORM( 0x3f5a7896, 0xbf056759, 0xbc48f037 ),
	VERT( 0x40015e9a, 0xbecf7769, 0xbf8aea26 ),
	NORM( 0x3f3d0ef4, 0xbece284c, 0xbf0a728a ),
	VERT( 0x3ff3dcfb, 0xbf08e646, 0xbf8d8d24 ),
	NORM( 0x3f0fc299, 0xbf1cea21, 0xbf0e4a95 ),
	VERT( 0x4005f696, 0xbeff3dcf, 0xbe9a3b4c ),
	NORM( 0x3f3852a9, 0xbefc5bf1, 0x3efa1e42 ),
	VERT( 0x400310cc, 0xbeffb79d, 0xbeea0314 ),
	NORM( 0x3f5458b0, 0xbf0e6b54, 0x3d4b7c26 ),
	VERT( 0x40126818, 0xbdedb543, 0xbf1a06be ),
	NORM( 0x3f7dfeff, 0xbd987ca1, 0x3dcd50f0 ),
	VERT( 0x40096666, 0xbe0b3840, 0xbf845afc ),
	NORM( 0x3f5bf77f, 0xbdf8af18, 0xbefe6f59 ),
	VERT( 0x3fe70a71, 0xbf41578f, 0xbea750c5 ),
	NORM( 0x3edaf141, 0xbf374928, 0x3f0d462d ),
	VERT( 0x3fea256a, 0xbf256e9d, 0xbe990aff ),
	NORM( 0x3e2c42b0, 0xbe6268d7, 0x3f75ebfb ),
	VERT( 0x3fc2ef82, 0xbf6a813e, 0xbf188efa ),
	NORM( 0x3e7647e2, 0xbf784d1c, 0xbd19281e ),
	VERT( 0x3fc2402e, 0xbf3671e2, 0xbf991a65 ),
	NORM( 0x3e6500f0, 0xbf3da322, 0xbf222918 ),
	VERT( 0x400cca82, 0xbdcc6149, 0xbedb397d ),
	NORM( 0x3f7c32af, 0xbd8020b3, 0x3e23bd38 ),
	VERT( 0x400d892f, 0xbdb7957f, 0xbe86337b ),
	NORM( 0x3f48c1b5, 0xbcae5123, 0x3f1ec137 ),
	VERT( 0x400536a3, 0x3e0abffd, 0xbf8f793c ),
	NORM( 0x3f4b143e, 0x3e253f5d, 0xbf164b2e ),
	VERT( 0x400c94e4, 0x3e83791d, 0xbf3095c8 ),
	NORM( 0x3f724995, 0x3ea37772, 0xbd458d8e ),
	VERT( 0x3fd5e906, 0xbe08d4ac, 0xbfb6f62c ),
	NORM( 0x3ead6202, 0xbdb10fc2, 0xbf6fdb08 ),
	VERT( 0x3fff5904, 0x3e8bdf98, 0xbf945b5a ),
	NORM( 0x3f248715, 0x3ed37a3a, 0xbf252f40 ),
	VERT( 0x4008cbf8, 0x3e9c5d6a, 0xbf029408 ),
	NORM( 0x3f6f2266, 0x3eb6bfd3, 0xbb97efff ),
	VERT( 0x400bcba6, 0x3ea387a6, 0xbeb5d984 ),
	NORM( 0x3f5315bf, 0x3ec2a8c2, 0x3ed68862 ),
	VERT( 0x3f8c2a2e, 0xbf761b97, 0xbefd37f8 ),
	NORM( 0x3d6c3ac8, 0xbf7c98ec, 0x3e1b9176 ),
	VERT( 0x3f8b3b85, 0xbf36512e, 0xbf9a73e2 ),
	NORM( 0xbd0c186f, 0xbf3bd9c9, 0xbf2db301 ),
	VERT( 0x3fb0a002, 0xbf0e968f, 0xbe6baf4b ),
	NORM( 0x3ebd2fe1, 0x3d9be622, 0x3f6d1537 ),
	VERT( 0x400534f7, 0x3ef338fc, 0xbf3c9767 ),
	NORM( 0x3f440f97, 0x3f1de0d4, 0xbe3a5b7e ),
	VERT( 0x3fa3685d, 0xbf28222f, 0xbe1aaffc ),
	NORM( 0x3e9ef04c, 0xbee534ca, 0x3f56ad9f ),
	VERT( 0x3ffa5ef1, 0x3efd50a0, 0xbebf813d ),
	NORM( 0x3e237241, 0x3eaa4d70, 0x3f6df0b5 ),
	VERT( 0x3fd33b8b, 0x3ef65836, 0xbfa329a0 ),
	NORM( 0x3e97b003, 0x3f188ba0, 0xbf3f15d7 ),
	VERT( 0x3ffa55ff, 0x3f19da31, 0xbed4fb75 ),
	NORM( 0x3efae678, 0x3f378600, 0x3efde89b ),
	VERT( 0x3f8bc73e, 0xbdd714cb, 0xbfc1de71 ),
	NORM( 0xbc9dbb97, 0xbd71b466, 0xbf7f819c ),
	VERT( 0x3faac7ff, 0xbced2cf8, 0xbe007b3e ),
	NORM( 0x3f04fc1f, 0x3b74b859, 0x3f5abf23 ),
	VERT( 0x3ed9b97d, 0xbf44080e, 0xbf89b896 ),
	NORM( 0xbe0c794f, 0xbf44f452, 0xbf1fb943 ),
	VERT( 0x3fdab6c2, 0x3f4194c2, 0xbf34becf ),
	NORM( 0x3eb086fc, 0x3f6f4650, 0xbdb1a810 ),
	VERT( 0x3f9efc65, 0xbc8bfc6c, 0xbcc7117e ),
	NORM( 0x3f026fe4, 0x3d2f77b1, 0x3f5c0118 ),
	VERT( 0x3fbf31e2, 0x3eeffe6c, 0xbe9868d6 ),
	NORM( 0x3ec7cfff, 0x3cf50173, 0x3f6b937b ),
	VERT( 0x3f9cd938, 0x3f07791b, 0xbfa4e950 ),
	NORM( 0x3d4ef9f1, 0x3f24b9fd, 0xbf4388e1 ),
	VERT( 0x3fb51c95, 0x3f169f94, 0xbe6e94aa ),
	NORM( 0x3ec5c0e4, 0x3efb4bdf, 0x3f47ee04 ),
	VERT( 0x3ed9439c, 0xbd724f35, 0xbfb4cfe3 ),
	NORM( 0xbe5188a5, 0xbd440e46, 0xbf7a4890 ),
	VERT( 0x3fa61b2c, 0x3f5d191b, 0xbf1d5c37 ),
	NORM( 0x3e2b156b, 0x3f7c43b7, 0x3d0527e0 ),
	VERT( 0x3f504b3b, 0x3f021880, 0x3db83795 ),
	NORM( 0x3e6348f4, 0x3ecd6050, 0x3f638380 ),
	VERT( 0x3f15d576, 0x3f2cf229, 0xbf95dd8e ),
	NORM( 0xbca9ca7a, 0x3f36d731, 0xbf3319d7 ),
	VERT( 0x3eba5485, 0x3f3595b6, 0xbf8e5ea3 ),
	NORM( 0x3e185b52, 0x3f38e5b2, 0xbf2ce934 ),
	VERT( 0x3f2764ba, 0x3f6dfebe, 0xbed4bf6f ),
	NORM( 0x3e21ce7c, 0x3f797360, 0x3e23a8b5 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 15),
	OffnbIdx(0, 2),
	VERT( 0x3e62c8c2, 0xbf6bfafe, 0xbe87b793 ),
	NORM( 0x3d7813b4, 0xbf70d98a, 0x3eaaba4c ),
	NFlagsW( 2933, 82.251831 ),
	VERT( 0x3d267d87, 0xbf713b89, 0xbe923880 ),
	NORM( 0x3d8df344, 0xbf7841f0, 0x3e6fa4ec ),
	NFlagsW( 2935, 55.272232 ),
	CnkV_VN_NF(FV_CONT|FW_END, 113),
	OffnbIdx(0, 16),
	VERT( 0x3ee527db, 0xbf6cf123, 0xbe96345b ),
	NORM( 0x3c982c37, 0xbf74b5f5, 0x3e961124 ),
	NFlagsW( 2930, 99.633080 ),
	VERT( 0x3e4cdd46, 0xbf43ee0d, 0xbf81f183 ),
	NORM( 0x3d86bd9e, 0xbf50703c, 0xbf13aaee ),
	NFlagsW( 2931, 98.386536 ),
	VERT( 0x3f348de2, 0xbeeecf0f, 0x3e1dc94b ),
	NORM( 0x3df97497, 0xbeaf107a, 0x3f6e8a7a ),
	NFlagsW( 2932, 99.837746 ),
	VERT( 0x3cbe72af, 0xbf49ae04, 0xbf88f163 ),
	NORM( 0x3e0ab5d9, 0xbf428ab4, 0xbf22bf83 ),
	NFlagsW( 2934, 60.839470 ),
	VERT( 0x3f349b3e, 0x3cc69371, 0x3e00151e ),
	NORM( 0x3da3a570, 0x3da77b14, 0x3f7e5238 ),
	NFlagsW( 2936, 98.616798 ),
	VERT( 0x3e4dc453, 0xbd2bfd73, 0xbfad27e8 ),
	NORM( 0x3d3bd351, 0xbd9ccee1, 0xbf7efa76 ),
	NFlagsW( 2937, 99.870903 ),
	VERT( 0x3eb10163, 0xbe8cf02c, 0x3e4cd0b8 ),
	NORM( 0x3e16abb4, 0x3c2a0493, 0x3f7d331c ),
	NFlagsW( 2938, 58.042664 ),
	VERT( 0x3cd0d98b, 0xbd115fca, 0xbfb45e11 ),
	NORM( 0x3e12e324, 0xbda2718c, 0xbf7c8997 ),
	NFlagsW( 2939, 68.228745 ),
	VERT( 0x3eb5299c, 0x3d29ec48, 0x3d9773ae ),
	NORM( 0x3e417302, 0xbae56e11, 0x3f7b63cc ),
	NFlagsW( 2940, 51.801292 ),
	VERT( 0xbb2da90f, 0xbee1aba7, 0x3e87a9e7 ),
	NORM( 0x3e8471e5, 0xbebd9ab1, 0x3f646477 ),
	NFlagsW( 2941, 49.998619 ),
	VERT( 0x3ed59c90, 0x3ebcdeac, 0x3e215ee6 ),
	NORM( 0x3e85a91c, 0x3e065c57, 0x3f74d44d ),
	NFlagsW( 2942, 73.464920 ),
	VERT( 0x3e460ad4, 0x3f3ea9d9, 0xbf95d8f7 ),
	NORM( 0x3e5c6ea1, 0x3f26c6de, 0xbf3a3ceb ),
	NFlagsW( 2943, 99.979111 ),
	VERT( 0x3ab3295d, 0x3d9549be, 0x3e6faab6 ),
	NORM( 0x3e922099, 0x3b3aaf0e, 0x3f7559df ),
	NFlagsW( 2944, 50.000000 ),
	VERT( 0x3edc5572, 0x3f74d8aa, 0xbec70479 ),
	NORM( 0x3e2e1f69, 0x3f7668c6, 0x3e58477c ),
	NFlagsW( 2945, 99.799660 ),
	VERT( 0x3de367a0, 0x3f145fd9, 0x3e4a7c35 ),
	NORM( 0x3e94fc4f, 0x3eea5b6b, 0x3f571272 ),
	NFlagsW( 2946, 51.357506 ),
	VERT( 0x3e830d86, 0x3f7ea337, 0xbed3821b ),
	NORM( 0x3e354766, 0x3f7abed6, 0x3dc565c6 ),
	NFlagsW( 2947, 94.511673 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger12[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger12,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger12[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger12,
OPosition  (  2.705747F,  0.000001F, -0.000002F ),
OAngle     ( -0.000000F, -0.000000F,  0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy02,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger11[]
START
	CnkV_VN(FV_CONT, 109),
	OffnbIdx(334, 18),
	VERT( 0x3f9beb9c, 0xbf50eaab, 0xbf829ac2 ),
	NORM( 0xbe0d9467, 0xbf49fdd3, 0xbf193d89 ),
	VERT( 0x3f635bf3, 0xbf49d662, 0xbf697db5 ),
	NORM( 0xbb68d642, 0xbf5e0948, 0xbefed56e ),
	VERT( 0x3fb28960, 0xbec24a54, 0x3f12b329 ),
	NORM( 0x3ca6208a, 0xbec3a6ab, 0x3f6c83c0 ),
	VERT( 0x3f9c4493, 0x3d56290b, 0xbfb70551 ),
	NORM( 0xbe24eae7, 0xbd40af11, 0xbf7c5ef4 ),
	VERT( 0x3f18c959, 0xbf47e046, 0xbf8a5f04 ),
	NORM( 0x3e35c518, 0xbf426a43, 0xbf203af2 ),
	VERT( 0x3f648f7f, 0x3da16e0f, 0xbfa919de ),
	NORM( 0x3d13184b, 0xbdb4f604, 0xbf7ed535 ),
	VERT( 0x3fb23ec4, 0x3e2e0258, 0x3f0a1c89 ),
	NORM( 0x3c5e1cdf, 0x3dc20e4f, 0x3f7ed313 ),
	VERT( 0x3f6e9180, 0xbe6b9882, 0x3f0c1fb6 ),
	NORM( 0xbc3a364c, 0xbe1f207f, 0x3f7cdf92 ),
	VERT( 0x3fb519d5, 0x3f7473c2, 0xbf9186fd ),
	NORM( 0xbd02157d, 0x3f38de43, 0xbf30e668 ),
	VERT( 0x3f1a616e, 0x3db6211c, 0xbfb5e309 ),
	NORM( 0x3e5fc549, 0xbdb2d7dd, 0xbf78cf77 ),
	VERT( 0x3fc20c7c, 0x3f364464, 0x3f005063 ),
	NORM( 0x3d60be37, 0x3ef31e87, 0x3f60dc1c ),
	VERT( 0x3f6fe30c, 0x3e42492a, 0x3edcedd0 ),
	NORM( 0x3cbd364f, 0x3d64f892, 0x3f7f87ff ),
	VERT( 0x3fbeb976, 0x3f989174, 0xbe21a6cb ),
	NORM( 0x3e002bf0, 0x3f78e86f, 0x3e4a26bd ),
	VERT( 0x3f8ad339, 0x3f7afe02, 0xbf83a523 ),
	NORM( 0x3dd04c93, 0x3f499c4c, 0xbf1b997c ),
	VERT( 0x3f8349c1, 0x3f1dbc01, 0x3efbc066 ),
	NORM( 0x3ddb3ccb, 0x3e84eef1, 0x3f75b27e ),
	VERT( 0x3f4ad634, 0x3f7c3433, 0xbf993f2d ),
	NORM( 0x3e7e2501, 0x3f23004e, 0xbf3ae51e ),
	VERT( 0x3f942766, 0x3f9c66b3, 0xbd4fcbef ),
	NORM( 0x3e528b5b, 0x3f69b685, 0x3eb47c0d ),
	VERT( 0x3f6056d0, 0x3fa48b72, 0xbdee6090 ),
	NORM( 0x3e09b9c5, 0x3f7a5490, 0x3e24345f ),
	CnkV_VN_NF(FV_CONT|FW_START, 148),
	OffnbIdx(2930, 21),
	VERT( 0x4049cffb, 0xbf6cf137, 0xbe96345b ),
	NORM( 0x3c982c37, 0xbf74b5f3, 0x3e961124 ),
	NFlagsW( 0, 0.366916 ),
	VERT( 0x4039f8d4, 0xbf43ee21, 0xbf81f183 ),
	NORM( 0x3d86bd9e, 0xbf50703b, 0xbf13aaee ),
	NFlagsW( 1, 1.613466 ),
	VERT( 0x405a4e78, 0xbeeecf3a, 0x3e1dc94b ),
	NORM( 0x3df97497, 0xbeaf107a, 0x3f6e8a7a ),
	NFlagsW( 2, 0.162255 ),
	VERT( 0x403b578c, 0xbf6bfb12, 0xbe87b793 ),
	NORM( 0x3d7813b4, 0xbf70d989, 0x3eaaba4c ),
	NFlagsW( 3, 17.731491 ),
	VERT( 0x402ea7e5, 0xbf49ae19, 0xbf88f163 ),
	NORM( 0x3e0ab5d9, 0xbf428ab2, 0xbf22bf83 ),
	NFlagsW( 4, 39.160534 ),
	VERT( 0x402fc4f6, 0xbf713b9d, 0xbe923880 ),
	NORM( 0x3d8df344, 0xbf7841ee, 0x3e6fa4ec ),
	NFlagsW( 5, 44.011402 ),
	VERT( 0x405a51d0, 0x3cc690b6, 0x3e00151e ),
	NORM( 0x3da3a570, 0x3da77b11, 0x3f7e5238 ),
	NFlagsW( 6, 1.383209 ),
	VERT( 0x403a0745, 0xbd2bfecb, 0xbfad27e8 ),
	NORM( 0x3d3bd351, 0xbd9ccede, 0xbf7efa76 ),
	NFlagsW( 7, 0.129095 ),
	VERT( 0x40434b2c, 0xbe8cf057, 0x3e4cd0b8 ),
	NORM( 0x3e16abb4, 0x3c2a0484, 0x3f7d331c ),
	NFlagsW( 8, 41.957329 ),
	VERT( 0x402eccb3, 0xbd116121, 0xbfb45e11 ),
	NORM( 0x3e12e324, 0xbda27189, 0xbf7c8997 ),
	NFlagsW( 9, 31.771257 ),
	VERT( 0x4043d033, 0x3d29eae9, 0x3d9773ae ),
	NORM( 0x3e417302, 0xbae56e7e, 0x3f7b63cc ),
	NFlagsW( 10, 48.198708 ),
	VERT( 0x402cff96, 0xbee1abd2, 0x3e87a9e7 ),
	NORM( 0x3e8471e5, 0xbebd9ab1, 0x3f646477 ),
	NFlagsW( 11, 50.001389 ),
	VERT( 0x4047de92, 0x3ebcde80, 0x3e215ee6 ),
	NORM( 0x3e85a91c, 0x3e065c55, 0x3f74d44d ),
	NFlagsW( 12, 26.535076 ),
	VERT( 0x40398bad, 0x3f3ea9c2, 0xbf95d8f7 ),
	NORM( 0x3e5c6ea1, 0x3f26c6dd, 0xbf3a3ceb ),
	NFlagsW( 13, 0.020884 ),
	VERT( 0x402d4165, 0x3d95490e, 0x3e6faab6 ),
	NORM( 0x3e922099, 0x3b3aaeda, 0x3f7559df ),
	NFlagsW( 14, 50.000000 ),
	VERT( 0x4048b5ae, 0x3f74d893, 0xbec70479 ),
	NORM( 0x3e2e1f69, 0x3f7668c5, 0x3e58477c ),
	NFlagsW( 15, 0.200337 ),
	VERT( 0x4034463d, 0x3f145fc2, 0x3e4a7c35 ),
	NORM( 0x3e94fc4f, 0x3eea5b6a, 0x3f571272 ),
	NFlagsW( 16, 48.642494 ),
	VERT( 0x403d8cb1, 0x3f7ea320, 0xbed3821b ),
	NORM( 0x3e354766, 0x3f7abed5, 0x3dc565c6 ),
	NFlagsW( 17, 5.488329 ),
	VERT( 0x3fa08ab2, 0xbf6e4fbe, 0xbc9484ab ),
	NORM( 0x3ba7ebb8, 0xbf71fe68, 0x3ea70327 ),
	NFlagsW( 18, 81.937157 ),
	VERT( 0x3f6bd0c7, 0xbf686f7e, 0x3db6fc76 ),
	NORM( 0x3dbca7a2, 0xbf628a1d, 0x3ee9bfed ),
	NFlagsW( 19, 91.666969 ),
	VERT( 0x3f20fd02, 0xbf72170f, 0x3cf7c56e ),
	NORM( 0x3c44bbb9, 0xbf757179, 0x3e916263 ),
	NFlagsW( 20, 96.057304 ),
	CnkV_VN_NF(FV_CONT|FW_END, 22),
	OffnbIdx(0, 3),
	VERT( 0x3ede3409, 0xbeaff5cd, 0x3f17eb3c ),
	NORM( 0x3e011b6a, 0xbeb346d6, 0x3f6d9c80 ),
	NFlagsW( 2956, 89.319221 ),
	VERT( 0x3edf2433, 0x3e686fb9, 0x3f0f2738 ),
	NORM( 0x3e4ca04d, 0x3d07d32e, 0x3f7ab160 ),
	NFlagsW( 2957, 84.741982 ),
	VERT( 0x3f0f5c9b, 0x3f4a8143, 0x3f04dbe1 ),
	NORM( 0x3e267985, 0x3ee050d5, 0x3f625407 ),
	NFlagsW( 2958, 99.942986 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger11[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger11,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger11[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger11,
OPosition  (  2.880315F, -0.000000F, -0.000003F ),
OAngle     ( -0.000000F, -0.000000F,  0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Finger12,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger1[]
START
	CnkV_VN_NF(FV_CONT|FW_START, 22),
	OffnbIdx(2956, 3),
	VERT( 0x40541d8e, 0xbeaff5c5, 0x3f17eb3c ),
	NORM( 0x3e011b69, 0xbeb346d5, 0x3f6d9c80 ),
	NFlagsW( 0, 10.680504 ),
	VERT( 0x40543b93, 0x3e686fc6, 0x3f0f2738 ),
	NORM( 0x3e4ca04c, 0x3d07d32e, 0x3f7ab160 ),
	NFlagsW( 1, 15.257803 ),
	VERT( 0x405c2e34, 0x3f4a8146, 0x3f04dbe1 ),
	NORM( 0x3e267984, 0x3ee050d4, 0x3f625407 ),
	NFlagsW( 2, 0.056996 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 29),
	OffnbIdx(0, 4),
	VERT( 0x4013ce12, 0xbfbc7317, 0x3f1ce280 ),
	NORM( 0x3edf35be, 0x3f5e602f, 0x3e70f9e2 ),
	NFlagsW( 2861, 5.826684 ),
	VERT( 0x3ff52b58, 0xbf9d5f6f, 0xbf9aed11 ),
	NORM( 0x3f2c6861, 0xbe99b3a9, 0xbf2cee9b ),
	NFlagsW( 2862, 6.634208 ),
	VERT( 0x400672a3, 0xbf5d0b2d, 0x3db92bbf ),
	NORM( 0x3e9d65d6, 0xbf600451, 0x3ebf6783 ),
	NFlagsW( 2866, 59.757034 ),
	VERT( 0x3fca7750, 0xbf75e90c, 0x3f45b878 ),
	NORM( 0x3f20df4f, 0x3ee5a35a, 0x3f22b447 ),
	NFlagsW( 2871, 48.090672 ),
	CnkV_VN_NF(FV_CONT|FW_END, 120),
	OffnbIdx(0, 17),
	VERT( 0x400b78d0, 0xbf285dee, 0xbf9c84e0 ),
	NORM( 0x3e6d6888, 0xbf10adce, 0xbf4aaf6d ),
	NFlagsW( 2865, 97.388580 ),
	VERT( 0x400c3166, 0x3e1fd4f1, 0xbfcce359 ),
	NORM( 0xbe3371d7, 0xbd9163b9, 0xbf7b61ec ),
	NFlagsW( 2869, 95.363571 ),
	VERT( 0x4002934b, 0xbe571cc9, 0x3f4cfafd ),
	NORM( 0x3ddaacbc, 0xbed2b797, 0x3f67b520 ),
	NFlagsW( 2872, 95.905075 ),
	VERT( 0x3fde8f1b, 0x3e94fa2a, 0xbfaeca2d ),
	NORM( 0x3d2e8bdf, 0x3daaee7d, 0xbf7edf94 ),
	NFlagsW( 2873, 91.598442 ),
	VERT( 0x400f44cc, 0x3f8134c1, 0xbfaa2b4f ),
	NORM( 0xbd060c17, 0x3f2822fb, 0xbf40dcbe ),
	NFlagsW( 2874, 95.408920 ),
	VERT( 0x4001beff, 0x3eb5fd99, 0x3f56bc10 ),
	NORM( 0x3e1351be, 0x3d84bc20, 0x3f7ccafa ),
	NFlagsW( 2876, 97.276047 ),
	VERT( 0x400a14a0, 0x3f5c9fa8, 0x3f3a88de ),
	NORM( 0x3e3310bc, 0x3efe0bd1, 0x3f59b56f ),
	NFlagsW( 2878, 99.298737 ),
	VERT( 0x3f955c86, 0xbe77f437, 0x3f63216c ),
	NORM( 0x3be19f44, 0xbe2c694b, 0x3f7c56ce ),
	NFlagsW( 2879, 51.978611 ),
	VERT( 0x400e5d0b, 0x3fb292c8, 0xbd778a79 ),
	NORM( 0x3e1709ca, 0x3f7a9af9, 0x3e109e2c ),
	NFlagsW( 2880, 99.621849 ),
	VERT( 0x3fd9ce30, 0x3f9195d5, 0xbf8d0af1 ),
	NORM( 0x3e03bf2b, 0x3f4ab73a, 0xbf18d4e1 ),
	NFlagsW( 2881, 90.476128 ),
	VERT( 0x3f9c1616, 0x3ed2768f, 0x3f696905 ),
	NORM( 0xbdb4ef17, 0x3d8bd532, 0x3f7e6630 ),
	NFlagsW( 2882, 61.432766 ),
	VERT( 0x3f090f62, 0xbe3c2c08, 0x3f49122d ),
	NORM( 0x3c92ccf9, 0x3ea7203d, 0x3f71ef28 ),
	NFlagsW( 2883, 32.817753 ),
	VERT( 0x3fbf10c4, 0x3fc7d754, 0x3df6d30b ),
	NORM( 0x3e303848, 0x3f7782ae, 0x3e413bc9 ),
	NFlagsW( 2884, 85.380806 ),
	VERT( 0x3f9f2b1d, 0x3f86da9c, 0x3f4d4160 ),
	NORM( 0x3cfbd15f, 0x3efc321b, 0x3f5ea699 ),
	NFlagsW( 2885, 73.269531 ),
	VERT( 0x3ef6a9a1, 0x3e9e49b7, 0x3f0fea32 ),
	NORM( 0xbc504a63, 0x3e3861a9, 0x3f7bcb75 ),
	NFlagsW( 2886, 34.643669 ),
	VERT( 0x3f0a43ad, 0x3f5b2438, 0x3f37c872 ),
	NORM( 0xbe4cfdc8, 0x3e2c065c, 0x3f771a79 ),
	NFlagsW( 2888, 40.425335 ),
	VERT( 0x3f2c9372, 0x3fcd3b69, 0x3e87a81a ),
	NORM( 0xbbdb5ddf, 0x3f6c40b0, 0x3ec52827 ),
	NFlagsW( 2893, 7.587980 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger1[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger1,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger1[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger1,
OPosition  (  8.016156F,  3.241311F,  0.002583F ),
OAngle     (  0.045183F, -0.006349F,  7.999994F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Finger11,
Sibling     object_kihon11_Bip01_Bip01_R_Finger2,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy01[]
START
EvalFlags ( 0x0000001c ),
CNKModel   NULL,
OPosition  (  1.963854F,  0.000002F, -0.000002F ),
OAngle     (  0.000002F, 180.000042F,  0.000002F ),
OScale     (  1.000000F,  1.000000F,  0.999999F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger02[]
START
	CnkV_VN(FV_CONT, 211),
	OffnbIdx(352, 35),
	VERT( 0x3fa26444, 0xbec9c503, 0xbbd67e49 ),
	NORM( 0x3f25ad2f, 0xbf41e64e, 0x3db11fde ),
	VERT( 0x3fb89803, 0xbe5aafaf, 0xbdeecdac ),
	NORM( 0x3f4bb8ee, 0xbf1aff99, 0xbc3c519a ),
	VERT( 0x3f5f0488, 0xbf289a35, 0x3d338c25 ),
	NORM( 0x3ee5eaaa, 0xbf620708, 0x3e0c6875 ),
	VERT( 0x3fc9567e, 0x3d09be38, 0xbea12058 ),
	NORM( 0x3f64143f, 0xbedafb66, 0xbe1c56cb ),
	VERT( 0x3f943060, 0xbe9758ee, 0xbf115e97 ),
	NORM( 0x3f11db0a, 0xbf2f363b, 0xbee8eb8b ),
	VERT( 0x3fa47fab, 0xbdce5b41, 0x3f03f621 ),
	NORM( 0x3f3077a6, 0xbf05344e, 0x3f010ac2 ),
	VERT( 0x3fc21de1, 0x3e13a10e, 0x3eaa56f1 ),
	NORM( 0x3f5bff6f, 0xbeb866e5, 0x3eb9dbfd ),
	VERT( 0x3fc5f03f, 0x3e272e39, 0xbf18acf9 ),
	NORM( 0x3f5b8887, 0xbea100a1, 0xbed06dd4 ),
	VERT( 0x3f59aec9, 0xbe9e4462, 0x3f338351 ),
	NORM( 0x3eb7f620, 0xbf281928, 0x3f29c298 ),
	VERT( 0x3ee944c6, 0xbf2bc56c, 0xbf4ec1e7 ),
	NORM( 0x3ea85024, 0xbf43728a, 0xbf0e5106 ),
	VERT( 0x3fb801e9, 0x3e600bc7, 0xbf499caf ),
	NORM( 0x3f326c96, 0xbe49c9f5, 0xbf3082a1 ),
	VERT( 0x3fd9aed3, 0x3ef0a846, 0x3d15d8d3 ),
	NORM( 0x3f7da464, 0xbd92405f, 0x3deb9dd0 ),
	VERT( 0x3fb9e579, 0x3ea85f14, 0x3f0de010 ),
	NORM( 0x3f5169f5, 0xbe8937a9, 0x3f024968 ),
	VERT( 0x3f8be284, 0x3d9938ec, 0x3f50be57 ),
	NORM( 0x3ec048e4, 0xbe552005, 0x3f67335c ),
	VERT( 0x3fb5f0cb, 0x3eefe2ca, 0x3f2a72f1 ),
	NORM( 0x3f09f451, 0x3e87db24, 0x3f4cabdd ),
	VERT( 0x3f909f0c, 0x3e7afa27, 0x3f4cf238 ),
	NORM( 0x3e1ad69d, 0x3e6af35b, 0x3f76252a ),
	VERT( 0x3f8ca4cd, 0x3e33f08b, 0xbf839f96 ),
	NORM( 0x3ed51a77, 0xbe1e2d9b, 0xbf656363 ),
	VERT( 0x3fd4964d, 0x3f2b3037, 0xbeaf063b ),
	NORM( 0x3f77925f, 0x3df154fd, 0xbe66f82b ),
	VERT( 0x3fd18ac4, 0x3f2e63c5, 0x3e60c2db ),
	NORM( 0x3f6bcc1f, 0x3e4c2468, 0x3eab3df3 ),
	VERT( 0x3f1cf8b3, 0x3cd695d6, 0xbf956d41 ),
	NORM( 0x3e812a42, 0xbe033c34, 0xbf75899b ),
	VERT( 0x3fc247b1, 0x3f4cd5ef, 0x3ea8116b ),
	NORM( 0x3edfce27, 0x3f2a5606, 0x3f1aeadf ),
	VERT( 0x3fc342d3, 0x3f46f85e, 0xbf1bcf10 ),
	NORM( 0x3f3ff42e, 0x3ea3e2ec, 0xbf143d60 ),
	VERT( 0x3fce68e9, 0x3f6a223d, 0xbe45960d ),
	NORM( 0x3f6a81a8, 0x3ebb4c8c, 0xbe2866fe ),
	VERT( 0x3f41c706, 0x3e93549d, 0x3f441982 ),
	NORM( 0x3db9a4b3, 0x3f0a78d6, 0x3f561025 ),
	VERT( 0x3f07898b, 0x3e51700d, 0x3f5c4e5d ),
	NORM( 0x3e3fd38e, 0x3e6af316, 0x3f74830b ),
	VERT( 0x3fca06fe, 0x3f859e35, 0xbd9323aa ),
	NORM( 0x3f15a688, 0x3f4a693a, 0x3e3a5a80 ),
	VERT( 0x3f960afb, 0x3f5f98e4, 0xbf50a0bc ),
	NORM( 0x3e88336c, 0x3f13a655, 0xbf45bb58 ),
	VERT( 0x3d85cc65, 0x3b3ada20, 0xbf9f3cfd ),
	NORM( 0x3d0b11d9, 0xbd37bae3, 0xbf7f9835 ),
	VERT( 0x3fae8231, 0x3f8a62aa, 0xbef31720 ),
	NORM( 0x3eb3ef7d, 0x3f584b24, 0xbece7be3 ),
	VERT( 0x3faeb317, 0x3f8d32c9, 0xbe992599 ),
	NORM( 0x3e01dd1c, 0x3f7d2610, 0x3d9f89bd ),
	VERT( 0x3f3776ef, 0x3f4171be, 0x3eb978fa ),
	NORM( 0x3e08e844, 0x3f479ae4, 0x3f1c989b ),
	VERT( 0x3f5f2d09, 0x3f87a6dd, 0xbe3e5dd0 ),
	NORM( 0x3d0abbb6, 0x3f5f1f56, 0x3efa6ad3 ),
	VERT( 0x3f348dec, 0x3f68a2b4, 0xbf5a60f5 ),
	NORM( 0x3d9f3a59, 0x3f30e2a2, 0xbf37fcd2 ),
	VERT( 0x3f2f9545, 0x3f8e79c7, 0xbe89b7d9 ),
	NORM( 0x3daf0179, 0x3f7ee172, 0x3d1a8a7f ),
	VERT( 0x3e221acb, 0x3f7c8350, 0xbf4fd832 ),
	NORM( 0x3b454cd3, 0x3f3d15fe, 0xbf2c930b ),
	CnkV_VN_NF(FV_CONT|FW_END, 71),
	OffnbIdx(0, 10),
	VERT( 0xbe51be7a, 0xbf7dcf5f, 0x3d144417 ),
	NORM( 0x3e02c43f, 0xbf7ae7da, 0x3e1b9e9c ),
	NFlagsW( 2887, 2.770999 ),
	VERT( 0xbdf700f7, 0xbf473281, 0xbf585732 ),
	NORM( 0x3d36b685, 0xbf49dba6, 0xbf1d0819 ),
	NFlagsW( 2889, 7.654824 ),
	VERT( 0xbe58ca40, 0xbebf2501, 0x3f6e7d47 ),
	NORM( 0x3dba50fd, 0xbef6d71f, 0x3f5f1264 ),
	NFlagsW( 2895, 1.704281 ),
	VERT( 0x3ebb5ad1, 0xbf5770ca, 0xbb6af7af ),
	NORM( 0x3e8fcde3, 0xbf72ffe8, 0x3e112cff ),
	NFlagsW( 2960, 99.708549 ),
	VERT( 0x3eb31544, 0xbec1d8a9, 0x3f4c8b2f ),
	NORM( 0x3e4ebbc8, 0xbf12b4a0, 0x3f4b53f9 ),
	NFlagsW( 2961, 95.630951 ),
	VERT( 0x3b4e8bba, 0x3ec68524, 0x3f781cde ),
	NORM( 0x3e888923, 0x3e9f9cba, 0x3f69775a ),
	NFlagsW( 2962, 28.622326 ),
	VERT( 0x3ee3a4ea, 0x3f4de3b7, 0x3edd66c4 ),
	NORM( 0x3e86621d, 0x3f407ae6, 0x3f1ad4c8 ),
	NFlagsW( 2963, 99.983231 ),
	VERT( 0x3dbcd391, 0x3f5b0f79, 0x3f01f549 ),
	NORM( 0x3e726ff9, 0x3f3fabf2, 0x3f1e81cb ),
	NFlagsW( 2964, 59.208698 ),
	VERT( 0x3e61f8ac, 0x3f98c898, 0xbd734f53 ),
	NORM( 0x3e8904f4, 0x3f719c0d, 0x3e46af50 ),
	NFlagsW( 2965, 99.974075 ),
	VERT( 0xbe2d2eda, 0x3f75281b, 0xbf4767bc ),
	NORM( 0xbde6017a, 0x3f39ad70, 0xbf2de089 ),
	NFlagsW( 2966, 0.017321 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger02[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger02,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger02[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger02,
OPosition  (  1.945668F,  0.000000F, -0.000003F ),
OAngle     ( -0.000003F, -7.999982F, -0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy01,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger01[]
START
	CnkV_VN(FV_CONT, 43),
	OffnbIdx(388, 7),
	VERT( 0x3ff00450, 0x3d02d51c, 0xbf9f29ed ),
	NORM( 0x3e3e32f4, 0x3cfe9b96, 0xbf7b6b59 ),
	VERT( 0x3fce922d, 0xbcd67533, 0xbfab3264 ),
	NORM( 0x3e642eee, 0xbd005495, 0xbf796f27 ),
	VERT( 0x3fc39e3c, 0x3f686fb3, 0x3f095204 ),
	NORM( 0xbd88683b, 0x3f48b49e, 0x3f1dfed1 ),
	VERT( 0x3fcd1d7d, 0x3f6d34b8, 0xbf59148f ),
	NORM( 0x3d17a70b, 0x3f3acac2, 0xbf2eccad ),
	VERT( 0x3fe2aec1, 0x3fa62ef1, 0xbdaadb3b ),
	NORM( 0xbd329a83, 0x3f7f70ed, 0x3d4b27ee ),
	VERT( 0x3fabd22f, 0x3f94a712, 0xbda620c6 ),
	NORM( 0xbc976a8b, 0x3f7f1fb4, 0x3da50116 ),
	VERT( 0x3f853fab, 0x3f7f097b, 0xbf48fab8 ),
	NORM( 0x3df23fd6, 0x3f4921e3, 0xbf1b7348 ),
	CnkV_VN_NF(FV_CONT|FW_START, 50),
	OffnbIdx(2960, 7),
	VERT( 0x4013bf03, 0xbf5770c8, 0x3d420163 ),
	NORM( 0x3e844d71, 0xbf72ffe7, 0x3e37ca4c ),
	NFlagsW( 0, 0.291437 ),
	VERT( 0x400b92d6, 0xbec1d8a3, 0x3f5702ff ),
	NORM( 0x3db70fbc, 0xbf12b49e, 0x3f508acb ),
	NFlagsW( 1, 4.369045 ),
	VERT( 0x3fe82e06, 0x3ec68528, 0x3f75ceab ),
	NORM( 0x3e0c7203, 0x3e9f9cbb, 0x3f70b1f4 ),
	NFlagsW( 2, 71.377670 ),
	VERT( 0x4014d989, 0x3f4de3b9, 0x3efaec22 ),
	NORM( 0x3e33f532, 0x3f407ae5, 0x3f22acf4 ),
	NFlagsW( 3, 0.016767 ),
	VERT( 0x3ffbb065, 0x3f5b0f7a, 0x3f03f9a7 ),
	NORM( 0x3e17d6af, 0x3f3fabf1, 0x3f25664a ),
	NFlagsW( 4, 40.791302 ),
	VERT( 0x400b09a3, 0x3f98c898, 0xbce66424 ),
	NORM( 0x3e73b864, 0x3f719c0d, 0x3e6ae3d0 ),
	NFlagsW( 5, 0.025925 ),
	VERT( 0x3ff17bf8, 0x3f75281b, 0xbf4b7e48 ),
	NORM( 0xbc88b3f3, 0x3f39ad6f, 0xbf302fae ),
	NFlagsW( 6, 99.982681 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 22),
	OffnbIdx(0, 3),
	VERT( 0x3fde7018, 0xbf7dcf5d, 0x3bf01673 ),
	NORM( 0x3dd7ac03, 0xbf7ae7d9, 0x3e2c4de5 ),
	NFlagsW( 2887, 96.937805 ),
	VERT( 0x3ff8cffb, 0xbf473280, 0xbf5a8908 ),
	NORM( 0x3e04a6dc, 0xbf49dba6, 0xbf19ea02 ),
	NFlagsW( 2889, 92.323227 ),
	VERT( 0x3fcd9d6b, 0xbebf24fc, 0x3f649f59 ),
	NORM( 0xbcff71af, 0xbef6d71d, 0x3f602465 ),
	NFlagsW( 2895, 98.220215 ),
	CnkV_VN_NF(FV_CONT|FW_END, 127),
	OffnbIdx(0, 18),
	VERT( 0x3fb4fdda, 0xbf7ea121, 0x3c8b60b2 ),
	NORM( 0x3dc8db79, 0xbf76ab8b, 0x3e7edb2e ),
	NFlagsW( 2890, 97.309494 ),
	VERT( 0x3f91ef30, 0xbf87bb2f, 0xbd314d51 ),
	NORM( 0x3d32c0fc, 0xbf797628, 0x3e6191ce ),
	NFlagsW( 2891, 88.617912 ),
	VERT( 0x3fd07925, 0xbf44e63a, 0xbf5caec3 ),
	NORM( 0x3e555279, 0xbf4afc38, 0xbf129737 ),
	NFlagsW( 2892, 99.611488 ),
	VERT( 0x3fae2c2b, 0xbf588df2, 0xbf726cbb ),
	NORM( 0x3e7e6df5, 0xbf48dbcb, 0xbf116a97 ),
	NFlagsW( 2894, 96.723717 ),
	VERT( 0x3fa49510, 0xbec003e4, 0x3f5a298a ),
	NORM( 0xbdc4eddc, 0xbefbe6a4, 0x3f5d8274 ),
	NFlagsW( 2896, 99.004463 ),
	VERT( 0x3f1e7ffc, 0xbf845250, 0xbe194f96 ),
	NORM( 0xbc7334a1, 0xbf79957b, 0x3e634fc3 ),
	NFlagsW( 2897, 62.129158 ),
	VERT( 0x3f5067eb, 0xbf5e9392, 0xbf86fbe2 ),
	NORM( 0x3da95610, 0xbf462c2a, 0xbf20ac1a ),
	NFlagsW( 2898, 71.974205 ),
	VERT( 0x3f7f69fc, 0xbed20233, 0x3f4d29cf ),
	NORM( 0xbe1d0912, 0xbf04e835, 0x3f573eba ),
	NFlagsW( 2899, 94.130974 ),
	VERT( 0x3fadcdc1, 0x3ec0faea, 0x3f86826f ),
	NORM( 0xbde9d013, 0x3e742e1c, 0x3f76e427 ),
	NFlagsW( 2901, 99.978683 ),
	VERT( 0x3ef52853, 0xbe808b9c, 0x3f40688e ),
	NORM( 0xbd5299fd, 0xbed7271d, 0x3f67ed42 ),
	NFlagsW( 2902, 65.590378 ),
	VERT( 0x3c19bbbf, 0xbf5c2f33, 0xbf8d130a ),
	NORM( 0x3e21b076, 0xbf42df23, 0xbf2104d2 ),
	NFlagsW( 2903, 0.121408 ),
	VERT( 0x3f891fa4, 0xbcf2d46f, 0xbfb1881e ),
	NORM( 0x3db5b42d, 0x3d5dc8da, 0xbf7e9d03 ),
	NFlagsW( 2904, 97.884361 ),
	VERT( 0x3f7d63cf, 0x3ec3c78b, 0x3f60d073 ),
	NORM( 0xbe05e55d, 0x3e83efad, 0x3f751433 ),
	NFlagsW( 2905, 99.204636 ),
	VERT( 0x3f8f0257, 0x3f57e444, 0x3ee8b726 ),
	NORM( 0x3cb7505b, 0x3f457c9c, 0x3f22cb77 ),
	NFlagsW( 2907, 99.969887 ),
	VERT( 0x3f01a36b, 0x3f1bfccf, 0x3f62fd49 ),
	NORM( 0xbc3389e5, 0x3ebff3f4, 0x3f6d4fad ),
	NFlagsW( 2908, 93.585083 ),
	VERT( 0x3d83537b, 0xbd7c2153, 0xbfb9fd97 ),
	NORM( 0x3ebb0562, 0xbdb1a7e5, 0xbf6d45f5 ),
	NFlagsW( 2909, 0.204548 ),
	VERT( 0x3f19e5ca, 0x3f7d5e9c, 0x3efb5b85 ),
	NORM( 0x3bf4b932, 0x3f498fff, 0x3f1dd015 ),
	NFlagsW( 2912, 98.443428 ),
	VERT( 0x3f50d58d, 0x3fa5ee6d, 0x3d2ab6f5 ),
	NORM( 0x3decbd9d, 0x3f7727b2, 0x3e6f2735 ),
	NFlagsW( 2913, 99.963394 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger01[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger01,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger01[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger01,
OPosition  (  2.260248F, -0.000001F, -0.000000F ),
OAngle     (  0.000006F, -26.000029F, -0.000002F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Finger02,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Finger0[]
START
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 15),
	OffnbIdx(0, 2),
	VERT( 0x40171cb5, 0xbe808bd8, 0x3f62abd4 ),
	NORM( 0xbee30049, 0xbed72720, 0x3f4aaf2c ),
	NFlagsW( 2902, 11.014562 ),
	VERT( 0x4014e899, 0x3f1bfcb1, 0x3f826c6e ),
	NORM( 0xbed51a8f, 0x3ebff3f1, 0x3f54106a ),
	NFlagsW( 2908, 0.122742 ),
	CnkV_VN_NF(FV_CONT|FW_END, 78),
	OffnbIdx(0, 11),
	VERT( 0x400c48e2, 0xbf91f19c, 0xbe7cd0bb ),
	NORM( 0x3e4bf744, 0xbf710b16, 0x3e8b0db5 ),
	NFlagsW( 2900, 1.833183 ),
	VERT( 0x3fa3e9fa, 0xbf163c04, 0x3ef12b43 ),
	NORM( 0xbe99bfc1, 0xbed8200c, 0x3f5af8d7 ),
	NFlagsW( 2906, 30.065845 ),
	VERT( 0x3f6e402d, 0xbf10c82b, 0x3e9b266f ),
	NORM( 0xbf2714ec, 0xbe0ab627, 0x3f3ed52a ),
	NFlagsW( 2910, 27.294722 ),
	VERT( 0x3f2c7793, 0xbf38e0eb, 0x3da66195 ),
	NORM( 0x3d59a8da, 0x3eccdc2b, 0x3f6a384f ),
	NFlagsW( 2911, 25.750961 ),
	VERT( 0x3f9e5a39, 0x3ed01c35, 0x3ea737a0 ),
	NORM( 0xbf435f3b, 0x3ee2f38c, 0x3ef0bda7 ),
	NFlagsW( 2914, 37.677280 ),
	VERT( 0x3fcb685c, 0x3f524961, 0xbde89eb1 ),
	NORM( 0xbf219eca, 0x3f3b4906, 0x3e83be69 ),
	NFlagsW( 2915, 49.698891 ),
	VERT( 0x3fa91c45, 0x3ef60c84, 0xbf168dc1 ),
	NORM( 0xbf1b7956, 0x3f28c33c, 0x3ee301b1 ),
	NFlagsW( 2916, 31.691250 ),
	VERT( 0x3ebebf28, 0x3e2595de, 0xbebc86ba ),
	NORM( 0xbeb57be9, 0x3f353381, 0x3f1c6c29 ),
	NFlagsW( 2917, 26.541668 ),
	VERT( 0x40038d8e, 0x3fa20e05, 0xbeec9074 ),
	NORM( 0xbe55fba2, 0x3f792858, 0x3dc316b2 ),
	NFlagsW( 2918, 0.946360 ),
	VERT( 0x3fd1dc6c, 0x3f91a44a, 0xbf47bd67 ),
	NORM( 0xbeec3e8f, 0x3f616837, 0x3ddeadfd ),
	NFlagsW( 2919, 6.531803 ),
	VERT( 0x3f411f52, 0x3f163ded, 0xbf562a33 ),
	NORM( 0xbe96b102, 0x3f47656a, 0x3f0dc66c ),
	NFlagsW( 2920, 28.173098 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Finger0[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Finger0,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Finger0[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Finger0,
OPosition  (  5.611308F,  5.402184F,  0.004302F ),
OAngle     (  7.352745F, 48.065188F, 26.301971F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Finger01,
Sibling     object_kihon11_Bip01_Bip01_R_Finger1,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Hand[]
START
	CnkV_VN(FV_CONT, 853),
	OffnbIdx(168, 142),
	VERT( 0x41231021, 0xc09f0c5d, 0xbf6b5206 ),
	NORM( 0x3e2c4407, 0xbf3a6fe9, 0xbf2a10e8 ),
	VERT( 0x41233dcc, 0xc0a6913b, 0x3debbf98 ),
	NORM( 0xbcb2f045, 0xbf796fc8, 0x3e654c1e ),
	VERT( 0x4117fb7f, 0xc09e34c6, 0xbf873557 ),
	NORM( 0xbd277e2b, 0xbf381dfe, 0xbf318f29 ),
	VERT( 0x4116ec6f, 0xc0a45e09, 0x3e2428e7 ),
	NORM( 0x3d0443dd, 0xbf798cd7, 0x3e620116 ),
	VERT( 0x410e35ea, 0xc09fce24, 0xbf608366 ),
	NORM( 0x3db94755, 0xbf57b91f, 0xbf07e10f ),
	VERT( 0x410ae981, 0xc0a5aa47, 0x3e9a3c54 ),
	NORM( 0x3bd31478, 0xbf7667a6, 0x3e8ad27f ),
	VERT( 0x40fb1a01, 0xc0a04537, 0xbfa95d4a ),
	NORM( 0x3ddcf294, 0xbf4bdd0f, 0xbf185b93 ),
	VERT( 0x4107e5f0, 0xc098507c, 0x3f5ba8a7 ),
	NORM( 0xbc0683fc, 0xbf1d7234, 0x3f49d8e3 ),
	VERT( 0x41050bea, 0xc08321e5, 0xbfcb8c58 ),
	NORM( 0x3e9661e9, 0xbe7bd17a, 0xbf6c78d2 ),
	VERT( 0x40f5fa12, 0xc0a29241, 0x3e760cd9 ),
	NORM( 0xbe1a5159, 0xbf701210, 0x3ea02bed ),
	VERT( 0x4108a2a0, 0xc036644e, 0xbfd1e976 ),
	NORM( 0x3ed22144, 0x3b5bd56e, 0xbf6971ef ),
	VERT( 0x40e43ef9, 0xc09e13f8, 0xbfbad3d0 ),
	NORM( 0xbcd57bc0, 0xbf3efc47, 0xbf2a5749 ),
	VERT( 0x40eeadba, 0xc07c7359, 0xbfddcd5b ),
	NORM( 0x3c9f2e44, 0xbe2a67f7, 0xbf7c61a0 ),
	VERT( 0x40f3e812, 0xc0918197, 0x3f6c0c59 ),
	NORM( 0xbe8e393b, 0xbea431f5, 0x3f67d121 ),
	VERT( 0x40e034bd, 0xc0a1ee07, 0xbd5ce2ce ),
	NORM( 0xbde044d0, 0xbf77a949, 0x3e69b7a9 ),
	VERT( 0x40f65ffb, 0xc08605b7, 0x3f597353 ),
	NORM( 0xbe1ee5b3, 0x3d14c50a, 0x3f7cba67 ),
	VERT( 0x40ef5ff7, 0xc02ee0dc, 0xbfebd9f8 ),
	NORM( 0xbcad60b2, 0x3d4f1434, 0xbf7f9d7d ),
	VERT( 0x40db791d, 0xc090e771, 0x3f1ef9c5 ),
	NORM( 0xbdae43a9, 0xbf2e5371, 0x3f3a343d ),
	VERT( 0x410cfbd6, 0xbee2a8b1, 0xbfbec0fe ),
	NORM( 0x3e8bb889, 0x3da3942e, 0xbf756ee0 ),
	VERT( 0x4105fd3a, 0xc00256a7, 0x3f99de13 ),
	NORM( 0xbe0d7278, 0x3e1deb84, 0x3f7a740b ),
	VERT( 0x40e7474b, 0xc0553eb4, 0x3f29034c ),
	NORM( 0x3de3eec9, 0xbcbec21b, 0x3f7e56f6 ),
	VERT( 0x40ba0343, 0xc09caa41, 0xbfa176a7 ),
	NORM( 0xbe1bf590, 0xbf5ac307, 0xbefe3c86 ),
	VERT( 0x40dc10d1, 0xc07e75e6, 0x3f7d6a4c ),
	NORM( 0x3ddd9492, 0xbde1c6a2, 0x3f7ced74 ),
	VERT( 0x40f0a55c, 0xbfd79676, 0xbfd6d03a ),
	NORM( 0xbd5bca5f, 0x3d9c1313, 0xbf7ee2b6 ),
	VERT( 0x40c1ec33, 0xc08204d5, 0xbfcc741a ),
	NORM( 0x3c071420, 0xbe5096b3, 0xbf7a9fa6 ),
	VERT( 0x40ec2215, 0xc022cec4, 0x3f773b51 ),
	NORM( 0x3e46ff61, 0xbed322e8, 0x3f63da02 ),
	VERT( 0x410b359a, 0xbe9edf15, 0x3f9b3012 ),
	NORM( 0xbded24d0, 0xbe518e97, 0x3f78d291 ),
	VERT( 0x40f3b3ec, 0xc0060721, 0x3f928843 ),
	NORM( 0x3e69bf5e, 0xbea12ac7, 0x3f6bdac8 ),
	VERT( 0x40b6b419, 0xc09a0e70, 0x3defa920 ),
	NORM( 0xbe1a0213, 0xbf71a9a8, 0x3e965e77 ),
	VERT( 0x40c98c85, 0xc032da1f, 0xbfcc45a0 ),
	NORM( 0x3cc7d84f, 0x3d93aca1, 0xbf7f41d8 ),
	VERT( 0x40f60118, 0xbed2ee9b, 0xbfd6b9d3 ),
	NORM( 0xbdc1e71c, 0x3e345c2d, 0xbf7ad455 ),
	VERT( 0x40f3f537, 0xbfc505fe, 0x3fad9166 ),
	NORM( 0x3ec3e4fc, 0xbd630192, 0x3f6c186b ),
	VERT( 0x40faf6ff, 0xbf5fdc7b, 0x3f865dc0 ),
	NORM( 0x3e85bdf3, 0x3da1e0fb, 0x3f76482f ),
	VERT( 0x40d01a79, 0xc0047594, 0xbfba3d8f ),
	NORM( 0xbcc807d3, 0x3de00568, 0xbf7e6314 ),
	VERT( 0x40b5ef05, 0xc089a4be, 0x3f6be307 ),
	NORM( 0xbcfd1ae4, 0xbf296d99, 0x3f3fbfa5 ),
	VERT( 0x40be77d1, 0xc076c711, 0x3f92c1c3 ),
	NORM( 0x3e0e4806, 0xbec04fe9, 0x3f6a92d3 ),
	VERT( 0x41010913, 0x3f26b1b0, 0xbfae8664 ),
	NORM( 0x3e0f323a, 0xbe0958f0, 0xbf7b25ed ),
	VERT( 0x410a6cd6, 0x3f1c11a2, 0x3fbfd403 ),
	NORM( 0xbe4e9416, 0x3d5b130c, 0x3f7a5cc7 ),
	VERT( 0x410ce475, 0x400f1aaf, 0xbff04858 ),
	NORM( 0x3ee82d58, 0xbe56aaec, 0xbf5dc399 ),
	VERT( 0x40fdba1f, 0xbe6e70ef, 0x3f7b236a ),
	NORM( 0x3dd7fc4b, 0xbe50fa16, 0x3f792760 ),
	VERT( 0x40d979e3, 0xbf4c820d, 0xbfb8c3ab ),
	NORM( 0xbd4c69e8, 0x3dd9d2d7, 0xbf7e3a21 ),
	VERT( 0x40c96529, 0xc028cf89, 0x3fc29829 ),
	NORM( 0x3e8719bb, 0xbe84e34b, 0x3f6dd1d0 ),
	VERT( 0x40ff0e07, 0x3eebb396, 0x3fb894f0 ),
	NORM( 0x3e751434, 0xbea7300e, 0x3f6a14d4 ),
	VERT( 0x40d688fc, 0xbfced9ea, 0x3fc10e79 ),
	NORM( 0x3e2c8476, 0xbd66a740, 0x3f7bedb9 ),
	VERT( 0x40fb7f40, 0x3ff614cc, 0xc014a86b ),
	NORM( 0xbcec8b36, 0xbe813a10, 0xbf7799f5 ),
	VERT( 0x40e08957, 0x3e8af900, 0xbf933a79 ),
	NORM( 0x3da8ff1f, 0xbdc51926, 0xbf7def3d ),
	VERT( 0x410b86c0, 0x401ff898, 0x3fb0d760 ),
	NORM( 0xbbf9ace8, 0x3eea73fa, 0x3f63930d ),
	VERT( 0x410a877b, 0x406baea0, 0xbfef3f38 ),
	NORM( 0x3ea934a7, 0x3e45d216, 0xbf6c8026 ),
	VERT( 0x40fb085b, 0x3f920e8e, 0x3fd53759 ),
	NORM( 0x3e7a6ea3, 0x3dc93db5, 0x3f76f2c1 ),
	VERT( 0x40ea4f9a, 0x3fdc964d, 0xbfe4b730 ),
	NORM( 0xbdbefc0d, 0xbe830a2e, 0xbf7651bf ),
	VERT( 0x40dad50b, 0xbe94f243, 0x3fc71825 ),
	NORM( 0x3e830a4d, 0xbdd2f8bf, 0x3f761077 ),
	VERT( 0x40c8cc33, 0xbd3a3066, 0xbfbab5f9 ),
	NORM( 0x3ed43047, 0xbe6da3bd, 0xbf614752 ),
	VERT( 0x41004df3, 0x3fe50bd3, 0x3fb06adf ),
	NORM( 0x3e04881e, 0x3e86b94a, 0x3f74bef5 ),
	VERT( 0x41000c34, 0x4014b7bc, 0x3f95a869 ),
	NORM( 0xbc9a2c3b, 0x3ed00d08, 0x3f69dcb2 ),
	VERT( 0x41099b47, 0x40919b57, 0xbfcb01d6 ),
	NORM( 0x3d9551aa, 0x3f3d441a, 0xbf2b5d74 ),
	VERT( 0x40f15fca, 0x404721e4, 0xc011e6d7 ),
	NORM( 0xbd2e3654, 0x3e05a832, 0xbf7d9386 ),
	VERT( 0x40fd0585, 0x404064a1, 0x3f4f1469 ),
	NORM( 0x3e4f271b, 0x3dfdfde8, 0x3f78b042 ),
	VERT( 0x40dc34aa, 0x3f8845c1, 0x3fd6ea82 ),
	NORM( 0x3daffa1e, 0x3db35e30, 0x3f7e10d5 ),
	VERT( 0x40bd7dc4, 0x3fa9e975, 0xc0412b66 ),
	NORM( 0x3edfd12a, 0xbe818465, 0xbf5cf323 ),
	VERT( 0x403d08c8, 0xc0811097, 0xbfeb7e87 ),
	NORM( 0xbe516a94, 0xbf3fa5ff, 0xbf21730d ),
	VERT( 0x409b55e7, 0xbf3dcfc4, 0xbfe2698a ),
	NORM( 0x3e4856cf, 0xbe7340dc, 0xbf739371 ),
	VERT( 0x403c9e54, 0xc08a7701, 0xbd71e8d4 ),
	NORM( 0xbe92047c, 0xbf7443cc, 0x3db9f8e7 ),
	VERT( 0x40f28d76, 0x40865ff3, 0xbfc872d9 ),
	NORM( 0xbdae2420, 0x3f437cfd, 0xbf23d95b ),
	VERT( 0x403d597c, 0xc04c3ac0, 0xc00d2b92 ),
	NORM( 0xbd959ff1, 0xbe9714c2, 0xbf73e283 ),
	VERT( 0x40f550ed, 0x406921b9, 0x3f7f3cec ),
	NORM( 0x3e5c79bc, 0x3e99fc3e, 0x3f6dd833 ),
	VERT( 0x40ceceea, 0x403b8257, 0xc017afef ),
	NORM( 0x3f1753c7, 0x3e13d5c2, 0xbf4b2682 ),
	VERT( 0x40dc4657, 0x400ff44d, 0x3fb717e3 ),
	NORM( 0x3de78e4f, 0x3e8a717c, 0x3f74c217 ),
	VERT( 0x40406f1d, 0xc08012ff, 0x3f63d41d ),
	NORM( 0xbe58cad7, 0xbf55cc86, 0x3f01f4c0 ),
	VERT( 0x404138a9, 0xc02e1534, 0xc013157e ),
	NORM( 0x3cf33fec, 0xbd28094f, 0xbf7fabe6 ),
	VERT( 0x40d45ed3, 0x405966c6, 0xc005e547 ),
	NORM( 0x3ee71f30, 0x3e0ff6be, 0xbf619477 ),
	VERT( 0x40db7ff4, 0x40830800, 0xbff61240 ),
	NORM( 0x3eba9295, 0x3f0f87a9, 0xbf3e5963 ),
	VERT( 0x4048ec50, 0xc0002502, 0xc00b8295 ),
	NORM( 0x3e19e17e, 0x3da2996e, 0xbf7c4687 ),
	VERT( 0x40f2d840, 0x408bafa2, 0x3f2b2c20 ),
	NORM( 0xbd1c1ef0, 0x3f179ec4, 0x3f4e0a01 ),
	VERT( 0x40986e13, 0x3f95652a, 0xc0488973 ),
	NORM( 0x3d6d507c, 0xbea671d6, 0xbf71a3ea ),
	VERT( 0x40419e0f, 0xc056f854, 0x3fcdb005 ),
	NORM( 0xbd709216, 0xbf1dd8b2, 0x3f48fbcd ),
	VERT( 0x40f13f1b, 0x409b58c6, 0x3d852913 ),
	NORM( 0xbe6a6ec5, 0x3f71cae7, 0x3e713e6c ),
	VERT( 0x40c9cbae, 0x40763c86, 0xc0160a09 ),
	NORM( 0x3f2a8e0b, 0xbd8cf097, 0xbf3e18af ),
	VERT( 0x40dc90ee, 0x40932e0f, 0xbfd14de9 ),
	NORM( 0x3f425adf, 0xbf2417ea, 0x3de73cf5 ),
	VERT( 0x40d42a33, 0x4088cae1, 0xbfe08bf0 ),
	NORM( 0x3f60574e, 0x3e8a9d72, 0xbecbfedc ),
	VERT( 0x3fea8e2c, 0xc06ce91a, 0xbfb83760 ),
	NORM( 0xbf030fe0, 0xbf406bcf, 0xbed4e962 ),
	VERT( 0x40d68ff4, 0x4064b06e, 0x3f80f2d4 ),
	NORM( 0xbd002940, 0x3efebf9a, 0x3f5deb05 ),
	VERT( 0x405e3c2a, 0xbf0eec89, 0xbff653aa ),
	NORM( 0x3e4a4971, 0xbe83d40b, 0xbf7224ea ),
	VERT( 0x3ff400eb, 0xc07700f4, 0xbdb9f3b1 ),
	NORM( 0xbee8f16c, 0xbf62fc59, 0x3da94c3d ),
	VERT( 0x4046fefe, 0xc02477f7, 0x400214a8 ),
	NORM( 0x3d6430f0, 0xbe9ee694, 0x3f72f0d7 ),
	VERT( 0x40dcaba1, 0x409438fb, 0xbe1d0865 ),
	NORM( 0xbc92f9cd, 0x3f7cdcec, 0x3e1ec162 ),
	VERT( 0x40d103e9, 0x40a08054, 0xc02d4f5d ),
	NORM( 0x3f0a5804, 0xbee58ff0, 0xbf36450f ),
	VERT( 0x40c8df72, 0x40952163, 0xc0360737 ),
	NORM( 0x3f1dcb39, 0xbe917b74, 0xbf3c013c ),
	VERT( 0x3fe99859, 0xc036dccf, 0xc0008738 ),
	NORM( 0xbecafc17, 0xbeb53479, 0xbf58db1b ),
	VERT( 0x40a8f54e, 0x4058d9f9, 0xc0383d44 ),
	NORM( 0x3ef36b72, 0xbccda42e, 0xbf612013 ),
	VERT( 0x3ffdc605, 0xc0645cc9, 0x3f78f44e ),
	NORM( 0xbeb100b6, 0xbf5652a7, 0x3ed8f8cb ),
	VERT( 0x3fef45fb, 0xc017bb5e, 0xc0089e1e ),
	NORM( 0xbe877615, 0xbe13620a, 0xbf741cd0 ),
	VERT( 0x404e06c2, 0xbfbae4bf, 0x4008fd7f ),
	NORM( 0x3df52cc3, 0xbdd4cacd, 0x3f7cc362 ),
	VERT( 0x40c70eaf, 0x408d6e29, 0x3e7abd22 ),
	NORM( 0xbc91a90e, 0x3f3258b8, 0x3f3798c6 ),
	VERT( 0x3ffb4f8c, 0xc0459675, 0x3fd107e7 ),
	NORM( 0xbe52ba88, 0xbf24c920, 0x3f3cb23b ),
	VERT( 0x3ff90e62, 0xbfd33a51, 0xc00a9841 ),
	NORM( 0xbe0f4ae8, 0xbe15299c, 0xbf7ab920 ),
	VERT( 0x40485783, 0x3f33ee24, 0xc03d32ff ),
	NORM( 0xbca7e98d, 0xbeaf8759, 0xbf706db3 ),
	VERT( 0x40bb3eb4, 0x40afb54e, 0xc04df7fd ),
	NORM( 0x3dd8cfcd, 0x3d3da2bf, 0xbf7e490a ),
	VERT( 0x40c2f730, 0x40bcd7f6, 0xc04a8eb4 ),
	NORM( 0x3dc74d65, 0x3e395f3b, 0xbf7a88e6 ),
	VERT( 0x40a1bd44, 0x4088448c, 0xc050ec9e ),
	NORM( 0x3dc4706b, 0xbcba5142, 0xbf7ec0cb ),
	VERT( 0x4090ad68, 0x405bc28b, 0xc052e7b1 ),
	NORM( 0x3d8f9aa8, 0x3d8dc1ef, 0xbf7ec11d ),
	VERT( 0x3ff70f39, 0xbf0e790c, 0xc0211c69 ),
	NORM( 0xbdaf9b8d, 0xbe75b483, 0xbf778cc6 ),
	VERT( 0x400013e8, 0xc00c466c, 0x4007481f ),
	NORM( 0xbd8b45f6, 0xbe9a3757, 0x3f737d5f ),
	VERT( 0x404f2eed, 0xbe0c2fca, 0x40113b24 ),
	NORM( 0x3de740ef, 0x3d3da336, 0x3f7e1620 ),
	VERT( 0x40c5f3d0, 0x40e113c5, 0xc02ee579 ),
	NORM( 0xbea40abb, 0x3f2d9885, 0xbf2954c9 ),
	VERT( 0x409d2555, 0x40849fb7, 0x3e539a41 ),
	NORM( 0xbdfc3320, 0x3f25e231, 0x3f406b17 ),
	VERT( 0x40a6c742, 0x409bac05, 0xbe17cd7d ),
	NORM( 0xbe316687, 0x3f042554, 0x3f56b96e ),
	VERT( 0x40baed7c, 0x40dd1b0c, 0xc02706e2 ),
	NORM( 0xbed5fce7, 0x3f43bd47, 0xbefb3136 ),
	VERT( 0x3f667483, 0xbfb1eac2, 0xc0018d52 ),
	NORM( 0xbe8b8def, 0xbe72e32a, 0xbf6eb46e ),
	VERT( 0x40b1a748, 0x40d67194, 0xc02c81aa ),
	NORM( 0xbec8bdc8, 0x3f3296d9, 0xbf198476 ),
	VERT( 0x3ffe5a23, 0xbf94cc67, 0x40102eec ),
	NORM( 0x3c5fc95f, 0xbddd1b29, 0x3f7e7ac9 ),
	VERT( 0x404ed0d8, 0x3f931ff2, 0x3ffa53a3 ),
	NORM( 0x3d9e9bcf, 0x3e9d0873, 0x3f72daa1 ),
	VERT( 0x40308f1d, 0x401f0afc, 0xc04d77d4 ),
	NORM( 0xbe158025, 0xbc81eacf, 0xbf7d3972 ),
	VERT( 0x3feff543, 0x3f74aaf7, 0xc02c52a5 ),
	NORM( 0xbe7ceb27, 0xbe1fa0e2, 0xbf74d66a ),
	VERT( 0x3f6ef330, 0xbee08597, 0xc00f2133 ),
	NORM( 0xbe824640, 0xbe3c087b, 0xbf731218 ),
	VERT( 0x404dbe50, 0x3fffb286, 0x3fcb8f8a ),
	NORM( 0x3d2517b4, 0x3ed5cfad, 0x3f68616b ),
	VERT( 0x40a39dfd, 0x40cf9c62, 0xbfd65952 ),
	NORM( 0xbea90cf8, 0x3f5cf64f, 0x3ec39fbf ),
	VERT( 0x3ffc87f3, 0x3e107a7c, 0x4015d669 ),
	NORM( 0x3c695aed, 0x3ddfd875, 0x3f7e70ab ),
	VERT( 0x4081e4c5, 0x40b9b5f9, 0xc02615c2 ),
	NORM( 0xbef939fa, 0x3f1e9152, 0xbf1daec4 ),
	VERT( 0x4048ac3d, 0x4040f4f8, 0x3f8a1ff6 ),
	NORM( 0x3c144531, 0x3f09b48b, 0x3f57cbc2 ),
	VERT( 0x3feb5dd6, 0x401f1433, 0xc03df0a6 ),
	NORM( 0xbe8bfe03, 0xbbe78536, 0xbf763cfc ),
	VERT( 0x3e8e4fb3, 0xbeef5515, 0xc004a16b ),
	NORM( 0xbddd570f, 0xbe3924b0, 0xbf7a4190 ),
	VERT( 0x3f77ec1d, 0xbf6f93c9, 0x40105e45 ),
	NORM( 0xbd49a1ea, 0xbdb7f490, 0x3f7ea74e ),
	VERT( 0x3f62159d, 0x3f58afb8, 0xc0193458 ),
	NORM( 0xbe93b935, 0xbe20af2f, 0xbf71cc86 ),
	VERT( 0x407e47df, 0x40b1d428, 0xbf5e50e4 ),
	NORM( 0xbdc5c97f, 0x3f21c607, 0x3f44dc4b ),
	VERT( 0x3ffa8628, 0x3fb0aa80, 0x40007c00 ),
	NORM( 0xb94907d5, 0x3eb678ac, 0x3f6f30bd ),
	VERT( 0x40757bcc, 0x40bcdcde, 0xbf989106 ),
	NORM( 0xbebd9d45, 0x3f5d170b, 0x3eaf1ed2 ),
	VERT( 0x402cc308, 0x4096b524, 0xc01d8286 ),
	NORM( 0xbef83aa1, 0x3f2e4a09, 0xbf0c8d4d ),
	VERT( 0x40110c0f, 0x40888785, 0xc02f8d17 ),
	NORM( 0xbe9d139d, 0x3f23c512, 0xbf34688a ),
	VERT( 0x3f74f525, 0x3e35dd43, 0x4011c2f6 ),
	NORM( 0xbdb39a8f, 0x3e0fed9e, 0x3f7c765e ),
	VERT( 0x3e7e9d65, 0x3f3cd947, 0xc00a34a7 ),
	NORM( 0xbe368c3e, 0xbe0c2ed1, 0xbf797312 ),
	VERT( 0x3ff8adee, 0x400b883d, 0x3fcf281c ),
	NORM( 0xbc93da47, 0x3ee5ec8d, 0x3f64b039 ),
	VERT( 0x3f59e299, 0x40091cfa, 0xc02a79b8 ),
	NORM( 0xbeab5888, 0xbcf92955, 0xbf711cf2 ),
	VERT( 0x3fe0de98, 0x4082aa18, 0xc02db274 ),
	NORM( 0xbec4d3b9, 0x3f25a24c, 0xbf289227 ),
	VERT( 0x402c3e4c, 0x40a3d632, 0xbf2cf7c3 ),
	NORM( 0xbedff558, 0x3f5bd16f, 0x3e88c5a2 ),
	VERT( 0x3ff5fa64, 0x40497afd, 0x3f8f6784 ),
	NORM( 0x3c9e222e, 0x3f12c225, 0x3f51b2df ),
	VERT( 0x3f6b4db4, 0x3fa2bc2c, 0x3ff8138f ),
	NORM( 0xbe02511e, 0x3ebe798c, 0x3f6b61a6 ),
	VERT( 0x40103f55, 0x4098ef37, 0xbe236157 ),
	NORM( 0xbed32f4b, 0x3f4b0c01, 0x3ee56b1c ),
	VERT( 0x3f674bf1, 0x3ff97e14, 0x3fcbb0e7 ),
	NORM( 0xbe0e66e6, 0x3eddf6de, 0x3f63edc7 ),
	VERT( 0x3ff1b835, 0x408d7904, 0xbdafcb5c ),
	NORM( 0xbebc08dc, 0x3f549ae7, 0x3ed66fe5 ),
	VERT( 0x3f45a483, 0x40616e3e, 0xc01c4310 ),
	NORM( 0xbf0c7055, 0x3f0be8e1, 0xbf21fb6d ),
	VERT( 0x3f7690c6, 0x40469502, 0x3f8ebbed ),
	NORM( 0xbe4f61d2, 0x3f132d9f, 0x3f4af1e1 ),
	VERT( 0x3f7b8085, 0x4084675a, 0xbcf3cc22 ),
	NORM( 0xbec1a6f6, 0x3f62ffd8, 0x3e881e05 ),
	CnkV_VN_NF(FV_CONT|FW_START, 778),
	OffnbIdx(2810, 111),
	VERT( 0x412954b7, 0xc0a0097c, 0xbf446d86 ),
	NORM( 0xbc1a4084, 0xbf4f9cc7, 0xbf15c1e1 ),
	NFlagsW( 0, 0.500384 ),
	VERT( 0x4129c2b9, 0xc0a61252, 0x3e2d7213 ),
	NORM( 0x3d94d563, 0xbf6be708, 0x3ec35847 ),
	NFlagsW( 1, 0.076782 ),
	VERT( 0x4128b997, 0xc0846e1f, 0xbf8eff68 ),
	NORM( 0x3d4b7190, 0x3b4744a0, 0xbf7faecd ),
	NFlagsW( 2, 0.139828 ),
	VERT( 0x41291efb, 0xc0914c51, 0x3f24ffc3 ),
	NORM( 0x3b1dbf27, 0xbe823ada, 0x3f77945f ),
	NFlagsW( 3, 0.024860 ),
	VERT( 0x412291d7, 0xc083ab0f, 0xbf9b039f ),
	NORM( 0x3e7fa4ec, 0x3c6fc993, 0xbf77dd93 ),
	NFlagsW( 4, 31.095991 ),
	VERT( 0x4128d7de, 0xc084afce, 0x3f19b88e ),
	NORM( 0x3cf1a7ee, 0x3c4b0bfc, 0x3f7fde6f ),
	NFlagsW( 5, 0.058505 ),
	VERT( 0x412a7f1b, 0xc053510c, 0xbf3e9e20 ),
	NORM( 0x3d9e11fe, 0x3f4c14d4, 0xbf194906 ),
	NFlagsW( 6, 0.114477 ),
	VERT( 0x4129b130, 0xc06e1080, 0x3f209218 ),
	NORM( 0x3debb03f, 0x3e88419b, 0x3f7500d4 ),
	NFlagsW( 7, 0.074201 ),
	VERT( 0x41201b47, 0xc095cb6c, 0x3f340fd7 ),
	NORM( 0x3e358a6f, 0xbeeac7e1, 0x3f5eecdd ),
	NFlagsW( 8, 11.427286 ),
	VERT( 0x412b45c6, 0xc0420723, 0x3e225483 ),
	NORM( 0x3e39ef70, 0x3f6ce506, 0x3eaa5dcb ),
	NFlagsW( 9, 0.125666 ),
	VERT( 0x41242eca, 0xc0526241, 0xbf653f76 ),
	NORM( 0x3e308d9c, 0x3f3e5323, 0xbf256bea ),
	NFlagsW( 10, 1.970374 ),
	VERT( 0x41194684, 0xc083d464, 0xbfaeed6d ),
	NORM( 0x3bed99e5, 0xbc0ba89e, 0xbf7ffbe4 ),
	NFlagsW( 11, 77.157631 ),
	VERT( 0x411f965e, 0xc083b7f8, 0x3f413c29 ),
	NORM( 0x3e892d47, 0xbc2ab842, 0x3f76a050 ),
	NFlagsW( 12, 2.078164 ),
	VERT( 0x4124a097, 0xc04453dc, 0x3dc10990 ),
	NORM( 0xbd32ec36, 0x3f7c6dd7, 0x3e247667 ),
	NFlagsW( 13, 1.428597 ),
	VERT( 0x4120f058, 0xc0622194, 0x3f34a8bb ),
	NORM( 0x3e31ad71, 0x3ee7de1a, 0x3f5fe149 ),
	NFlagsW( 14, 3.365221 ),
	VERT( 0x41168ec5, 0xc095bda4, 0x3f5cfff9 ),
	NORM( 0x3e13bfea, 0xbf043d0a, 0x3f5810f4 ),
	NFlagsW( 15, 54.881580 ),
	VERT( 0x411adea6, 0xc055156d, 0xbf832e4d ),
	NORM( 0x3e863124, 0x3f27a250, 0xbf35796e ),
	NFlagsW( 16, 17.573067 ),
	VERT( 0x4124b0c4, 0xc0159678, 0xbf5f6508 ),
	NORM( 0x3e8f2a22, 0xbf359215, 0xbf25a99b ),
	NFlagsW( 17, 4.343507 ),
	VERT( 0x4110a412, 0xc08295db, 0xbf9b78a5 ),
	NORM( 0x3e196c38, 0xbe149a68, 0xbf7a5e78 ),
	NFlagsW( 18, 64.717903 ),
	VERT( 0x41234b43, 0xc024d258, 0x3ede3532 ),
	NORM( 0x3e2c9f7a, 0xbf6c20bf, 0x3eb1f4fe ),
	NFlagsW( 19, 4.249012 ),
	VERT( 0x411585b6, 0xc08444c8, 0x3f78e1a7 ),
	NORM( 0x3e363874, 0xbc011228, 0x3f7be7f2 ),
	NFlagsW( 20, 22.305601 ),
	VERT( 0x4124c183, 0xbfc1e44a, 0xbf9d9244 ),
	NORM( 0xbd99b2a0, 0x3b8c4031, 0xbf7f4693 ),
	NFlagsW( 21, 3.882318 ),
	VERT( 0x411a49fe, 0xc044b265, 0x3db84842 ),
	NORM( 0x3de5d97d, 0x3f785ee6, 0x3e5be8c6 ),
	NFlagsW( 22, 28.847849 ),
	VERT( 0x411764bd, 0xc0646221, 0x3f5a8e5a ),
	NORM( 0x3e2cf74f, 0x3efbf86e, 0x3f5a9e3d ),
	NFlagsW( 23, 27.860075 ),
	VERT( 0x41149807, 0xc0420589, 0xbf7c442c ),
	NORM( 0x3f209515, 0x3d53095b, 0xbf46ef7a ),
	NFlagsW( 24, 45.796703 ),
	VERT( 0x411d18df, 0xbfe93277, 0xbf7d1a76 ),
	NORM( 0xbdf9a4ad, 0x3d8f8ad5, 0xbf7d74e6 ),
	NFlagsW( 25, 26.844984 ),
	VERT( 0x41274cfa, 0xbf2e7e85, 0xbf71219d ),
	NORM( 0x3e99db2b, 0x3f2544c2, 0xbf33bbef ),
	NFlagsW( 26, 1.908859 ),
	VERT( 0x41221592, 0xbff8b78a, 0x3f945539 ),
	NORM( 0x3e376569, 0xbed4ffa4, 0x3f643c74 ),
	NFlagsW( 27, 8.244308 ),
	VERT( 0x41296462, 0x3bb32ef4, 0xbf005797 ),
	NORM( 0x3ebde422, 0xbf4bcb98, 0xbef4db88 ),
	NFlagsW( 28, 0.535790 ),
	VERT( 0x4106aabb, 0xc0874c7b, 0x3f893adf ),
	NORM( 0xbd0ab042, 0xbd9db139, 0x3f7f17bd ),
	NFlagsW( 29, 95.457489 ),
	VERT( 0x4121e1fd, 0xbfb262e8, 0x3f9b1632 ),
	NORM( 0x3e2d3087, 0x3d3ffe6d, 0x3f7c06c5 ),
	NFlagsW( 30, 9.671973 ),
	VERT( 0x410e9362, 0xc03f44de, 0x3ec118bd ),
	NORM( 0x3f0c66c7, 0xbe04cb95, 0x3f537957 ),
	NFlagsW( 31, 60.726284 ),
	VERT( 0x4126ff0d, 0xbea92878, 0x3eaf77d5 ),
	NORM( 0x3d375170, 0x3f7dfd0c, 0x3def46a4 ),
	NFlagsW( 32, 1.759429 ),
	VERT( 0x41185947, 0xc0095196, 0x3f9f51d0 ),
	NORM( 0x3e3b35fb, 0xbeeb0567, 0x3f5e918d ),
	NFlagsW( 33, 46.872238 ),
	VERT( 0x412112e6, 0xbeb7c333, 0xbf78d6b4 ),
	NORM( 0x3f116c03, 0x3def6663, 0xbf508cb4 ),
	NFlagsW( 34, 12.485257 ),
	VERT( 0x4123c72c, 0xbf5e9980, 0x3f8ec0b4 ),
	NORM( 0x3e1b0a78, 0x3efbf5f5, 0x3f5b75b2 ),
	NFlagsW( 35, 6.648789 ),
	VERT( 0x41099dde, 0xc05fea86, 0x3f728e90 ),
	NORM( 0x3e16608c, 0x3ea3a1f1, 0x3f6fa499 ),
	NFlagsW( 36, 60.581844 ),
	VERT( 0x4128a836, 0xbe3cb753, 0x3f4ff3c8 ),
	NORM( 0x3d7b51e2, 0xbf748c94, 0x3e941f09 ),
	NFlagsW( 37, 0.762648 ),
	VERT( 0x4128032d, 0x3f53779f, 0xbf66a79c ),
	NORM( 0x3dfc430d, 0x3c028bab, 0xbf7e0ad7 ),
	NFlagsW( 38, 1.403024 ),
	VERT( 0x4118e3b6, 0xbfbe43d4, 0x3fa4a40d ),
	NORM( 0xbc2b3edd, 0x3d47101e, 0x3f7faef7 ),
	NFlagsW( 39, 43.103676 ),
	VERT( 0x410b681a, 0xbfd6c3e1, 0xbfbf1839 ),
	NORM( 0x3ea3440f, 0xbc88de1d, 0xbf729912 ),
	NFlagsW( 40, 83.552406 ),
	VERT( 0x40fd860a, 0xc069a80c, 0x3f5ddf21 ),
	NORM( 0xbe19a224, 0x3dae2ce1, 0x3f7c2a07 ),
	NFlagsW( 41, 89.750298 ),
	VERT( 0x4118d7ad, 0xbf58eb17, 0x3f98b8da ),
	NORM( 0x3df09b76, 0x3e334b57, 0x3f7a3e93 ),
	NFlagsW( 42, 47.209984 ),
	VERT( 0x41265709, 0x3ef9989c, 0x3fc0e0cb ),
	NORM( 0x3e00756a, 0xbeb7e958, 0x3f6cbf09 ),
	NFlagsW( 43, 2.821401 ),
	VERT( 0x411d61ab, 0xbe7654cd, 0x3f842d60 ),
	NORM( 0x3eda7873, 0xbeeb4f2f, 0x3f4766d4 ),
	NFlagsW( 44, 22.080999 ),
	VERT( 0x412913dd, 0x3fd73dfb, 0xbf27bdf1 ),
	NORM( 0x3ed32cc5, 0x3ef2926b, 0xbf4730d9 ),
	NFlagsW( 45, 0.937730 ),
	VERT( 0x4101b557, 0xc03c592c, 0x3f6f4335 ),
	NORM( 0x3caf542d, 0xbe506516, 0x3f7a952b ),
	NFlagsW( 46, 89.516273 ),
	VERT( 0x412532f6, 0x3f8589ff, 0x3fc46a28 ),
	NORM( 0x3e02d500, 0x3dc3317e, 0x3f7cba11 ),
	NFlagsW( 47, 3.178034 ),
	VERT( 0x4106edbc, 0xbfd7f305, 0x3f711304 ),
	NORM( 0xbd9bd48d, 0x3e656f8f, 0x3f78bad4 ),
	NFlagsW( 48, 74.470711 ),
	VERT( 0x411f47dd, 0x3fcdc073, 0xbf4a1684 ),
	NORM( 0x3e907a2b, 0xbe5fbf82, 0xbf6f2434 ),
	NFlagsW( 49, 20.688530 ),
	VERT( 0x41261ef8, 0x3fca5a52, 0x3fb4c399 ),
	NORM( 0x3e264e3a, 0x3f0445b0, 0x3f573371 ),
	NFlagsW( 50, 2.137095 ),
	VERT( 0x412820e4, 0x4006ace4, 0x3f1d508b ),
	NORM( 0x3e9f23e9, 0x3f6bb22a, 0x3e71ba1b ),
	NFlagsW( 51, 1.081096 ),
	VERT( 0x41215819, 0x4012a53d, 0xbf9ab130 ),
	NORM( 0x3f356ce9, 0xbe4fe211, 0xbf2cf938 ),
	NFlagsW( 52, 14.725823 ),
	VERT( 0x41094658, 0xbf8b1ccc, 0x3f8adee8 ),
	NORM( 0xbe0c9dd0, 0xbe0e1b99, 0x3f7b12df ),
	NFlagsW( 53, 74.548729 ),
	VERT( 0x4119022e, 0x3ed744dd, 0x3fcbc1c0 ),
	NORM( 0x3d08cef6, 0xbe9b0ac1, 0x3f73d4a3 ),
	NFlagsW( 54, 62.488152 ),
	VERT( 0x41244069, 0x40393c21, 0xbf9c3944 ),
	NORM( 0x3e9dd1da, 0xbf06d96a, 0xbf4acaf0 ),
	NFlagsW( 55, 2.611422 ),
	VERT( 0x4123774c, 0x402b6d7e, 0x3dbd8bc1 ),
	NORM( 0x3eda385f, 0xbf52f5cd, 0x3ebf1186 ),
	NFlagsW( 56, 3.030917 ),
	VERT( 0x4119326a, 0x3f8b0cc1, 0x3fcd0602 ),
	NORM( 0xbd1b86c4, 0x3db2c0a7, 0x3f7ed672 ),
	NFlagsW( 57, 47.073639 ),
	VERT( 0x410ca31c, 0x3f9dd7da, 0xbf967f67 ),
	NORM( 0x3ecedb6d, 0xbe639e23, 0xbf632840 ),
	NFlagsW( 58, 73.218155 ),
	VERT( 0x41229e38, 0x406cedc8, 0xbfcc82ab ),
	NORM( 0xbe2794c9, 0xbdc05220, 0xbf7b66da ),
	NFlagsW( 59, 4.636429 ),
	VERT( 0x4118d542, 0x3fe2db81, 0x3fbcc18a ),
	NORM( 0x3e25d8e2, 0x3ec5238d, 0x3f68989d ),
	NFlagsW( 60, 49.082970 ),
	VERT( 0x411b759c, 0x40209d3b, 0x3f463bac ),
	NORM( 0x3f0f53b6, 0x3f07f60c, 0x3f22d004 ),
	NFlagsW( 61, 19.478951 ),
	VERT( 0x41210d69, 0x40544311, 0x3f4da84f ),
	NORM( 0x3e26ecf2, 0xbec96d54, 0x3f67a09f ),
	NFlagsW( 62, 4.094932 ),
	VERT( 0x411b28e0, 0x40717108, 0xbfae67a7 ),
	NORM( 0x3cfa8a06, 0x3db709b0, 0xbf7edaf2 ),
	NFlagsW( 63, 8.401549 ),
	VERT( 0x41217ab5, 0x4091b66a, 0xbfa9b468 ),
	NORM( 0xbdfd926b, 0x3f257ce7, 0xbf40bb07 ),
	NFlagsW( 64, 4.591077 ),
	VERT( 0x410955cc, 0x3f85e9b4, 0x3f9f5c9c ),
	NORM( 0xbd4d0fbe, 0x3dd468e5, 0x3f7e4bed ),
	NFlagsW( 65, 76.271751 ),
	VERT( 0x411f967a, 0x4077fc5a, 0x3f578683 ),
	NORM( 0x3e08a628, 0x3daad69d, 0x3f7ccf5c ),
	NFlagsW( 66, 2.723950 ),
	VERT( 0x410ad45a, 0x3fd3ed07, 0x3fb5a7a9 ),
	NORM( 0xbe215bc9, 0xbd0c6e64, 0x3f7ca638 ),
	NFlagsW( 67, 84.744469 ),
	VERT( 0x4120860a, 0x408c9f1a, 0x3f3b6e6f ),
	NORM( 0x3dd53851, 0x3f03d801, 0x3f59d056 ),
	NFlagsW( 68, 0.701262 ),
	VERT( 0x41134940, 0x404a7228, 0x3f63c6be ),
	NORM( 0x3cf7d10a, 0xbe2a8e4f, 0x3f7c4e24 ),
	NFlagsW( 69, 48.021389 ),
	VERT( 0x41206579, 0x409dd6c4, 0xbd67707d ),
	NORM( 0x3c20ef0c, 0x3f7d648c, 0x3e116cd1 ),
	NFlagsW( 70, 0.378157 ),
	VERT( 0x4118afbd, 0x40935ecc, 0xbf8c92ae ),
	NORM( 0x3c8cea48, 0x3f4d72cf, 0xbf18ab03 ),
	NFlagsW( 71, 9.523878 ),
	VERT( 0x4112a9fd, 0x40744f91, 0x3f6a307a ),
	NORM( 0xbdc6a251, 0x3d5f5719, 0x3f7e6910 ),
	NFlagsW( 72, 38.567234 ),
	VERT( 0x4109268a, 0x404886bf, 0x3f49b5ed ),
	NORM( 0xbce2c751, 0x3ea6641b, 0x3f720025 ),
	NFlagsW( 73, 67.182243 ),
	VERT( 0x41146ec2, 0x409fd73b, 0x3dfefa33 ),
	NORM( 0x3d12df0a, 0x3f7b31c7, 0x3e4208a5 ),
	NFlagsW( 74, 14.619192 ),
	VERT( 0x41119d68, 0x408e9ff9, 0x3f4e2a36 ),
	NORM( 0xbd1c1b68, 0x3efb93bd, 0x3f5ec045 ),
	NFlagsW( 75, 26.730474 ),
	VERT( 0x41073407, 0x40674cbf, 0x3f10a708 ),
	NORM( 0xbd1a35a5, 0x3e33f926, 0x3f7bd4a8 ),
	NFlagsW( 76, 65.356331 ),
	VERT( 0x410cd570, 0x40b8ba86, 0xc01a609d ),
	NORM( 0x3f005773, 0xbf5d5bba, 0x3d00e9cc ),
	NFlagsW( 77, 0.291199 ),
	VERT( 0x4106e8e3, 0x40853c2f, 0x3f38a1f7 ),
	NORM( 0xbe62f005, 0x3e0d08c8, 0x3f7721b0 ),
	NFlagsW( 78, 59.574665 ),
	VERT( 0x41092a28, 0x40bfc6c0, 0xc050fd79 ),
	NORM( 0x3e236dff, 0xbf397332, 0xbf2baec9 ),
	NFlagsW( 79, 0.021948 ),
	VERT( 0x41087d99, 0x40b4ee3a, 0xc011fd17 ),
	NORM( 0x3f05297b, 0xbf58d26f, 0x3de126b9 ),
	NFlagsW( 80, 2.690506 ),
	VERT( 0x4104c133, 0x40afb4a7, 0xc00f476d ),
	NORM( 0x3eeeea33, 0xbf60df5f, 0x3dd36512 ),
	NFlagsW( 81, 11.382083 ),
	VERT( 0x4104c28a, 0x40bc67c8, 0xc049cf73 ),
	NORM( 0x3e7512ce, 0xbf32cf6a, 0xbf2ca72f ),
	NFlagsW( 82, 0.388517 ),
	VERT( 0x41075e80, 0x409d86b0, 0x3e89aa5a ),
	NORM( 0xbe0a4ef7, 0x3f69a2ec, 0x3ec5876f ),
	NFlagsW( 83, 92.412025 ),
	VERT( 0x4101042b, 0x40b6df35, 0xc048c1d4 ),
	NORM( 0x3e8b77a9, 0xbf2d112c, 0xbf2f4627 ),
	NFlagsW( 84, 3.276283 ),
	VERT( 0x410cf65d, 0x40cb5d62, 0xbfbf1e43 ),
	NORM( 0x3ef564b1, 0xbed04f9c, 0x3f4714ac ),
	NFlagsW( 85, 0.075500 ),
	VERT( 0x41085863, 0x40c78cd2, 0xbfb471e0 ),
	NORM( 0x3ed8c8c0, 0xbee14afe, 0x3f4ab9e9 ),
	NFlagsW( 86, 0.995534 ),
	VERT( 0x40f9adca, 0x40aa4ded, 0xc008ce7c ),
	NORM( 0x3ed5c8ce, 0xbf665666, 0x3e01e74c ),
	NFlagsW( 87, 37.870846 ),
	VERT( 0x40f20e35, 0x40afadb4, 0xc04201b4 ),
	NORM( 0x3dd5d61b, 0xbf3abce5, 0xbf2d0fe4 ),
	NFlagsW( 88, 28.025787 ),
	VERT( 0x41044ce1, 0x40c317bd, 0xbface125 ),
	NORM( 0x3ebfed2f, 0xbef9880e, 0x3f49e476 ),
	NFlagsW( 89, 5.869023 ),
	VERT( 0x40e4d4ab, 0x409dfc34, 0xbff197e6 ),
	NORM( 0x3f25d54a, 0xbf42a0af, 0xbd477705 ),
	NFlagsW( 90, 98.166809 ),
	VERT( 0x41064904, 0x40df2c8c, 0xbf984254 ),
	NORM( 0x3e3fd434, 0x3e758ec1, 0x3f73dc04 ),
	NFlagsW( 91, 0.021313 ),
	VERT( 0x40f804f5, 0x40c1c602, 0xbf97e7f1 ),
	NORM( 0x3ee74aed, 0xbeb592d9, 0x3f5191f8 ),
	NFlagsW( 92, 23.395067 ),
	VERT( 0x40db650d, 0x40a69d95, 0xc0314aad ),
	NORM( 0x3e276e7d, 0xbf30c4e1, 0xbf34610a ),
	NFlagsW( 93, 99.878593 ),
	VERT( 0x40eb7d69, 0x40cb037a, 0xc0573e64 ),
	NORM( 0xbea5fe2c, 0x3cb1ec9f, 0xbf721bda ),
	NFlagsW( 94, 2.115639 ),
	VERT( 0x41002c0d, 0x40dac53c, 0xbf9ac362 ),
	NORM( 0x3e27957d, 0x3e80ad38, 0x3f743736 ),
	NFlagsW( 95, 0.795360 ),
	VERT( 0x40dd9611, 0x40aab6be, 0xbf2fb290 ),
	NORM( 0x3f157523, 0xbe99e032, 0x3f4113e2 ),
	NFlagsW( 96, 69.934151 ),
	VERT( 0x40f96949, 0x40e92576, 0xbfcddfa7 ),
	NORM( 0xbc2e6819, 0x3f43e373, 0x3f24caa5 ),
	NFlagsW( 97, 0.030115 ),
	VERT( 0x40f0ad70, 0x40dbfe8a, 0xbf7fc40d ),
	NORM( 0x3e59dbde, 0x3ecda747, 0x3f6406e1 ),
	NFlagsW( 98, 6.292179 ),
	VERT( 0x40cf8ac9, 0x40be5bb3, 0xc042f297 ),
	NORM( 0xbc4b559f, 0xbbc5dc2d, 0xbf7ff9c0 ),
	NFlagsW( 99, 99.795456 ),
	VERT( 0x40d2c6a5, 0x40a6e462, 0xbf0919b2 ),
	NORM( 0x3e44e249, 0xbe251d5b, 0x3f77cf21 ),
	NFlagsW( 100, 72.705284 ),
	VERT( 0x40ca8721, 0x409e4897, 0xbf013970 ),
	NORM( 0x3f0c1328, 0x3f151e47, 0x3f19e10a ),
	NFlagsW( 101, 74.249031 ),
	VERT( 0x40ea1b4b, 0x40e7a602, 0xbfaeffda ),
	NORM( 0xbd155063, 0x3f46028a, 0x3f21fd9c ),
	NFlagsW( 102, 1.556573 ),
	VERT( 0x40e6fd03, 0x40f26074, 0xbfeb0958 ),
	NORM( 0xbe1d87c7, 0x3f74710b, 0x3e8220bf ),
	NFlagsW( 103, 0.036608 ),
	VERT( 0x40ce2da3, 0x40c6ec62, 0xbf2a2e96 ),
	NORM( 0xbe8d94b1, 0x3e92bb60, 0x3f6ad2da ),
	NFlagsW( 104, 62.322720 ),
	VERT( 0x40c61be7, 0x40d3a2ee, 0xbf97689e ),
	NORM( 0xbee7af7b, 0x3f0c88c7, 0x3f33e837 ),
	NFlagsW( 105, 50.301109 ),
	VERT( 0x40b9ee35, 0x40c3b79d, 0xbfa9e208 ),
	NORM( 0xbe8ecb1a, 0x3f073616, 0x3f4d51fd ),
	NFlagsW( 106, 68.308754 ),
	VERT( 0x40b0690e, 0x40b2b80c, 0xbf00c861 ),
	NORM( 0xbcc663b0, 0x3f2f1201, 0x3f3aad0f ),
	NFlagsW( 107, 73.458336 ),
	VERT( 0x40c20130, 0x40e2f0a7, 0xbfdc835a ),
	NORM( 0xbecd8893, 0x3f5d5eb3, 0x3e9a8930 ),
	NFlagsW( 108, 99.053642 ),
	VERT( 0x40b42bc2, 0x40d9043b, 0xbfd14d66 ),
	NORM( 0xbf0298ea, 0x3f34d89f, 0x3efb3270 ),
	NFlagsW( 109, 93.468193 ),
	VERT( 0x40a82653, 0x40bfd3e1, 0xbf87d464 ),
	NORM( 0xbd5eff46, 0x3f417755, 0x3f271214 ),
	NFlagsW( 110, 71.826897 ),
	CnkV_VN_NF(FV_CONT|FW_END, 491),
	OffnbIdx(0, 70),
	VERT( 0x3f7ab53d, 0xc041d4ba, 0xbfa20441 ),
	NORM( 0xbead6c40, 0xbf3f1f6c, 0xbf12978d ),
	NFlagsW( 2968, 78.818321 ),
	VERT( 0x3f7640ce, 0xc0563c71, 0xbe018d39 ),
	NORM( 0xbe927bfd, 0xbf7549cc, 0xbc126dff ),
	NFlagsW( 2969, 77.952400 ),
	VERT( 0x3f698dcf, 0xc0135b65, 0xbfd843d2 ),
	NORM( 0xbeb9045f, 0xbebd6407, 0xbf5b1d30 ),
	NFlagsW( 2970, 76.963989 ),
	VERT( 0x3f771bd5, 0xc0460f31, 0x3f52b1d5 ),
	NORM( 0xbe780eb5, 0xbf69951a, 0x3ea8df40 ),
	NFlagsW( 2971, 76.886284 ),
	VERT( 0x3eb46385, 0xc04506be, 0xbf993874 ),
	NORM( 0xbccd1db9, 0xbf489992, 0xbf1eeabb ),
	NFlagsW( 2972, 74.879059 ),
	VERT( 0x3f86a00a, 0xc032e247, 0x3fc4ca5a ),
	NORM( 0xbe52cb17, 0xbf34f7e3, 0x3f2d3b67 ),
	NFlagsW( 2973, 77.013031 ),
	VERT( 0x3eaa45dc, 0xc052df67, 0xbe06c81a ),
	NORM( 0xbc29abf0, 0xbf7ffc1b, 0x3b5c71fd ),
	NFlagsW( 2974, 74.068062 ),
	VERT( 0xb99b3860, 0xc0461c23, 0xbf96fd28 ),
	NORM( 0x3b6922b5, 0xbf44809a, 0xbf241446 ),
	NFlagsW( 2975, 72.013771 ),
	VERT( 0x3d3620c0, 0xc0539a10, 0xbe0428ac ),
	NORM( 0x3d22608d, 0xbf7fc3d4, 0x3c85096b ),
	NFlagsW( 2976, 71.858688 ),
	VERT( 0x3ea97cfe, 0xc04390b8, 0x3f5dd21e ),
	NORM( 0x3b4b58d5, 0xbf70f8f2, 0x3eacd4bb ),
	NFlagsW( 2977, 73.944427 ),
	VERT( 0x3e934dd6, 0xc00cb455, 0xbfc24b62 ),
	NORM( 0xbe0937d8, 0xbeb35508, 0xbf6d510e ),
	NFlagsW( 2978, 74.946281 ),
	VERT( 0xbe79c3e6, 0xc0545148, 0xbe01830f ),
	NORM( 0x3de6b1fb, 0xbf7e5ece, 0x3ac6c6ab ),
	NFlagsW( 2979, 68.535942 ),
	VERT( 0xbeb9e6e4, 0xc046a28a, 0xbf9447dc ),
	NORM( 0x3dc8b254, 0xbf48108a, 0xbf1dbc87 ),
	NFlagsW( 2980, 67.244049 ),
	VERT( 0x3db45318, 0xc0445235, 0x3f5e63d5 ),
	NORM( 0x3d45f4c8, 0xbf71301a, 0x3ea9d6c2 ),
	NFlagsW( 2981, 72.514091 ),
	VERT( 0x3ed44493, 0xc02e8557, 0x3fc96f88 ),
	NORM( 0xba96acf5, 0xbf377f8a, 0x3f32817b ),
	NFlagsW( 2982, 74.313446 ),
	VERT( 0xbd5fb8f0, 0xc00e3910, 0xbfc2f91c ),
	NORM( 0x3d186160, 0xbeb3e109, 0xbf6f7dd1 ),
	NFlagsW( 2983, 73.966148 ),
	VERT( 0x3f7e09fe, 0xbfe5299d, 0x4007a647 ),
	NORM( 0xbdc86b0e, 0xbea09aa0, 0x3f71c8f1 ),
	NFlagsW( 2984, 75.638580 ),
	VERT( 0x3e8cee4b, 0xbfac269f, 0xbfea6a95 ),
	NORM( 0xbe07dba2, 0xbe966d4a, 0xbf725546 ),
	NFlagsW( 2985, 75.021530 ),
	VERT( 0xbe1ea9af, 0xc0451386, 0x3f5eee19 ),
	NORM( 0x3dc15c1e, 0xbf6c491c, 0x3ebf01d1 ),
	NFlagsW( 2986, 70.332230 ),
	VERT( 0x3e2c1f5b, 0xc02e4190, 0x3fcb07b4 ),
	NORM( 0x3cdf9917, 0xbf37894b, 0x3f325479 ),
	NFlagsW( 2987, 73.180595 ),
	VERT( 0xbf44e505, 0xc05a6ff4, 0xbe05dedb ),
	NORM( 0x3e8ce8ee, 0xbf75f033, 0xbd14c412 ),
	NFlagsW( 2988, 58.680386 ),
	VERT( 0xbecb3831, 0xc00fbcb3, 0xbfc3a7ab ),
	NORM( 0x3e2ff7a1, 0xbeb299e6, 0xbf6bda14 ),
	NFlagsW( 2989, 71.377289 ),
	VERT( 0xbf7d13ac, 0xc053d8cd, 0xbf6bb3da ),
	NORM( 0x3e3f3df9, 0xbf62106e, 0xbedc68ef ),
	NFlagsW( 2990, 52.012520 ),
	VERT( 0xbda0ab86, 0xc02dfeb5, 0x3fcc9fcd ),
	NORM( 0xbd34f18b, 0xbf3d95d1, 0x3f2ba7c2 ),
	NFlagsW( 2991, 71.473183 ),
	VERT( 0xbd911d33, 0xbfad6d0e, 0xbfeb0e8a ),
	NORM( 0x3cc58fa6, 0xbe9bf48e, 0xbf73c1bb ),
	NFlagsW( 2992, 74.797890 ),
	VERT( 0xbf1e0527, 0xc04c7fe1, 0x3f5a2541 ),
	NORM( 0x3ea4698a, 0xbf6137af, 0x3eb3806e ),
	NFlagsW( 2993, 62.641197 ),
	VERT( 0x3ea100f2, 0xbfdfafbd, 0x40044504 ),
	NORM( 0x3c580f8b, 0xbeaa931d, 0x3f715a0b ),
	NFlagsW( 2994, 74.759735 ),
	VERT( 0xbed52c2a, 0xbfaebe4b, 0xbfebb6b3 ),
	NORM( 0x3e1f7a4e, 0xbe97e6cf, 0xbf713371 ),
	NFlagsW( 2995, 73.646294 ),
	VERT( 0xbd9f386f, 0xbef978bd, 0xc005487d ),
	NORM( 0x3d05bf42, 0xbe2b3b53, 0xbf7c41ca ),
	NFlagsW( 2996, 74.939819 ),
	VERT( 0x3d4ac6f6, 0xbfe0e9b0, 0x400594ce ),
	NORM( 0x3e215d48, 0xbebbceba, 0x3f6ab6c9 ),
	NFlagsW( 2997, 74.237099 ),
	VERT( 0xbf0a65b3, 0xc022ac9b, 0x3fda3c79 ),
	NORM( 0x3e48a496, 0xbf28d2b0, 0x3f39cac2 ),
	NFlagsW( 2998, 66.301949 ),
	VERT( 0xbedde691, 0xbf01ca7c, 0xc005ef63 ),
	NORM( 0x3dfc6991, 0xbe103ad3, 0xbf7b79f1 ),
	NFlagsW( 2999, 74.124252 ),
	VERT( 0x3e93acc6, 0xbf6e94b9, 0x400dc36d ),
	NORM( 0x3db9633a, 0xbdb57133, 0x3f7df02b ),
	NFlagsW( 3000, 74.971619 ),
	VERT( 0xbfd463a2, 0xc0257800, 0xbfeb582d ),
	NORM( 0x3e60ac5f, 0xbeffbc8d, 0xbf568c45 ),
	NFlagsW( 3001, 23.295277 ),
	VERT( 0xba0eb706, 0xbf704fb2, 0x40123fd5 ),
	NORM( 0x3ea9724a, 0xbdd260c7, 0x3f702369 ),
	NFlagsW( 3002, 74.710625 ),
	VERT( 0xbdd2e9d9, 0x3f338b48, 0xc008f248 ),
	NORM( 0xbd53e6c2, 0xbdddcc3e, 0xbf7e2640 ),
	NFlagsW( 3003, 74.985001 ),
	VERT( 0x3e99df4d, 0x3dce806d, 0x400df32b ),
	NORM( 0x3dac8ff0, 0x3e11cde7, 0x3f7c78ca ),
	NFlagsW( 3004, 74.999664 ),
	VERT( 0xbf3057b6, 0xbfc76003, 0x40167deb ),
	NORM( 0x3ea45f19, 0xbecb79d4, 0x3f5c11f7 ),
	NFlagsW( 3005, 65.301224 ),
	VERT( 0x3e615fa8, 0x3feb1894, 0xc0198079 ),
	NORM( 0xbe834ca1, 0xbd487918, 0xbf771f25 ),
	NFlagsW( 3006, 77.233223 ),
	VERT( 0xbee913a8, 0x3f2a52b4, 0xc007ae99 ),
	NORM( 0x3ddb31dc, 0xbdbc99b1, 0xbf7d6f74 ),
	NFlagsW( 3007, 74.541298 ),
	VERT( 0xbb814ff2, 0x3de84a1e, 0x40133f7c ),
	NORM( 0x3eb359eb, 0x3e0c6c63, 0x3f6d3220 ),
	NFlagsW( 3008, 74.910896 ),
	VERT( 0xc01d192b, 0xc07071dc, 0x3fe0e731 ),
	NORM( 0x3ecc0f09, 0xbf49f681, 0x3eef7967 ),
	NFlagsW( 3009, 0.032378 ),
	VERT( 0xbfed1d1a, 0xbf918734, 0xc0152284 ),
	NORM( 0x3e639de6, 0xbe470301, 0xbf749623 ),
	NFlagsW( 3010, 6.766430 ),
	VERT( 0xbe055779, 0x3fea4d28, 0xc015ef77 ),
	NORM( 0xbe27e1de, 0x3b665c1b, 0xbf7c88d2 ),
	NFlagsW( 3011, 75.763176 ),
	VERT( 0x3e8ac086, 0x3f8f3f63, 0x3ff28645 ),
	NORM( 0x3d78f7a7, 0x3ec1cdd5, 0x3f6c70a2 ),
	NFlagsW( 3012, 75.000511 ),
	VERT( 0xbf5001f8, 0xbf38696c, 0x402d6602 ),
	NORM( 0x3edcabca, 0xbdd98bba, 0x3f656568 ),
	NFlagsW( 3013, 59.406918 ),
	VERT( 0xbef60908, 0x3fe9807b, 0xc0125d1e ),
	NORM( 0xbcd16cc1, 0x3d7ff04b, 0xbf7f6a77 ),
	NFlagsW( 3014, 74.006584 ),
	VERT( 0x3e8306b6, 0x3fd95a5e, 0x3fcd2649 ),
	NORM( 0x3d1eca0e, 0x3ee8e216, 0x3f63c4f0 ),
	NFlagsW( 3015, 75.013771 ),
	VERT( 0xbd44ba57, 0x3f8c0cb0, 0x3fffe9c6 ),
	NORM( 0x3eb9a2cd, 0x3eb54baf, 0x3f5cb078 ),
	NFlagsW( 3016, 74.983528 ),
	VERT( 0x3e4425f3, 0x40489abf, 0xc00b08d2 ),
	NORM( 0xbef26920, 0x3f155068, 0xbf28f818 ),
	NFlagsW( 3017, 83.327728 ),
	VERT( 0xbffb6a66, 0x3e06bb64, 0xc0201e91 ),
	NORM( 0x3e228872, 0xbc686274, 0xbf7cba84 ),
	NFlagsW( 3018, 6.415322 ),
	VERT( 0xbd87f453, 0x3fe0dd0b, 0x3fd4c36a ),
	NORM( 0x3eb80d68, 0x3ee09c97, 0x3f52d7ae ),
	NFlagsW( 3019, 74.976959 ),
	VERT( 0xbe3751e3, 0x4042f290, 0xc0067f5e ),
	NORM( 0xbe93ef7c, 0x3f24f808, 0xbf353eec ),
	NFlagsW( 3020, 79.142693 ),
	VERT( 0x3e9ac847, 0x402d2fea, 0x3f8e3122 ),
	NORM( 0xbdfcef18, 0x3f108b5a, 0x3f50e8e7 ),
	NFlagsW( 3021, 75.869682 ),
	VERT( 0xbf60e1e3, 0x3e868c27, 0x402ce6ff ),
	NORM( 0x3edc9de9, 0x3e1bf61b, 0x3f63b37b ),
	NFlagsW( 3022, 63.880272 ),
	VERT( 0xbf0cd7ed, 0x403d50c4, 0xc001f489 ),
	NORM( 0xbe3dbd76, 0x3f2653db, 0xbf3cbc41 ),
	NFlagsW( 3023, 74.883049 ),
	VERT( 0x3ea71b6e, 0x40722fad, 0x3a7236fd ),
	NORM( 0xbeb98d65, 0x3f662eca, 0x3e7b384c ),
	NFlagsW( 3024, 82.249359 ),
	VERT( 0xbd23ade4, 0x402fb23e, 0x3f8e29a5 ),
	NORM( 0x3e3c68c1, 0x3f2d5b78, 0x3f3662c8 ),
	NFlagsW( 3025, 75.334938 ),
	VERT( 0xbf83d3f2, 0x3f90fb96, 0x40213648 ),
	NORM( 0x3ed630f8, 0x3ea4d803, 0x3f596c82 ),
	NFlagsW( 3026, 65.733673 ),
	VERT( 0xbe14f94a, 0x4069d849, 0x3d1d904e ),
	NORM( 0xbe46d83e, 0x3f7115e9, 0x3e8c9b30 ),
	NFlagsW( 3027, 77.973541 ),
	VERT( 0xbff78813, 0x3fe4c437, 0xc0163af7 ),
	NORM( 0xbd2f4f68, 0x3e9dd9a2, 0xbf734887 ),
	NFlagsW( 3028, 45.771603 ),
	VERT( 0xbfa3c67a, 0x404a6fd7, 0xbfc82fa2 ),
	NORM( 0xbddc273f, 0x3f55e42c, 0xbf09f244 ),
	NFlagsW( 3029, 63.982018 ),
	VERT( 0xbf96cd1e, 0x400bf860, 0x40065455 ),
	NORM( 0x3ec5b73f, 0x3f01d7aa, 0x3f453db8 ),
	NFlagsW( 3030, 64.618195 ),
	VERT( 0xbf84d5bd, 0x4064475f, 0xbe3bb98c ),
	NORM( 0x3c3dab10, 0x3f7ff04f, 0x3c9812e2 ),
	NFlagsW( 3031, 68.313286 ),
	VERT( 0xbfa27eee, 0x404704b3, 0x3fa3c13e ),
	NORM( 0x3e92872c, 0x3f506c3d, 0x3f015683 ),
	NFlagsW( 3032, 63.222439 ),
	VERT( 0xc02f3c61, 0x3f96ad75, 0x4050ea33 ),
	NORM( 0x3ecf458c, 0x3ea4a519, 0x3f5b21aa ),
	NFlagsW( 3033, 0.801070 ),
	VERT( 0xc03e65b3, 0x4012b7d2, 0x4039d8c2 ),
	NORM( 0x3eb65aa7, 0x3f06cf56, 0x3f459bb5 ),
	NFlagsW( 3034, 7.652910 ),
	VERT( 0xc077c987, 0x4046b521, 0xbf9a89bc ),
	NORM( 0xbe17befb, 0x3f51a551, 0xbf0def49 ),
	NFlagsW( 3035, 1.835909 ),
	VERT( 0xc0448e07, 0x40514fad, 0x40000bf7 ),
	NORM( 0x3e3c2150, 0x3f5e0b48, 0x3eecd0b1 ),
	NFlagsW( 3036, 21.819521 ),
	VERT( 0xc062f627, 0x40673a1b, 0x3ea7728c ),
	NORM( 0xbd62202e, 0x3f7f1622, 0xbd82c22a ),
	NFlagsW( 3037, 14.800225 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Hand[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Hand,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Hand[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Hand,
OPosition  ( 18.810848F, -0.000006F,  0.000001F ),
OAngle     ( 81.954378F,  6.500033F, -14.000034F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Finger0,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Forearm[]
START
	CnkV_VN(FV_CONT, 253),
	OffnbIdx(396, 42),
	VERT( 0x4177337d, 0xbdd95e23, 0xc071525d ),
	NORM( 0x3e283a9c, 0xbdfb5fad, 0xbf7a8f1f ),
	VERT( 0x41771b1f, 0x3f825b72, 0xc067d6b2 ),
	NORM( 0x3e2557a1, 0x3e99bb24, 0xbf70a9ed ),
	VERT( 0x417403ec, 0x40194a59, 0xc03f1810 ),
	NORM( 0x3e57cd30, 0x3f22d5d0, 0xbf3e06c3 ),
	VERT( 0x41770104, 0xc00e5fad, 0xc0046de0 ),
	NORM( 0x3e148d78, 0xbf5ff9e0, 0xbeec922a ),
	VERT( 0x417992ec, 0xc02c34b9, 0xbf71fb9d ),
	NORM( 0x3e397380, 0xbf708762, 0xbe94c276 ),
	VERT( 0x417519b9, 0x4053222e, 0xbfce4186 ),
	NORM( 0x3e848047, 0x3f631153, 0xbec3d3e3 ),
	VERT( 0x41778dea, 0xc03745bf, 0xbd9995b0 ),
	NORM( 0x3e619da4, 0xbf797b13, 0xbd2ac739 ),
	VERT( 0x4177faf7, 0x40689283, 0x3c279973 ),
	NORM( 0x3e7c4fcf, 0x3f77bb45, 0xbd5a5ae9 ),
	VERT( 0x417923fd, 0xc0302585, 0x3f6f7ffb ),
	NORM( 0x3e7788db, 0xbf71e0a5, 0x3e625538 ),
	VERT( 0x412e5f86, 0xbe946768, 0xc08e81d7 ),
	NORM( 0x3e065215, 0xbda178bd, 0xbf7cfbef ),
	VERT( 0x4130310c, 0xbff05081, 0xc06fee4b ),
	NORM( 0x3df50f08, 0xbf237a6f, 0xbf429bcc ),
	VERT( 0x417c1fbe, 0x40595e29, 0x3fe707f1 ),
	NORM( 0x3e3842c4, 0x3f6e148b, 0x3ea41845 ),
	VERT( 0x412e5bdd, 0x3f9031be, 0xc082bb79 ),
	NORM( 0x3dfceeb0, 0x3ea35097, 0xbf708f01 ),
	VERT( 0x4130aa74, 0x4036c5ee, 0xc0534c52 ),
	NORM( 0x3e1932b7, 0x3f15f8ff, 0xbf4be7bc ),
	VERT( 0x4131a689, 0xc02c05d5, 0xc022fbac ),
	NORM( 0x3e1fff39, 0xbf4d0213, 0xbf140339 ),
	VERT( 0x41308f38, 0xc06932ab, 0xbfa2cc96 ),
	NORM( 0x3e538789, 0xbf60fcc0, 0xbedc2ee0 ),
	VERT( 0x4131ec0d, 0x4080b161, 0xbff66972 ),
	NORM( 0x3e271c11, 0x3f64c654, 0xbed608ff ),
	VERT( 0x4131cab2, 0xc08086f8, 0x3db15a5d ),
	NORM( 0x3e5e7f6f, 0xbf792083, 0xbd9b768d ),
	VERT( 0x41358356, 0x408adee5, 0xbe034e4c ),
	NORM( 0x3e309fdd, 0x3f7c283e, 0xbbdcb13b ),
	VERT( 0x40d7f401, 0xbea761f1, 0xc09dd19f ),
	NORM( 0x3d131a14, 0xbda9555a, 0xbf7ef52c ),
	VERT( 0x413322bb, 0xc077569c, 0x3fa117a8 ),
	NORM( 0x3e6ad21a, 0xbf724746, 0x3e68ec8a ),
	VERT( 0x40dd4dbb, 0x3faf7911, 0xc09289fb ),
	NORM( 0x3d89f928, 0x3e723f85, 0xbf782275 ),
	VERT( 0x40d7106e, 0xbfdf5152, 0xc08cebf5 ),
	NORM( 0x3ccbbdfb, 0xbf000cde, 0xbf5d94fe ),
	VERT( 0x40e7acc2, 0x403c1e0f, 0xc0847aa8 ),
	NORM( 0x3dd49a98, 0x3efd307b, 0xbf5cea49 ),
	VERT( 0x40db4ae5, 0xc03c4325, 0xc05e9cee ),
	NORM( 0x3d614c13, 0xbf31c6ed, 0xbf37aa5f ),
	VERT( 0x4138d71e, 0x407a5b15, 0x3fdbb947 ),
	NORM( 0x3e1eaf6e, 0x3f636fd6, 0x3edd387b ),
	VERT( 0x41332236, 0xc05e5012, 0x401134de ),
	NORM( 0x3e637402, 0xbf5e8fe3, 0x3ee1ff48 ),
	VERT( 0x40f40fe7, 0x408cddd6, 0xc01ff4c7 ),
	NORM( 0x3e009806, 0x3f5d2d2b, 0xbef9aad1 ),
	VERT( 0x40e4cfb3, 0xc089954d, 0xbfdedae1 ),
	NORM( 0x3d80e2f8, 0xbf6453ac, 0xbee549c9 ),
	VERT( 0x4139d320, 0x4026846a, 0x404e7814 ),
	NORM( 0x3db9b654, 0x3f1bf09d, 0x3f49b143 ),
	VERT( 0x413692a5, 0xc02484ab, 0x40642270 ),
	NORM( 0x3e3f5e73, 0xbf27e92e, 0x3f3b397e ),
	VERT( 0x413ad240, 0xbf83c4cc, 0x408880c3 ),
	NORM( 0x3e007e68, 0xbe3a8371, 0x3f79a8d4 ),
	VERT( 0x4138a7ff, 0x3f61909a, 0x40821f77 ),
	NORM( 0x3d9a5eee, 0x3e907e6d, 0x3f74d5ad ),
	VERT( 0x41006fbd, 0x409b5397, 0xbf16a3d6 ),
	NORM( 0x3ded3a90, 0x3f7d8104, 0xbd9e7853 ),
	VERT( 0x40f04a93, 0xc0961f1e, 0xbe1bf5bb ),
	NORM( 0x3dbb485e, 0xbf7c724e, 0xbe0de9a8 ),
	VERT( 0x40f52f07, 0xc0962286, 0x3f9ecf47 ),
	NORM( 0x3df27ba7, 0xbf796877, 0x3e447bff ),
	VERT( 0x410761ce, 0x40954114, 0x3fb0275e ),
	NORM( 0x3db70e07, 0x3f70ca25, 0x3ea7b91d ),
	VERT( 0x410129bb, 0xc07e99e4, 0x402b1e0f ),
	NORM( 0x3e0f2ea7, 0xbf5b8f95, 0x3efd5be2 ),
	VERT( 0x41083b0b, 0xc03d69dd, 0x407c265a ),
	NORM( 0x3e186d2f, 0xbf20184c, 0x3f441879 ),
	VERT( 0x41084541, 0x4056362f, 0x404fa9d9 ),
	NORM( 0x3dd84648, 0x3f2929c0, 0x3f3e3be8 ),
	VERT( 0x410c2076, 0x3f9a7f1c, 0x40893389 ),
	NORM( 0x3debb69c, 0x3eae8bd9, 0x3f6edaa1 ),
	VERT( 0x410a9243, 0xbf75b972, 0x4099ea2f ),
	NORM( 0x3e0dc352, 0xbdc8ec72, 0x3f7c49b0 ),
	CnkV_VN_NF(FV_CONT|FW_START, 491),
	OffnbIdx(2968, 70),
	VERT( 0x419cdaaf, 0x3f28061c, 0xc0510cba ),
	NORM( 0xbe9bfbb3, 0x3f0d7828, 0xbf469827 ),
	NFlagsW( 0, 21.181683 ),
	VERT( 0x419a502e, 0xbef22ea3, 0xc05adbdd ),
	NORM( 0xbed228dd, 0xbcdb2141, 0xbf6956e9 ),
	NFlagsW( 1, 22.047598 ),
	VERT( 0x419ded0e, 0x3f9480a8, 0xc0269d91 ),
	NORM( 0xbe564883, 0x3f5f4bde, 0xbee25140 ),
	NFlagsW( 2, 23.036005 ),
	VERT( 0x4198ecad, 0xbfae5e34, 0xc0428481 ),
	NORM( 0xbee00db6, 0xbeb7da4f, 0xbf5308ce ),
	NFlagsW( 3, 23.113718 ),
	VERT( 0x4197d698, 0x3f3c3f74, 0xc04f09fd ),
	NORM( 0x3b55c223, 0x3f05069a, 0xbf5ab8e5 ),
	NFlagsW( 4, 25.120937 ),
	VERT( 0x4198a6fb, 0xc002884b, 0xc029ebe3 ),
	NORM( 0xbee6e4d6, 0xbf2e190b, 0xbf13fac0 ),
	NFlagsW( 5, 22.986973 ),
	VERT( 0x41958744, 0xbe9f47ea, 0xc053091e ),
	NORM( 0xbe1d0790, 0xbde02025, 0xbf7b6a79 ),
	NFlagsW( 6, 25.931931 ),
	VERT( 0x41951171, 0x3f4d2b6d, 0xc04d6527 ),
	NORM( 0x3d1a2511, 0x3f08b0e1, 0xbf583cdc ),
	NFlagsW( 7, 27.986225 ),
	VERT( 0x419349f1, 0xbe7b72b2, 0xc051a492 ),
	NORM( 0xbddd00a0, 0xbe08fde8, 0xbf7c30b2 ),
	NFlagsW( 8, 28.141308 ),
	VERT( 0x4193ffe0, 0xbf9fada4, 0xc03b1505 ),
	NORM( 0xbe53e498, 0xbedb78df, 0xbf6123b9 ),
	NFlagsW( 9, 26.055578 ),
	VERT( 0x4198eb60, 0x3f93f95b, 0xc01a048a ),
	NORM( 0x3cead8b1, 0x3f636916, 0xbeeaa989 ),
	NFlagsW( 10, 25.053724 ),
	VERT( 0x41910c1f, 0xbe384419, 0xc0503c13 ),
	NORM( 0xbd090991, 0xbe0bcfa7, 0xbf7d753b ),
	NFlagsW( 11, 31.464062 ),
	VERT( 0x41923909, 0x3f5e0a80, 0xc04b1849 ),
	NORM( 0x3df817c6, 0x3ef8bfb9, 0xbf5d98d9 ),
	NFlagsW( 12, 32.755955 ),
	VERT( 0x41921ba9, 0xbf98a429, 0xc03a0ba4 ),
	NORM( 0xbe2606f5, 0xbede32e5, 0xbf62dec6 ),
	NFlagsW( 13, 27.485907 ),
	VERT( 0x4193c033, 0xbff4fe3f, 0xc020b095 ),
	NORM( 0xbe84f056, 0xbf400e52, 0xbf1baad6 ),
	NFlagsW( 14, 25.686544 ),
	VERT( 0x41964300, 0x3f9ed4af, 0xc0191421 ),
	NORM( 0x3e482981, 0x3f5af196, 0xbef5ba6b ),
	NFlagsW( 15, 26.033848 ),
	VERT( 0x41984be4, 0xc01e906a, 0xbfca198a ),
	NORM( 0xbeb39c16, 0xbf6bed2e, 0xbe2a2a4e ),
	NFlagsW( 16, 24.361416 ),
	VERT( 0x419a5c05, 0x3fc6eec3, 0xbfcdf288 ),
	NORM( 0x3d2da405, 0x3f69bd05, 0xbecfb29c ),
	NFlagsW( 17, 24.978477 ),
	VERT( 0x4190377c, 0xbf9196f6, 0xc0390254 ),
	NORM( 0xbdfe73cf, 0xbef7391e, 0xbf5de93b ),
	NFlagsW( 18, 29.667768 ),
	VERT( 0x4191d502, 0xbfeee3b9, 0xc01e8857 ),
	NORM( 0xbe6da964, 0xbf41a40a, 0xbf1c8db8 ),
	NFlagsW( 19, 26.819399 ),
	VERT( 0x418ce52e, 0xbd75b9cf, 0xc0527cee ),
	NORM( 0x3e0bb99e, 0xbe0ac9ab, 0xbf7b3889 ),
	NFlagsW( 20, 41.319618 ),
	VERT( 0x41939ab7, 0x3fa9b0d2, 0xc01822c2 ),
	NORM( 0x3ea51709, 0x3f4f37ac, 0xbefb433b ),
	NFlagsW( 21, 28.622705 ),
	VERT( 0x418cbca1, 0x3f441541, 0xc05171f8 ),
	NORM( 0x3e1a3897, 0x3e8c7a49, 0xbf732346 ),
	NFlagsW( 22, 47.987469 ),
	VERT( 0x418fe9b7, 0xbfe8c8fe, 0xc01c60ed ),
	NORM( 0xbe98d763, 0xbf37764e, 0xbf215c87 ),
	NFlagsW( 23, 28.526810 ),
	VERT( 0x4197b00c, 0x3fd20f89, 0xbfca4695 ),
	NORM( 0x3e45e471, 0x3f6129c9, 0xbede9ebb ),
	NFlagsW( 24, 25.202106 ),
	VERT( 0x418c8d61, 0xbf82abe9, 0xc03d20fb ),
	NORM( 0x3dd81825, 0xbf02cf45, 0xbf5a646c ),
	NFlagsW( 25, 37.358803 ),
	VERT( 0x4193363b, 0xc0109402, 0xbfbbd478 ),
	NORM( 0xbe7c0c95, 0xbf72e238, 0xbe4ae5a7 ),
	NFlagsW( 26, 25.240267 ),
	VERT( 0x41950541, 0x3fdd2e55, 0xbfc6a823 ),
	NORM( 0x3ea358fc, 0x3f56d1a3, 0xbee18cd6 ),
	NFlagsW( 27, 26.353704 ),
	VERT( 0x419910e3, 0x3ffcbc91, 0xbf42996b ),
	NORM( 0x3e6a015b, 0x3f6ca8d9, 0xbe9c4793 ),
	NFlagsW( 28, 25.060183 ),
	VERT( 0x41911ee7, 0xc00dd586, 0xbfb8d51a ),
	NORM( 0xbdd8eee1, 0xbf764d83, 0xbe809e0d ),
	NFlagsW( 29, 25.762897 ),
	VERT( 0x418c5c12, 0xbfe53c1a, 0xc00cf251 ),
	NORM( 0xbd8af210, 0xbf519de8, 0xbf11edaf ),
	NFlagsW( 30, 33.698055 ),
	VERT( 0x41965198, 0x400454be, 0xbf3da0d1 ),
	NORM( 0x3ea34bb4, 0x3f6710c9, 0xbe9407ff ),
	NFlagsW( 31, 25.875742 ),
	VERT( 0x4193acf4, 0xc013a972, 0xbf243779 ),
	NORM( 0xbe174673, 0xbf7cfa74, 0x3d2608fc ),
	NFlagsW( 32, 25.028378 ),
	VERT( 0x418a0976, 0x3ff21709, 0xc02720fd ),
	NORM( 0x3ea803ef, 0x3f338cac, 0xbf21fd5f ),
	NFlagsW( 33, 76.704727 ),
	VERT( 0x41915042, 0xc0139731, 0xbf1b0c9b ),
	NORM( 0x3dc0c56b, 0xbf7edae1, 0xbc0457e1 ),
	NFlagsW( 34, 25.289371 ),
	VERT( 0x419a5481, 0x400a8ed5, 0x3ecee29c ),
	NORM( 0x3e210022, 0x3f755125, 0xbe747986 ),
	NFlagsW( 35, 25.014994 ),
	VERT( 0x4194f12d, 0xc00cd80c, 0x3ebf4a0b ),
	NORM( 0xbdf4d198, 0xbf74c074, 0x3e890e31 ),
	NFlagsW( 36, 25.000340 ),
	VERT( 0x418b2e17, 0xc0116648, 0xbf904e7f ),
	NORM( 0x3d763af4, 0xbf731655, 0xbe9d941c ),
	NFlagsW( 37, 34.698769 ),
	VERT( 0x419e94c2, 0x401d744f, 0x3fb9676b ),
	NORM( 0xbd1ae2f7, 0x3f7cc94c, 0xbe1d0a34 ),
	NFlagsW( 38, 22.766771 ),
	VERT( 0x41978972, 0x400e81ab, 0x3ed2909a ),
	NORM( 0x3e9fba84, 0x3f6b4f58, 0xbe7626d3 ),
	NFlagsW( 39, 25.458702 ),
	VERT( 0x419275b1, 0xc00d2ecf, 0x3edd2c6a ),
	NORM( 0x3e19269e, 0xbf76888a, 0x3e657b13 ),
	NFlagsW( 40, 25.089090 ),
	VERT( 0x41783c4c, 0xbfc1ae6c, 0xc04b202c ),
	NORM( 0x3e2ade5e, 0xbf21f89c, 0xbf4196b4 ),
	NFlagsW( 41, 99.967621 ),
	VERT( 0x418b14de, 0x402470c1, 0xbf9dce1b ),
	NORM( 0x3ecd2ee1, 0x3f58d658, 0xbeb2cd53 ),
	NFlagsW( 42, 93.233574 ),
	VERT( 0x419bc5b7, 0x401f5c2a, 0x3fbeb0ae ),
	NORM( 0x3d8235d6, 0x3f7dc67b, 0xbdebda1c ),
	NFlagsW( 43, 24.236834 ),
	VERT( 0x419674b3, 0xbfe2b402, 0x3faab9a5 ),
	NORM( 0xbdc17255, 0xbf5d45e1, 0x3efce648 ),
	NFlagsW( 44, 24.999495 ),
	VERT( 0x418a8a1c, 0xc01fc499, 0xbe75b0be ),
	NORM( 0x3e4c4610, 0xbf7abf3e, 0xbceaf63c ),
	NFlagsW( 45, 40.593086 ),
	VERT( 0x4198f699, 0x402142b5, 0x3fc3f920 ),
	NORM( 0x3e54e97f, 0x3f79ae21, 0xbd9853cd ),
	NFlagsW( 46, 25.993412 ),
	VERT( 0x4197860f, 0xbfb6222f, 0x3feea692 ),
	NORM( 0xbdc71260, 0xbf516e54, 0x3f111adb ),
	NFlagsW( 47, 24.986227 ),
	VERT( 0x4193c77e, 0xbfe6264c, 0x3fae1047 ),
	NORM( 0x3e53c142, 0xbf615487, 0x3edab8b8 ),
	NFlagsW( 48, 25.016472 ),
	VERT( 0x419f6faf, 0x4018f735, 0x4030a184 ),
	NORM( 0xbe66b4af, 0x3f5058a3, 0x3f091e21 ),
	NFlagsW( 49, 16.672276 ),
	VERT( 0x418bf993, 0x4039941c, 0x3b7e5bd6 ),
	NORM( 0x3ebe9df6, 0x3f699d67, 0xbe2d4495 ),
	NFlagsW( 50, 93.584679 ),
	VERT( 0x4194ff8e, 0xbfb2becc, 0x3ffbc4ac ),
	NORM( 0x3e65e2ec, 0xbf5549b2, 0x3f016359 ),
	NFlagsW( 51, 25.023043 ),
	VERT( 0x419c59aa, 0x4019ace2, 0x402e61a2 ),
	NORM( 0xbce4dcc9, 0x3f5288ff, 0x3f1176cb ),
	NFlagsW( 52, 20.857304 ),
	VERT( 0x4199e9e5, 0xbf599f00, 0x403213a5 ),
	NORM( 0xbe62c8ff, 0xbf323331, 0x3f2ed507 ),
	NFlagsW( 53, 24.130323 ),
	VERT( 0x418b2aaf, 0xc0176fc5, 0x3f3bd162 ),
	NORM( 0x3e737206, 0xbf71e987, 0x3e662483 ),
	NFlagsW( 54, 36.119728 ),
	VERT( 0x41994296, 0x401a642d, 0x402c294a ),
	NORM( 0x3da26612, 0x3f53878e, 0x3f0ec16f ),
	NFlagsW( 55, 25.116957 ),
	VERT( 0x419d51e5, 0x3ea9f454, 0x406be78f ),
	NORM( 0xbe8d6238, 0xbd543107, 0x3f75b038 ),
	NFlagsW( 56, 17.750648 ),
	VERT( 0x419751ad, 0xbf43699f, 0x403705dc ),
	NORM( 0x3de9fd10, 0xbf2867cd, 0x3f3e940e ),
	NFlagsW( 57, 24.665058 ),
	VERT( 0x418b5196, 0xc003c78c, 0x3fca64b9 ),
	NORM( 0x3e84862e, 0xbf62819e, 0x3ec66545 ),
	NFlagsW( 58, 34.266327 ),
	VERT( 0x419976f2, 0x3eca3b3e, 0x4067737f ),
	NORM( 0xbdea6788, 0xbded498b, 0x3f7c9501 ),
	NFlagsW( 59, 22.026459 ),
	VERT( 0x418dd224, 0x403b16fa, 0x3fd34c2d ),
	NORM( 0x3e5ceaf1, 0x3f75e0a7, 0x3e343803 ),
	NFlagsW( 60, 54.228394 ),
	VERT( 0x41930849, 0x400a3b8c, 0x404281b6 ),
	NORM( 0x3e0b97ba, 0x3f22ec08, 0x3f425b50 ),
	NFlagsW( 61, 36.017990 ),
	VERT( 0x418c21ba, 0xbfc0782d, 0x4024eadd ),
	NORM( 0x3e8b3737, 0xbf47e784, 0x3f0ff9c2 ),
	NFlagsW( 62, 35.381809 ),
	VERT( 0x4192e1a3, 0x3f505eab, 0x4066774e ),
	NORM( 0x3e192cbb, 0x3db42b04, 0x3f7c1da6 ),
	NFlagsW( 63, 31.686718 ),
	VERT( 0x418df314, 0xbf174503, 0x40586059 ),
	NORM( 0x3e8eb9ad, 0xbeef6d7e, 0x3f56bca8 ),
	NFlagsW( 64, 36.777557 ),
	VERT( 0x4179b7a7, 0xc01734a6, 0x3ff603ba ),
	NORM( 0x3e7a1e59, 0xbf635528, 0x3ec7754d ),
	NFlagsW( 65, 99.198929 ),
	VERT( 0x4179e6ad, 0xbfeb1ac9, 0x403fbcf1 ),
	NORM( 0x3e7b511f, 0xbf45df54, 0x3f15c87c ),
	NFlagsW( 66, 92.347084 ),
	VERT( 0x417cab1f, 0x401bb046, 0x4054cace ),
	NORM( 0x3dc92685, 0x3f28cfc8, 0x3f3ecdfc ),
	NFlagsW( 67, 98.164085 ),
	VERT( 0x417de354, 0xbf5610fb, 0x4075f9db ),
	NORM( 0x3e49de10, 0xbecac524, 0x3f659640 ),
	NFlagsW( 68, 78.180481 ),
	VERT( 0x417d580a, 0x3f6dfb9b, 0x40800a9d ),
	NORM( 0x3dd35b15, 0x3e3b8ce8, 0x3f7a4769 ),
	NFlagsW( 69, 85.199776 ),
	CnkV_VN_NF(FV_CONT|FW_END, 932),
	OffnbIdx(0, 133),
	VERT( 0x3ffa3f58, 0x3fbd4b09, 0xc095b17c ),
	NORM( 0xbd92e65f, 0x3e511f68, 0xbf79ee59 ),
	NFlagsW( 3038, 95.969620 ),
	VERT( 0x3fe5461d, 0xbd0dcd1c, 0xc095dafd ),
	NORM( 0xbe10359b, 0xbe635af5, 0xbf76fe36 ),
	NFlagsW( 3039, 93.332275 ),
	VERT( 0x401b1178, 0x4056db40, 0xc0786786 ),
	NORM( 0xbd3465bc, 0x3f138a6d, 0xbf50e73f ),
	NFlagsW( 3040, 98.225716 ),
	VERT( 0x3fd80db6, 0xbfb4fbff, 0xc07bff35 ),
	NORM( 0xbe55e0cf, 0xbf00c887, 0xbf56b0ac ),
	NFlagsW( 3041, 85.145256 ),
	VERT( 0x3ff2c395, 0xc036801e, 0xc0410fa5 ),
	NORM( 0xbe454096, 0xbf2e0411, 0xbf352b98 ),
	NFlagsW( 3042, 83.823517 ),
	VERT( 0x3f40031e, 0x3d9aca6a, 0xc08f2f15 ),
	NORM( 0xbe59bd8c, 0xbe81fe4b, 0xbf718dc6 ),
	NFlagsW( 3043, 79.461357 ),
	VERT( 0x3f5eea23, 0x3fc72eeb, 0xc08f6a6c ),
	NORM( 0xbe20c4dc, 0x3e5986ff, 0xbf76e840 ),
	NFlagsW( 3044, 84.211067 ),
	VERT( 0x403bb0d2, 0x40a1a52e, 0xc0043b26 ),
	NORM( 0xbbe79b49, 0x3f667e70, 0xbedec202 ),
	NFlagsW( 3045, 99.180412 ),
	VERT( 0x3f98783b, 0x405520aa, 0xc06ee913 ),
	NORM( 0xbde46de4, 0x3f16cf0c, 0xbf4ce244 ),
	NFlagsW( 3046, 87.251244 ),
	VERT( 0x3e6b4570, 0x3e05b965, 0xc08bdab2 ),
	NORM( 0xbe607dfa, 0xbe8819a5, 0xbf7052cf ),
	NFlagsW( 3047, 69.362305 ),
	VERT( 0x3ea8404b, 0x3fcc213a, 0xc08c46e9 ),
	NORM( 0xbe23d4bb, 0x3e5368c7, 0xbf771d0e ),
	NFlagsW( 3048, 73.567871 ),
	VERT( 0x3f2a7249, 0xbfa8c3e2, 0xc06779bf ),
	NORM( 0xbe949e86, 0xbf055a76, 0xbf4d806f ),
	NFlagsW( 3049, 65.531143 ),
	VERT( 0x40023cac, 0xc080bf3a, 0xbfbca1d8 ),
	NORM( 0xbe244edb, 0xbf603728, 0xbee90874 ),
	NFlagsW( 3050, 78.358917 ),
	VERT( 0x3f81c3cd, 0xc02cbd57, 0xc0306a6a ),
	NORM( 0xbea1258b, 0xbf2930dd, 0xbf2e689d ),
	NFlagsW( 3051, 65.245644 ),
	VERT( 0x405d76ad, 0x40aa2876, 0xbe96ed9e ),
	NORM( 0x3d201503, 0x3f7ef164, 0x3da7ce15 ),
	NFlagsW( 3052, 99.021820 ),
	VERT( 0x3f1346df, 0x40544354, 0xc06a2956 ),
	NORM( 0xbde3193e, 0x3f175563, 0xbf4c850b ),
	NFlagsW( 3053, 74.393509 ),
	VERT( 0xbe94c355, 0x3e3e0843, 0xc088868a ),
	NORM( 0xbe5eaf9a, 0xbe907f21, 0xbf6f334f ),
	NFlagsW( 3054, 58.809917 ),
	VERT( 0xbe5ab453, 0x3fd1127c, 0xc08923d4 ),
	NORM( 0xbe3806b7, 0x3e52a1b5, 0xbf7643e1 ),
	NFlagsW( 3055, 60.910183 ),
	VERT( 0x3e1e816a, 0xbfa2a83f, 0xc05d3676 ),
	NORM( 0xbe96638c, 0xbf0a26b6, 0xbf49faf2 ),
	NFlagsW( 3056, 57.331108 ),
	VERT( 0x3ea8528b, 0xbffb03e9, 0xc041af2e ),
	NORM( 0xbeae6455, 0xbf15cc26, 0xbf3c65ba ),
	NFlagsW( 3057, 56.587940 ),
	VERT( 0x401d0b69, 0xc094bf48, 0x3e389276 ),
	NORM( 0xbdd6d387, 0xbf7a8a9e, 0xbe34d5fe ),
	NFlagsW( 3058, 79.486900 ),
	VERT( 0x3fd3cddf, 0x40a11014, 0xbfee7994 ),
	NORM( 0xbdad20ae, 0x3f6a7692, 0xbec8f1c6 ),
	NFlagsW( 3059, 86.424622 ),
	VERT( 0xbd2748af, 0x405366e6, 0xc065660b ),
	NORM( 0xbdc6eabd, 0x3f15a9ca, 0xbf4e3355 ),
	NFlagsW( 3060, 57.819580 ),
	VERT( 0x4085c1e6, 0x4092d24f, 0x3fd3d5c3 ),
	NORM( 0x3c7acc53, 0x3f64f5bf, 0x3ee4e486 ),
	NFlagsW( 3061, 98.261742 ),
	VERT( 0x3e6daf21, 0xc0221e83, 0xc01e06e7 ),
	NORM( 0xbec4f815, 0xbf1af5d3, 0xbf3264a2 ),
	NFlagsW( 3062, 53.349007 ),
	VERT( 0xbeb689e2, 0xbf9c8973, 0xc052effa ),
	NORM( 0xbe424af8, 0xbf14aaa4, 0xbf4aab5c ),
	NFlagsW( 3063, 51.484955 ),
	VERT( 0x40431c68, 0xc0976d85, 0x3fdf98df ),
	NORM( 0xbcaa857f, 0xbf7d5778, 0x3e11a242 ),
	NFlagsW( 3064, 85.855034 ),
	VERT( 0x3f81ffaf, 0x40a0c588, 0xbfe177c5 ),
	NORM( 0xbd9af902, 0x3f6c1d8b, 0xbec20346 ),
	NFlagsW( 3065, 69.007813 ),
	VERT( 0x3f0cc6f8, 0xc06c2b00, 0xbfa61706 ),
	NORM( 0xbe74cc7a, 0xbf593af5, 0xbef1ac87 ),
	NFlagsW( 3066, 53.001625 ),
	VERT( 0x3d219eff, 0xc041caa1, 0xbff8342f ),
	NORM( 0xbeb927e2, 0xbf30275c, 0xbf210b44 ),
	NFlagsW( 3067, 50.512280 ),
	VERT( 0xbf9d21ad, 0x3fddacac, 0xc0816112 ),
	NORM( 0xbe13659f, 0x3e396e71, 0xbf790e6d ),
	NFlagsW( 3068, 34.457512 ),
	VERT( 0x40107a6e, 0x40a770cf, 0x3cbb411d ),
	NORM( 0xbd1d2b72, 0x3f7c9f4a, 0x3e211251 ),
	NFlagsW( 3069, 83.800858 ),
	VERT( 0xbfb58dad, 0x3ea3ccf1, 0xc081be50 ),
	NORM( 0xbe33bb4b, 0xbe5e30a3, 0xbf75d404 ),
	NFlagsW( 3070, 34.231804 ),
	VERT( 0xbf75ed88, 0x405000f8, 0xc0636bdf ),
	NORM( 0xbdda9f4d, 0x3f0edab7, 0xbf52ab7f ),
	NFlagsW( 3071, 31.667324 ),
	VERT( 0x4094f814, 0x4054dca4, 0x4064a7f0 ),
	NORM( 0xbcc5f39d, 0x3f2fdcbc, 0x3f39ee3c ),
	NFlagsW( 3072, 97.963631 ),
	VERT( 0x406213e6, 0xc0897393, 0x4042c55e ),
	NORM( 0x3d4bfc30, 0xbf60cb83, 0x3ef3a4fe ),
	NFlagsW( 3073, 89.838539 ),
	VERT( 0xbfa5f51e, 0xbfa271e4, 0xc050d4ac ),
	NORM( 0xbd040f02, 0xbf123dd1, 0xbf51f498 ),
	NFlagsW( 3074, 40.515118 ),
	VERT( 0xbf0cc1b4, 0xc0177e68, 0xc00b9fd4 ),
	NORM( 0xbe2c022b, 0xbf2f9b0a, 0xbf353e84 ),
	NFlagsW( 3075, 48.221798 ),
	VERT( 0x3ec0c791, 0x40a07bc9, 0xbfd475a0 ),
	NORM( 0xbdea803c, 0x3f6e9e6d, 0xbeafedf2 ),
	NFlagsW( 3076, 47.903641 ),
	VERT( 0xbff64a56, 0x3ea63612, 0xc07d3896 ),
	NORM( 0xbe98ea01, 0xbe317742, 0xbf7040fd ),
	NFlagsW( 3077, 21.872814 ),
	VERT( 0x408cfb21, 0xc0411068, 0x408f6720 ),
	NORM( 0x3d80608f, 0xbf16cf90, 0x3f4e3d37 ),
	NFlagsW( 3078, 96.843430 ),
	VERT( 0x3f6ba63d, 0xc08c6e49, 0x3e88c91d ),
	NORM( 0xbe2e1d54, 0xbf75afdb, 0xbe650e53 ),
	NFlagsW( 3079, 51.652344 ),
	VERT( 0xbe453ca8, 0xc06180a3, 0xbf9ad1a1 ),
	NORM( 0xbe86fcbc, 0xbf50f275, 0xbf039ca8 ),
	NFlagsW( 3080, 46.836899 ),
	VERT( 0x3fd3f87a, 0x40a6147c, 0x3e3a07d3 ),
	NORM( 0xbcbdb63e, 0x3f7bde1f, 0x3e35b438 ),
	NFlagsW( 3081, 67.997375 ),
	VERT( 0xbff39814, 0x3ff28dc9, 0xc07d13cf ),
	NORM( 0xbe6e89ee, 0x3e4d6104, 0xbf739ae3 ),
	NFlagsW( 3082, 15.462777 ),
	VERT( 0xbff37303, 0xbf0babd1, 0xc0663013 ),
	NORM( 0xbe5f9817, 0xbed7668f, 0xbf616a46 ),
	NFlagsW( 3083, 26.620495 ),
	VERT( 0xbf91625d, 0xc00ce412, 0xc01b62c3 ),
	NORM( 0x3ceeb3a6, 0xbf325803, 0xbf37811b ),
	NFlagsW( 3084, 43.322014 ),
	VERT( 0x40356a96, 0x408df516, 0x3ff3620a ),
	NORM( 0xbbab2b30, 0x3f578068, 0x3f0a2da9 ),
	NFlagsW( 3085, 77.880005 ),
	VERT( 0xbfdd1cc7, 0xbfaa7a70, 0xc04af8eb ),
	NORM( 0xbdb6f9c4, 0xbf1624a4, 0xbf4e150f ),
	NFlagsW( 3086, 32.705769 ),
	VERT( 0x40952d72, 0x3f985ff9, 0x409aa871 ),
	NORM( 0x3d17d2d8, 0x3ebaae00, 0x3f6e302d ),
	NFlagsW( 3087, 95.400116 ),
	VERT( 0x40978c3f, 0xbf82e147, 0x40a9b4ba ),
	NORM( 0x3d60d576, 0xbdbb8cb7, 0x3f7e8962 ),
	NFlagsW( 3088, 97.528397 ),
	VERT( 0xbfd78aa1, 0x40571527, 0xc053ed42 ),
	NORM( 0xbe5c6417, 0x3f1d1e3d, 0xbf427561 ),
	NFlagsW( 3089, 12.710911 ),
	VERT( 0xbfc19a5b, 0xc012405f, 0xc014083a ),
	NORM( 0xbcd44edf, 0xbf34e9ce, 0xbf3500f3 ),
	NFlagsW( 3090, 38.064884 ),
	VERT( 0x3fb5de06, 0xc0937c68, 0x3feefbb7 ),
	NORM( 0xbd8b3d01, 0xbf7e8e30, 0x3da6c682 ),
	NFlagsW( 3091, 50.688576 ),
	VERT( 0x3f86fbd1, 0x40a4b83a, 0x3eae54a8 ),
	NORM( 0xbd1174a2, 0x3f7b05df, 0x3e459e77 ),
	NFlagsW( 3092, 51.460423 ),
	VERT( 0x3e1dcfb9, 0xc0884674, 0x3e9eec4d ),
	NORM( 0xbe3598ea, 0xbf72d027, 0xbe866994 ),
	NFlagsW( 3093, 42.771484 ),
	VERT( 0xc024374d, 0x3e81e08d, 0xc0692c9d ),
	NORM( 0xbee75346, 0xbe482720, 0xbf5ed51d ),
	NFlagsW( 3094, 10.819841 ),
	VERT( 0xc0104fef, 0xbfb4f5ca, 0xc04350bc ),
	NORM( 0xbe7e1cfc, 0xbf0dfa25, 0xbf4b5431 ),
	NFlagsW( 3095, 20.969782 ),
	VERT( 0xbf6f6545, 0xc056d666, 0xbf8f8c63 ),
	NORM( 0xbe3b47a6, 0xbf523398, 0xbf0a6aad ),
	NFlagsW( 3096, 41.363285 ),
	VERT( 0xbf16a672, 0x409bba30, 0xbfcc5709 ),
	NORM( 0xbe03b130, 0x3f6cadc0, 0xbeb7afe8 ),
	NFlagsW( 3097, 23.665644 ),
	VERT( 0xbfe0a1bb, 0xc016e94d, 0xc00f9b89 ),
	NORM( 0xbdac1ca3, 0xbf38d2cc, 0xbf2fd27a ),
	NFlagsW( 3098, 33.309845 ),
	VERT( 0x400a5ffd, 0x408b85db, 0x40019247 ),
	NORM( 0x3c5b2738, 0x3f53580d, 0x3f106c48 ),
	NFlagsW( 3099, 63.717907 ),
	VERT( 0xc026741e, 0x3ff2e8c3, 0xc06cd68a ),
	NORM( 0xbee508c1, 0x3e4f7e9b, 0xbf5f011e ),
	NFlagsW( 3100, 5.017308 ),
	VERT( 0x3febb200, 0xc088b5f6, 0x40495cbd ),
	NORM( 0x3c09436e, 0xbf60ad5e, 0x3ef55e90 ),
	NFlagsW( 3101, 49.493752 ),
	VERT( 0xbf860616, 0x409b7a6f, 0xbfbdc4c3 ),
	NORM( 0xbddadf84, 0x3f6e9f3f, 0xbeb12a92 ),
	NFlagsW( 3102, 13.879519 ),
	VERT( 0xbed34952, 0xc08539c2, 0x3eb9ca3d ),
	NORM( 0xbe1836ee, 0xbf70a8cd, 0xbe9d1c67 ),
	NFlagsW( 3103, 36.994328 ),
	VERT( 0xc03093ad, 0xbfb5205d, 0xc033f4e7 ),
	NORM( 0xbec046e1, 0xbf040509, 0xbf4523d9 ),
	NFlagsW( 3104, 12.076475 ),
	VERT( 0x402a693a, 0x403ea6b1, 0x4066509c ),
	NORM( 0xbdb0b3d1, 0x3f29e185, 0x3f3e3ba4 ),
	NFlagsW( 3105, 61.862404 ),
	VERT( 0xc01aaff3, 0x4062e6d3, 0xc0398d0d ),
	NORM( 0xbeade030, 0x3f2569e3, 0xbf2ef982 ),
	NFlagsW( 3106, 2.844733 ),
	VERT( 0x3f1b613e, 0xc09183d2, 0x3ff6ad37 ),
	NORM( 0xbd8f2124, 0xbf7f3a97, 0x3d09bd20 ),
	NFlagsW( 3107, 35.489365 ),
	VERT( 0xc0473b15, 0x3e51f6de, 0xc0535bc8 ),
	NORM( 0xbf02bca2, 0xbe42c464, 0xbf56a56a ),
	NFlagsW( 3108, 5.246593 ),
	VERT( 0x3fbea27d, 0x408917af, 0x40097725 ),
	NORM( 0x3d608cf2, 0x3f5352e1, 0x3f0fcf56 ),
	NFlagsW( 3109, 50.995220 ),
	VERT( 0xc0175254, 0xc0217a4a, 0xbff35a76 ),
	NORM( 0xbe82b202, 0xbf42f572, 0xbf188069 ),
	NFlagsW( 3110, 20.043280 ),
	VERT( 0xbfc53af1, 0xc05bf4d3, 0xbf3595ce ),
	NORM( 0xbe51f7f5, 0xbf5d39ef, 0xbeeb485b ),
	NFlagsW( 3111, 31.912222 ),
	VERT( 0x4023a24b, 0xc03b9cf4, 0x4091254c ),
	NORM( 0xbb9e4456, 0xbf0a81fe, 0x3f574a66 ),
	NFlagsW( 3112, 55.396740 ),
	VERT( 0xc04e004f, 0x3feb75df, 0xc0526895 ),
	NORM( 0xbf0dff60, 0x3e467cad, 0xbf4f25ed ),
	NFlagsW( 3113, 1.892503 ),
	VERT( 0xbf4a535f, 0xc0852aac, 0x3f0016bd ),
	NORM( 0xbde53c64, 0xbf7041b0, 0xbea73b7e ),
	NFlagsW( 3114, 31.230186 ),
	VERT( 0x3d9de3cc, 0x40a0b6dc, 0x3f2a6739 ),
	NORM( 0xbcebc25e, 0x3f7b21f9, 0x3e44885e ),
	NFlagsW( 3115, 28.785330 ),
	VERT( 0xbfc011f7, 0x409c36a2, 0xbfa1869f ),
	NORM( 0xbe2282a5, 0x3f713847, 0xbe96f9a7 ),
	NFlagsW( 3116, 6.358842 ),
	VERT( 0xc050d33a, 0xbfb54bc2, 0xc0249ae6 ),
	NORM( 0xbed3c080, 0xbf011705, 0xbf42112f ),
	NFlagsW( 3117, 5.607105 ),
	VERT( 0x4032f840, 0x3f83c6f3, 0x409b41b5 ),
	NORM( 0xbcf3a0aa, 0x3ebac67f, 0x3f6e3c9d ),
	NFlagsW( 3118, 57.530273 ),
	VERT( 0x3f7ef36f, 0xc08856ef, 0x404ca773 ),
	NORM( 0x3c26a77d, 0xbf5ff1b3, 0x3ef80495 ),
	NFlagsW( 3119, 30.479542 ),
	VERT( 0x3bc10f3e, 0xc08fe912, 0x3ffcec64 ),
	NORM( 0xbd3a11bd, 0xbf7fbb5e, 0xbbb1a45f ),
	NFlagsW( 3120, 26.006260 ),
	VERT( 0x40376daf, 0xbf7d6310, 0x40a6bcb7 ),
	NORM( 0xbd3e34c0, 0xbd92d57c, 0x3f7f1074 ),
	NFlagsW( 3121, 57.117104 ),
	VERT( 0xc040f1b7, 0x4062342e, 0xc02203a4 ),
	NORM( 0xbed5d55d, 0x3f21c43c, 0xbf27244d ),
	NFlagsW( 3122, 0.732319 ),
	VERT( 0xc06a3e8b, 0x3e2027e7, 0xc03d8a82 ),
	NORM( 0xbf006d29, 0xbe38ff66, 0xbf58928d ),
	NFlagsW( 3123, 2.139355 ),
	VERT( 0x3fe084b6, 0x403487ba, 0x406714b9 ),
	NORM( 0x3d1a0913, 0x3f2398f6, 0x3f44ab90 ),
	NFlagsW( 3124, 48.846905 ),
	VERT( 0xbed7af77, 0x409f69c4, 0x3f5d7ebe ),
	NORM( 0x3cdd89b9, 0x3f7bdb2e, 0x3e356521 ),
	NFlagsW( 3125, 18.974669 ),
	VERT( 0xbec543f6, 0xc08fdb3c, 0x400235b0 ),
	NORM( 0x3c82e7e0, 0xbf7fd0b9, 0xbd0d196a ),
	NFlagsW( 3126, 19.534025 ),
	VERT( 0x3fd0f2b4, 0xc038e400, 0x409203c5 ),
	NORM( 0x3a604a7c, 0xbf055a25, 0x3f5a8662 ),
	NFlagsW( 3127, 34.944344 ),
	VERT( 0xc0758f81, 0x3fe40385, 0xc037f833 ),
	NORM( 0xbf057abf, 0x3e3ee648, 0xbf552b93 ),
	NFlagsW( 3128, 0.588329 ),
	VERT( 0x3ebd1b89, 0xc088c52c, 0x404c2c6c ),
	NORM( 0x3b429667, 0xbf643138, 0x3ee810f7 ),
	NFlagsW( 3129, 19.607161 ),
	VERT( 0x3ef87663, 0x408796ed, 0x40190e10 ),
	NORM( 0x3e0714fd, 0x3f55cbe5, 0x3f08b2ef ),
	NFlagsW( 3130, 33.140465 ),
	VERT( 0xc0067a9b, 0x409bbb4e, 0xbf586582 ),
	NORM( 0xbe49abf4, 0x3f7243a4, 0xbe832e24 ),
	NFlagsW( 3131, 1.587851 ),
	VERT( 0x3ff7337b, 0xbf7939d6, 0x40a53fe8 ),
	NORM( 0xbd132a6a, 0xbd8912c4, 0x3f7f42a1 ),
	NFlagsW( 3132, 39.677750 ),
	VERT( 0x3fee8c33, 0x3f72f26f, 0x409b8e82 ),
	NORM( 0xbc8a707e, 0x3eb89ac6, 0x3f6ebdda ),
	NFlagsW( 3133, 43.447262 ),
	VERT( 0x3cbfe596, 0xc0870527, 0x40524f03 ),
	NORM( 0x3e1c7912, 0xbf671670, 0x3ecdf42c ),
	NFlagsW( 3134, 14.322814 ),
	VERT( 0xc067342c, 0x4061827d, 0xc00a7a4e ),
	NORM( 0xbed04010, 0x3f219894, 0xbf290ee5 ),
	NFlagsW( 3135, 0.131999 ),
	VERT( 0xc05cb459, 0xc0244a5b, 0xbf9ca108 ),
	NORM( 0xbea34431, 0xbf42da2e, 0xbf109590 ),
	NFlagsW( 3136, 3.784602 ),
	VERT( 0xbf6f08c2, 0x409f0153, 0x3f8e70c1 ),
	NORM( 0x3d76d43c, 0x3f7b7d8f, 0x3e3521b7 ),
	NFlagsW( 3137, 9.650693 ),
	VERT( 0xbfd6bc73, 0xc08a6ce3, 0x3f9da1df ),
	NORM( 0xbda88e05, 0xbf7363f5, 0xbe990304 ),
	NFlagsW( 3138, 9.221268 ),
	VERT( 0x3f72a622, 0x4035a0e9, 0x4071e985 ),
	NORM( 0x3e679b28, 0x3f1d6f31, 0x3f41629b ),
	NFlagsW( 3139, 38.601570 ),
	VERT( 0xc0245f74, 0xc066e4d7, 0x3d81dba0 ),
	NORM( 0xbe58af67, 0xbf5c286a, 0xbeedc180 ),
	NFlagsW( 3140, 8.275867 ),
	VERT( 0x3d40c912, 0x408707a3, 0x4023bd71 ),
	NORM( 0x3e42ead9, 0x3f573355, 0x3f01cee6 ),
	NFlagsW( 3141, 24.951368 ),
	VERT( 0x3f75827d, 0xc036e5ca, 0x4092d7c7 ),
	NORM( 0x3deab683, 0xbf0887c9, 0x3f568e8e ),
	NFlagsW( 3142, 23.963022 ),
	VERT( 0xc08522bf, 0xbfbb0edd, 0xbffe6875 ),
	NORM( 0xbee16c1a, 0xbf05c86c, 0xbf3ae841 ),
	NFlagsW( 3143, 1.040561 ),
	VERT( 0x3fa05718, 0xbf763363, 0x40a471a4 ),
	NORM( 0x3dd73ca5, 0xbd9d9490, 0x3f7dd1b1 ),
	NFlagsW( 3144, 31.106764 ),
	VERT( 0xc0939a08, 0x3e07e277, 0xc0199fc9 ),
	NORM( 0xbefd7d17, 0xbe396d6f, 0xbf5989cc ),
	NFlagsW( 3145, 0.306518 ),
	VERT( 0x3f97784d, 0x3f638c97, 0x409c272e ),
	NORM( 0x3e2137d8, 0x3eb15d19, 0x3f6cbe1b ),
	NFlagsW( 3146, 35.979122 ),
	VERT( 0xbf8c28ff, 0xc0910f0d, 0x40297e8d ),
	NORM( 0x3dbc0e19, 0xbf7ec225, 0x3d10821e ),
	NFlagsW( 3147, 4.468757 ),
	VERT( 0xc02ced0b, 0x409b4082, 0xbedb6fc1 ),
	NORM( 0xbe3bf809, 0x3f72c189, 0xbe849f92 ),
	NFlagsW( 3148, 0.194690 ),
	VERT( 0xbe88d433, 0x40864196, 0x402f2b48 ),
	NORM( 0x3e618ea8, 0x3f566e42, 0x3effef66 ),
	NFlagsW( 3149, 18.672857 ),
	VERT( 0x3f17c4ce, 0xc037cc02, 0x40960190 ),
	NORM( 0x3ee09fc4, 0xbf13dc29, 0x3f303c9d ),
	NFlagsW( 3150, 16.797298 ),
	VERT( 0x3eeb5b26, 0x4037f821, 0x407c0abd ),
	NORM( 0x3eb1f697, 0x3f1df195, 0x3f34c10c ),
	NFlagsW( 3151, 30.238672 ),
	VERT( 0xbfb91c30, 0x409e98bd, 0x3fae2179 ),
	NORM( 0x3de571c6, 0x3f7ca107, 0x3deeedf2 ),
	NFlagsW( 3152, 3.322579 ),
	VERT( 0xc097fe7a, 0x3fe2f0e4, 0xc016553c ),
	NORM( 0xbefc81f2, 0x3e42a3cc, 0xbf595208 ),
	NFlagsW( 3153, 0.059834 ),
	VERT( 0x3f65fe83, 0xbf75ebfd, 0x40a78017 ),
	NORM( 0x3f0ae8b4, 0xbdc0c156, 0x3f55ae6f ),
	NFlagsW( 3154, 24.587955 ),
	VERT( 0x3f4fae75, 0x3f5d4b18, 0x40a07ed2 ),
	NORM( 0x3f097d1e, 0x3ea663b2, 0x3f474701 ),
	NFlagsW( 3155, 29.190979 ),
	VERT( 0xbf14e2c9, 0x40857b3e, 0x403a9975 ),
	NORM( 0x3eb07264, 0x3f579167, 0x3ed47185 ),
	NFlagsW( 3156, 12.640110 ),
	VERT( 0xbf187269, 0xc0864b2b, 0x40789916 ),
	NORM( 0x3e9eed88, 0xbf5f0c9f, 0x3ec2a1fd ),
	NFlagsW( 3157, 2.479938 ),
	VERT( 0x3e1c3b66, 0x40390fad, 0x4083801a ),
	NORM( 0x3f0b0f45, 0x3f1de35a, 0x3f11d76c ),
	NFlagsW( 3158, 23.027220 ),
	VERT( 0x3de8e89d, 0xc032b71f, 0x40a92e70 ),
	NORM( 0x3f1dc668, 0xbf098302, 0x3f136c4b ),
	NFlagsW( 3159, 3.309897 ),
	VERT( 0xc0a1db3d, 0xbfc0d42c, 0xbfb39ee6 ),
	NORM( 0xbeecd820, 0xbf07e3e9, 0xbf35c91f ),
	NFlagsW( 3160, 0.121165 ),
	VERT( 0xc09109e5, 0xc0271c69, 0xbf0bd7e9 ),
	NORM( 0xbeafd9b1, 0xbf3fbb31, 0xbf111104 ),
	NFlagsW( 3161, 0.213138 ),
	VERT( 0xc0662246, 0xc071d36b, 0x3f5612bf ),
	NORM( 0xbe7579ba, 0xbf5d27ad, 0xbee2ce80 ),
	NFlagsW( 3162, 0.258480 ),
	VERT( 0xc02f8777, 0xc090bca6, 0x4006fb2b ),
	NORM( 0xbdcaaf6a, 0xbf77c0d3, 0xbe6d1005 ),
	NFlagsW( 3163, 0.059654 ),
	VERT( 0x3ed13884, 0xbf7a4227, 0x40ba2e30 ),
	NORM( 0x3f431586, 0xbdc88d57, 0x3f23dbdf ),
	NFlagsW( 3164, 6.255941 ),
	VERT( 0xc0b2149e, 0x3ddf4897, 0xbfeb6925 ),
	NORM( 0xbf09396a, 0xbe44df9d, 0xbf526f73 ),
	NFlagsW( 3165, 0.032278 ),
	VERT( 0xbffdd692, 0xc09291e6, 0x4053ceb0 ),
	NORM( 0x3dc44fe0, 0xbf7dfa8a, 0x3da5a1a6 ),
	NFlagsW( 3166, 0.017608 ),
	VERT( 0x3e5a13d4, 0x3f57fc6b, 0x40b7b045 ),
	NORM( 0x3f3dcc8f, 0x3e8e8d8a, 0x3f1c4ea9 ),
	NFlagsW( 3167, 6.384648 ),
	VERT( 0xbee25300, 0x40379296, 0x40a16080 ),
	NORM( 0x3f2ee3b8, 0x3f12f227, 0x3ee72413 ),
	NFlagsW( 3168, 2.409696 ),
	VERT( 0xbfad80ea, 0x408892b7, 0x406eae7c ),
	NORM( 0x3eefbe5c, 0x3f53ad77, 0x3e9f7da3 ),
	NFlagsW( 3169, 0.408518 ),
	VERT( 0xbe377131, 0xbf7f7d70, 0x40d098e2 ),
	NORM( 0x3f405073, 0xbde17775, 0x3f269aa2 ),
	NFlagsW( 3170, 0.020627 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Forearm[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Forearm,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Forearm[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Forearm,
OPosition  ( 22.032433F, -0.000000F,  0.000001F ),
OAngle     ( -0.000001F, -43.056299F,  0.000002F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Hand,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_UpperArm[]
START
	CnkV_VN(FV_CONT, 235),
	OffnbIdx(438, 39),
	VERT( 0x419d1643, 0x4060b4a2, 0xc08a6f4a ),
	NORM( 0x3e2169a8, 0x3f24003b, 0xbf40621c ),
	VERT( 0x41991dd4, 0x3fe1dccc, 0xc0a658c4 ),
	NORM( 0x3e2cdad6, 0x3e3b31be, 0xbf77f2d0 ),
	VERT( 0x4198d3ad, 0x409bdcb0, 0xc013b5a7 ),
	NORM( 0x3d8d31a0, 0x3f714450, 0xbea78243 ),
	VERT( 0x41972e87, 0x40a2af9c, 0xbe05740b ),
	NORM( 0x3dc987f4, 0x3f7baef3, 0x3e1dd3dd ),
	VERT( 0x418fbc0c, 0xc0849e4c, 0x4018bd22 ),
	NORM( 0xbbd6635c, 0xbf5f6484, 0x3efa07ff ),
	VERT( 0x418cc55b, 0xc02f4658, 0x4081693c ),
	NORM( 0x3d8d45e4, 0xbf0c273a, 0x3f557f61 ),
	VERT( 0x419336ac, 0x405fe777, 0xc0935a2b ),
	NORM( 0x3dde0926, 0x3f220473, 0xbf44414b ),
	VERT( 0x418934c8, 0x3f51a095, 0x408f85be ),
	NORM( 0x3df4121d, 0x3e73b71f, 0x3f76c3ca ),
	VERT( 0x418a3be9, 0x40339581, 0x406cd701 ),
	NORM( 0x3e25d724, 0x3f0ca1ab, 0x3f51db4e ),
	VERT( 0x418dfcee, 0x40a6c634, 0xbe88e0d7 ),
	NORM( 0x3c855baa, 0x3f7eb64c, 0x3dca7155 ),
	VERT( 0x418ed8d0, 0x409c7967, 0xc01d5278 ),
	NORM( 0x3cce4084, 0x3f706c8e, 0xbeaf64b9 ),
	VERT( 0x418b3b74, 0x408d48f4, 0x3ff29b7d ),
	NORM( 0x3d96654e, 0x3f5ad9b2, 0x3f037af7 ),
	VERT( 0x416bae78, 0xc0939394, 0x3f9dbe62 ),
	NORM( 0x3d149772, 0xbf7c18fe, 0x3e2e3242 ),
	VERT( 0x41704939, 0xc07f2d88, 0xc002da5f ),
	NORM( 0x3dc2509c, 0xbf670d54, 0xbed70b30 ),
	VERT( 0x416d5e98, 0xc0924db6, 0xbf062fee ),
	NORM( 0x3d5b0029, 0xbf7b34f4, 0xbe3d791f ),
	VERT( 0x416925dc, 0xc07e9e7a, 0x403c2de4 ),
	NORM( 0x3ccbdb4a, 0xbf5434b4, 0x3f0f0d7a ),
	VERT( 0x4170df5c, 0xc0401d46, 0xc071a13e ),
	NORM( 0x3e0a4497, 0xbf447140, 0xbf207906 ),
	VERT( 0x4166080e, 0xc01b3603, 0x408d93bf ),
	NORM( 0x3d1b1ca3, 0xbf00c284, 0x3f5d0cb0 ),
	VERT( 0x416fb4aa, 0xbfd1f266, 0xc0a00ea7 ),
	NORM( 0x3e17c5e5, 0xbf075c27, 0xbf55f2d2 ),
	VERT( 0x4171444a, 0x3d94c4c3, 0xc0b6c144 ),
	NORM( 0x3e0b43c2, 0xbe2e4afa, 0xbf79d9b0 ),
	VERT( 0x4160119b, 0xbf597dec, 0x409e033d ),
	NORM( 0x3d52d772, 0xbdd0aff1, 0x3f7e5387 ),
	VERT( 0x416c023c, 0x3ff7f978, 0xc0b69104 ),
	NORM( 0x3dc9c9b7, 0x3e7ecdcf, 0xbf76a95f ),
	VERT( 0x41581894, 0x3f8f26fe, 0x40999b52 ),
	NORM( 0x3cf89bb6, 0x3e694c1c, 0x3f792577 ),
	VERT( 0x4163293e, 0x4060763b, 0xc09ef4f2 ),
	NORM( 0x3d88ad28, 0x3f29f9a2, 0xbf3ea9da ),
	VERT( 0x415507f7, 0x40304499, 0x40867612 ),
	NORM( 0xbb8dd621, 0x3f19283c, 0x3f4d20db ),
	VERT( 0x415a9893, 0x40987fc0, 0xc03a5328 ),
	NORM( 0x3d54e3e4, 0x3f7462ca, 0xbe962053 ),
	VERT( 0x4153621d, 0x4088e451, 0x40008e61 ),
	NORM( 0xbc415044, 0x3f643f4c, 0x3ee7c6b2 ),
	VERT( 0x4157060c, 0x409e28e7, 0xbe8ef44b ),
	NORM( 0xbb15fdcf, 0x3f7eab30, 0x3dd08938 ),
	VERT( 0x413af65c, 0xc0979f39, 0x3fb397e5 ),
	NORM( 0x3cad5912, 0xbf77dda2, 0x3e7f2947 ),
	VERT( 0x4136d01d, 0xc07bd98d, 0x40403373 ),
	NORM( 0x3bc3be75, 0xbf50e5f5, 0x3f13f85b ),
	VERT( 0x4139c6b2, 0xc099b2e2, 0xbe729c01 ),
	NORM( 0x3d661baf, 0xbf7ec981, 0xbda2839e ),
	VERT( 0x413911fe, 0xc08d7723, 0xc0014690 ),
	NORM( 0x3dc3065b, 0xbf724d97, 0xbe9ddf45 ),
	VERT( 0x41318d8b, 0xc0232392, 0x408f62a6 ),
	NORM( 0xbb190fc7, 0xbf0acfb1, 0x3f571906 ),
	VERT( 0x413867c1, 0xc06a940c, 0xc074b680 ),
	NORM( 0x3dfe5fc5, 0xbf540e79, 0xbf0bd8a3 ),
	VERT( 0x412b297a, 0xbf9f72d8, 0x409ee59e ),
	NORM( 0xbc9fde7b, 0xbe1b8550, 0x3f7cfb1e ),
	VERT( 0x413798d6, 0xc016b2b7, 0xc0a5fe2b ),
	NORM( 0x3e0ea535, 0xbf1ab113, 0xbf48d5c9 ),
	VERT( 0x413357f6, 0xbf4ff01b, 0xc0c36702 ),
	NORM( 0x3e022101, 0xbe824528, 0xbf756da6 ),
	VERT( 0x4129cbbd, 0x3f83146b, 0xc0c465d8 ),
	NORM( 0x3da3b8ab, 0x3e4b37fb, 0xbf7a1274 ),
	VERT( 0x411f3e13, 0x404b8464, 0xc0aa2783 ),
	NORM( 0x3d8aeb6a, 0x3f0b4ed1, 0xbf5612fe ),
	CnkV_VN_NF(FV_CONT|FW_START, 932),
	OffnbIdx(3038, 133),
	VERT( 0x41d53cba, 0x3fbd4b12, 0xc0055530 ),
	NORM( 0x3f1d3703, 0x3e511f68, 0xbf432826 ),
	NFlagsW( 0, 4.030382 ),
	VERT( 0x41d44e9c, 0xbd0dcbf6, 0xc00cbaac ),
	NORM( 0x3f0e488b, 0xbe635af5, 0xbf4d1654 ),
	NFlagsW( 1, 6.667721 ),
	VERT( 0x41d39f15, 0x4056db44, 0xbf97464d ),
	NORM( 0x3f066227, 0x3f138a6d, 0xbf2056f6 ),
	NFlagsW( 2, 1.774277 ),
	VERT( 0x41cfa1a6, 0xbfb4fbf6, 0xbfdcc1ae ),
	NORM( 0x3ed701a3, 0xbf00c887, 0xbf416003 ),
	NFlagsW( 3, 14.854735 ),
	VERT( 0x41cbd25b, 0xc036801a, 0xbf68c9c4 ),
	NORM( 0x3eaf4fb9, 0xbf2e0411, 0xbf260b82 ),
	NFlagsW( 4, 16.176487 ),
	VERT( 0x41cd1515, 0x3d9acaf7, 0xc03078c4 ),
	NORM( 0x3efa46a1, 0xbe81fe4b, 0xbf55a9c0 ),
	NFlagsW( 5, 20.538637 ),
	VERT( 0x41cdd3d9, 0x3fc72ef4, 0xc02b893d ),
	NORM( 0x3f0b3329, 0x3e5986ff, 0xbf4fd9d5 ),
	NFlagsW( 6, 15.788928 ),
	VERT( 0x41ccafd3, 0x40a1a530, 0x3efc2a04 ),
	NORM( 0x3e956fac, 0x3f667e70, 0xbea53c71 ),
	NFlagsW( 7, 0.819586 ),
	VERT( 0x41cb9c65, 0x405520ae, 0xbff50ad0 ),
	NORM( 0x3eee071e, 0x3f16cf0c, 0xbf293303 ),
	NFlagsW( 8, 12.748760 ),
	VERT( 0x41c97904, 0x3e05b9ab, 0xc04256e4 ),
	NORM( 0x3ef62119, 0xbe8819a5, 0xbf55ea9e ),
	NFlagsW( 9, 30.637699 ),
	VERT( 0x41ca1f6b, 0x3fcc2142, 0xc03ea33c ),
	NORM( 0x3f0ac805, 0x3e5368c7, 0xbf508635 ),
	NFlagsW( 10, 26.432127 ),
	VERT( 0x41c7e7cb, 0xbfa8c3da, 0xc00c0b30 ),
	NORM( 0x3eac0156, 0xbf055a76, 0xbf48e39a ),
	NFlagsW( 11, 34.468853 ),
	VERT( 0x41c43420, 0xc080bf38, 0x3e9fff7f ),
	NORM( 0x3e462245, 0xbf603728, 0xbee25c7b ),
	NFlagsW( 12, 21.641073 ),
	VERT( 0x41c53da3, 0xc02cbd53, 0xbfa93723 ),
	NORM( 0x3e70cad5, 0xbf2930dd, 0xbf36723c ),
	NFlagsW( 13, 34.754356 ),
	VERT( 0x41c618d2, 0x40aa2879, 0x40096969 ),
	NORM( 0xbce05087, 0x3f7ef164, 0x3db141f4 ),
	NFlagsW( 14, 0.978182 ),
	VERT( 0x41c79b09, 0x40544359, 0xc011f5f8 ),
	NORM( 0x3eedc60e, 0x3f175563, 0xbf28d1d4 ),
	NFlagsW( 15, 25.606489 ),
	VERT( 0x41c5dcf5, 0x3e3e0888, 0xc0543593 ),
	NORM( 0x3ef54178, 0xbe907f21, 0xbf54c9a1 ),
	NFlagsW( 16, 41.190086 ),
	VERT( 0x41c66afd, 0x3fd11285, 0xc051be6c ),
	NORM( 0x3f068358, 0x3e52a1b5, 0xbf5359ee ),
	NFlagsW( 17, 39.089809 ),
	VERT( 0x41c40ae1, 0xbfa2a836, 0xc01adf81 ),
	NORM( 0x3ea5e766, 0xbf0a26b6, 0xbf46eb8b ),
	NFlagsW( 18, 42.668896 ),
	VERT( 0x41c2b5cb, 0xbffb03e1, 0xbffe508c ),
	NORM( 0x3e81d199, 0xbf15cc26, 0xbf45305f ),
	NFlagsW( 19, 43.412056 ),
	VERT( 0x41bd9e66, 0xc094bf46, 0x3fe74ab5 ),
	NORM( 0x3d33e617, 0xbf7a8a9e, 0xbe4d776d ),
	NFlagsW( 20, 20.513102 ),
	VERT( 0x41c41b96, 0x40a11016, 0xbe6d2df6 ),
	NORM( 0x3e53201b, 0x3f6a7692, 0xbeb06044 ),
	NFlagsW( 21, 13.575377 ),
	VERT( 0x41c398f7, 0x405366ea, 0xc02966fa ),
	NORM( 0x3ef53778, 0x3f15a9ca, 0xbf27a48d ),
	NFlagsW( 22, 42.180420 ),
	VERT( 0x41bfa773, 0x4092d251, 0x408203b5 ),
	NORM( 0xbe968ac9, 0x3f64f5bf, 0x3eac994b ),
	NFlagsW( 23, 1.738251 ),
	VERT( 0x41bf1a2c, 0xc0221e7e, 0xbfd2a6c8 ),
	NORM( 0x3e4752d9, 0xbf1af5d3, 0xbf4595fd ),
	NFlagsW( 24, 46.650990 ),
	VERT( 0x41c02d3f, 0xbf9c896a, 0xc029b4cb ),
	NORM( 0x3ecdbf89, 0xbf14aaa4, 0xbf353fb6 ),
	NFlagsW( 25, 48.515049 ),
	VERT( 0x41b88a07, 0xc0976d83, 0x4056e514 ),
	NORM( 0xbde600a4, 0xbf7d5778, 0x3db7b852 ),
	NFlagsW( 26, 14.144966 ),
	VERT( 0x41bfd11f, 0x40a0c58a, 0xbf17fc92 ),
	NORM( 0x3e504b21, 0x3f6c1d8b, 0xbea83668 ),
	NFlagsW( 27, 30.992191 ),
	VERT( 0x41ba8f9c, 0xc06c2afb, 0xbf129b7c ),
	NORM( 0x3e171e87, 0xbf593af5, 0xbf02135a ),
	NFlagsW( 28, 46.998375 ),
	VERT( 0x41bb14b7, 0xc041ca9d, 0xbfb1e906 ),
	NORM( 0x3e293589, 0xbf30275d, 0xbf34e06b ),
	NFlagsW( 29, 49.487720 ),
	VERT( 0x41bf2a7c, 0x3fddacb4, 0xc072b566 ),
	NORM( 0x3f0f1c19, 0x3e396e71, 0xbf4f2390 ),
	NFlagsW( 30, 65.542488 ),
	VERT( 0x41bd54a2, 0x40a770d1, 0x3fc769c9 ),
	NORM( 0xbe0aad32, 0x3f7c9f4a, 0x3db5bbbf ),
	NFlagsW( 31, 16.199141 ),
	VERT( 0x41be1ce2, 0x3ea3cd12, 0xc07b93d4 ),
	NORM( 0x3f06ffce, 0xbe5e30a3, 0xbf524c8b ),
	NFlagsW( 32, 65.768196 ),
	VERT( 0x41be0d52, 0x405000fc, 0xc05025d4 ),
	NORM( 0x3ef7b841, 0x3f0edab7, 0xbf2c9713 ),
	NFlagsW( 33, 68.332672 ),
	VERT( 0x41b7f557, 0x4054dca9, 0x40b93dc0 ),
	NORM( 0xbf037539, 0x3f2fdcbb, 0x3f03a214 ),
	NFlagsW( 34, 2.036372 ),
	VERT( 0x41b44965, 0xc0897390, 0x409454db ),
	NORM( 0xbe93b585, 0xbf60cb83, 0x3ec36f5c ),
	NFlagsW( 35, 10.161459 ),
	VERT( 0x41ba8089, 0xbfa271dc, 0xc0513d78 ),
	NORM( 0x3f094f2b, 0xbf123dd1, 0xbf1f0bbe ),
	NFlagsW( 36, 59.484882 ),
	VERT( 0x41b8f600, 0xc0177e64, 0xbffc173e ),
	NORM( 0x3eb8a28d, 0xbf2f9b0a, 0xbf21ca56 ),
	NFlagsW( 37, 51.778202 ),
	VERT( 0x41bb86a9, 0x40a07bcc, 0xbf74aca1 ),
	NORM( 0x3e1a8c04, 0x3f6e9e6d, 0xbea892ba ),
	NFlagsW( 38, 52.096355 ),
	VERT( 0x41ba9f29, 0x3ea63632, 0xc0868c80 ),
	NORM( 0x3ed8519c, 0xbe317742, 0xbf63bf7c ),
	NFlagsW( 39, 78.127190 ),
	VERT( 0x41b18966, 0xc0411063, 0x40c90838 ),
	NORM( 0xbf0113d5, 0xbf16cf90, 0x3f21a6b1 ),
	NFlagsW( 40, 3.156563 ),
	VERT( 0x41b42e5c, 0xc08c6e47, 0x3f52daf0 ),
	NORM( 0x3ce942f8, 0xbf75afdb, 0xbe8f1e7f ),
	NFlagsW( 41, 48.347656 ),
	VERT( 0x41b5bd59, 0xc061809f, 0xbf81f4a7 ),
	NORM( 0x3e222613, 0xbf50f275, 0xbf0e3ee4 ),
	NFlagsW( 42, 53.163101 ),
	VERT( 0x41b8f28c, 0x40a6147e, 0x3fa1b4ff ),
	NORM( 0xbe0d6137, 0x3f7bde1f, 0x3de92801 ),
	NFlagsW( 43, 32.002632 ),
	VERT( 0x41babb8c, 0x3ff28dd1, 0xc0860940 ),
	NORM( 0x3ef57a6a, 0x3e4d6104, 0xbf5ab634 ),
	NFlagsW( 44, 84.537216 ),
	VERT( 0x41b8c92c, 0xbf0babc0, 0xc07b4c3d ),
	NORM( 0x3ee219de, 0xbed7668f, 0xbf4adeb4 ),
	NFlagsW( 45, 73.379501 ),
	VERT( 0x41b6e173, 0xc00ce40e, 0xc0232a7a ),
	NORM( 0x3f02bb5f, 0xbf325803, 0xbf00fdaa ),
	NFlagsW( 46, 56.677986 ),
	VERT( 0x41b671b1, 0x408df518, 0x4054c61d ),
	NORM( 0xbebea0a7, 0x3f578068, 0x3ec81a74 ),
	NFlagsW( 47, 22.119995 ),
	VERT( 0x41b77bbc, 0xbfaa7a68, 0xc05fc97d ),
	NORM( 0x3ef7f79c, 0xbf1624a4, 0xbf263229 ),
	NFlagsW( 48, 67.294235 ),
	VERT( 0x41b11ceb, 0x3f986002, 0x40d6da1a ),
	NORM( 0xbf1bae7c, 0x3ebaae00, 0x3f3484b8 ),
	NFlagsW( 49, 4.599885 ),
	VERT( 0x41aefa42, 0xbf82e13e, 0x40e3772e ),
	NORM( 0xbf23823d, 0xbdbb8cb7, 0x3f43944e ),
	NFlagsW( 50, 2.471600 ),
	VERT( 0x41b8807e, 0x4057152b, 0xc0646da3 ),
	NORM( 0x3eb90088, 0x3f1d1e3d, 0xbf33b429 ),
	NFlagsW( 51, 87.289085 ),
	VERT( 0x41b40d12, 0xc012405b, 0xc02e40a9 ),
	NORM( 0x3eed73ed, 0xbf34e9ce, 0xbf08c935 ),
	NFlagsW( 52, 61.935116 ),
	VERT( 0x41ae5e19, 0xc0937c66, 0x40156478 ),
	NORM( 0xbdd79972, 0xbf7e8e30, 0x3c5665ee ),
	NFlagsW( 53, 49.311417 ),
	VERT( 0x41b4906f, 0x40a4b83c, 0x3f78005c ),
	NORM( 0xbe217d00, 0x3f7b05df, 0x3def242e ),
	NFlagsW( 54, 48.539577 ),
	VERT( 0x41af770c, 0xc0884672, 0x3ea9fe21 ),
	NORM( 0x3d4b5d3a, 0xbf72d027, 0xbea033e2 ),
	NFlagsW( 55, 57.228512 ),
	VERT( 0x41b528e3, 0x3e81e0ac, 0xc08d3eaa ),
	NORM( 0x3e873cbf, 0xbe482721, 0xbf71c8e7 ),
	NFlagsW( 56, 89.180161 ),
	VERT( 0x41b3bf2d, 0xbfb4f5c2, 0xc0713cf1 ),
	NORM( 0x3eb8cb38, 0xbf0dfa25, 0xbf3ff0dc ),
	NFlagsW( 57, 79.030212 ),
	VERT( 0x41b0eb17, 0xc056d662, 0xbfba9bab ),
	NORM( 0x3e7127bc, 0xbf523398, 0xbf051a82 ),
	NFlagsW( 58, 58.636719 ),
	VERT( 0x41b589e7, 0x409bba32, 0xbfc8bbc8 ),
	NORM( 0x3e1a9653, 0x3f6cadc0, 0xbeb32bdd ),
	NFlagsW( 59, 76.334351 ),
	VERT( 0x41b241a7, 0xc016e949, 0xc0359c90 ),
	NORM( 0x3ed0a234, 0xbf38d2cb, 0xbf0f2885 ),
	NFlagsW( 60, 66.690155 ),
	VERT( 0x41b1d727, 0x408b85dd, 0x403d2583 ),
	NORM( 0xbec03220, 0x3f53580d, 0x3ed7bb03 ),
	NFlagsW( 61, 36.282089 ),
	VERT( 0x41b5449d, 0x3ff2e8cb, 0xc08f58dd ),
	NORM( 0x3e892564, 0x3e4f7e9b, 0xbf7120d8 ),
	NFlagsW( 62, 94.982689 ),
	VERT( 0x41a9d6c6, 0xc088b5f4, 0x406396af ),
	NORM( 0xbea4622b, 0xbf60ad5e, 0x3eb63741 ),
	NFlagsW( 63, 50.506245 ),
	VERT( 0x41b23c7e, 0x409b7a71, 0xbfe62938 ),
	NORM( 0x3e21f1fa, 0x3f6e9f3f, 0xbea6cf3e ),
	NFlagsW( 64, 86.120483 ),
	VERT( 0x41abdd86, 0xc08539c0, 0xbc87ebb6 ),
	NORM( 0x3dce9b92, 0xbf70a8cd, 0xbea6c210 ),
	NFlagsW( 65, 63.005672 ),
	VERT( 0x41af7d3a, 0xbfb52055, 0xc07c0b14 ),
	NORM( 0x3e80b022, 0xbf040509, 0xbf51aea7 ),
	NFlagsW( 66, 87.923523 ),
	VERT( 0x41ac2b47, 0x403ea6b6, 0x408e5099 ),
	NORM( 0xbf1203af, 0x3f29e184, 0x3ef7d738 ),
	NFlagsW( 67, 38.137592 ),
	VERT( 0x41b1f744, 0x4062e6d7, 0xc0712fc5 ),
	NORM( 0x3e5fbc73, 0x3f2569e3, 0xbf3b347a ),
	NFlagsW( 68, 97.155273 ),
	VERT( 0x41a94821, 0xc09183d0, 0x3fe9485f ),
	NORM( 0xbd9799bc, 0xbf7f3a97, 0xbcbd9495 ),
	NFlagsW( 69, 64.510635 ),
	VERT( 0x41b01992, 0x3e51f71b, 0xc0913a27 ),
	NORM( 0x3e4c0f9b, 0xbe42c465, 0xbf761836 ),
	NFlagsW( 70, 94.753410 ),
	VERT( 0x41ad3bed, 0x408917b1, 0x402584b7 ),
	NORM( 0xbeafda78, 0x3f5352e1, 0x3ee55272 ),
	NFlagsW( 71, 49.004776 ),
	VERT( 0x41acd281, 0xc0217a46, 0xc0403786 ),
	NORM( 0x3e6177ba, 0xbf42f572, 0xbf1c0b59 ),
	NFlagsW( 72, 79.956726 ),
	VERT( 0x41ab2063, 0xc05bf4cf, 0xbfc8fe34 ),
	NORM( 0x3e27d799, 0xbf5d39ef, 0xbef39774 ),
	NFlagsW( 73, 68.087776 ),
	VERT( 0x41a66e84, 0xc03b9cef, 0x40a1e9d1 ),
	NORM( 0xbf13e2cc, 0xbf0a81fe, 0x3f1c7712 ),
	NFlagsW( 74, 44.603264 ),
	VERT( 0x41af6683, 0x3feb75e7, 0xc09330f4 ),
	NORM( 0x3e16ac40, 0x3e467cac, 0xbf784dc5 ),
	NFlagsW( 75, 98.107491 ),
	VERT( 0x41a8e826, 0xc0852aaa, 0xbe32279f ),
	NORM( 0x3e109861, 0xbf7041b0, 0xbea151d8 ),
	NFlagsW( 76, 68.769814 ),
	VERT( 0x41ad1318, 0x40a0b6de, 0x3f09fc2a ),
	NORM( 0xbe1bb595, 0x3f7b21f9, 0x3df6f795 ),
	NFlagsW( 77, 71.214668 ),
	VERT( 0x41ae615e, 0x409c36a4, 0xbff9275d ),
	NORM( 0x3daece4c, 0x3f713847, 0xbea5ca11 ),
	NFlagsW( 78, 93.641159 ),
	VERT( 0x41ab3bd1, 0xbfb54bba, 0xc0836bd8 ),
	NORM( 0x3e5c862c, 0xbf011705, 0xbf5615bc ),
	NFlagsW( 79, 94.392899 ),
	VERT( 0x41a61b4f, 0x3f83c6fb, 0x40ae8949 ),
	NORM( 0xbf28360d, 0x3ebac67f, 0x3f28e0bc ),
	NFlagsW( 80, 42.469727 ),
	VERT( 0x41a49dab, 0xc08856ed, 0x40410d5a ),
	NORM( 0xbea58543, 0xbf5ff1b3, 0x3eb8c732 ),
	NFlagsW( 81, 69.520454 ),
	VERT( 0x41a58071, 0xc08fe910, 0x3fb95261 ),
	NORM( 0xbcf19873, 0xbf7fbb5e, 0xbd0f41ee ),
	NFlagsW( 82, 73.993736 ),
	VERT( 0x41a48def, 0xbf7d62fe, 0x40b87267 ),
	NORM( 0xbf36d2a7, 0xbd92d57e, 0x3f324152 ),
	NFlagsW( 83, 42.882889 ),
	VERT( 0x41ac768b, 0x40623432, 0xc07a1b78 ),
	NORM( 0x3e0ff3ea, 0x3f21c43c, 0xbf431f1e ),
	NFlagsW( 84, 99.267685 ),
	VERT( 0x41ab0a3f, 0x3e202823, 0xc095355f ),
	NORM( 0x3e581303, 0xbe38ff66, 0xbf75ecbb ),
	NFlagsW( 85, 97.860649 ),
	VERT( 0x41a6cad8, 0x403487bf, 0x40757cfc ),
	NORM( 0xbefe7898, 0x3f2398f6, 0x3f1646ba ),
	NFlagsW( 86, 51.153099 ),
	VERT( 0x41a91249, 0x409f69c6, 0x3eb06ef9 ),
	NORM( 0xbdcf36dc, 0x3f7bdb2e, 0x3e1772c2 ),
	NFlagsW( 87, 81.025330 ),
	VERT( 0x41a2e530, 0xc08fdb3a, 0x3f9c9d74 ),
	NORM( 0x3d1027fe, 0xbf7fd0b9, 0xbc69a6f8 ),
	NFlagsW( 88, 80.465981 ),
	VERT( 0x41a0e146, 0xc038e3fc, 0x408e5a86 ),
	NORM( 0xbf1507d1, 0xbf055a25, 0x3f1fd273 ),
	NFlagsW( 89, 65.055649 ),
	VERT( 0x41a987ee, 0x3fe4038c, 0xc097092f ),
	NORM( 0x3e4003b0, 0x3e3ee648, 0xbf76e37a ),
	NFlagsW( 90, 99.411667 ),
	VERT( 0x41a0fe92, 0xc088c529, 0x40255316 ),
	NORM( 0xbe9d531e, 0xbf643138, 0x3eaa9ad7 ),
	NFlagsW( 91, 80.392830 ),
	VERT( 0x41a608d5, 0x408796ef, 0x400509d2 ),
	NORM( 0xbe894d5e, 0x3f55cbe5, 0x3ef5e0f0 ),
	NFlagsW( 92, 66.859528 ),
	VERT( 0x41a897f4, 0x409bbb50, 0xc0035720 ),
	NORM( 0x3cfe13d2, 0x3f7243a4, 0xbea4b18b ),
	NFlagsW( 93, 98.412148 ),
	VERT( 0x419f580b, 0xbf7939c4, 0x40a2efee ),
	NORM( 0xbf34fdba, 0xbd8912c5, 0x3f343c22 ),
	NFlagsW( 94, 60.322254 ),
	VERT( 0x41a09a66, 0x3f72f280, 0x409a60b6 ),
	NORM( 0xbf26276a, 0x3eb89ac5, 0x3f2b7dae ),
	NFlagsW( 95, 56.552738 ),
	VERT( 0x419e72e1, 0xc0870525, 0x401ab14b ),
	NORM( 0xbe26e249, 0xbf671670, 0x3ecbe67d ),
	NFlagsW( 96, 85.677185 ),
	VERT( 0x41a6f5c3, 0x40618281, 0xc08183d8 ),
	NORM( 0x3e1d5863, 0x3f219894, 0xbf429daf ),
	NFlagsW( 97, 99.867996 ),
	VERT( 0x41a2c8df, 0xc0244a57, 0xc04fe6d7 ),
	NORM( 0x3e1c3f88, 0xbf42da2e, 0xbf2160ac ),
	NFlagsW( 98, 96.215401 ),
	VERT( 0x41a4b937, 0x409f0155, 0x3e33dc41 ),
	NORM( 0xbd9d2575, 0x3f7b7d8f, 0x3e2e7a7d ),
	NFlagsW( 99, 90.349312 ),
	VERT( 0x419fba11, 0xc08a6ce1, 0xbe7b6598 ),
	NORM( 0x3e1358e8, 0xbf7363f5, 0xbe8c926a ),
	NFlagsW( 100, 90.778725 ),
	VERT( 0x41a127c8, 0x4035a0ee, 0x405a2d23 ),
	NORM( 0xbeb3706d, 0x3f1d6f31, 0x3f34d56a ),
	NFlagsW( 101, 61.398434 ),
	VERT( 0x41a0e66c, 0xc066e4d3, 0xbfda8285 ),
	NORM( 0x3e264fbf, 0xbf5c286a, 0xbef7b108 ),
	NFlagsW( 102, 91.724136 ),
	VERT( 0x41a28fa4, 0x408707a5, 0x3ff365b1 ),
	NORM( 0xbe5410e3, 0x3f573355, 0x3f001df5 ),
	NFlagsW( 103, 75.048630 ),
	VERT( 0x419ccd69, 0xc036e5c6, 0x40803f52 ),
	NORM( 0xbefa167a, 0xbf0887c9, 0x3f30cdad ),
	NFlagsW( 104, 76.036980 ),
	VERT( 0x41a2cb84, 0xbfbb0ed6, 0xc0895ded ),
	NORM( 0x3e34fe7b, 0xbf05c86c, 0xbf55850f ),
	NFlagsW( 105, 98.959442 ),
	VERT( 0x419b83c3, 0xbf763352, 0x409385ee ),
	NORM( 0xbf19a0b4, 0xbd9d9491, 0x3f4bd462 ),
	NFlagsW( 106, 68.893242 ),
	VERT( 0x41a2683c, 0x3e07e2b1, 0xc09ce53b ),
	NORM( 0x3e5fa0c8, 0xbe396d6f, 0xbf757b66 ),
	NFlagsW( 107, 99.693481 ),
	VERT( 0x419c8652, 0x3f638ca8, 0x408bf381 ),
	NORM( 0xbf042da1, 0x3eb15d19, 0x3f48801e ),
	NFlagsW( 108, 64.020882 ),
	VERT( 0x419b64e4, 0xc0910f0b, 0x3f9800f5 ),
	NORM( 0x3d3028c9, 0xbf7ec225, 0x3db52ee9 ),
	NFlagsW( 109, 95.531242 ),
	VERT( 0x41a2ce58, 0x409b4084, 0xc00a1a0c ),
	NORM( 0x3d2ef856, 0x3f72c189, 0xbea11206 ),
	NFlagsW( 110, 99.805313 ),
	VERT( 0x419fbf9a, 0x40864198, 0x3fe8a1e4 ),
	NORM( 0xbe38a6c2, 0x3f566e42, 0x3f04006f ),
	NFlagsW( 111, 81.327141 ),
	VERT( 0x419a1f3d, 0xc037cbfe, 0x40751e21 ),
	NORM( 0xbe190556, 0xbf13dc29, 0x3f4d7358 ),
	NFlagsW( 112, 83.202698 ),
	VERT( 0x419d6ff7, 0x4037f825, 0x404c3f7f ),
	NORM( 0xbe698bb3, 0x3f1df195, 0x3f40d2bf ),
	NFlagsW( 113, 69.761322 ),
	VERT( 0x41a06034, 0x409e98bf, 0x3bdb4fe9 ),
	NORM( 0x3b10f672, 0x3f7ca107, 0x3e259d17 ),
	NFlagsW( 114, 96.677422 ),
	VERT( 0x41a152ed, 0x3fe2f0eb, 0xc09eb116 ),
	NORM( 0x3e607781, 0x3e42a3cc, 0xbf74fcec ),
	NFlagsW( 115, 99.940163 ),
	VERT( 0x4198ec1c, 0xbf75ebed, 0x408e046f ),
	NORM( 0xbe318a92, 0xbdc0c154, 0x3f7af80a ),
	NFlagsW( 116, 75.412041 ),
	VERT( 0x41999bc2, 0x3f5d4b28, 0x4086fea8 ),
	NORM( 0xbe0e5b5b, 0x3ea663b2, 0x3f6f7978 ),
	NFlagsW( 117, 70.809021 ),
	VERT( 0x419cef7e, 0x40857b40, 0x3fdddde5 ),
	NORM( 0xbd00e528, 0x3f579167, 0x3f09d895 ),
	NFlagsW( 118, 87.359886 ),
	VERT( 0x41979033, 0xc0864b29, 0x401ba07d ),
	NORM( 0xbd060643, 0xbf5f0c9f, 0x3efab7b5 ),
	NFlagsW( 119, 97.520065 ),
	VERT( 0x419ab4fa, 0x40390fb1, 0x4046d631 ),
	NORM( 0x3c029223, 0x3f1de35a, 0x3f498095 ),
	NFlagsW( 120, 76.972786 ),
	VERT( 0x41940c6b, 0xc032b71b, 0x407c3485 ),
	NORM( 0x3d6a2ad0, 0xbf098301, 0x3f576f67 ),
	NFlagsW( 121, 96.690109 ),
	VERT( 0x419a5b7f, 0xbfc0d425, 0xc08f5042 ),
	NORM( 0x3e1650e1, 0xbf07e3ea, 0xbf55ad2d ),
	NFlagsW( 122, 99.878830 ),
	VERT( 0x4198bfa9, 0xc0271c65, 0xc05f95fd ),
	NORM( 0x3e0b2cdd, 0xbf3fbb31, 0xbf26068f ),
	NFlagsW( 123, 99.786865 ),
	VERT( 0x4196ac41, 0xc071d367, 0xbfec05c5 ),
	NORM( 0x3e02530f, 0xbf5d27ad, 0xbef984d8 ),
	NFlagsW( 124, 99.741524 ),
	VERT( 0x4194b54d, 0xc090bca4, 0xbea9aa63 ),
	NORM( 0x3daf982b, 0xbf77c0d3, 0xbe7267eb ),
	NFlagsW( 125, 99.940338 ),
	VERT( 0x4192defb, 0xbf7a4216, 0x4090f762 ),
	NORM( 0x3df56778, 0xbdc88d54, 0x3f7cea84 ),
	NFlagsW( 126, 93.744049 ),
	VERT( 0x4199c637, 0x3ddf4907, 0xc0a494ca ),
	NORM( 0x3e2d99ce, 0xbe44df9d, 0xbf777267 ),
	NFlagsW( 127, 99.967728 ),
	VERT( 0x4192977a, 0xc09291e4, 0x3f883a8e ),
	NORM( 0x3c72e6af, 0xbf7dfa8a, 0x3dff0cb4 ),
	NFlagsW( 128, 99.982391 ),
	VERT( 0x4192270e, 0x3f57fc7b, 0x408adeee ),
	NORM( 0x3dffc172, 0x3e8e8d8b, 0x3f73ca43 ),
	NFlagsW( 129, 93.615356 ),
	VERT( 0x419221c2, 0x4037929a, 0x40588439 ),
	NORM( 0x3e438c4a, 0x3f12f228, 0x3f4bd86b ),
	NFlagsW( 130, 97.590309 ),
	VERT( 0x4193f78c, 0x408892b9, 0x3fe658f9 ),
	NORM( 0x3e04944f, 0x3f53ad77, 0x3f0c1b6a ),
	NFlagsW( 131, 99.591484 ),
	VERT( 0x418b9bee, 0xbf7f7d60, 0x4094813a ),
	NORM( 0x3dd6384c, 0xbde17773, 0x3f7d07eb ),
	NFlagsW( 132, 99.979378 ),
	CnkV_VN_NF(FV_CONT|FW_END, 1051),
	OffnbIdx(0, 150),
	VERT( 0x411fd165, 0x3ee30ea8, 0x40993107 ),
	NORM( 0xbd4f3f6b, 0x3e4f458b, 0x3f7a5dae ),
	NFlagsW( 3172, 99.863747 ),
	VERT( 0x41162638, 0x401c9b34, 0x40831b7e ),
	NORM( 0xbcfe910f, 0x3f065827, 0x3f59c56c ),
	NFlagsW( 3173, 98.063583 ),
	VERT( 0x4106e73d, 0xc098b2e1, 0x3fa2ada4 ),
	NORM( 0x3d10c720, 0xbf771a16, 0x3e849604 ),
	NFlagsW( 3174, 99.488937 ),
	VERT( 0x41045fcf, 0xc08322ac, 0x4033d6bc ),
	NORM( 0x3d4247a1, 0xbf53a161, 0x3f0f87e9 ),
	NFlagsW( 3175, 94.321648 ),
	VERT( 0x41045965, 0xc09dc9c9, 0xbe0fba3e ),
	NORM( 0x3d16d2e6, 0xbf7fd1ee, 0x3be623cb ),
	NFlagsW( 3176, 99.202278 ),
	VERT( 0x40fe3a95, 0xc032c33b, 0x4082a800 ),
	NORM( 0x3d3daab5, 0xbf186699, 0x3f4d5a21 ),
	NFlagsW( 3177, 72.036484 ),
	VERT( 0x4109b7b7, 0x408f30fc, 0x4001eb8b ),
	NORM( 0x3d3c64f4, 0x3f5bf24a, 0x3f0276d4 ),
	NFlagsW( 3178, 94.561409 ),
	VERT( 0x41029857, 0xc0995d3f, 0xbff53289 ),
	NORM( 0x3d511844, 0xbf789fd7, 0xbe6e5d6d ),
	NFlagsW( 3179, 97.869835 ),
	VERT( 0x410a7272, 0x40a5195e, 0xbdfce4ff ),
	NORM( 0x3dc9179f, 0x3f7ab33f, 0x3e3543bc ),
	NFlagsW( 3180, 97.784523 ),
	VERT( 0x410dfc46, 0x40a5c8a1, 0xc0527378 ),
	NORM( 0x3e0b7666, 0x3f6fd12f, 0xbea505cc ),
	NFlagsW( 3181, 99.874557 ),
	VERT( 0x40f340a2, 0xbfbd9fda, 0x409b941c ),
	NORM( 0xbbac245c, 0xbe44882d, 0x3f7b3cb8 ),
	NFlagsW( 3182, 58.548946 ),
	VERT( 0x4100184e, 0xc085d4e7, 0xc0612cae ),
	NORM( 0x3d579f9e, 0xbf629978, 0xbeecb3e1 ),
	NFlagsW( 3183, 92.483932 ),
	VERT( 0x40ec97fc, 0x3c179266, 0x40967a3c ),
	NORM( 0xbc8a96c5, 0x3e3b6fa2, 0x3f7ba336 ),
	NFlagsW( 3184, 51.394100 ),
	VERT( 0x40f53112, 0xc03b51b0, 0xc0ab4d9e ),
	NORM( 0x3da209a6, 0xbf2e8538, 0xbf3a31c6 ),
	NFlagsW( 3185, 81.247452 ),
	VERT( 0x40edda71, 0xbfc83f87, 0xc0c647e1 ),
	NORM( 0x3de00e19, 0xbec6cae5, 0xbf6a3f67 ),
	NFlagsW( 3186, 71.268166 ),
	VERT( 0x40d6f101, 0x401b262c, 0x407d9dcc ),
	NORM( 0xbca4ebea, 0x3eecb756, 0x3f62f016 ),
	NFlagsW( 3187, 50.140659 ),
	VERT( 0x40c87234, 0xbfe1df69, 0x40997d88 ),
	NORM( 0x3cfb64c9, 0xbe5e47ca, 0x3f79c5b9 ),
	NFlagsW( 3188, 50.435318 ),
	VERT( 0x40c4ac96, 0xc03fa774, 0x4086d60e ),
	NORM( 0x3da3fc6b, 0xbf14c320, 0x3f4f5467 ),
	NFlagsW( 3189, 51.625431 ),
	VERT( 0x40c8de5d, 0xbd66dbd3, 0x4098ed70 ),
	NORM( 0x3d83de72, 0x3e20fd96, 0x3f7c4747 ),
	NFlagsW( 3190, 50.004051 ),
	VERT( 0x40c276bc, 0xc0883c86, 0x40403553 ),
	NORM( 0x3d91ea72, 0xbf5289b9, 0x3f107d2f ),
	NFlagsW( 3191, 56.831024 ),
	VERT( 0x40e2d7d2, 0x3e4f06e9, 0xc0d5788b ),
	NORM( 0x3e1431b5, 0x3c24f5ac, 0xbf7d4ab4 ),
	NFlagsW( 3192, 61.212082 ),
	VERT( 0x40bd048d, 0xc09d0cf2, 0x3fb5e9b6 ),
	NORM( 0x3d801bdc, 0xbf77ef86, 0x3e76d18e ),
	NFlagsW( 3193, 61.919830 ),
	VERT( 0x40e109d4, 0x402b79dd, 0xc0bf5d3f ),
	NORM( 0x3e4075a4, 0x3ee2c0f9, 0xbf606cd3 ),
	NFlagsW( 3194, 61.487133 ),
	VERT( 0x40c7344f, 0x4063e21b, 0x404396dd ),
	NORM( 0x3d59a8af, 0x3f298237, 0x3f3f5b8d ),
	NFlagsW( 3195, 50.357143 ),
	VERT( 0x40baf749, 0xc0a1ae0d, 0xbd3bdaa6 ),
	NORM( 0x3d3672ef, 0xbf7fbe4a, 0xbb920a20 ),
	NFlagsW( 3196, 63.206207 ),
	VERT( 0x40b7d912, 0x400bb8c4, 0x40819c24 ),
	NORM( 0x3c4b2583, 0x3ed9a865, 0x3f67b1b3 ),
	NFlagsW( 3197, 50.000000 ),
	VERT( 0x40b72cc6, 0xc09c0e65, 0xbff3f175 ),
	NORM( 0x3c998779, 0xbf787186, 0xbe763690 ),
	NFlagsW( 3198, 59.133934 ),
	VERT( 0x40a58e92, 0xbe3739c5, 0x409cf269 ),
	NORM( 0x3dca5f8e, 0x3ddfc46c, 0x3f7d34f2 ),
	NFlagsW( 3199, 50.000000 ),
	VERT( 0x40b75f9b, 0x4093c72d, 0x4003d3a3 ),
	NORM( 0x3e35d442, 0x3f53520f, 0x3f09294e ),
	NFlagsW( 3200, 52.471989 ),
	VERT( 0x40b1a459, 0xc0868876, 0xc0635dca ),
	NORM( 0x3bdef79b, 0xbf63c9bc, 0xbee9a0e0 ),
	NFlagsW( 3201, 53.503620 ),
	VERT( 0x40bd0c49, 0x40b6059a, 0xbf10c82e ),
	NORM( 0x3e6de67c, 0x3f7584a9, 0x3e25de0d ),
	NFlagsW( 3202, 62.844265 ),
	VERT( 0x409a26b8, 0xbfe1f4f9, 0x409ae46e ),
	NORM( 0x3ce97089, 0xbe69a135, 0x3f792426 ),
	NFlagsW( 3203, 49.960865 ),
	VERT( 0x40bf6998, 0x40ab3846, 0xc0843eab ),
	NORM( 0x3e93689b, 0x3f549670, 0xbef436dc ),
	NFlagsW( 3204, 57.406765 ),
	VERT( 0x40ac4c18, 0xc04ad45f, 0xc0a5b3c6 ),
	NORM( 0x3c9aef48, 0xbf409400, 0xbf2899ca ),
	NFlagsW( 3205, 49.633335 ),
	VERT( 0x409e470f, 0x3ffa447f, 0x40865bb3 ),
	NORM( 0x3dee43b1, 0x3ed2a9f1, 0x3f676aec ),
	NFlagsW( 3206, 50.000000 ),
	VERT( 0x40a0de3e, 0x406a818b, 0x4047379e ),
	NORM( 0x3daa462f, 0x3f193872, 0x3f4bfa01 ),
	NFlagsW( 3207, 50.000675 ),
	VERT( 0x408ca4bd, 0xc044f6e5, 0x408949bb ),
	NORM( 0x3c54a1d8, 0xbf11d3ef, 0x3f5260f0 ),
	NFlagsW( 3208, 49.704109 ),
	VERT( 0x40ac89d1, 0xbfd28c78, 0xc0cd8aab ),
	NORM( 0x3d9a300e, 0xbee7c215, 0xbf6374ec ),
	NFlagsW( 3209, 43.348412 ),
	VERT( 0x40ac5ad7, 0xbd07641b, 0xc0dc20e8 ),
	NORM( 0x3ddd3cd0, 0xbdc2ed15, 0xbf7d5533 ),
	NFlagsW( 3210, 38.637039 ),
	VERT( 0x407bce18, 0xc0860cb2, 0x4048dab0 ),
	NORM( 0x3cdf7183, 0xbf5088bb, 0x3f145396 ),
	NFlagsW( 3211, 49.438679 ),
	VERT( 0x40a69854, 0x401a3ff8, 0xc0d5701c ),
	NORM( 0x3e88de76, 0x3e9aa7f7, 0xbf6a4002 ),
	NFlagsW( 3212, 33.056305 ),
	VERT( 0x407d5fe5, 0x3e66ddb3, 0x409f2a22 ),
	NORM( 0x3de3cd89, 0x3e092d97, 0x3f7c16dd ),
	NFlagsW( 3213, 49.871544 ),
	VERT( 0x406f75c6, 0xc09e3754, 0x3fd4c884 ),
	NORM( 0x3d0f2daf, 0xbf743b94, 0x3e9865e1 ),
	NFlagsW( 3214, 49.501537 ),
	VERT( 0x406c4d12, 0xbfbb9a1a, 0x409d5c8a ),
	NORM( 0x3b27887a, 0xbe523ffa, 0x3f7a8b7e ),
	NFlagsW( 3215, 49.448917 ),
	VERT( 0x40677088, 0xc0a4fdef, 0x3dcf5b14 ),
	NORM( 0x3d8e5687, 0xbf7f5f07, 0xbc0eafe9 ),
	NFlagsW( 3216, 49.845779 ),
	VERT( 0x40582b86, 0xc034022d, 0x408c0e42 ),
	NORM( 0xbd75ab68, 0xbefef1a8, 0x3f5d7992 ),
	NFlagsW( 3217, 48.765030 ),
	VERT( 0x4091a265, 0x40c2786e, 0xc088eb9e ),
	NORM( 0x3ee69e9b, 0x3f4c9e4b, 0xbecbad11 ),
	NFlagsW( 3218, 25.159534 ),
	VERT( 0x405fc1da, 0xc09ccf6e, 0xbfec567e ),
	NORM( 0x3d67c5ba, 0xbf76afd5, 0xbe85be00 ),
	NFlagsW( 3219, 48.962769 ),
	VERT( 0x40820a39, 0xbfca9c0f, 0xc0d1c3da ),
	NORM( 0x3cebffab, 0xbef3e3d7, 0xbf60f80a ),
	NFlagsW( 3220, 31.578354 ),
	VERT( 0x4084f3bc, 0x3c454616, 0xc0dffb66 ),
	NORM( 0x3d863a51, 0xbe0e0fa7, 0xbf7cf7f9 ),
	NFlagsW( 3221, 25.864256 ),
	VERT( 0x40892a0c, 0x404f3db5, 0xc0d86271 ),
	NORM( 0x3ecdc0bb, 0x3eae0bbd, 0xbf59ab0d ),
	NFlagsW( 3222, 14.048968 ),
	VERT( 0x405c617a, 0xc084552d, 0xc06a3326 ),
	NORM( 0x3d206b45, 0xbf629e42, 0xbeed50bd ),
	NFlagsW( 3223, 47.024734 ),
	VERT( 0x40347ebf, 0xc082cd00, 0x4054ce9a ),
	NORM( 0xbd520443, 0xbf43c251, 0x3f2471dd ),
	NFlagsW( 3224, 46.873535 ),
	VERT( 0x40369505, 0xbf803ce1, 0x409f95b5 ),
	NORM( 0x3d9f1f0b, 0xbe453eed, 0x3f7a6ac9 ),
	NFlagsW( 3225, 48.191338 ),
	VERT( 0x40631177, 0xc045cf95, 0xc0aa0acc ),
	NORM( 0x3d3231d3, 0xbf3efe66, 0xbf2a1917 ),
	NFlagsW( 3226, 39.900394 ),
	VERT( 0x402989e0, 0xc09bfb5d, 0x3ff45fb9 ),
	NORM( 0x3ada56ae, 0xbf6ebbe3, 0x3eb8d84c ),
	NFlagsW( 3227, 46.507671 ),
	VERT( 0x40722b1c, 0x3f1ac0a3, 0xc0e33557 ),
	NORM( 0x3e5b743d, 0xbd884c22, 0xbf79788b ),
	NFlagsW( 3228, 18.948576 ),
	VERT( 0x40620890, 0xbfb2dbb8, 0xc0d4deef ),
	NORM( 0x3c2d573f, 0xbeea09a2, 0xbf63ac6e ),
	NFlagsW( 3229, 25.298325 ),
	VERT( 0x4025e9e7, 0xc0a82aa1, 0x3ea1f1c1 ),
	NORM( 0x3d1edba4, 0xbf7f801d, 0x3d486f8b ),
	NFlagsW( 3230, 46.066051 ),
	VERT( 0x401b5354, 0xc018bc91, 0x409181aa ),
	NORM( 0xbc08d28f, 0xbef3fa97, 0x3f610e37 ),
	NFlagsW( 3231, 46.465542 ),
	VERT( 0x406dd4d8, 0x406e31ec, 0xc0dae9ef ),
	NORM( 0x3ee5a58a, 0x3eb79c04, 0xbf51944d ),
	NFlagsW( 3232, 4.075499 ),
	VERT( 0x402272c0, 0xc0a005c0, 0xbfed1497 ),
	NORM( 0x3d668625, 0xbf774397, 0xbe817180 ),
	NFlagsW( 3233, 45.094017 ),
	VERT( 0x400a00ff, 0xc079fe3e, 0x405a1719 ),
	NORM( 0xbd8dc40c, 0xbf386efb, 0x3f30a724 ),
	NFlagsW( 3234, 44.726437 ),
	VERT( 0x404a1f74, 0xbf838af1, 0xc0db7991 ),
	NORM( 0x3e1e4231, 0xbecd73bc, 0xbf671f90 ),
	NFlagsW( 3235, 17.756596 ),
	VERT( 0x40351798, 0xc046e5cf, 0xc0ac3a94 ),
	NORM( 0x3cea0cce, 0xbf4321dd, 0xbf258c16 ),
	NFlagsW( 3236, 32.638153 ),
	VERT( 0x40501d27, 0x3f93d2ef, 0xc0e88d57 ),
	NORM( 0x3e958de1, 0xbd39df9e, 0xbf748f43 ),
	NFlagsW( 3237, 8.433708 ),
	VERT( 0x400295e3, 0xc09a1959, 0x40025040 ),
	NORM( 0xbcec8bd5, 0xbf6b8527, 0x3ec81db6 ),
	NFlagsW( 3238, 43.538807 ),
	VERT( 0x3ffe46c9, 0xc0046adf, 0x4097ef5e ),
	NORM( 0x3dfc423e, 0xbef057a0, 0x3f5fd4e5 ),
	NFlagsW( 3239, 43.815762 ),
	VERT( 0x4022999e, 0xc086d3a4, 0xc06a9c23 ),
	NORM( 0x3df1dff5, 0xbf626740, 0xbee73349 ),
	NFlagsW( 3240, 41.954720 ),
	VERT( 0x3ff07a19, 0xc0a8407f, 0x3eafaed4 ),
	NORM( 0xbc5942e9, 0xbf7f83f5, 0x3d75f47f ),
	NFlagsW( 3241, 41.930325 ),
	VERT( 0x3fd4daa3, 0xbff71359, 0x409c354e ),
	NORM( 0x3e1ae462, 0xbeed6bec, 0x3f5f7b6c ),
	NFlagsW( 3242, 40.602810 ),
	VERT( 0x402f75b5, 0xbf3dfb34, 0xc0e20352 ),
	NORM( 0x3e44f841, 0xbeb507a7, 0xbf6a58a9 ),
	NFlagsW( 3243, 9.569441 ),
	VERT( 0x401bb1c8, 0xc035161a, 0xc0b6f93d ),
	NORM( 0x3e153dbb, 0xbf33dffc, 0xbf324b65 ),
	NFlagsW( 3244, 24.330614 ),
	VERT( 0x40367ffc, 0x3fcb4bdb, 0xc0edd808 ),
	NORM( 0x3ea7772c, 0xbc04a0a2, 0xbf71e8ff ),
	NFlagsW( 3245, 2.372170 ),
	VERT( 0x3fc444e4, 0xc06c593e, 0x40660e9b ),
	NORM( 0x3cfb6821, 0xbf336883, 0x3f367273 ),
	NFlagsW( 3246, 41.060917 ),
	VERT( 0x3ff3ad07, 0xc09fdd11, 0xbff188d6 ),
	NORM( 0x3d0b1461, 0xbf78adf3, 0xbe70a165 ),
	NFlagsW( 3247, 41.062786 ),
	VERT( 0x40068560, 0xc07de7fd, 0xc08991d2 ),
	NORM( 0x3e637154, 0xbf5630b1, 0xbf002960 ),
	NFlagsW( 3248, 33.412518 ),
	VERT( 0x3fff52f5, 0xc08b40ea, 0xc061d6b9 ),
	NORM( 0x3e1fcef4, 0xbf66ea5d, 0xbece15fe ),
	NFlagsW( 3249, 37.373329 ),
	VERT( 0x3fbcb587, 0xc095db5c, 0x40131409 ),
	NORM( 0xbc8bb82c, 0xbf6321e5, 0x3eec083b ),
	NFlagsW( 3250, 39.587914 ),
	VERT( 0x3fb3d103, 0xc0a78c9e, 0x3ee638a5 ),
	NORM( 0xbcb83b68, 0xbf7e6279, 0x3de10991 ),
	NFlagsW( 3251, 38.316635 ),
	VERT( 0x40044e4b, 0xc01fcc74, 0xc0c5128d ),
	NORM( 0x3e81116a, 0xbf1f11ca, 0xbf3dea9a ),
	NFlagsW( 3252, 13.279064 ),
	VERT( 0x3fbaabf9, 0xc0a09513, 0xbff11268 ),
	NORM( 0x3d713660, 0xbf7a2267, 0xbe516ff0 ),
	NFlagsW( 3253, 36.906494 ),
	VERT( 0x400d4e2c, 0xbf080fb5, 0xc0e7f48b ),
	NORM( 0x3e451dd4, 0xbea49f57, 0xbf6d5832 ),
	NFlagsW( 3254, 3.050176 ),
	VERT( 0x3f832af5, 0xc06895e2, 0x406dd310 ),
	NORM( 0x3da4c3c3, 0xbf3572a7, 0x3f336958 ),
	NFlagsW( 3255, 35.680271 ),
	VERT( 0x3fdc91c8, 0xc07320eb, 0xc09789f4 ),
	NORM( 0x3e7362a1, 0xbf4d6961, 0xbf0c2458 ),
	NFlagsW( 3256, 23.751043 ),
	VERT( 0x3fc45815, 0xc08e6864, 0xc062fbf3 ),
	NORM( 0x3e2dab2d, 0xbf683b6b, 0xbec52bf7 ),
	NFlagsW( 3257, 30.768734 ),
	VERT( 0x40139afa, 0x3fea503a, 0xc0f2fa4a ),
	NORM( 0x3ead6544, 0xbc81a0a6, 0xbf70d697 ),
	NFlagsW( 3258, 0.174680 ),
	VERT( 0x3f7e76d9, 0xc09531ee, 0x401463c0 ),
	NORM( 0xbc84b2a6, 0xbf647c5e, 0x3ee6c39f ),
	NFlagsW( 3259, 35.170918 ),
	VERT( 0x3fd3f75c, 0xc01ce4ef, 0xc0c99922 ),
	NORM( 0x3e46b07d, 0xbf1d8fc8, 0xbf438edf ),
	NFlagsW( 3260, 6.799482 ),
	VERT( 0x3f644251, 0xc0a76471, 0x3ed84659 ),
	NORM( 0xbc538e97, 0xbf7e747d, 0x3ddf1905 ),
	NFlagsW( 3261, 33.198635 ),
	VERT( 0x3fe56a18, 0xbecdb96c, 0xc0ec0ae8 ),
	NORM( 0x3e6a6fe3, 0xbea1a872, 0xbf6bba54 ),
	NFlagsW( 3262, 0.738664 ),
	VERT( 0x3f7e8ef9, 0xc0a13dd9, 0xbffab31c ),
	NORM( 0x3d991c34, 0xbf7a5541, 0xbe481f49 ),
	NFlagsW( 3263, 30.923689 ),
	VERT( 0x3fa6afa8, 0xc071f9d6, 0xc09d1332 ),
	NORM( 0x3e450909, 0xbf4e88f8, 0xbf0f036e ),
	NFlagsW( 3264, 15.292719 ),
	VERT( 0x3f04224b, 0xc064d282, 0x4075975a ),
	NORM( 0x3dbc7e5a, 0xbf349eaf, 0x3f33e1a0 ),
	NFlagsW( 3265, 28.719532 ),
	VERT( 0x3f8a29d5, 0xc08edf01, 0xc06c3284 ),
	NORM( 0x3e18691c, 0xbf68fc3a, 0xbec602af ),
	NFlagsW( 3266, 22.618797 ),
	VERT( 0x3f038290, 0xc0948840, 0x4015b390 ),
	NORM( 0x3c536a4f, 0xbf661131, 0x3ee07291 ),
	NFlagsW( 3267, 29.784685 ),
	VERT( 0x3f94ee34, 0xc0196a21, 0xc0cf0414 ),
	NORM( 0x3e57eaa7, 0xbf16cb6c, 0xbf47b535 ),
	NFlagsW( 3268, 1.922961 ),
	VERT( 0x3ec1c579, 0xc0a73c14, 0x3eca54d1 ),
	NORM( 0xbc024b61, 0xbf7e8388, 0x3ddbc16c ),
	NFlagsW( 3269, 27.019140 ),
	VERT( 0x3f438919, 0xc07080e2, 0xc0a4281d ),
	NORM( 0x3e570904, 0xbf4c1f6c, 0xbf10d826 ),
	NFlagsW( 3270, 6.094210 ),
	VERT( 0x3eb77739, 0xc0a224fe, 0xc003f2d1 ),
	NORM( 0x3d70a267, 0xbf7b39a7, 0xbe3b6ebc ),
	NFlagsW( 3271, 21.070477 ),
	VERT( 0x3ee413f0, 0xc08f8477, 0xc0790bd5 ),
	NORM( 0x3e19bff3, 0xbf6a16fe, 0xbec07689 ),
	NFlagsW( 3272, 10.973261 ),
	VERT( 0xbe4241d5, 0xc0630915, 0x407d9dcc ),
	NORM( 0x3de4640d, 0xbf37f008, 0x3f2fbfe2 ),
	NFlagsW( 3273, 17.373190 ),
	VERT( 0xbebab1ca, 0xc093b7a4, 0x401e92ed ),
	NORM( 0x3d994a1c, 0xbf668b73, 0x3edb40c1 ),
	NFlagsW( 3274, 16.872881 ),
	VERT( 0x3ede2713, 0xc01af010, 0xc0d482e9 ),
	NORM( 0x3e54c3b0, 0xbf133630, 0xbf4a926e ),
	NFlagsW( 3275, 0.040352 ),
	VERT( 0xbec7ba81, 0xc0a71015, 0x3edab5d0 ),
	NORM( 0x3c178465, 0xbf7e7c61, 0x3ddd9b1c ),
	NFlagsW( 3276, 16.534273 ),
	VERT( 0xbeb461e0, 0xc0a2c0cc, 0xc00a91ca ),
	NORM( 0x3d46f3ec, 0xbf7c1302, 0xbe2b93f1 ),
	NFlagsW( 3277, 10.403989 ),
	VERT( 0xbd60e5fe, 0xc06fcb98, 0xc0ae9563 ),
	NORM( 0x3e56b013, 0xbf49b21c, 0xbf143c98 ),
	NFlagsW( 3278, 0.266710 ),
	VERT( 0xbe83b39e, 0xc08fe2c6, 0xc0856969 ),
	NORM( 0x3e168e1f, 0xbf6a797a, 0xbebf3794 ),
	NFlagsW( 3279, 2.124926 ),
	VERT( 0xbf951c27, 0xc05c7ef2, 0x4086d1d6 ),
	NORM( 0x3e0bc3c0, 0xbf3a53da, 0x3f2c09c8 ),
	NFlagsW( 3280, 3.517396 ),
	VERT( 0xbf92eb77, 0xc0931afb, 0x402df9ba ),
	NORM( 0x3dceea10, 0xbf640fa8, 0x3ee2c2ce ),
	NFlagsW( 3281, 4.950872 ),
	VERT( 0xbf92ca22, 0xc0a714aa, 0x3f06fb02 ),
	NORM( 0x3b99711a, 0xbf7e395e, 0x3df09e8a ),
	NFlagsW( 3282, 6.350590 ),
	VERT( 0xbfdaf928, 0xc092b919, 0x403883f0 ),
	NORM( 0x3d9ca0e9, 0xbf61ec9c, 0x3eed941f ),
	NFlagsW( 3283, 0.851288 ),
	VERT( 0xbfb6ab88, 0xc0a3aac4, 0xc00da564 ),
	NORM( 0x3dd28e11, 0xbf7c73ab, 0xbe0558f4 ),
	NFlagsW( 3284, 1.047014 ),
	VERT( 0xbfdac76d, 0xc0a6a588, 0x3f0effea ),
	NORM( 0xbcadeda2, 0xbf7def3d, 0x3dfff634 ),
	NFlagsW( 3285, 1.847786 ),
	VERT( 0x4093b3c5, 0x406c69e4, 0x4048f79d ),
	NORM( 0x3e3622fa, 0x3f171a1e, 0x3f499223 ),
	NFlagsW( 3286, 49.980370 ),
	VERT( 0x408988ac, 0x40a2614e, 0x40051718 ),
	NORM( 0x3e66b8a9, 0x3f47ca04, 0x3f154f2d ),
	NFlagsW( 3287, 50.062466 ),
	VERT( 0x407a7215, 0x402c9585, 0x4080ff19 ),
	NORM( 0x3e5508d0, 0x3ef228c0, 0x3f5b2db4 ),
	NFlagsW( 3288, 49.776539 ),
	VERT( 0x408ab6d9, 0x40c85455, 0xbf2ce734 ),
	NORM( 0x3ea9d28a, 0x3f6d5df4, 0x3e321f60 ),
	NFlagsW( 3289, 51.208393 ),
	VERT( 0x40560885, 0x3f4b29e4, 0x409e20c8 ),
	NORM( 0x3e15c741, 0x3e5dced2, 0x3f7719e3 ),
	NFlagsW( 3290, 49.307171 ),
	VERT( 0x406cd52c, 0x4081681c, 0x404dbc6f ),
	NORM( 0x3e7a2660, 0x3f1d8696, 0x3f3fdc72 ),
	NFlagsW( 3291, 48.950844 ),
	VERT( 0x40558c92, 0x40ac00c3, 0x4002e792 ),
	NORM( 0x3e71f9e7, 0x3f4a3775, 0x3f10dc91 ),
	NFlagsW( 3292, 44.400509 ),
	VERT( 0x402eb1ab, 0x3fae4e1b, 0x409d1774 ),
	NORM( 0x3e708527, 0x3e913ceb, 0x3f6e0187 ),
	NFlagsW( 3293, 47.015152 ),
	VERT( 0x40631801, 0x40d17bed, 0xbf3af693 ),
	NORM( 0x3ea6b674, 0x3f6cc7ea, 0x3e48e5d7 ),
	NFlagsW( 3294, 38.409702 ),
	VERT( 0x40224cc8, 0xbf35a619, 0x40a2afef ),
	NORM( 0x3e190a96, 0xbe119d82, 0x3f7a7e49 ),
	NFlagsW( 3295, 46.870213 ),
	VERT( 0x40757d94, 0x40ce1831, 0xc08b4267 ),
	NORM( 0x3ee73590, 0x3f503e85, 0xbebbadf1 ),
	NFlagsW( 3296, 7.357934 ),
	VERT( 0x403798f0, 0x4051db8b, 0x407c6593 ),
	NORM( 0x3e3a7a89, 0x3f020d6f, 0x3f57852a ),
	NFlagsW( 3297, 46.341305 ),
	VERT( 0x400e0521, 0xbed5a0cc, 0x40a5c9e9 ),
	NORM( 0x3e694430, 0xbdc4f4fa, 0x3f780ceb ),
	NFlagsW( 3298, 44.700401 ),
	VERT( 0x402475a6, 0x40942166, 0x404027ca ),
	NORM( 0x3e53d491, 0x3f26ccaf, 0x3f3ad72e ),
	NFlagsW( 3299, 40.676575 ),
	VERT( 0x404a7b2f, 0x4086f946, 0xc0de6222 ),
	NORM( 0x3ef8615a, 0x3ecaf653, 0xbf478910 ),
	NFlagsW( 3300, 0.217056 ),
	VERT( 0x4047b66d, 0x40d9b84d, 0xc08d98de ),
	NORM( 0x3ed1b2fd, 0x3f5b1197, 0xbea1e1c8 ),
	NFlagsW( 3301, 0.340980 ),
	VERT( 0x4030c2e4, 0x40daa35f, 0xbf4905c6 ),
	NORM( 0x3e91bb7b, 0x3f6f7578, 0x3e56e25f ),
	NFlagsW( 3302, 19.899725 ),
	VERT( 0x40180866, 0x40b59ff4, 0x4000b80e ),
	NORM( 0x3e4b2a5d, 0x3f4d0941, 0x3f10a001 ),
	NFlagsW( 3303, 30.987221 ),
	VERT( 0x3fdf2f4e, 0x400451f8, 0x40a053e4 ),
	NORM( 0x3eb115fb, 0x3eb963c3, 0x3f5d9801 ),
	NFlagsW( 3304, 35.081036 ),
	VERT( 0x3fc47227, 0xbd65aec7, 0x40adc51f ),
	NORM( 0x3e9c12c1, 0xbd387b06, 0x3f738b13 ),
	NFlagsW( 3305, 35.233715 ),
	VERT( 0x3fab6e98, 0xbfe551dc, 0x40a07aef ),
	NORM( 0x3e4669dc, 0xbeda66f1, 0x3f622a3f ),
	NFlagsW( 3306, 36.361530 ),
	VERT( 0x3fdc20dc, 0x4064c28b, 0x40802834 ),
	NORM( 0x3e84ed64, 0x3f0f96e3, 0x3f493f6b ),
	NFlagsW( 3307, 34.142147 ),
	VERT( 0x3fcd2965, 0x409cbdc5, 0x404428c8 ),
	NORM( 0x3e3c2d1d, 0x3f28e0e2, 0x3f3a8e2c ),
	NFlagsW( 3308, 25.114635 ),
	VERT( 0x3fc75ad0, 0x40bd5728, 0x3ff4a427 ),
	NORM( 0x3e384da5, 0x3f545262, 0x3f0765b9 ),
	NFlagsW( 3311, 15.702756 ),
	VERT( 0x3f319cd8, 0x4020555f, 0x40a795ca ),
	NORM( 0x3ec82248, 0x3ebb01d2, 0x3f58493d ),
	NFlagsW( 3312, 13.324678 ),
	VERT( 0x3ee52bca, 0x3de1027f, 0x40ba8cc1 ),
	NORM( 0x3eb814ce, 0xbd4fd7d8, 0x3f6e8740 ),
	NFlagsW( 3313, 11.801845 ),
	VERT( 0x3f3d7785, 0x405f05b8, 0x40903390 ),
	NORM( 0x3eb69f7a, 0x3f16d140, 0x3f399d04 ),
	NFlagsW( 3314, 15.438819 ),
	VERT( 0x3e1785bb, 0xbff00965, 0x40a8bfc9 ),
	NORM( 0x3e6c0dff, 0xbef8448a, 0x3f57f8fb ),
	NFlagsW( 3315, 14.900407 ),
	VERT( 0x3f2d9eb2, 0x40a97d56, 0x40399e52 ),
	NORM( 0x3f36055a, 0x3ede8786, 0x3f0d8212 ),
	NFlagsW( 3316, 8.320922 ),
	VERT( 0xbdef8f54, 0x403788e4, 0x40afb97f ),
	NORM( 0x3f10d07e, 0x3e70c52a, 0x3f4a5722 ),
	NFlagsW( 3319, 1.504202 ),
	VERT( 0xbf24cb6d, 0x3d978a45, 0x40ca169c ),
	NORM( 0x3efe67e5, 0xbde57a92, 0x3f5c4d15 ),
	NFlagsW( 3321, 0.169766 ),
	VERT( 0xbf850519, 0xbfed8669, 0x40b4befe ),
	NORM( 0x3e95c677, 0xbf0958c3, 0x3f4aa44e ),
	NFlagsW( 3323, 0.514248 ),
	VERT( 0xbff355f1, 0xc056a149, 0x408f4e18 ),
	NORM( 0x3de0ab0a, 0xbf3d6afb, 0x3f29e805 ),
	NFlagsW( 3329, 0.115957 ),
	VERT( 0x3ff43e0f, 0x40e1e934, 0xbf57054d ),
	NORM( 0x3e1e800e, 0x3f76842b, 0x3e621df6 ),
	NFlagsW( 3606, 4.426386 ),
	VERT( 0x3f3d4735, 0x40c50e12, 0x3fe7d7f7 ),
	NORM( 0x3f4651bd, 0x3f096f08, 0x3eab156f ),
	NFlagsW( 3607, 3.892085 ),
	VERT( 0x3f8291c2, 0x40e434a8, 0xbf6de63c ),
	NORM( 0x3f2d09e1, 0x3f345b49, 0x3e5d7459 ),
	NFlagsW( 3608, 0.258522 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_UpperArm[]
START
VList      vertex_kihon11_Bip01_Bip01_R_UpperArm,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_UpperArm[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_UpperArm,
OPosition  ( 10.968481F, -0.000001F,  0.000001F ),
OAngle     ( -13.848063F,  5.650147F, -7.700972F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_Forearm,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_R_Clavicle[]
START
	CnkV_VN(FV_CONT, 115),
	OffnbIdx(796, 19),
	VERT( 0x4140fbbe, 0xbdf55f84, 0xc1029378 ),
	NORM( 0x3e81c78d, 0xbe94e6e8, 0xbf6c2ed3 ),
	VERT( 0x4131acdf, 0xc0089549, 0xc0ec4e15 ),
	NORM( 0x3dfd1453, 0xbf0bdfdf, 0xbf540fe8 ),
	VERT( 0x411db0dd, 0xc00bcfba, 0xc0f2ebc2 ),
	NORM( 0x3e351f47, 0xbf18c9a2, 0xbf485a8d ),
	VERT( 0x4113fac8, 0xc078ac92, 0xc0be49c9 ),
	NORM( 0x3dba6ccb, 0xbf4407e7, 0xbf22fcc1 ),
	VERT( 0x410cec3e, 0xc098a298, 0xc0948a69 ),
	NORM( 0x3de67e1f, 0xbf683512, 0xbecfb53f ),
	VERT( 0x410a1b5c, 0xc0a5c448, 0xc050531e ),
	NORM( 0x3d8783e4, 0xbf7c6248, 0xbe1d8d48 ),
	VERT( 0x40ff505f, 0xc030e3fe, 0xc0f43b96 ),
	NORM( 0x3e3e4b4d, 0xbf26d638, 0xbf3c401f ),
	VERT( 0x40e18add, 0xc0a0229b, 0xc09c58ae ),
	NORM( 0x3e5259a3, 0xbf61cb0d, 0xbed9251f ),
	VERT( 0x40dfb2c0, 0xc0a8bf4e, 0xbf171da3 ),
	NORM( 0x3d664a18, 0xbf7a37f1, 0x3e5098b0 ),
	VERT( 0x40de553e, 0xc0ac7c0b, 0xbff04b09 ),
	NORM( 0x3e06ac1e, 0xbf7d8ed8, 0x3d286c3e ),
	VERT( 0x40ddb386, 0xc0ac3767, 0xc068babd ),
	NORM( 0x3e51a73b, 0xbf7815fc, 0xbe0cfb40 ),
	VERT( 0x40e3f728, 0xc0880518, 0xc0bcfe2c ),
	NORM( 0x3e38a5cb, 0xbf492319, 0xbf177d34 ),
	VERT( 0x40e10693, 0xc0866d4c, 0x400cd510 ),
	NORM( 0xbd83f087, 0xbf6d5118, 0x3ebd273a ),
	VERT( 0x40e25128, 0xc05c812c, 0x408380b0 ),
	NORM( 0x3cedb06f, 0xbf5399aa, 0x3f0fe576 ),
	VERT( 0x40d9417c, 0xc0444c21, 0xc0f3a1b9 ),
	NORM( 0x3e0b1e47, 0xbf293a96, 0xbf3ce9a1 ),
	VERT( 0x40b92987, 0xc0b61b8b, 0xc06c3b90 ),
	NORM( 0x3e8fc2b7, 0xbf73418f, 0xbe0a5089 ),
	VERT( 0x40bf90a5, 0xc0914f50, 0xc0bd28b6 ),
	NORM( 0x3e320cd0, 0xbf43e54c, 0xbf1eae38 ),
	VERT( 0x40b76790, 0xc0aaf9ae, 0xc09e91cc ),
	NORM( 0x3e827a2b, 0xbf5e2f80, 0xbeda4c47 ),
	VERT( 0x407a9edf, 0xc0302f3a, 0xc102304b ),
	NORM( 0x3dcd51ce, 0xbf1c9205, 0xbf48e7cf ),
	CnkV_VN_NF(FV_CONT|FW_START, 799),
	OffnbIdx(3172, 114),
	VERT( 0x41abc953, 0x3e2e544e, 0x40625566 ),
	NORM( 0x3dc40ae7, 0x3ed7da18, 0x3f66d73e ),
	NFlagsW( 0, 0.136254 ),
	VERT( 0x41a807ac, 0x4001ebf2, 0x401cec90 ),
	NORM( 0x3e0871ad, 0x3f339c8e, 0x3f3332d5 ),
	NFlagsW( 1, 1.936419 ),
	VERT( 0x41977af2, 0xc0ae4272, 0x3fc4693c ),
	NORM( 0xbd10cc96, 0xbf60de2f, 0x3ef4097e ),
	NFlagsW( 2, 0.511062 ),
	VERT( 0x41985eb9, 0xc08db7f4, 0x403819f7 ),
	NORM( 0x3cf29f4f, 0xbf2db53e, 0x3f3be4ca ),
	NFlagsW( 3, 5.678347 ),
	VERT( 0x4194a746, 0xc0bc9fe9, 0x3e65d77e ),
	NORM( 0xbd8e4a25, 0xbf77ce3b, 0x3e76f77b ),
	NFlagsW( 4, 0.797718 ),
	VERT( 0x41982ea7, 0xc035bcb0, 0x407500ef ),
	NORM( 0x3dabadcd, 0xbecd3e51, 0x3f698c10 ),
	NFlagsW( 5, 27.963520 ),
	VERT( 0x41a188f6, 0x40682571, 0x3d455b2b ),
	NORM( 0x3e4e8ae1, 0x3f700678, 0x3e9104d5 ),
	NFlagsW( 6, 5.438594 ),
	VERT( 0x41921b0f, 0xc0c4a1fa, 0xbfc1a870 ),
	NORM( 0xbda9afc8, 0xbf7f1e98, 0x3ab537be ),
	NFlagsW( 7, 2.130167 ),
	VERT( 0x41a04b78, 0x4073210e, 0xc00cce84 ),
	NORM( 0x3e6531ec, 0x3f78d35c, 0xbd933892 ),
	NFlagsW( 8, 2.215473 ),
	VERT( 0x419ed8ea, 0x40451da4, 0xc0a91da8 ),
	NORM( 0x3e461700, 0x3f50572e, 0xbf0c4701 ),
	NFlagsW( 9, 0.125443 ),
	VERT( 0x419762ee, 0xbfad2ba7, 0x4089aa3c ),
	NORM( 0x3dca4a3b, 0x3d11f405, 0x3f7e95b2 ),
	NFlagsW( 10, 41.451054 ),
	VERT( 0x418fc4b3, 0xc0bc9e4f, 0xc04c4276 ),
	NORM( 0xbdcf43d8, 0xbf7718dc, 0xbe76d431 ),
	NFlagsW( 11, 7.516071 ),
	VERT( 0x4196db2f, 0x3d9ff469, 0x40740f4b ),
	NORM( 0x3e028f57, 0x3ecc8c8d, 0x3f6866d6 ),
	NFlagsW( 12, 48.605900 ),
	VERT( 0x418c4485, 0xc0a18c01, 0xc0a75903 ),
	NORM( 0xbdb22214, 0xbf54f328, 0xbf0c5487 ),
	NFlagsW( 13, 18.752548 ),
	VERT( 0x418ac44c, 0xc0791218, 0xc0cb1361 ),
	NORM( 0xbd4b1f16, 0xbf183ef1, 0xbf4d6aad ),
	NFlagsW( 14, 28.731833 ),
	VERT( 0x4192d485, 0x401559cd, 0x4025c54e ),
	NORM( 0x3e11514f, 0x3f25dcd8, 0x3f3f9662 ),
	NFlagsW( 15, 49.859341 ),
	VERT( 0x418c865c, 0xbfbb3404, 0x408e052d ),
	NORM( 0x3e05f29e, 0x3bad1d5a, 0x3f7dcbf9 ),
	NFlagsW( 16, 49.564682 ),
	VERT( 0x4189f3fe, 0xc030f4b2, 0x4085be06 ),
	NORM( 0x3df4fd11, 0xbec7a2f1, 0x3f69bd81 ),
	NFlagsW( 17, 48.374569 ),
	VERT( 0x418e11f2, 0x3e392884, 0x40806a1c ),
	NORM( 0x3e522b08, 0x3eba855d, 0x3f688be0 ),
	NFlagsW( 18, 49.995949 ),
	VERT( 0x41871a11, 0xc087e1e5, 0x40545295 ),
	NORM( 0x3d5d52bf, 0xbf2d4062, 0x3f3bf57f ),
	NFlagsW( 19, 43.168972 ),
	VERT( 0x4189145d, 0xc00fce98, 0xc0e62234 ),
	NORM( 0x3c962c6b, 0xbe6d24bd, 0xbf78ff0d ),
	NFlagsW( 20, 38.787918 ),
	VERT( 0x41839948, 0xc0a69bb3, 0x3ffaf53c ),
	NORM( 0xbc368968, 0xbf63a18e, 0x3eea3233 ),
	NFlagsW( 21, 38.080170 ),
	VERT( 0x418b7375, 0x3e9d1684, 0xc0e37a08 ),
	NORM( 0x3df8c2ad, 0x3e52b233, 0xbf7895c8 ),
	NFlagsW( 22, 38.512867 ),
	VERT( 0x418f004b, 0x4052bd98, 0x3fbef506 ),
	NORM( 0x3e5f1af6, 0x3f4cc159, 0x3f0f2dde ),
	NFlagsW( 23, 49.642857 ),
	VERT( 0x41817b2b, 0xc0b5564e, 0x3f157962 ),
	NORM( 0xbd819c91, 0xbf78a790, 0x3e6ac1bc ),
	NFlagsW( 24, 36.793797 ),
	VERT( 0x418b0c19, 0x4010021e, 0x4034fb64 ),
	NORM( 0x3e30830d, 0x3f1c9ed8, 0x3f45a202 ),
	NFlagsW( 25, 50.000000 ),
	VERT( 0x417d9e9c, 0xc0bcc1ee, 0xbf9f2860 ),
	NORM( 0xbdecc5b4, 0xbf7e483f, 0xbb4548af ),
	NFlagsW( 26, 40.866070 ),
	VERT( 0x41856315, 0x3e738ada, 0x4088b57a ),
	NORM( 0x3e70293a, 0x3ea0e281, 0x3f6b7ff7 ),
	NFlagsW( 27, 50.000000 ),
	VERT( 0x418afd96, 0x4084fdc8, 0x3ea6f2ef ),
	NORM( 0x3ea98fb4, 0x3f64b5a0, 0x3e9b6fff ),
	NFlagsW( 28, 47.528008 ),
	VERT( 0x4178b2fb, 0xc0b3111e, 0xc03e939b ),
	NORM( 0xbe15a633, 0xbf7655b0, 0xbe6b2271 ),
	NFlagsW( 29, 46.496376 ),
	VERT( 0x418aa3ea, 0x409270e7, 0xc01ee849 ),
	NORM( 0x3eb43def, 0x3f6e6166, 0xbdc225a3 ),
	NFlagsW( 30, 37.155735 ),
	VERT( 0x418127b5, 0xbfa1550b, 0x4093f00f ),
	NORM( 0x3e0233e9, 0xbbba05fe, 0x3f7deb00 ),
	NFlagsW( 31, 50.039135 ),
	VERT( 0x418750fe, 0x405c2bf2, 0xc0bb6785 ),
	NORM( 0x3e9fcaca, 0x3f27fdc4, 0xbf2fdfa9 ),
	NFlagsW( 32, 42.593239 ),
	VERT( 0x4174888f, 0xc09e0e53, 0xc098e97c ),
	NORM( 0xbe14a72c, 0xbf6060eb, 0xbeeb064d ),
	NFlagsW( 33, 50.366665 ),
	VERT( 0x4184b2ef, 0x400ae066, 0x4046aad8 ),
	NORM( 0x3e8bebb8, 0x3f15a265, 0x3f439431 ),
	NFlagsW( 34, 50.000000 ),
	VERT( 0x4185b210, 0x40642c1a, 0x3fd1e90d ),
	NORM( 0x3e7cd906, 0x3f3ed6c6, 0x3f1e7ec8 ),
	NFlagsW( 35, 49.998592 ),
	VERT( 0x41784aca, 0xc02609c7, 0x408e429a ),
	NORM( 0x3d6629b0, 0xbebc05ab, 0x3f6dada7 ),
	NFlagsW( 36, 50.295891 ),
	VERT( 0x4174bae6, 0xc06fe18e, 0xc0cb0c24 ),
	NORM( 0xbdb1a652, 0xbf25780a, 0xbf4211c3 ),
	NFlagsW( 37, 56.651592 ),
	VERT( 0x417677cc, 0xc012cb97, 0xc0e568ac ),
	NORM( 0xbcee7b13, 0xbea81a72, 0xbf71b18d ),
	NFlagsW( 38, 61.362957 ),
	VERT( 0x416cc9be, 0xc0775135, 0x4069228c ),
	NORM( 0x3c5ba764, 0xbf28f475, 0x3f404c3f ),
	NFlagsW( 39, 50.561321 ),
	VERT( 0x417839af, 0x3e0b0338, 0xc0f0ffca ),
	NORM( 0x3e382843, 0x3d4f5ece, 0xbf7b7e0b ),
	NFlagsW( 40, 66.943695 ),
	VERT( 0x41787080, 0x3f4e4473, 0x408b98a8 ),
	NORM( 0x3e7ed55e, 0x3eabbe8c, 0x3f6899d9 ),
	NFlagsW( 41, 50.128418 ),
	VERT( 0x416575c2, 0xc09cc315, 0x401a975b ),
	NORM( 0xbcf2c16f, 0xbf5bdcb6, 0x3f02ea93 ),
	NFlagsW( 42, 50.498466 ),
	VERT( 0x41713a2d, 0xbf4dc675, 0x40979581 ),
	NORM( 0x3dd66e88, 0x3cac76f3, 0x3f7e892d ),
	NFlagsW( 43, 50.551086 ),
	VERT( 0x415ff422, 0xc0adfa2f, 0x3f7849fa ),
	NORM( 0xbd1ffbb3, 0xbf79643e, 0x3e63add0 ),
	NFlagsW( 44, 50.154228 ),
	VERT( 0x4168ddb9, 0xc00bbe9a, 0x40921edb ),
	NORM( 0xbb2aa2d3, 0xbe8e9f4f, 0x3f75ddcb ),
	NFlagsW( 45, 51.234974 ),
	VERT( 0x41790145, 0x40899601, 0xc0c0f3f3 ),
	NORM( 0x3ef54a74, 0x3f1f4c4b, 0xbf1e7cc3 ),
	NFlagsW( 46, 74.840469 ),
	VERT( 0x415a8b7d, 0xc0b38d24, 0xbf7606d5 ),
	NORM( 0xbda43c1f, 0xbf7f1254, 0xbce8fe1a ),
	NFlagsW( 47, 51.037235 ),
	VERT( 0x415f9ced, 0xc0629c23, 0xc0cb6aae ),
	NORM( 0xbe0916c3, 0xbf292dfe, 0xbf3d0ca2 ),
	NFlagsW( 48, 68.421646 ),
	VERT( 0x4162df30, 0xc0073acb, 0xc0e598b7 ),
	NORM( 0xbd9a943e, 0xbeba90b1, 0xbf6d9d81 ),
	NFlagsW( 49, 74.135750 ),
	VERT( 0x416af0e2, 0x3f84bd2d, 0xc0f74270 ),
	NORM( 0x3ea648ea, 0x3dab93d2, 0xbf712bba ),
	NFlagsW( 50, 85.951027 ),
	VERT( 0x41575739, 0xc0a8b6f3, 0xc038f212 ),
	NORM( 0xbdeacfea, 0xbf76b94b, 0xbe76a2e9 ),
	NFlagsW( 51, 52.975262 ),
	VERT( 0x415bc26f, 0xc064da83, 0x407a2834 ),
	NORM( 0xbd4fd9fc, 0xbf165317, 0x3f4ecefb ),
	NFlagsW( 52, 53.126465 ),
	VERT( 0x4164ea9b, 0xbe6a120d, 0x4098d77b ),
	NORM( 0x3e386afa, 0x3cbde3d7, 0x3f7bbe86 ),
	NFlagsW( 53, 51.806969 ),
	VERT( 0x41576ac7, 0xc094c56d, 0xc097eae7 ),
	NORM( 0xbdf7ce0a, 0xbf60064c, 0xbeefe991 ),
	NFlagsW( 54, 60.099602 ),
	VERT( 0x4154d767, 0xc0942bcd, 0x402fac33 ),
	NORM( 0xbd558a13, 0xbf51c6fe, 0x3f121efb ),
	NFlagsW( 55, 53.492325 ),
	VERT( 0x415dd3d1, 0xbfc1d182, 0xc0ec0fa7 ),
	NORM( 0x3da5373f, 0xbe9f7a54, 0xbf7262f0 ),
	NFlagsW( 56, 81.051422 ),
	VERT( 0x415756d4, 0xc053ffe0, 0xc0ce27e8 ),
	NORM( 0xbe1ac3d4, 0xbf2468a8, 0xbf406064 ),
	NFlagsW( 57, 74.701675 ),
	VERT( 0x415010ce, 0xc0ab20f4, 0x3fa6ab04 ),
	NORM( 0xbd7e579d, 0xbf752817, 0x3e8ff741 ),
	NFlagsW( 58, 53.933949 ),
	VERT( 0x415af058, 0xbfcdb764, 0x4097226e ),
	NORM( 0x3d5680d3, 0xbe85f491, 0x3f76b810 ),
	NFlagsW( 59, 53.534462 ),
	VERT( 0x41629bd2, 0x3fc7f6f5, 0xc0fb97d5 ),
	NORM( 0x3ec0eba1, 0x3dd247c6, 0xbf6bab9d ),
	NFlagsW( 60, 95.924500 ),
	VERT( 0x414b3f16, 0xc0b29b22, 0xbf593249 ),
	NORM( 0xbda329b5, 0xbf7f22d7, 0xbca1e3d0 ),
	NFlagsW( 61, 54.905987 ),
	VERT( 0x4151c2ce, 0xc052cbbb, 0x40805712 ),
	NORM( 0xbd6c3c66, 0xbf080a28, 0x3f585be6 ),
	NFlagsW( 62, 55.273563 ),
	VERT( 0x4151a82b, 0xc03cefdb, 0xc0d62d5f ),
	NORM( 0xbba0d546, 0xbf1c4ce8, 0xbf4abe21 ),
	NFlagsW( 63, 82.243401 ),
	VERT( 0x414bea19, 0xc092b88e, 0xc097a33f ),
	NORM( 0xbe0a713b, 0xbf627d1e, 0xbee464dc ),
	NFlagsW( 64, 67.361847 ),
	VERT( 0x41560867, 0xbf730d84, 0xc0f3be2c ),
	NORM( 0x3e25f747, 0xbe981eda, 0xbf70e487 ),
	NFlagsW( 65, 91.566292 ),
	VERT( 0x414b9893, 0xc08ed835, 0x403a7678 ),
	NORM( 0xbd9df648, 0xbf4beb45, 0x3f1980bf ),
	NFlagsW( 66, 56.461197 ),
	VERT( 0x4154f07c, 0xbf993311, 0x409c5046 ),
	NORM( 0x3e3a9961, 0xbe8bf95b, 0x3f71c9d3 ),
	NFlagsW( 67, 56.184227 ),
	VERT( 0x4148f302, 0xc0a750cd, 0xc032770d ),
	NORM( 0xbd10323d, 0xbf78866f, 0xbe72fb80 ),
	NFlagsW( 68, 58.045284 ),
	VERT( 0x4144dacc, 0xc0a7f91b, 0x3fb30fd3 ),
	NORM( 0xbde568fd, 0xbf72c18d, 0x3e98181a ),
	NFlagsW( 69, 58.069675 ),
	VERT( 0x41505754, 0xbf7d64bb, 0x40a06789 ),
	NORM( 0x3e57690b, 0xbe8b3aac, 0x3f706518 ),
	NFlagsW( 70, 59.387623 ),
	VERT( 0x414b2817, 0xc02aac43, 0xc0dd5bc4 ),
	NORM( 0x3d12eac9, 0xbf1286bf, 0xbf51b7d9 ),
	NFlagsW( 71, 90.430557 ),
	VERT( 0x4145726e, 0xc08ad769, 0xc0a2e3f2 ),
	NORM( 0xbca08a78, 0xbf5a9edf, 0xbf0519d8 ),
	NFlagsW( 72, 75.669388 ),
	VERT( 0x41501f67, 0xbf03ca4f, 0xc0fae5ec ),
	NORM( 0x3e4eb671, 0xbe86e468, 0xbf717ce5 ),
	NFlagsW( 73, 97.627831 ),
	VERT( 0x4148accf, 0xc03d9f5e, 0x40867586 ),
	NORM( 0x3d3bad52, 0xbf054c9e, 0x3f5a3e08 ),
	NFlagsW( 74, 58.939087 ),
	VERT( 0x41412c14, 0xc0affea5, 0xbf521d0e ),
	NORM( 0xbdccd4e2, 0xbf7eb75c, 0x3a80558e ),
	NFlagsW( 75, 58.937218 ),
	VERT( 0x4141297c, 0xc0a263c5, 0xc05a9c86 ),
	NORM( 0x3d87a752, 0xbf731ac6, 0xbe9cd387 ),
	NFlagsW( 76, 66.587486 ),
	VERT( 0x41406098, 0xc0a84684, 0xc024710d ),
	NORM( 0x3bd74057, 0xbf7b5bf3, 0xbe41fa83 ),
	NFlagsW( 77, 62.626667 ),
	VERT( 0x41436be4, 0xc08673f1, 0x404c351b ),
	NORM( 0xbd596b4b, 0xbf403237, 0x3f288efd ),
	NFlagsW( 78, 60.412086 ),
	VERT( 0x413da171, 0xc0a481f6, 0x3fc589e2 ),
	NORM( 0xbdea2447, 0xbf6e7ca5, 0x3eb0ac75 ),
	NFlagsW( 79, 61.683361 ),
	VERT( 0x413f5adf, 0xc0822bad, 0xc0b1e596 ),
	NORM( 0x3db49efb, 0xbf4cc640, 0xbf17f750 ),
	NFlagsW( 80, 86.720940 ),
	VERT( 0x413a1d3d, 0xc0aec320, 0xbf44a016 ),
	NORM( 0xbd93cda8, 0xbf7f38df, 0x3cf01d41 ),
	NFlagsW( 81, 63.093502 ),
	VERT( 0x4142b819, 0xc01bc5b5, 0xc0e30627 ),
	NORM( 0x3d1b6d0d, 0xbf0b48dd, 0xbf56929b ),
	NFlagsW( 82, 96.949829 ),
	VERT( 0x4140ff21, 0xc033e803, 0x408b5da4 ),
	NORM( 0x3dbd853a, 0xbf09a5ea, 0x3f568a77 ),
	NFlagsW( 83, 64.319733 ),
	VERT( 0x413a96ba, 0xc09eb4c7, 0xc075c97a ),
	NORM( 0x3da2711b, 0xbf6dd998, 0xbeb8f1b4 ),
	NFlagsW( 84, 76.248955 ),
	VERT( 0x4138e6f3, 0xc0a97b88, 0xc0212471 ),
	NORM( 0x3cb0bfa3, 0xbf7c1797, 0xbe30dcda ),
	NFlagsW( 85, 69.231262 ),
	VERT( 0x41479bae, 0xbe7a0920, 0xc0fffcda ),
	NORM( 0x3e5a1b86, 0xbe8b059c, 0xbf7045d9 ),
	NFlagsW( 86, 99.825317 ),
	VERT( 0x413beb87, 0xc0839e0b, 0x40502f81 ),
	NORM( 0xbd5d9cd6, 0xbf421f77, 0x3f265075 ),
	NFlagsW( 87, 64.829086 ),
	VERT( 0x4138a7e9, 0xc0800776, 0xc0b551dc ),
	NORM( 0x3cebbfab, 0xbf4a9a58, 0xbf1c5027 ),
	NFlagsW( 88, 93.200523 ),
	VERT( 0x41357c89, 0xc0a25ca3, 0x3fc87cc5 ),
	NORM( 0xbdd71b0e, 0xbf6eefa8, 0x3eafc183 ),
	NFlagsW( 89, 66.801369 ),
	VERT( 0x413c1fbb, 0xc0120c2b, 0xc0e6a704 ),
	NORM( 0x3d9a3a38, 0xbf0abc38, 0xbf564842 ),
	NFlagsW( 90, 99.261330 ),
	VERT( 0x41329ae4, 0xc0adf56b, 0xbf4a477e ),
	NORM( 0xbd631cd6, 0xbf7f6ee6, 0x3d166a55 ),
	NFlagsW( 91, 69.076309 ),
	VERT( 0x4133a055, 0xc09d987c, 0xc07e1b71 ),
	NORM( 0x3d064dcc, 0xbf6e0893, 0xbebbad1b ),
	NFlagsW( 92, 84.707283 ),
	VERT( 0x41395177, 0xc02a30b2, 0x409045ac ),
	NORM( 0x3dd61ad4, 0xbf092390, 0x3f56816f ),
	NFlagsW( 93, 71.280464 ),
	VERT( 0x413169d2, 0xc0a90619, 0xc026f5a0 ),
	NORM( 0x3a1861fe, 0xbf7c3460, 0xbe2fac4c ),
	NFlagsW( 94, 77.381203 ),
	VERT( 0x41346b2e, 0xc080c7e4, 0x405429e2 ),
	NORM( 0xbce255e7, 0xbf455a03, 0x3f22e7e5 ),
	NFlagsW( 95, 70.215317 ),
	VERT( 0x4130a283, 0xc07aed72, 0xc0b96ad7 ),
	NORM( 0x3d3cf82a, 0xbf45936d, 0xbf225bc7 ),
	NFlagsW( 96, 98.077042 ),
	VERT( 0x412d57a6, 0xc0a03721, 0x3fcb6fa9 ),
	NORM( 0xbdcd8ff8, 0xbf6f4186, 0x3eaeba00 ),
	NFlagsW( 97, 72.980865 ),
	VERT( 0x412ab892, 0xc09c2d23, 0xc0846007 ),
	NORM( 0x3d4db69a, 0xbf6cb73a, 0xbec13fe3 ),
	NFlagsW( 98, 93.905792 ),
	VERT( 0x41284fd5, 0xc0acdb40, 0xbf5207ef ),
	NORM( 0xbd8f707e, 0xbf7f0937, 0x3d515100 ),
	NFlagsW( 99, 78.929527 ),
	VERT( 0x4126f808, 0xc0a86253, 0xc02f126a ),
	NORM( 0x3b36794f, 0xbf7cb172, 0xbe24084c ),
	NFlagsW( 100, 89.026741 ),
	VERT( 0x412e7ba0, 0xc020a3fa, 0x40962903 ),
	NORM( 0x3df66cd9, 0xbf0def0e, 0x3f52d008 ),
	NFlagsW( 101, 82.626808 ),
	VERT( 0x4126e25f, 0xc0768055, 0x4061e1f9 ),
	NORM( 0x3d02f653, 0xbf488294, 0x3f1ef2e3 ),
	NFlagsW( 102, 83.127121 ),
	VERT( 0x4124bbb2, 0xc078a312, 0xc0bc3f3e ),
	NORM( 0x3d30d815, 0xbf42a79b, 0xbf25e6d6 ),
	NFlagsW( 103, 99.959656 ),
	VERT( 0x41214a29, 0xc09c8a45, 0x3fd8ea0a ),
	NORM( 0xbdaa9093, 0xbf6fc3a6, 0x3eae4b0c ),
	NFlagsW( 104, 83.465729 ),
	VERT( 0x411cdb44, 0xc0ab277f, 0xbf588ca6 ),
	NORM( 0xbda0b239, 0xbf7e9e6d, 0x3d8af74b ),
	NFlagsW( 105, 89.596008 ),
	VERT( 0x411d2919, 0xc09aae2f, 0xc08bf464 ),
	NORM( 0x3d499b0d, 0xbf6b1f5a, 0xbec8f1b3 ),
	NFlagsW( 106, 99.733292 ),
	VERT( 0x411b4c4e, 0xc0a7bc4d, 0xc03ba53d ),
	NORM( 0xb91725b7, 0xbf7cd177, 0xbe20f196 ),
	NFlagsW( 107, 97.875069 ),
	VERT( 0x411fc71b, 0xc00e68ce, 0x40a031d4 ),
	NORM( 0x3e11866e, 0xbf11ed12, 0x3f4f2aa4 ),
	NFlagsW( 108, 96.474419 ),
	VERT( 0x411b0c39, 0xc06b2e15, 0x40756841 ),
	NORM( 0x3d789631, 0xbf462a05, 0x3f215310 ),
	NFlagsW( 109, 95.049126 ),
	VERT( 0x41158d58, 0xc0989c11, 0x3feed8dc ),
	NORM( 0xbdb12682, 0xbf6ed28c, 0x3eb2fdc9 ),
	NFlagsW( 110, 93.649414 ),
	VERT( 0x4112852b, 0xc06345cb, 0x40817a5b ),
	NORM( 0x3d2407ba, 0xbf420caa, 0x3f26a912 ),
	NFlagsW( 111, 99.148712 ),
	VERT( 0x410bc054, 0xc0a7cb95, 0xbf479be2 ),
	NORM( 0xbca71ffa, 0xbf7eb0bc, 0x3dcaa088 ),
	NFlagsW( 112, 98.952988 ),
	VERT( 0x410cc3c1, 0xc09590d0, 0x3ff96530 ),
	NORM( 0xbde34baf, 0xbf6d3a5b, 0x3eb7dda1 ),
	NFlagsW( 113, 98.152206 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 253),
	OffnbIdx(0, 36),
	VERT( 0x418280b8, 0x4069eaf6, 0x3fd9917d ),
	NORM( 0x3ead30b7, 0x3f390536, 0x3f1a49b2 ),
	NFlagsW( 3286, 49.982517 ),
	VERT( 0x41801955, 0x4099577e, 0x3ec146e3 ),
	NORM( 0x3ec249b8, 0x3f5aac6f, 0x3eb5ffbb ),
	NFlagsW( 3287, 49.847874 ),
	VERT( 0x417a068f, 0x403f1778, 0x40378353 ),
	NORM( 0x3eba7b14, 0x3f1ef59b, 0x3f31b0ec ),
	NFlagsW( 3288, 49.883892 ),
	VERT( 0x417d3759, 0x40aa098d, 0xc024829e ),
	NORM( 0x3ee57272, 0x3f63ceac, 0xbdaef78f ),
	NFlagsW( 3289, 48.771049 ),
	VERT( 0x416fa519, 0x3fb6e601, 0x40883377 ),
	NORM( 0x3e945bff, 0x3ecff635, 0x3f5ddbde ),
	NFlagsW( 3290, 50.514793 ),
	VERT( 0x41775073, 0x408435fb, 0x3fe3a57b ),
	NORM( 0x3ecda2b5, 0x3f3ac67a, 0x3f0db3bc ),
	NFlagsW( 3291, 50.205917 ),
	VERT( 0x417179b1, 0x40a67cd9, 0x3ebc2a04 ),
	NORM( 0x3ec73a57, 0x3f5ba4cc, 0x3eabb194 ),
	NFlagsW( 3292, 54.251934 ),
	VERT( 0x4166d9d4, 0x400354cc, 0x4084ce46 ),
	NORM( 0x3ec2761d, 0x3ee6f947, 0x3f4ebfa3 ),
	NFlagsW( 3293, 51.316959 ),
	VERT( 0x41712f0f, 0x40b5d61d, 0xc0274fd4 ),
	NORM( 0x3ee3b2ff, 0x3f64b9f9, 0xbd809d29 ),
	NFlagsW( 3294, 61.097301 ),
	VERT( 0x41609cac, 0x3df0d2ce, 0x409a9c26 ),
	NORM( 0x3e83375f, 0x3d7f62e0, 0x3f76ef4f ),
	NFlagsW( 3295, 53.056698 ),
	VERT( 0x416e30df, 0x409755a5, 0xc0c3ba63 ),
	NORM( 0x3ef8acc9, 0x3f248db6, 0xbf17a6e5 ),
	NFlagsW( 3296, 92.614990 ),
	VERT( 0x416a5cb5, 0x406abb55, 0x402fcf30 ),
	NORM( 0x3eae5fe6, 0x3f27af8a, 0x3f2cac3a ),
	NFlagsW( 3297, 50.216736 ),
	VERT( 0x415c4ee0, 0x3eed74dc, 0x409c607c ),
	NORM( 0x3eacaba2, 0x3dc0eadb, 0x3f6fcb06 ),
	NFlagsW( 3298, 54.842918 ),
	VERT( 0x41660a49, 0x40999668, 0x3fc5d08e ),
	NORM( 0x3ebb729a, 0x3f43e0ed, 0x3f0795df ),
	NFlagsW( 3299, 53.767658 ),
	VERT( 0x415a8556, 0x4005ca87, 0xc1007e4c ),
	NORM( 0x3ed80215, 0x3e1285b2, 0xbf653158 ),
	NFlagsW( 3300, 99.762955 ),
	VERT( 0x41636087, 0x40a515b0, 0xc0c6809a ),
	NORM( 0x3ee90b79, 0x3f3354cc, 0xbf0cb553 ),
	NFlagsW( 3301, 99.157257 ),
	VERT( 0x416526e8, 0x40c1a281, 0xc02a1cfd ),
	NORM( 0x3ed077b6, 0x3f697ebb, 0xbd44da55 ),
	NFlagsW( 3302, 77.233414 ),
	VERT( 0x4162c0da, 0x40b3a1e7, 0x3eb70dbc ),
	NORM( 0x3eb4a20b, 0x3f5f9b37, 0x3eabcdcd ),
	NFlagsW( 3303, 62.961472 ),
	VERT( 0x4158b452, 0x4038ccd2, 0x4085a8e2 ),
	NORM( 0x3efaa010, 0x3efeca68, 0x3f374fcb ),
	NFlagsW( 3304, 56.171894 ),
	VERT( 0x4152a21c, 0x3f75aba3, 0x40a37de4 ),
	NORM( 0x3ed53775, 0x3e04701a, 0x3f6660fe ),
	NFlagsW( 3305, 61.826801 ),
	VERT( 0x414bbe28, 0xbf4865a6, 0x40a47e8f ),
	NORM( 0x3e83e02c, 0xbe752240, 0x3f6fa6a0 ),
	NFlagsW( 3306, 63.534992 ),
	VERT( 0x4158dc9f, 0x4083d4f2, 0x403654e8 ),
	NORM( 0x3ed4c8c5, 0x3f2ee799, 0x3f19b458 ),
	NFlagsW( 3307, 53.090595 ),
	VERT( 0x41575efd, 0x40a67992, 0x3fd1884c ),
	NORM( 0x3eb027e0, 0x3f469c2c, 0x3f07659c ),
	NFlagsW( 3308, 59.926479 ),
	VERT( 0x41560df7, 0x40bdda87, 0x3e916dc7 ),
	NORM( 0x3eaa8c38, 0x3f65329f, 0x3e976e0e ),
	NFlagsW( 3311, 69.791916 ),
	VERT( 0x414958e3, 0x40600f16, 0x408ca4ae ),
	NORM( 0x3f08172d, 0x3efae589, 0x3f30db2a ),
	NFlagsW( 3312, 64.159599 ),
	VERT( 0x414292cd, 0x3fad5db7, 0x40b20005 ),
	NORM( 0x3eef40ed, 0x3de5a861, 0x3f60809c ),
	NFlagsW( 3313, 76.206673 ),
	VERT( 0x414a44b5, 0x4088d7c9, 0x405ce033 ),
	NORM( 0x3f01af73, 0x3f2f0f81, 0x3f066e28 ),
	NFlagsW( 3314, 59.685387 ),
	VERT( 0x41395387, 0xbf259320, 0x40b0e01f ),
	NORM( 0x3e90a9a6, 0xbe9e7b1f, 0x3f686edc ),
	NFlagsW( 3315, 83.630280 ),
	VERT( 0x414920c9, 0x40b58b56, 0x3fbcab53 ),
	NORM( 0x3f515323, 0x3ee5c5d3, 0x3eb89c46 ),
	NFlagsW( 3316, 64.194420 ),
	VERT( 0x413db089, 0x40808399, 0x40944c8e ),
	NORM( 0x3f2ee4fc, 0x3ea86437, 0x3f26e900 ),
	NFlagsW( 3319, 65.390495 ),
	VERT( 0x41324712, 0x3fc981e7, 0x40c4b9ae ),
	NORM( 0x3f1650df, 0x3c98e424, 0x3f4f2ad5 ),
	NFlagsW( 3321, 77.580421 ),
	VERT( 0x4127635e, 0xbec55318, 0x40c00eca ),
	NORM( 0x3ea9c501, 0xbec234e0, 0x3f5d230b ),
	NFlagsW( 3323, 92.773834 ),
	VERT( 0x4114db65, 0xbffd5012, 0x40aa0396 ),
	NORM( 0x3de82565, 0xbf147920, 0x3f4e8498 ),
	NFlagsW( 3329, 99.610519 ),
	VERT( 0x4157f54c, 0x40cbe7f1, 0xc02b945e ),
	NORM( 0x3e911fc4, 0x3f755ee4, 0xbcfff18a ),
	NFlagsW( 3606, 85.461456 ),
	VERT( 0x41495ae8, 0x40c812e7, 0x3e579d08 ),
	NORM( 0x3f5d183c, 0x3efad593, 0x3df322d6 ),
	NFlagsW( 3607, 70.668961 ),
	VERT( 0x4149e305, 0x40d144e7, 0xc02c9a76 ),
	NORM( 0x3f44eb54, 0x3f2373b1, 0xbcd00ac7 ),
	NFlagsW( 3608, 76.950218 ),
	CnkV_VN_NF(FV_CONT|FW_END, 470),
	OffnbIdx(0, 67),
	VERT( 0x414e2bad, 0x4020bb04, 0xc1049847 ),
	NORM( 0x3eba237c, 0x3e2acff5, 0xbf6aa0e7 ),
	NFlagsW( 3309, 99.483093 ),
	VERT( 0x415557c5, 0x40afb085, 0xc0cc6b46 ),
	NORM( 0x3ecb1543, 0x3f3b1f37, 0xbf0e2a10 ),
	NFlagsW( 3310, 96.502594 ),
	VERT( 0x41474f02, 0x40ba4baa, 0xc0d255ff ),
	NORM( 0x3f2bef73, 0x3efdffd4, 0xbf0cdf95 ),
	NFlagsW( 3317, 88.645454 ),
	VERT( 0x413d4fb8, 0x403ca8de, 0xc109966d ),
	NORM( 0x3eabbe07, 0x3e4af314, 0xbf6bc552 ),
	NFlagsW( 3318, 96.275078 ),
	VERT( 0x41415ede, 0x40c1675e, 0x4071aa7a ),
	NORM( 0x3f71bd87, 0xbe25096e, 0x3e92e7b4 ),
	NFlagsW( 3320, 74.392090 ),
	VERT( 0x412ce287, 0x3c3e81b9, 0xc108cbcd ),
	NORM( 0x3e811535, 0xbe94e527, 0xbf6c4788 ),
	NFlagsW( 3322, 99.760719 ),
	VERT( 0x4139484c, 0x40c5700a, 0xc0f603ef ),
	NORM( 0x3f62cc52, 0xbd66b1f9, 0xbeebb7bd ),
	NFlagsW( 3324, 78.161766 ),
	VERT( 0x413395f1, 0x408efbc7, 0x40a3fe17 ),
	NORM( 0x3f518c7d, 0xbb691ad6, 0x3f130d77 ),
	NFlagsW( 3325, 63.013065 ),
	VERT( 0x412be3c8, 0x405248c7, 0xc10e9355 ),
	NORM( 0x3f292090, 0xbc5d36b1, 0xbf402559 ),
	NFlagsW( 3326, 88.785431 ),
	VERT( 0x4125a37e, 0x3fdd5eb2, 0x40da5aef ),
	NORM( 0x3f12e47f, 0xbdd4d3a0, 0x3f4ff7e6 ),
	NFlagsW( 3327, 74.037666 ),
	VERT( 0x411b0983, 0xbe455bfd, 0x40cbce25 ),
	NORM( 0x3e57c915, 0xbed26c0d, 0x3f630f76 ),
	NFlagsW( 3328, 88.243034 ),
	VERT( 0x41219524, 0x404be758, 0xc11eed18 ),
	NORM( 0x3f21b328, 0xbe9735ab, 0xbf378092 ),
	NFlagsW( 3330, 91.077461 ),
	VERT( 0x411af07e, 0x4004d8ab, 0x40ec46f6 ),
	NORM( 0x3f0df638, 0xbe756bde, 0x3f4c017c ),
	NFlagsW( 3331, 70.145363 ),
	VERT( 0x41147a5f, 0x3d2c3a23, 0xc10fd89c ),
	NORM( 0x3e846475, 0xbec2b583, 0xbf6352eb ),
	NFlagsW( 3332, 98.591217 ),
	VERT( 0x4126e07d, 0x40ceb25a, 0x410c3280 ),
	NORM( 0x3f315a57, 0xbe9deb91, 0x3f26dffd ),
	NFlagsW( 3333, 86.352020 ),
	VERT( 0x41163735, 0x4043b765, 0x40f8a416 ),
	NORM( 0x3f22178a, 0xbe6df7ab, 0x3f3d014c ),
	NFlagsW( 3334, 66.091446 ),
	VERT( 0x41079376, 0x3de6c7d1, 0x40d5a867 ),
	NORM( 0x3e735c9e, 0xbef8685c, 0x3f576cc0 ),
	NFlagsW( 3335, 77.081306 ),
	VERT( 0x41008009, 0x3dc027e1, 0xc114fde6 ),
	NORM( 0x3e51551a, 0xbee3363c, 0xbf5f5ce1 ),
	NFlagsW( 3336, 96.742615 ),
	VERT( 0x40ecfcf1, 0xbfad578b, 0x40bde266 ),
	NORM( 0x3e4a6834, 0xbf1ccb7a, 0x3f43ef91 ),
	NFlagsW( 3337, 92.478806 ),
	VERT( 0x40dcd1c2, 0x407da0d8, 0xc136546a ),
	NORM( 0x3e21089e, 0xbe923af0, 0xbf7202e0 ),
	NFlagsW( 3338, 13.662085 ),
	VERT( 0x40e81b0b, 0x40c48a2b, 0x411f3ec7 ),
	NORM( 0x3e919898, 0xbe8f9894, 0x3f6ab1c8 ),
	NFlagsW( 3339, 29.623302 ),
	VERT( 0x40b97654, 0x3eb220fe, 0xc1202251 ),
	NORM( 0x3e0bce81, 0xbeebb1d8, 0xbf608ee6 ),
	NFlagsW( 3340, 90.845772 ),
	VERT( 0x40c4f3fa, 0x40498aa0, 0x4115ce66 ),
	NORM( 0x3e726e77, 0xbeb3ecfd, 0x3f67e1d9 ),
	NFlagsW( 3341, 54.237091 ),
	VERT( 0x40b06aaf, 0x3fbcad14, 0x410c352d ),
	NORM( 0x3e75766b, 0xbeda401e, 0x3f5f4c42 ),
	NFlagsW( 3342, 61.313110 ),
	VERT( 0x40916a73, 0xbe753bfb, 0x4100b1e5 ),
	NORM( 0x3e412519, 0xbf0ff81f, 0x3f4e19a8 ),
	NFlagsW( 3343, 78.261116 ),
	VERT( 0x406215f9, 0xbfcad8cc, 0x40e8c35a ),
	NORM( 0x3b34b2c3, 0xbf30bf05, 0x3f39314d ),
	NFlagsW( 3344, 96.119873 ),
	VERT( 0x4011c0e6, 0xc03f34a9, 0x40901486 ),
	NORM( 0x3e902f8f, 0xbf2956ac, 0x3f31f0f1 ),
	NFlagsW( 3345, 55.485176 ),
	VERT( 0x405a6d55, 0x40a7127e, 0x4124cf61 ),
	NORM( 0x3da6170b, 0xbe9fd105, 0x3f725244 ),
	NFlagsW( 3346, 0.661538 ),
	VERT( 0x4023e0f3, 0x404a3ac3, 0x411a0425 ),
	NORM( 0x3d80a37a, 0xbe95303c, 0x3f745cdb ),
	NFlagsW( 3347, 9.266020 ),
	VERT( 0x3ff74072, 0x3f18a477, 0x410ff0c8 ),
	NORM( 0x3be79bb8, 0xbf0d85e4, 0x3f55510a ),
	NFlagsW( 3348, 32.640347 ),
	VERT( 0x3f931e4d, 0xbed39c17, 0x40f54fa0 ),
	NORM( 0xbe0967b3, 0xbf3673f8, 0x3f30420b ),
	NFlagsW( 3349, 47.471516 ),
	VERT( 0x3f4d50f0, 0xc002f5ab, 0x40baa3ee ),
	NORM( 0x3dd62216, 0xbf0c3443, 0x3f5483ac ),
	NFlagsW( 3350, 43.272675 ),
	VERT( 0xbf3dabea, 0xbfa91dec, 0x40cc2415 ),
	NORM( 0x3e3ae694, 0xbec96c52, 0x3f66ac3c ),
	NFlagsW( 3351, 3.286299 ),
	VERT( 0x414af7da, 0x40e78ffd, 0x3fcaccfe ),
	NORM( 0x3f7a38d5, 0xbe554c0c, 0x3d1069b6 ),
	NFlagsW( 3609, 77.691788 ),
	VERT( 0x4147e293, 0x40e7e0a6, 0xc0a9feb4 ),
	NORM( 0x3f7dc686, 0xbd6b7566, 0xbdf2503b ),
	NFlagsW( 3610, 58.977173 ),
	VERT( 0x41483254, 0x40f50c82, 0xc036256d ),
	NORM( 0x3f7e7bf5, 0xbdc6aa6b, 0xbd488982 ),
	NFlagsW( 3611, 33.180313 ),
	VERT( 0x41423c18, 0x410e7dec, 0x40af05ec ),
	NORM( 0x3f521f12, 0xbeb9ae91, 0x3ee1f836 ),
	NFlagsW( 3612, 3.558063 ),
	VERT( 0x413ce89f, 0x410e763b, 0x40f4b589 ),
	NORM( 0x3f5c4b8c, 0xbeb42392, 0x3ebc9c77 ),
	NFlagsW( 3613, 0.224987 ),
	VERT( 0x413634ba, 0x40f7a9d6, 0x40e15d35 ),
	NORM( 0x3f68c7ad, 0xbeadc1f8, 0x3e76a058 ),
	NFlagsW( 3614, 60.522270 ),
	VERT( 0x40b1e12e, 0xc0b61f9f, 0xc0067172 ),
	NORM( 0x3ea75e93, 0xbf708778, 0x3dd06597 ),
	NFlagsW( 4164, 99.933983 ),
	VERT( 0x40a42e4b, 0xc0ae5c4a, 0xbe02b62a ),
	NORM( 0x3e8581fe, 0xbf6aebc9, 0x3e9984dd ),
	NFlagsW( 4165, 94.789001 ),
	VERT( 0x409498b0, 0xc0c2d9f2, 0xbfc782bb ),
	NORM( 0x3ee0c0f0, 0xbf625c3f, 0x3e2362ea ),
	NFlagsW( 4166, 96.113121 ),
	VERT( 0x4094ee87, 0xc0b19f7c, 0x3dcbe2ba ),
	NORM( 0x3eda42a3, 0xbf573a28, 0x3eaaece3 ),
	NFlagsW( 4167, 86.937943 ),
	VERT( 0x4096f490, 0xc094ca14, 0x3fcb0ec8 ),
	NORM( 0x3e8f68cf, 0xbf553b89, 0x3ef458b8 ),
	NFlagsW( 4168, 81.860931 ),
	VERT( 0x40881638, 0xc0c89cac, 0xc04676bd ),
	NORM( 0x3ec3d629, 0xbf6a9a59, 0xbdf14246 ),
	NFlagsW( 4169, 98.130539 ),
	VERT( 0x408f167f, 0xc08593ed, 0x4026c847 ),
	NORM( 0x3e16e4f3, 0xbf63aa9a, 0x3edda384 ),
	NFlagsW( 4170, 79.357536 ),
	VERT( 0x40888cce, 0xc0a1347b, 0x3fc061a3 ),
	NORM( 0x3f00719a, 0xbf32f459, 0x3f026f8e ),
	NFlagsW( 4171, 74.144844 ),
	VERT( 0x4055d1d9, 0xc0f04dc3, 0x3f8d8159 ),
	NORM( 0x3f7f61ea, 0xbcc23585, 0x3d859d14 ),
	NFlagsW( 4172, 7.981475 ),
	VERT( 0x4059f9c5, 0xc0d0e64d, 0xbf9ba80b ),
	NORM( 0x3f45bf43, 0xbf2225a3, 0x3d3d9815 ),
	NFlagsW( 4173, 72.334610 ),
	VERT( 0x4079e54a, 0xc062f6e2, 0x408303d2 ),
	NORM( 0xbd3f66c9, 0xbf5ecd8f, 0x3efb0306 ),
	NFlagsW( 4174, 79.948219 ),
	VERT( 0x406e8cce, 0xc08d1074, 0x4025bd4a ),
	NORM( 0x3eca8c36, 0xbf35f758, 0x3f14e391 ),
	NFlagsW( 4175, 63.538216 ),
	VERT( 0x405940c4, 0xc0c3126c, 0x3f1b7556 ),
	NORM( 0x3f59a9b5, 0xbef106f5, 0x3e712caf ),
	NFlagsW( 4176, 59.902023 ),
	VERT( 0x40484f9f, 0xc0e5d642, 0x400b6674 ),
	NORM( 0x3f7acdc4, 0x3de55469, 0x3e2a41ac ),
	NFlagsW( 4177, 10.478657 ),
	VERT( 0x40654eeb, 0xc0951e42, 0xc0c506e6 ),
	NORM( 0x3e1d752c, 0xbf2cac2a, 0xbf38da60 ),
	NFlagsW( 4178, 98.931900 ),
	VERT( 0x4043fd67, 0xc0db51d0, 0xc02a806f ),
	NORM( 0x3f3b3911, 0xbf282013, 0xbe3c5c20 ),
	NFlagsW( 4179, 74.862755 ),
	VERT( 0x404fb493, 0xc0ba2f7f, 0x3fc47c19 ),
	NORM( 0x3f587864, 0xbeb99b5e, 0x3ec8a3eb ),
	NFlagsW( 4180, 54.599857 ),
	VERT( 0x4028d9f6, 0xc0c99242, 0x4081d260 ),
	NORM( 0x3f66eade, 0x3ed0a1df, 0x3e11f20f ),
	NFlagsW( 4181, 23.017550 ),
	VERT( 0x402580c4, 0xc0c6dce8, 0xc0a64bb2 ),
	NORM( 0x3ecc59fd, 0xbf33bb03, 0xbf16f943 ),
	NFlagsW( 4182, 88.554199 ),
	VERT( 0x40293e06, 0xc0ad160f, 0x40358f39 ),
	NORM( 0x3f5dbee4, 0xbdd65457, 0x3efa2d3a ),
	NFlagsW( 4183, 43.643467 ),
	VERT( 0x400002c2, 0xc0e5fe8e, 0xc090cf19 ),
	NORM( 0x3f243744, 0xbf009059, 0xbf1475da ),
	NFlagsW( 4184, 14.273437 ),
	VERT( 0x3ff3621c, 0xc0912e61, 0xc0d4a4d3 ),
	NORM( 0x3e45abbe, 0xbf191a93, 0xbf472182 ),
	NFlagsW( 4185, 67.956749 ),
	VERT( 0x3fa8e155, 0xc0a99764, 0x40caf1dc ),
	NORM( 0x3f3b0431, 0x3f2c2913, 0x3df2dea1 ),
	NFlagsW( 4186, 1.046748 ),
	VERT( 0x3f5d024d, 0xc0c6adb6, 0xc0c45cbc ),
	NORM( 0x3e939f65, 0xbef676d3, 0xbf53e67b ),
	NFlagsW( 4187, 0.479374 ),
	VERT( 0x3f8d9946, 0xc08b580f, 0x40a8663d ),
	NORM( 0x3f4bb09f, 0x3e6a1df2, 0x3f0f9966 ),
	NFlagsW( 4188, 16.983156 ),
	VERT( 0x3e417cbc, 0xc058cf44, 0x40b7abd4 ),
	NORM( 0x3f0bccbf, 0x3e4c22ec, 0x3f504bf9 ),
	NFlagsW( 4190, 8.568123 ),
	VERT( 0x404b90ef, 0xc0ffbcbd, 0xbf632c89 ),
	NORM( 0x3f7c4ce9, 0xbdd4be08, 0xbe090388 ),
	NFlagsW( 4228, 2.656749 ),
	VERT( 0x40425965, 0xc0ddcf97, 0x40b0e6d0 ),
	NORM( 0x3f51f5fb, 0x3f10af2e, 0xbdb63b3a ),
	NFlagsW( 4229, 0.754142 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_R_Clavicle[]
START
VList      vertex_kihon11_Bip01_Bip01_R_Clavicle,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_R_Clavicle[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_R_Clavicle,
OPosition  (  0.000010F, -3.080339F, -0.005355F ),
OAngle     (  0.044842F, 179.991600F, 79.540841F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_R_UpperArm,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy10[]
START
EvalFlags ( 0x0000001e ),
CNKModel   NULL,
OPosition  (  2.272981F,  0.000000F, -0.000000F ),
OAngle     ( -0.000002F, -0.000001F,  0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger42[]
START
	CnkV_VN(FV_CONT, 181),
	OffnbIdx(2700, 30),
	VERT( 0x3f34a3a4, 0xbf27f911, 0xbed9aeb8 ),
	NORM( 0x3e17d60b, 0xbf7ce57b, 0xbd3c56e7 ),
	VERT( 0x3e9e5edf, 0x3e3c5dfc, 0xbf9eeed0 ),
	NORM( 0x3cbd3098, 0xbc990365, 0xbf7fe318 ),
	VERT( 0x3f354fa2, 0xbedd8945, 0xbf73b624 ),
	NORM( 0x3e29bf23, 0xbf2e1ec3, 0xbf36cdd8 ),
	VERT( 0x3f6f4869, 0xbf0e03db, 0xbe2193df ),
	NORM( 0x3e931db4, 0xbf579513, 0x3ee9a990 ),
	VERT( 0x3f78f1b2, 0xbee98f13, 0xbdb6508e ),
	NORM( 0x3e088668, 0xbef4aa4a, 0x3f5e4633 ),
	VERT( 0x3f1b8db8, 0x3f42a27b, 0x3d0becae ),
	NORM( 0x3eb46dec, 0x3ef1dc36, 0x3f4ed121 ),
	VERT( 0x3ee047e8, 0x3f495b99, 0xbf7886cf ),
	NORM( 0x3dbfe894, 0x3f305513, 0xbf3807fe ),
	VERT( 0x3f38d94b, 0x3f24b03b, 0xbc954ba9 ),
	NORM( 0x3ea4b006, 0x3da7e915, 0x3f717c26 ),
	VERT( 0x3f02ffc3, 0x3f86426a, 0xbead8deb ),
	NORM( 0x3e586394, 0x3f797142, 0x3d9d94cc ),
	VERT( 0x3f8db9ee, 0xbef3a8cf, 0xbeeea010 ),
	NORM( 0x3f162a82, 0xbf4bbe9f, 0xbe199696 ),
	VERT( 0x3f9e48c5, 0xbe9e66bc, 0xbd891450 ),
	NORM( 0x3f2ca3da, 0xbef5672c, 0x3f0fca70 ),
	VERT( 0x3f89925f, 0xbe980ad9, 0xbf5bcfa7 ),
	NORM( 0x3f061489, 0xbf187de6, 0xbf1be65e ),
	VERT( 0x3f9d5e16, 0xbea07119, 0xbe63c715 ),
	NORM( 0x3f505910, 0xbf12896b, 0x3dcc9c92 ),
	VERT( 0x3f7169d4, 0x3db1c72d, 0xbf8ca000 ),
	NORM( 0x3ec2c294, 0xbdb6d227, 0xbf6ba663 ),
	VERT( 0x3fa48248, 0xbe8eec60, 0xbedb1208 ),
	NORM( 0x3f5909a8, 0xbf066d8b, 0xbd97bf78 ),
	VERT( 0x3f9ac393, 0xbe286df8, 0xbf53f3cf ),
	NORM( 0x3f3c1a02, 0xbec62fde, 0xbf0e992f ),
	VERT( 0x3f5c28a9, 0x3f3572e2, 0xbf761b3b ),
	NORM( 0x3eb0bea1, 0x3f1fd107, 0xbf3366e1 ),
	VERT( 0x3fa909c3, 0x3da6f67d, 0xbc07662f ),
	NORM( 0x3f22b941, 0xbdaac1ef, 0x3f4478f4 ),
	VERT( 0x3f6c693e, 0x3f6eda4a, 0xbed99ff2 ),
	NORM( 0x3ecca8b9, 0x3f68f915, 0xbde09c49 ),
	VERT( 0x3f8ffa1b, 0x3f2aa61c, 0xbdb324cb ),
	NORM( 0x3e5b1ed4, 0x3edddefd, 0x3f601df9 ),
	VERT( 0x3fb1ac3c, 0x3d9f6001, 0xbe34823d ),
	NORM( 0x3f6f0d1f, 0xbe03380d, 0x3eab0c4e ),
	VERT( 0x3f91bc16, 0x3f455bbb, 0xbe22275a ),
	NORM( 0x3f075a89, 0x3f370d62, 0x3eea27ee ),
	VERT( 0x3fa97c9a, 0x3db837ac, 0xbf45f544 ),
	NORM( 0x3f5c9f85, 0xbdd30136, 0xbefe4a18 ),
	VERT( 0x3fab18d1, 0x3ef1d146, 0xbd84e067 ),
	NORM( 0x3f43c3cd, 0x3e93848f, 0x3f138d73 ),
	VERT( 0x3f967d69, 0x3f001d3b, 0xbf5e9abc ),
	NORM( 0x3f244c78, 0x3ee2f630, 0xbf203335 ),
	VERT( 0x3fb97b19, 0x3d8d6bc2, 0xbeb97c89 ),
	NORM( 0x3f7d5338, 0xbe107a5f, 0x3cf346ff ),
	VERT( 0x3fab1155, 0x3ef01cea, 0xbe603f86 ),
	NORM( 0x3f6ebcd3, 0x3eb2cc2d, 0x3dbb4fc6 ),
	VERT( 0x3fa2b67d, 0x3eb73253, 0xbf545d85 ),
	NORM( 0x3f4d1cb0, 0x3e57821f, 0xbf0f6549 ),
	VERT( 0x3fa17f9c, 0x3f29d9a0, 0xbeecd61e ),
	NORM( 0x3f474267, 0x3f1c2319, 0xbe1877d2 ),
	VERT( 0x3fb04e2d, 0x3edd7a0d, 0xbede3925 ),
	NORM( 0x3f7165d0, 0x3ea3ffc4, 0xbdb9c521 ),
	CnkV_VN_NF(FV_CONT|FW_END, 99),
	OffnbIdx(0, 14),
	VERT( 0xbef7bd70, 0xbcb7d4f3, 0x3eb25fe9 ),
	NORM( 0x3e6ed447, 0xbe2fe67b, 0x3f750667 ),
	NFlagsW( 5264, 3.478294 ),
	VERT( 0xbeab8c74, 0xbf20a5a5, 0xbe23c047 ),
	NORM( 0xbc55cc22, 0xbf7b448d, 0x3e438672 ),
	NFlagsW( 5265, 6.950894 ),
	VERT( 0xbeeb396e, 0x3e8d91a8, 0x3e91df66 ),
	NORM( 0x3e426ed4, 0x3c4556cf, 0x3f7b52f2 ),
	NFlagsW( 5266, 4.192350 ),
	VERT( 0xbdee3764, 0xbe8b4aef, 0x3e9aebbc ),
	NORM( 0x3dba1e16, 0xbee45bde, 0x3f63f150 ),
	NFlagsW( 5267, 49.659725 ),
	VERT( 0xbed15423, 0x3f0e473d, 0x3eb12435 ),
	NORM( 0x3e24feb8, 0x3d67dc4a, 0x3f7c3d35 ),
	NFlagsW( 5268, 1.416546 ),
	VERT( 0xbda08bb9, 0x3e6bb53d, 0x3eb04e76 ),
	NORM( 0x3d980878, 0xbd0b40e6, 0x3f7f2531 ),
	NFlagsW( 5269, 49.898220 ),
	VERT( 0x3e87e03d, 0xbf2d1bac, 0xbeaacae2 ),
	NORM( 0xbc70bd3b, 0xbf7f418d, 0x3d99189a ),
	NFlagsW( 5270, 88.509483 ),
	VERT( 0x3ca126b6, 0x3f38227b, 0x3e9daa5d ),
	NORM( 0x3e1b6547, 0x3ed51df2, 0x3f658103 ),
	NFlagsW( 5271, 49.509083 ),
	VERT( 0x3ee0bfd2, 0xbee274f1, 0x3ca079d5 ),
	NORM( 0x3e553e2f, 0xbf16cea5, 0x3f47e0c0 ),
	NFlagsW( 5272, 95.011673 ),
	VERT( 0x3e89e5eb, 0xbed61660, 0xbf76c57f ),
	NORM( 0xbd3fc694, 0xbf347bfd, 0xbf352820 ),
	NFlagsW( 5273, 99.836227 ),
	VERT( 0xbdb9480c, 0x3f906be7, 0xbe290d91 ),
	NORM( 0x3e3408f7, 0x3f76c8ef, 0x3e4c40c9 ),
	NFlagsW( 5274, 1.888837 ),
	VERT( 0x3ed3927e, 0x3e34c631, 0x3e4a6214 ),
	NORM( 0x3ec7b4cd, 0xbdb72973, 0x3f6a9bcb ),
	NFlagsW( 5275, 83.188774 ),
	VERT( 0x3f182953, 0xbeb008e3, 0xbc96a809 ),
	NORM( 0x3e81729c, 0xbe4a801f, 0x3f72743a ),
	NFlagsW( 5276, 99.719917 ),
	VERT( 0x3f185987, 0x3e1d8cd8, 0x3db6fcc7 ),
	NORM( 0x3eaaf5bc, 0xbd715cbd, 0x3f70d5d5 ),
	NFlagsW( 5277, 99.173744 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger42[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger42,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger42[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger42,
OPosition  (  2.254795F, -0.000002F, -0.000007F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy10,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger41[]
START
	CnkV_VN(FV_CONT, 139),
	OffnbIdx(2604, 23),
	VERT( 0x3f3ce9d9, 0xbe232460, 0x3f2b0a9e ),
	NORM( 0x3ca03a27, 0xbef3d0a8, 0x3f610df1 ),
	VERT( 0x3f1c354a, 0xbedcea80, 0xbf537006 ),
	NORM( 0xbdb13afd, 0xbf427702, 0xbf2502d4 ),
	VERT( 0x3f45a7a1, 0x3ecb71c8, 0x3f375684 ),
	NORM( 0x3da3fb57, 0xbd0fa307, 0x3f7f0528 ),
	VERT( 0x3f28b524, 0x3ecdb3c9, 0xbf987f3d ),
	NORM( 0xbd9b8df7, 0xbb3afadb, 0xbf7f426d ),
	VERT( 0x3f646cea, 0x3f6e8275, 0x3f2b2fca ),
	NORM( 0x3e163a58, 0x3eee7a48, 0x3f5f666b ),
	VERT( 0x3faf33ab, 0xbf1ca354, 0xbe0d8f5c ),
	NORM( 0x3a6dab5c, 0xbf7da418, 0x3e0ab171 ),
	VERT( 0x3fae83c0, 0xbe5adeb1, 0x3eda5e01 ),
	NORM( 0x3e8e6d7e, 0xbf03ad35, 0x3f4faaf1 ),
	VERT( 0x3fb0fb20, 0xbedb391f, 0xbf58d6a8 ),
	NORM( 0x3cdf5d92, 0xbf408b23, 0xbf2890bf ),
	VERT( 0x3fb39642, 0x3ea35882, 0x3ef36237 ),
	NORM( 0x3ebbec9b, 0xbcd7fb76, 0x3f6e0975 ),
	VERT( 0x3f68105b, 0x3fb3bcc6, 0x3d97d02c ),
	NORM( 0x3e56fe22, 0x3f706388, 0x3e8b6ed6 ),
	VERT( 0x3fd573bb, 0xbf1d193e, 0xbe035e90 ),
	NORM( 0xbbf2b65a, 0xbf7819db, 0x3e7c4be6 ),
	VERT( 0x3f57fb88, 0x3f9dcced, 0xbf589c8f ),
	NORM( 0x3d8ef19e, 0x3f42fcd4, 0xbf24e9f6 ),
	VERT( 0x3fd3974a, 0xbedb34c1, 0xbf4f0c41 ),
	NORM( 0xbd10e6e6, 0xbf475df0, 0xbf205560 ),
	VERT( 0x3fc162da, 0x3f52b3d8, 0x3ed8ae3d ),
	NORM( 0x3ed13b2c, 0x3ec7211f, 0x3f535f72 ),
	VERT( 0x3fb6e074, 0x3e9c0f0a, 0xbf93d188 ),
	NORM( 0x3dd47740, 0xbcf2a198, 0xbf7e817b ),
	VERT( 0x3ff45d51, 0xbedf9b57, 0xbf5c8325 ),
	NORM( 0xbdf9cf78, 0xbf4136a7, 0xbf25037b ),
	VERT( 0x3fd65883, 0x3e8e4062, 0xbf8e3a0e ),
	NORM( 0x3a99459f, 0xbbf8b753, 0xbf7ffe14 ),
	VERT( 0x3fd28636, 0x3f9d09b1, 0xbdfe535c ),
	NORM( 0x3e825d54, 0x3f73b1f3, 0x3e2e5aed ),
	VERT( 0x3fcb5260, 0x3f84b197, 0xbf5daf3d ),
	NORM( 0x3e66a349, 0x3f314570, 0xbf2f75d6 ),
	VERT( 0x3ff83f32, 0x3e7fe57f, 0xbf9507dc ),
	NORM( 0xbe1f1bfd, 0x3c7a5c4f, 0xbf7cdc51 ),
	VERT( 0x3ff287df, 0x3f957c33, 0xbdef31f2 ),
	NORM( 0x3e523b39, 0x3f70dd24, 0x3e89f607 ),
	VERT( 0x3fea5d7c, 0x3f7c6d0c, 0xbf514055 ),
	NORM( 0x3e154098, 0x3f41d7db, 0xbf22ffad ),
	VERT( 0x400619b3, 0x3f6f7db3, 0xbf5eccc3 ),
	NORM( 0x3c9a5e2a, 0x3f3e2d76, 0xbf2b4df6 ),
	CnkV_VN_NF(FV_CONT|FW_START, 99),
	OffnbIdx(5264, 14),
	VERT( 0x3fe2ade4, 0xbcb7d8f3, 0x3eb25fe9 ),
	NORM( 0x3e6ed447, 0xbe2fe67b, 0x3f750667 ),
	NFlagsW( 0, 96.521706 ),
	VERT( 0x3ff5ba23, 0xbf20a5c5, 0xbe23c047 ),
	NORM( 0xbc55cc22, 0xbf7b448d, 0x3e438672 ),
	NFlagsW( 1, 93.049110 ),
	VERT( 0x3fe5cee4, 0x3e8d9168, 0x3e91df66 ),
	NORM( 0x3e426ed4, 0x3c4556cf, 0x3f7b52f2 ),
	NFlagsW( 2, 95.807648 ),
	VERT( 0x4008dce5, 0xbe8b4b2f, 0x3e9aebbc ),
	NORM( 0x3dba1e16, 0xbee45bde, 0x3f63f150 ),
	NFlagsW( 3, 50.340271 ),
	VERT( 0x3fec4837, 0x3f0e471d, 0x3eb12435 ),
	NORM( 0x3e24feb8, 0x3d67dc4a, 0x3f7c3d35 ),
	NFlagsW( 4, 98.583450 ),
	VERT( 0x400b4a42, 0x3e6bb4bd, 0x3eb04e76 ),
	NORM( 0x3d980878, 0xbd0b40e6, 0x3f7f2531 ),
	NFlagsW( 5, 50.101780 ),
	VERT( 0x40214aa8, 0xbf2d1bcc, 0xbeaacae2 ),
	NORM( 0xbc70bd3b, 0xbf7f418d, 0x3d99189a ),
	NFlagsW( 6, 11.490514 ),
	VERT( 0x401190ed, 0x3f38225b, 0x3e9daa5d ),
	NORM( 0x3e1b6547, 0x3ed51df2, 0x3f658103 ),
	NFlagsW( 7, 50.490921 ),
	VERT( 0x402c669a, 0xbee27531, 0x3ca079d5 ),
	NORM( 0x3e553e2f, 0xbf16cea5, 0x3f47e0c0 ),
	NFlagsW( 8, 4.988330 ),
	VERT( 0x40218b5d, 0xbed616a0, 0xbf76c57f ),
	NORM( 0xbd3fc694, 0xbf347bfd, 0xbf352820 ),
	NFlagsW( 9, 0.163774 ),
	VERT( 0x400a8460, 0x3f906bd7, 0xbe290d91 ),
	NORM( 0x3e3408f7, 0x3f76c8ef, 0x3e4c40c9 ),
	NFlagsW( 10, 98.111168 ),
	VERT( 0x402ac0f0, 0x3e34c5b1, 0x3e4a6214 ),
	NORM( 0x3ec7b4cd, 0xbdb72973, 0x3f6a9bcb ),
	NFlagsW( 11, 16.811228 ),
	VERT( 0x403658f5, 0xbeb00923, 0xbc96a809 ),
	NORM( 0x3e81729c, 0xbe4a801f, 0x3f72743a ),
	NFlagsW( 12, 0.280078 ),
	VERT( 0x40366502, 0x3e1d8c58, 0x3db6fcc7 ),
	NORM( 0x3eaaf5bc, 0xbd715cbd, 0x3f70d5d5 ),
	NFlagsW( 13, 0.826262 ),
	CnkV_VN_NF(FV_CONT|FW_END, 134),
	OffnbIdx(0, 19),
	VERT( 0xbeaccf14, 0xbd8a84f4, 0x3f355ae7 ),
	NORM( 0x3dbca975, 0xbef4201c, 0x3f5fc973 ),
	NFlagsW( 5146, 4.767249 ),
	VERT( 0xbe43dd6f, 0xbf10d7fa, 0x3dc5e121 ),
	NORM( 0xbe5b698c, 0xbf76aefd, 0x3e23ad7f ),
	NFlagsW( 5147, 39.206821 ),
	VERT( 0xbea39397, 0x3f056301, 0x3f420dc4 ),
	NORM( 0x3e87f3d1, 0xbd178fd5, 0x3f76a0d9 ),
	NFlagsW( 5148, 0.522565 ),
	VERT( 0xbe38b426, 0xbeb0154c, 0xbf649add ),
	NORM( 0x3d270ee4, 0xbf42f7f2, 0xbf259296 ),
	NFlagsW( 5150, 9.017877 ),
	VERT( 0x3e588e87, 0xbf2c6186, 0x3e24b399 ),
	NORM( 0x3c93f275, 0xbf716f90, 0x3ea9fb3d ),
	NFlagsW( 5151, 71.993134 ),
	VERT( 0x3e6f3d65, 0x3cac656d, 0x3f214ea5 ),
	NORM( 0x3d8933b7, 0xbe90cd3b, 0x3f74f2f1 ),
	NFlagsW( 5153, 69.726830 ),
	VERT( 0x3e57d0c8, 0xbecbe0a8, 0xbf3df7db ),
	NORM( 0xbd7f55df, 0xbf4c4b00, 0xbf197239 ),
	NFlagsW( 5154, 86.739929 ),
	VERT( 0x3e82cd90, 0x3ee6a754, 0x3f1a8af9 ),
	NORM( 0x3cdb4133, 0xbc944d28, 0x3f7fddca ),
	NFlagsW( 5155, 85.570274 ),
	VERT( 0x3eae972a, 0x3f55e75f, 0x3f25e6cf ),
	NORM( 0x3d3e0749, 0x3e7f4ae3, 0x3f77a1c6 ),
	NFlagsW( 5157, 99.974976 ),
	VERT( 0x3e7cf8c7, 0x3ee3f4fb, 0xbf8e96ab ),
	NORM( 0x3d46cf2f, 0xbc319696, 0xbf7faee9 ),
	NFlagsW( 5158, 99.861259 ),
	VERT( 0x3efc8233, 0x3fbbf189, 0x3e31968f ),
	NORM( 0x3e6d14f7, 0x3f6502ed, 0x3ec3b8e7 ),
	NFlagsW( 5159, 99.924072 ),
	VERT( 0x3ede42cb, 0x3fa4dcce, 0xbf436f18 ),
	NORM( 0x3e06cdda, 0x3f4cfe15, 0xbf15980c ),
	NFlagsW( 5160, 99.505020 ),
	VERT( 0x3f5f8d04, 0xbf965957, 0x3eca3f6d ),
	NORM( 0x3dfc9819, 0x3f70a1ea, 0x3ea2e988 ),
	NFlagsW( 5244, 56.156303 ),
	VERT( 0x3f4ee943, 0xbfadb300, 0xbf36ac0c ),
	NORM( 0x3e9c6988, 0x3f320b5c, 0xbf267e4c ),
	NFlagsW( 5245, 3.567500 ),
	VERT( 0x3f93cb01, 0xbf9b599d, 0x3edd8b86 ),
	NORM( 0x3e42f96f, 0x3f63703c, 0x3ed5d6f4 ),
	NFlagsW( 5246, 45.790237 ),
	VERT( 0x3f8c7861, 0xbfb13294, 0xbf0a9a14 ),
	NORM( 0x3e33b6e9, 0x3f543883, 0xbf07f0bf ),
	NFlagsW( 5247, 9.517739 ),
	VERT( 0x3fc9df21, 0xbfa8f05f, 0x3eb0486d ),
	NORM( 0x3e67615c, 0x3f6c3f12, 0x3e9fb852 ),
	NFlagsW( 5248, 20.632256 ),
	VERT( 0x3fc04c6a, 0xbfb96088, 0xbf279df9 ),
	NORM( 0x3d4a0a2d, 0x3f491011, 0xbf1df4f0 ),
	NFlagsW( 5249, 0.211288 ),
	VERT( 0x3f1ca50a, 0xbf189458, 0x3d95e4ab ),
	NORM( 0x3dccf041, 0xbf743254, 0x3e90e236 ),
	NFlagsW( 5262, 99.966492 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger41[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger41,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger41[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger41,
OPosition  (  2.400261F, -0.000001F,  0.000004F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Finger42,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger4[]
START
	CnkV_VN_NF(FV_CONT|FW_START, 8),
	OffnbIdx(5262, 1),
	VERT( 0x4040c722, 0xbf189458, 0x3d95e4ab ),
	NORM( 0x3dccf041, 0xbf743254, 0x3e90e236 ),
	NFlagsW( 0, 0.025683 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 57),
	OffnbIdx(0, 8),
	VERT( 0x400403fd, 0xbd8a84f4, 0x3f355ae7 ),
	NORM( 0x3dbca975, 0xbef4201c, 0x3f5fc973 ),
	NFlagsW( 5146, 91.880890 ),
	VERT( 0x400d6009, 0xbf10d7fa, 0x3dc5e121 ),
	NORM( 0xbe5b698c, 0xbf76aefd, 0x3e23ad7f ),
	NFlagsW( 5147, 58.513840 ),
	VERT( 0x40052b6d, 0x3f056301, 0x3f420dc4 ),
	NORM( 0x3e87f3d1, 0xbd178fd5, 0x3f76a0d9 ),
	NFlagsW( 5148, 97.405632 ),
	VERT( 0x400e129e, 0xbeb0154c, 0xbf649add ),
	NORM( 0x3d270ee4, 0xbf42f7f2, 0xbf259296 ),
	NFlagsW( 5150, 89.017441 ),
	VERT( 0x402726c8, 0xbf2c6186, 0x3e24b399 ),
	NORM( 0x3c93f275, 0xbf716f90, 0x3ea9fb3d ),
	NFlagsW( 5151, 27.881399 ),
	VERT( 0x402891b6, 0x3cac656d, 0x3f214ea5 ),
	NORM( 0x3d8933b7, 0xbe90cd3b, 0x3f74f2f1 ),
	NFlagsW( 5153, 30.199190 ),
	VERT( 0x40271aec, 0xbecbe0a8, 0xbf3df7db ),
	NORM( 0xbd7f55df, 0xbf4c4b00, 0xbf197239 ),
	NFlagsW( 5154, 13.146080 ),
	VERT( 0x4029f792, 0x3ee6a754, 0x3f1a8af9 ),
	NORM( 0x3cdb4133, 0xbc944d28, 0x3f7fddca ),
	NFlagsW( 5155, 14.371419 ),
	CnkV_VN_NF(FV_CONT|FW_END, 113),
	OffnbIdx(0, 16),
	VERT( 0x3d1b63d3, 0xbe9eda04, 0x3f6fd6a8 ),
	NORM( 0x3d668b0c, 0x3e48a2b2, 0x3f7a9fcb ),
	NFlagsW( 5114, 10.527132 ),
	VERT( 0xbca7c160, 0x3ed681eb, 0x3f5e97f3 ),
	NORM( 0xbe701ca7, 0xbc756f26, 0x3f78d54b ),
	NFlagsW( 5119, 10.294143 ),
	VERT( 0x3f1f0718, 0x3e1ad5c2, 0x3f733f82 ),
	NORM( 0x3db641a4, 0xbeae9391, 0x3f6f940c ),
	NFlagsW( 5124, 39.435974 ),
	VERT( 0x3f568293, 0xbecf1ece, 0x3ec2447c ),
	NORM( 0x3f100107, 0x3d025572, 0x3f538028 ),
	NFlagsW( 5129, 39.291092 ),
	VERT( 0x3f10f779, 0x3f66c47c, 0x3f89a5e9 ),
	NORM( 0xbca4bdb8, 0x3da5bc88, 0x3f7f1bc2 ),
	NFlagsW( 5131, 4.565045 ),
	VERT( 0x3f9ba5e5, 0xbeda544c, 0xbf7babf7 ),
	NORM( 0x3f1be15c, 0xbe22de48, 0xbf46f226 ),
	NFlagsW( 5136, 54.235035 ),
	VERT( 0x3fbd9b88, 0x3d9060c7, 0x3f5b42ee ),
	NORM( 0x3da569cc, 0xbf03c010, 0x3f5a84c3 ),
	NFlagsW( 5137, 72.180984 ),
	VERT( 0x3fc96d6b, 0xbee554d9, 0x3dbd1f7b ),
	NORM( 0xbd6d7844, 0xbf79a11b, 0x3e5b1fad ),
	NFlagsW( 5138, 64.855957 ),
	VERT( 0x3fbb6b77, 0x3f25a441, 0x3f79b329 ),
	NORM( 0x3e34b58c, 0xbcc3c8ea, 0x3f7be86e ),
	NFlagsW( 5140, 77.734573 ),
	VERT( 0x4002a5f6, 0xbf84a8b2, 0x3edf32f1 ),
	NORM( 0x3ea6fbf7, 0x3f60fa3a, 0x3eb25403 ),
	NFlagsW( 5141, 36.905533 ),
	VERT( 0x3f93d462, 0x3f26611f, 0xbf9b116b ),
	NORM( 0x3e3110b0, 0x3df0f2b9, 0xbf7a56ab ),
	NFlagsW( 5142, 35.298065 ),
	VERT( 0x3fd3b6c0, 0xbe4e03f4, 0xbf82da74 ),
	NORM( 0x3e13f2bc, 0xbf309832, 0xbf359c48 ),
	NFlagsW( 5144, 82.463547 ),
	VERT( 0x3fcfb688, 0x3f96381f, 0x3f5dedab ),
	NORM( 0x3e6d3cef, 0x3ef74b2b, 0x3f582bc0 ),
	NFlagsW( 5145, 45.148899 ),
	VERT( 0x3fd8b99a, 0x3f183950, 0xbfae843e ),
	NORM( 0x3c0fa88a, 0x3c01c832, 0xbf7ffb6f ),
	NFlagsW( 5149, 22.771082 ),
	VERT( 0x400d7dff, 0x3f892ea2, 0x3f34fd8f ),
	NORM( 0x3e8218df, 0x3ed71b74, 0x3f5f048b ),
	NFlagsW( 5152, 88.540771 ),
	VERT( 0x4010eaa9, 0x3efa3169, 0xbf9a9b86 ),
	NORM( 0x3e7946bc, 0xbd697551, 0xbf77dead ),
	NFlagsW( 5156, 68.678131 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger4[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger4,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger4[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger4,
OPosition  (  8.016156F,  3.241310F, -0.002585F ),
OAngle     ( -0.044926F,  0.007924F,  9.999985F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Finger41,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy09[]
START
EvalFlags ( 0x0000001e ),
CNKModel   NULL,
OPosition  (  2.727576F,  0.000001F, -0.000003F ),
OAngle     ( -0.000002F, -0.000001F, -0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger32[]
START
	CnkV_VN(FV_CONT, 235),
	OffnbIdx(2660, 39),
	VERT( 0x3f151c5f, 0xbf1bd97f, 0xbf47ff22 ),
	NORM( 0xbdf3dd49, 0xbf3884de, 0xbf2ed016 ),
	VERT( 0x3f57e881, 0xbee0de1f, 0x3ef21f9f ),
	NORM( 0x3e3319ed, 0xbed14eb9, 0x3f654cf6 ),
	VERT( 0x3f51c75b, 0x3d60e8f4, 0x3efda01b ),
	NORM( 0x3da2bdb1, 0xbd8ca5ed, 0x3f7e958b ),
	VERT( 0x3f0c3c2c, 0x3e088e06, 0xbf855df2 ),
	NORM( 0xbe53a4f1, 0x3d62f22f, 0xbf7a120a ),
	VERT( 0x3f006a7d, 0x3f859b05, 0x3da9aa2b ),
	NORM( 0x3e3b7a17, 0x3f6ecfde, 0x3e9ed8ef ),
	VERT( 0x3f674abc, 0x3f0ac192, 0x3f02d7b7 ),
	NORM( 0x3e32ec83, 0x3eaf6406, 0x3f6c5095 ),
	VERT( 0x3fb5e2a7, 0xbf1a724e, 0x3e17b874 ),
	NORM( 0x3ea64433, 0xbf06d330, 0x3f491d5e ),
	VERT( 0x3f9e893f, 0xbf0c3bb9, 0xbf6842a8 ),
	NORM( 0xbd2668f4, 0xbf29e75b, 0xbf3f3549 ),
	VERT( 0x3f39a0cb, 0x3f824f41, 0x3d587580 ),
	NORM( 0x3e135fbf, 0x3f73bfa3, 0x3e8a0f97 ),
	VERT( 0x3fc268e9, 0xbefe208b, 0x3da2f390 ),
	NORM( 0x3ec94d52, 0xbd8df7a9, 0x3f6ab6ad ),
	VERT( 0x3f2bc909, 0x3f57909e, 0xbf398e85 ),
	NORM( 0xbd32e5c3, 0x3f43ffca, 0xbf244d74 ),
	VERT( 0x3fad7422, 0x3cc4df51, 0x3eaebe21 ),
	NORM( 0x3f01a4ff, 0xbdd75845, 0x3f5b18f7 ),
	VERT( 0x3fb94e2a, 0x3cb0f6ca, 0x3e74e177 ),
	NORM( 0x3f053ac1, 0xbd9492c0, 0x3f59cf3f ),
	VERT( 0x3f9b6057, 0x3dbbb2a2, 0xbf932eb5 ),
	NORM( 0xbcafe5ac, 0x3d13197d, 0xbf7fc69c ),
	VERT( 0x3fd541c2, 0xbf0dbd0e, 0xbf65ddca ),
	NORM( 0x3e548986, 0xbf26fd71, 0xbf3a9ec5 ),
	VERT( 0x3fbfb2d3, 0x3f2670ec, 0x3e497308 ),
	NORM( 0x3ebff0f8, 0x3ed2eeca, 0x3f549bd7 ),
	VERT( 0x3fca8eff, 0x3f0954d8, 0x3df542b6 ),
	NORM( 0x3eb96f79, 0xbde17368, 0x3f6cf32b ),
	VERT( 0x3fa85848, 0x3f33aa52, 0xbf5bd61b ),
	NORM( 0x3d59cf94, 0x3f36cc18, 0xbf32b4c2 ),
	VERT( 0x3faf388d, 0x3f775e08, 0xbe1d4b3e ),
	NORM( 0x3e3d649c, 0x3f797436, 0x3e02a723 ),
	VERT( 0x400b9473, 0xbed7c7c6, 0xbe111010 ),
	NORM( 0x3f5d62c5, 0xbf008b90, 0x3b32dd5d ),
	VERT( 0x400e7060, 0xbedfdbdd, 0x3c5a336f ),
	NORM( 0x3f420f40, 0xbefca752, 0x3eda57e1 ),
	VERT( 0x4002b0ed, 0xbec6d8fe, 0xbf4a54b7 ),
	NORM( 0x3f123028, 0xbf068bb9, 0xbf217055 ),
	VERT( 0x3fe532a6, 0x3d47aa77, 0xbf88e523 ),
	NORM( 0x3ead64f6, 0x3bd22fec, 0xbf70ddf3 ),
	VERT( 0x400fc785, 0xbec55e33, 0xbea57033 ),
	NORM( 0x3f61f11b, 0xbeefd2ea, 0xbd25dac0 ),
	VERT( 0x4009b04a, 0xbe861003, 0xbf41b15d ),
	NORM( 0x3f40f2be, 0xbe9c87e5, 0xbf14ef45 ),
	VERT( 0x3fdeabef, 0x3f25f228, 0xbf59e875 ),
	NORM( 0x3ea14fd2, 0x3f2f40b6, 0xbf2846df ),
	VERT( 0x3fe42ab2, 0x3f5d47f1, 0xbe8382d6 ),
	NORM( 0x3ebc6ec8, 0x3f6d70a0, 0xbd863d20 ),
	VERT( 0x4014aa5f, 0xbd06eef5, 0x3dc237ae ),
	NORM( 0x3f485321, 0xbdbbd0e1, 0x3f1da77a ),
	VERT( 0x4013faf9, 0xbcd2e3bd, 0xbd922ea8 ),
	NORM( 0x3f7b801c, 0xbdd04bc0, 0x3e2047f4 ),
	VERT( 0x4002980f, 0x3f10e52e, 0x3d3a7ee7 ),
	NORM( 0x3e52610a, 0x3e5b414a, 0x3f747824 ),
	VERT( 0x400243f8, 0x3f2d323e, 0x3c72716e ),
	NORM( 0x3f0777c0, 0x3f28db6f, 0x3f08a503 ),
	VERT( 0x4010d1b9, 0x3a92f8c2, 0xbf2d8825 ),
	NORM( 0x3f5d09aa, 0xbd1f54ea, 0xbf00c293 ),
	VERT( 0x4019a7b5, 0xbccdd248, 0xbe7be22b ),
	NORM( 0x3f7de1d6, 0xbdafb51e, 0x3dc38b96 ),
	VERT( 0x400ebf58, 0x3ec712f3, 0xbde19474 ),
	NORM( 0x3f68cae8, 0x3ed43d17, 0x3d11260a ),
	VERT( 0x4011aaf8, 0x3ec5d14e, 0x3d395dbb ),
	NORM( 0x3f4b5e31, 0x3ec49a26, 0x3ef0f389 ),
	VERT( 0x4005e27b, 0x3ed99e0f, 0xbf424505 ),
	NORM( 0x3f23ce33, 0x3f0132a1, 0xbf145d09 ),
	VERT( 0x400bd225, 0x3e909f9e, 0xbf3c4d47 ),
	NORM( 0x3f49a1eb, 0x3e86229d, 0xbf0ec43b ),
	VERT( 0x400ab559, 0x3f151855, 0xbea2c301 ),
	NORM( 0x3f401025, 0x3f265c51, 0xbdf967ea ),
	VERT( 0x4012b5ce, 0x3eb758f0, 0xbe96bd57 ),
	NORM( 0x3f6d3683, 0x3ebfff1b, 0xbce31633 ),
	CnkV_VN_NF(FV_CONT|FW_END, 225),
	OffnbIdx(0, 32),
	VERT( 0x3e53e175, 0xbf5d1e69, 0xbc4fdd7b ),
	NORM( 0x3d60d96b, 0xbf7d9eee, 0x3dfedffe ),
	NFlagsW( 5230, 58.497040 ),
	VERT( 0x3ec5996a, 0xbf58dfd7, 0x3c1a2e60 ),
	NORM( 0x3d4ade91, 0xbf787d34, 0x3e70f23d ),
	NFlagsW( 5233, 83.392899 ),
	VERT( 0x3f4a2e9a, 0xbfa607bc, 0x3eed9176 ),
	NORM( 0x3e168d7a, 0x3f7461cf, 0x3e849dd2 ),
	NFlagsW( 5234, 65.328362 ),
	VERT( 0x3e3c5551, 0xbf20b318, 0xbf46c5bb ),
	NORM( 0x3dfe4848, 0xbf31b27d, 0xbf35850d ),
	NFlagsW( 5235, 79.496338 ),
	VERT( 0x3f40f0fe, 0xbfb7550e, 0xbea5c103 ),
	NORM( 0x3e57a56f, 0x3f40dcb4, 0xbf1f7aca ),
	NFlagsW( 5237, 32.198044 ),
	VERT( 0x3f773a89, 0xbfaa8e9c, 0x3ef89b2c ),
	NORM( 0x3e076400, 0x3f6ca370, 0x3eb738eb ),
	NFlagsW( 5238, 62.148869 ),
	VERT( 0x3f1c45f8, 0xbf599a87, 0xbca0911f ),
	NORM( 0x3d0a0574, 0xbf7b7f10, 0x3e3c180a ),
	NFlagsW( 5239, 96.728264 ),
	VERT( 0x3f6cd3ba, 0xbfbc287c, 0xbe894997 ),
	NORM( 0x3e0996cb, 0x3f512690, 0xbf0f8ed0 ),
	NFlagsW( 5240, 30.887184 ),
	VERT( 0x3f985d90, 0xbfac5061, 0x3eeb26d5 ),
	NORM( 0x3dbe88a9, 0x3f718254, 0x3ea2ffa4 ),
	NFlagsW( 5242, 54.195297 ),
	VERT( 0x3f92fcec, 0xbfbe4316, 0xbea75e78 ),
	NORM( 0xbd891d2e, 0x3f4b5a45, 0xbf1a9058 ),
	NFlagsW( 5243, 33.091286 ),
	VERT( 0x3e0d0de7, 0xbed6524b, 0x3f1669bf ),
	NORM( 0x3e6ad634, 0xbef20f63, 0x3f59cf39 ),
	NFlagsW( 5250, 55.664425 ),
	VERT( 0x3def7862, 0x3dca6b3d, 0x3f1c4bd6 ),
	NORM( 0x3e792657, 0xbd5a08a6, 0x3f77eec0 ),
	NFlagsW( 5251, 51.610405 ),
	VERT( 0x3eb78472, 0xbf1cd88f, 0xbf385d69 ),
	NORM( 0x3d540d6d, 0xbf40e01e, 0xbf27cec6 ),
	NFlagsW( 5252, 96.577637 ),
	VERT( 0x3ef3e974, 0xbe7f24f9, 0x3f0a1611 ),
	NORM( 0x3e7e897b, 0xbe177e5d, 0x3f750e41 ),
	NFlagsW( 5253, 93.198845 ),
	VERT( 0x3e4d7ed2, 0x3f1bf52b, 0x3f20aa98 ),
	NORM( 0x3e8ed805, 0x3ec25803, 0x3f61d0b5 ),
	NFlagsW( 5254, 72.142494 ),
	VERT( 0x3ef02353, 0x3da5cb3b, 0x3ee4f972 ),
	NORM( 0x3e6df500, 0xbd5390bb, 0x3f78a404 ),
	NFlagsW( 5255, 86.083199 ),
	VERT( 0x3e1998a2, 0x3e245665, 0xbf847ced ),
	NORM( 0x3e10c034, 0x3d02d4ba, 0xbf7d4c25 ),
	NFlagsW( 5256, 77.568085 ),
	VERT( 0x3f041636, 0x3ecc6a50, 0x3f108819 ),
	NORM( 0x3e855592, 0x3d2bd227, 0x3f76eefd ),
	NFlagsW( 5257, 98.163185 ),
	VERT( 0x3ea6395d, 0x3e15afbd, 0xbf7ae97a ),
	NORM( 0x3d37d35f, 0x3d279664, 0xbf7f870a ),
	NFlagsW( 5258, 96.068604 ),
	VERT( 0x3ea71545, 0x3f8b1124, 0x3d80e0c0 ),
	NORM( 0x3e3a39f3, 0x3f75f1b6, 0x3e56a927 ),
	NFlagsW( 5259, 98.777672 ),
	VERT( 0x3e8e7dbd, 0x3f6a48a3, 0xbf376e56 ),
	NORM( 0x3e60b721, 0x3f384ab1, 0xbf28926b ),
	NFlagsW( 5260, 98.721535 ),
	VERT( 0x3ee6413e, 0x3f5f3e98, 0xbf29a058 ),
	NORM( 0x3e24e9cd, 0x3f488499, 0xbf19b772 ),
	NFlagsW( 5261, 99.980743 ),
	VERT( 0x3fa0c99a, 0xbf5effd5, 0xbe667159 ),
	NORM( 0x3d21283a, 0xbf7f67fe, 0x3d638885 ),
	NFlagsW( 5278, 96.501358 ),
	VERT( 0x3ffc3165, 0xbfd7876c, 0x3f1a3c24 ),
	NORM( 0x3eae8d77, 0x3ec325ef, 0x3f5bfeec ),
	NFlagsW( 5279, 0.169893 ),
	VERT( 0x3feb4422, 0xbfadca60, 0x3e878089 ),
	NORM( 0x3e0bb6d2, 0x3f7981db, 0x3e35a4bb ),
	NFlagsW( 5280, 42.002518 ),
	VERT( 0x3fe609ba, 0xbfcb805f, 0xbee805fd ),
	NORM( 0x3d096f5b, 0x3f3f96f4, 0xbf29932c ),
	NFlagsW( 5281, 9.742740 ),
	VERT( 0x3fd6fe56, 0xbf51a9c0, 0xbea4f473 ),
	NORM( 0x3e5e8e70, 0xbf79644a, 0xbd79f763 ),
	NFlagsW( 5282, 91.829117 ),
	VERT( 0x40105813, 0xbfb7aea5, 0x3e29c1cb ),
	NORM( 0x3ea83641, 0x3f71c0e3, 0xbc85b677 ),
	NFlagsW( 5283, 19.133802 ),
	VERT( 0x400e47eb, 0xbfcfd84a, 0xbee0bcff ),
	NORM( 0x3e97bc74, 0x3f39d3c5, 0xbf1ee5a9 ),
	NFlagsW( 5284, 0.679228 ),
	VERT( 0x3ff9d88c, 0xbf305156, 0xbd1c5aa7 ),
	NORM( 0x3ec7ee44, 0xbf43c40d, 0x3f033854 ),
	NFlagsW( 5285, 96.420792 ),
	VERT( 0x3ffc2d69, 0xbf152e2a, 0x3a65087f ),
	NORM( 0x3e00d765, 0xbea9641b, 0x3f6f6d41 ),
	NFlagsW( 5286, 99.716148 ),
	VERT( 0x4006212c, 0xbf168d30, 0xbeb9ffa6 ),
	NORM( 0x3f2a5964, 0xbf3a7474, 0xbe276a99 ),
	NFlagsW( 5287, 99.855003 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger32[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger32,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger32[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger32,
OPosition  (  2.705751F, -0.000001F, -0.000003F ),
OAngle     (  0.000000F, -0.000001F, -0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy09,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger31[]
START
	CnkV_VN(FV_CONT, 49),
	OffnbIdx(2596, 8),
	VERT( 0x3f5ab5fc, 0xbe89a381, 0x3f5ff86e ),
	NORM( 0x3cd16f73, 0xbe84f151, 0x3f77220e ),
	VERT( 0x3f51ab65, 0x3e437d2c, 0x3f52bf39 ),
	NORM( 0x3c9ceb64, 0xbd26726d, 0x3f7fbdd5 ),
	VERT( 0x3fac09f9, 0xbec6baf5, 0x3f6834c3 ),
	NORM( 0x3d331b8a, 0xbed55615, 0x3f6872fd ),
	VERT( 0x3f5e2701, 0x3f24913f, 0x3f6a8f93 ),
	NORM( 0x3c2eb9fc, 0x3e7adc03, 0x3f782f28 ),
	VERT( 0x3f4a95ae, 0x3e886c6a, 0xbf6e59ae ),
	NORM( 0x3d84079b, 0x3d8f7c27, 0xbf7ed64d ),
	VERT( 0x3fa845b9, 0x3e28d8f3, 0x3f6e5cfa ),
	NORM( 0x3b35d21d, 0xbd83d056, 0x3f7f77de ),
	VERT( 0x3f93c955, 0x3e8105b2, 0xbf85161e ),
	NORM( 0xbe17ee86, 0x3d376674, 0xbf7ce82c ),
	VERT( 0x3fb4a179, 0x3f3593b6, 0x3f7327b6 ),
	NORM( 0x3d8651e5, 0x3ec804ca, 0x3f6b0ed4 ),
	CnkV_VN_NF(FV_CONT|FW_START, 127),
	OffnbIdx(5244, 18),
	VERT( 0x3f2615cc, 0x3faa30e0, 0x3eca3f70 ),
	NORM( 0x3cc7f234, 0x3f729d5b, 0x3ea2e986 ),
	NFlagsW( 0, 43.843506 ),
	VERT( 0x3f1a6b0c, 0x3f921955, 0xbf36ac08 ),
	NORM( 0x3e6caaf5, 0x3f393e69, 0xbf267e4b ),
	NFlagsW( 1, 96.432129 ),
	VERT( 0x3f6ec56b, 0x3fa8fb6d, 0x3edd8b89 ),
	NORM( 0x3dc59f36, 0x3f67499e, 0x3ed5d6f2 ),
	NFlagsW( 2, 54.209763 ),
	VERT( 0x3f64c5f3, 0x3f927d25, 0xbf0a9a10 ),
	NORM( 0x3db3fea8, 0x3f57c126, 0xbf07f0bf ),
	NFlagsW( 3, 90.482262 ),
	VERT( 0x3fae96a0, 0x3fa11ed5, 0x3eb04870 ),
	NORM( 0x3e0355b2, 0x3f70ffa7, 0x3e9fb850 ),
	NFlagsW( 4, 79.367752 ),
	VERT( 0x3fa6c935, 0x3f8fc58d, 0xbf279df6 ),
	NORM( 0xbd075615, 0x3f4947ff, 0xbf1df4f0 ),
	NFlagsW( 5, 99.788704 ),
	VERT( 0x4035fbd8, 0xbed6527f, 0x3f1669d0 ),
	NORM( 0x3e6ad634, 0xbef20f63, 0x3f59cf39 ),
	NFlagsW( 6, 44.335571 ),
	VERT( 0x4034a6bd, 0x3dca6a6c, 0x3f1c4be8 ),
	NORM( 0x3e792656, 0xbd5a08aa, 0x3f77eec0 ),
	NFlagsW( 7, 48.389595 ),
	VERT( 0x40441b88, 0xbf1cd8a9, 0xbf385d58 ),
	NORM( 0x3d540d70, 0xbf40e01d, 0xbf27cec6 ),
	NFlagsW( 8, 3.422357 ),
	VERT( 0x404ba828, 0xbe7f2562, 0x3f0a1622 ),
	NORM( 0x3e7e897a, 0xbe177e5e, 0x3f750e41 ),
	NFlagsW( 9, 6.801151 ),
	VERT( 0x403a02e7, 0x3f1bf511, 0x3f20aaa9 ),
	NORM( 0x3e8ed805, 0x3ec25803, 0x3f61d0b5 ),
	NFlagsW( 10, 27.857506 ),
	VERT( 0x404b2f64, 0x3da5ca6b, 0x3ee4f994 ),
	NORM( 0x3e6df4ff, 0xbd5390bf, 0x3f78a404 ),
	NFlagsW( 11, 13.916800 ),
	VERT( 0x4036c484, 0x3e2455fe, 0xbf847ce4 ),
	NORM( 0x3e10c035, 0x3d02d4be, 0xbf7d4c25 ),
	NFlagsW( 12, 22.431915 ),
	VERT( 0x404e3087, 0x3ecc6a1c, 0x3f10882a ),
	NORM( 0x3e855591, 0x3d2bd223, 0x3f76eefd ),
	NFlagsW( 13, 1.836805 ),
	VERT( 0x4041f225, 0x3e15af56, 0xbf7ae968 ),
	NORM( 0x3d37d363, 0x3d279668, 0xbf7f870a ),
	NFlagsW( 14, 3.931396 ),
	VERT( 0x40420da2, 0x3f8b1117, 0x3d80e14c ),
	NORM( 0x3e3a39f2, 0x3f75f1b6, 0x3e56a928 ),
	NFlagsW( 15, 1.222332 ),
	VERT( 0x403efab1, 0x3f6a488a, 0xbf376e44 ),
	NORM( 0x3e60b722, 0x3f384ab1, 0xbf28926b ),
	NFlagsW( 16, 1.278461 ),
	VERT( 0x4049f321, 0x3f5f3e7e, 0xbf29a046 ),
	NORM( 0x3e24e9cd, 0x3f488499, 0xbf19b772 ),
	NFlagsW( 17, 0.019257 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 29),
	OffnbIdx(0, 4),
	VERT( 0x403a6911, 0xbf5d1e82, 0xbc4fd923 ),
	NORM( 0x3d60d96b, 0xbf7d9eee, 0x3dfedffe ),
	NFlagsW( 5230, 22.559507 ),
	VERT( 0x4045de27, 0xbf58dff1, 0x3c1a32bb ),
	NORM( 0x3d4ade91, 0xbf787d34, 0x3e70f23d ),
	NFlagsW( 5233, 4.541676 ),
	VERT( 0x4038f04f, 0xbf20b331, 0xbf46c5a9 ),
	NORM( 0x3dfe484a, 0xbf31b27d, 0xbf35850d ),
	NFlagsW( 5235, 20.471552 ),
	VERT( 0x40543c78, 0xbf599aa1, 0xbca08eef ),
	NORM( 0x3d0a0574, 0xbf7b7f10, 0x3e3c180a ),
	NFlagsW( 5239, 0.023843 ),
	CnkV_VN_NF(FV_CONT|FW_END, 113),
	OffnbIdx(0, 16),
	VERT( 0x3f1ff56b, 0xbf6a9c9d, 0x3e981bda ),
	NORM( 0xbd251ca4, 0xbf79dbcd, 0x3e5b18cb ),
	NFlagsW( 5198, 83.451935 ),
	VERT( 0x3ec2efd3, 0xbecb222c, 0x3f6afbaa ),
	NORM( 0x3e293433, 0xbee26438, 0x3f61af27 ),
	NFlagsW( 5200, 94.526031 ),
	VERT( 0x3ea4999d, 0x3e2f7c3f, 0x3f71e9cd ),
	NORM( 0x3e5853c6, 0xbd152921, 0x3f7a0c6b ),
	NFlagsW( 5201, 85.922073 ),
	VERT( 0x3f15ff94, 0xbf229df3, 0xbf4a64aa ),
	NORM( 0x3e670861, 0xbf2d7308, 0xbf333520 ),
	NFlagsW( 5202, 99.945572 ),
	VERT( 0x3ec10754, 0x3f3dfb04, 0x3f77b160 ),
	NORM( 0x3e27847d, 0x3eb8bce2, 0x3f6b0dad ),
	NFlagsW( 5203, 99.274139 ),
	VERT( 0x3f00b492, 0x3e8606ef, 0xbf847952 ),
	NORM( 0x3e80d467, 0x3d1884c0, 0xbf77947c ),
	NFlagsW( 5204, 99.760292 ),
	VERT( 0x3f668a94, 0xbf75d3ef, 0x3eb96401 ),
	NORM( 0xbc60d306, 0xbf7406f9, 0x3e9a96a1 ),
	NFlagsW( 5206, 66.025154 ),
	VERT( 0x3f99da8a, 0xbf8d1907, 0x3f43afc1 ),
	NORM( 0xbcb690f7, 0x3f6e9445, 0x3eb94b34 ),
	NFlagsW( 5207, 55.176186 ),
	VERT( 0x3f937e99, 0xbf9eade1, 0xbeb3cd19 ),
	NORM( 0x3e726f34, 0x3f3e033d, 0xbf207e0d ),
	NFlagsW( 5208, 48.855858 ),
	VERT( 0x3f5db8ba, 0xbf22dd6d, 0xbf1e31c2 ),
	NORM( 0x3d4e7f15, 0xbf4bf533, 0xbf1a2d68 ),
	NFlagsW( 5209, 99.061844 ),
	VERT( 0x3f9de1a1, 0xbf60d8fa, 0x3e85c64e ),
	NORM( 0x3e1b5366, 0xbf7a2403, 0x3e18b95a ),
	NFlagsW( 5210, 60.751778 ),
	VERT( 0x3fbe7f1d, 0xbf8b0608, 0x3f52985a ),
	NORM( 0x3d51f3d9, 0x3f6757ec, 0x3ed9a91d ),
	NFlagsW( 5211, 53.291149 ),
	VERT( 0x3fb886d3, 0xbfa13297, 0xbe386129 ),
	NORM( 0x3dbf2b21, 0x3f5b2755, 0xbf022419 ),
	NFlagsW( 5212, 49.202164 ),
	VERT( 0x3f98cc6e, 0xbf28bb1f, 0xbf394bc1 ),
	NORM( 0xbe0468dd, 0xbf3ada87, 0xbf2bd4c9 ),
	NFlagsW( 5213, 95.828201 ),
	VERT( 0x3fe939a0, 0xbf9540cc, 0x3f389047 ),
	NORM( 0x3e4f282f, 0x3f6fa0d0, 0x3e936841 ),
	NFlagsW( 5214, 44.324245 ),
	VERT( 0x3fe308bf, 0xbfa0b676, 0xbe918f44 ),
	NORM( 0xbd7960e1, 0x3f5038e8, 0xbf141c2a ),
	NFlagsW( 5215, 47.825459 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger31[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger31,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger31[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger31,
OPosition  (  2.880316F, -0.000001F, -0.000001F ),
OAngle     (  0.000000F, -0.000001F, -0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Finger32,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger3[]
START
	CnkV_VN_NF(FV_CONT|FW_START, 36),
	OffnbIdx(5200, 5),
	VERT( 0x4050b514, 0xbecb21ec, 0x3f6afb3a ),
	NORM( 0x3e293432, 0xbee26438, 0x3f61af27 ),
	NFlagsW( 0, 5.473944 ),
	VERT( 0x404cea4d, 0x3e2f7cbf, 0x3f71e95d ),
	NORM( 0x3e5853c5, 0xbd152921, 0x3f7a0c6b ),
	NFlagsW( 1, 14.076771 ),
	VERT( 0x405dd6ff, 0xbf229dd3, 0xbf4a6519 ),
	NORM( 0x3e670861, 0xbf2d7308, 0xbf333520 ),
	NFlagsW( 2, 0.054431 ),
	VERT( 0x40507804, 0x3f3dfb24, 0x3f77b0f1 ),
	NORM( 0x3e27847c, 0x3eb8bce2, 0x3f6b0dad ),
	NFlagsW( 3, 0.723398 ),
	VERT( 0x4058843e, 0x3e86072f, 0xbf84798a ),
	NORM( 0x3e80d468, 0x3d1884c0, 0xbf77947b ),
	NFlagsW( 4, 0.239660 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 29),
	OffnbIdx(0, 4),
	VERT( 0x3fe19c58, 0x3feff449, 0x3dbd1c19 ),
	NORM( 0x3d355366, 0xbf79d02e, 0x3e5b1fae ),
	NFlagsW( 5138, 6.332935 ),
	VERT( 0x40128348, 0x3fab4c80, 0x3edf3217 ),
	NORM( 0x3e6e1296, 0x3f6878e8, 0x3eb25400 ),
	NFlagsW( 5141, 58.854729 ),
	VERT( 0x401a085c, 0x3fe972d1, 0x3dc5ddbc ),
	NORM( 0xbde622fd, 0xbf7b10de, 0x3e23ad81 ),
	NFlagsW( 5147, 0.857933 ),
	VERT( 0x40605474, 0xbf6a9c7d, 0x3e981afb ),
	NORM( 0xbd251ca5, 0xbf79dbcd, 0x3e5b18cb ),
	NFlagsW( 5198, 0.033692 ),
	CnkV_VN_NF(FV_CONT|FW_END, 127),
	OffnbIdx(0, 18),
	VERT( 0x3f102aba, 0xbd0a0635, 0x3f8af7cb ),
	NORM( 0xbd099c9b, 0x3db45b0f, 0x3f7edc3e ),
	NFlagsW( 5107, 25.453325 ),
	VERT( 0x3eeae26e, 0x3f135229, 0x3f716516 ),
	NORM( 0xbcf71f53, 0xbe10c479, 0x3f7d4fa4 ),
	NFlagsW( 5112, 25.533819 ),
	VERT( 0x3fe0fcee, 0xbf772c82, 0x3f84304d ),
	NORM( 0x3eea5530, 0x3edb2be1, 0x3f477f33 ),
	NFlagsW( 5116, 49.902485 ),
	VERT( 0x3fc22eed, 0xbeae5c74, 0x3f98cc39 ),
	NORM( 0x3dd6e872, 0xbe3c0809, 0x3f7a358c ),
	NFlagsW( 5118, 52.825123 ),
	VERT( 0x3f3cc94c, 0x3f0c7479, 0xbfbeefef ),
	NORM( 0x3ea37dd8, 0xbb9e478d, 0xbf729833 ),
	NFlagsW( 5120, 16.457478 ),
	VERT( 0x3fc843b0, 0x3e97ebc2, 0x3fa4c714 ),
	NORM( 0xbc633276, 0xbd46d2c8, 0x3f7fac71 ),
	NFlagsW( 5121, 56.934898 ),
	VERT( 0x401d3c73, 0xbf890a7c, 0x3f4ff6a6 ),
	NORM( 0x3e02e44a, 0x3f72cc9c, 0x3e94825d ),
	NFlagsW( 5123, 50.592129 ),
	VERT( 0x400cd36d, 0xbebb6895, 0x3f8ed3f9 ),
	NORM( 0x3deeee9a, 0xbf008ce8, 0x3f5b5c28 ),
	NFlagsW( 5125, 93.372765 ),
	VERT( 0x3fff86a6, 0xbf5ca97a, 0xbf78cb3c ),
	NORM( 0x3f0efd61, 0xbe1f54ca, 0xbf50930c ),
	NFlagsW( 5126, 64.720749 ),
	VERT( 0x3fc9d589, 0x3f74e809, 0x3f9f8690 ),
	NORM( 0x3e5b80ae, 0x3ee38fa7, 0x3f5ea9a1 ),
	NFlagsW( 5127, 53.165287 ),
	VERT( 0x40174363, 0xbf6ad2f2, 0x3eaf8bc4 ),
	NORM( 0xbcc945d7, 0xbf7e3161, 0x3deda589 ),
	NFlagsW( 5128, 53.744453 ),
	VERT( 0x40079a5f, 0x3e28f38e, 0x3f9b36dd ),
	NORM( 0x3e295b86, 0xbd730d70, 0x3f7c0462 ),
	NFlagsW( 5130, 90.354538 ),
	VERT( 0x401f53a4, 0xbfa18c52, 0xbf005e9a ),
	NORM( 0x3ed9e0db, 0x3f44c572, 0xbef488f2 ),
	NFlagsW( 5132, 38.623985 ),
	VERT( 0x400adc32, 0x3f365773, 0x3f94847f ),
	NORM( 0x3e549d74, 0x3ecdb7f4, 0x3f645245 ),
	NFlagsW( 5133, 91.777542 ),
	VERT( 0x401a0d15, 0xbf1134c2, 0xbf71056d ),
	NORM( 0x3e827137, 0xbf2a16fa, 0xbf33dda4 ),
	NFlagsW( 5134, 97.946228 ),
	VERT( 0x3fecdaa7, 0x3f1d619a, 0xbf7cc2d2 ),
	NORM( 0xbe01797c, 0xbd785392, 0xbf7d787f ),
	NFlagsW( 5135, 73.199951 ),
	VERT( 0x40139df8, 0x3e8cec41, 0xbf9d6e65 ),
	NORM( 0xbd99d187, 0x3ae70572, 0xbf7f46cc ),
	NFlagsW( 5139, 96.130493 ),
	VERT( 0x40170713, 0x3f8c4247, 0xbf5ef188 ),
	NORM( 0x3ea82a81, 0x3f30445b, 0xbf258472 ),
	NFlagsW( 5143, 95.666641 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger3[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger3,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger3[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger3,
OPosition  (  8.016157F,  1.080438F, -0.000863F ),
OAngle     ( -0.045507F,  0.003183F,  3.999972F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Finger31,
Sibling     object_kihon11_Bip01_Bip01_L_Finger4,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy08[]
START
EvalFlags ( 0x0000001e ),
CNKModel   NULL,
OPosition  (  3.182168F, -0.000000F,  0.000002F ),
OAngle     (  0.000002F, -0.000001F, -0.000002F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger22[]
START
	CnkV_VN(FV_CONT, 187),
	OffnbIdx(2628, 31),
	VERT( 0x3f850e19, 0xbf027fc7, 0x3dd546da ),
	NORM( 0x3e1d9354, 0xbf7cf1b4, 0x3bec0a3a ),
	VERT( 0x3f9693ad, 0xbe78e483, 0x3efc703e ),
	NORM( 0x3ebdc74a, 0xbf0804b5, 0x3f4303f8 ),
	VERT( 0x3f7f3bdc, 0xbe214bd0, 0xbf0ff1fc ),
	NORM( 0x3d477175, 0xbf2069b7, 0xbf471e6c ),
	VERT( 0x3fa1de28, 0xbdf9fc84, 0x3edd14ed ),
	NORM( 0x3ec60725, 0xbd9dc5c0, 0x3f6b4067 ),
	VERT( 0x3f86c149, 0x3eb9e040, 0x3f36ccb7 ),
	NORM( 0x3f0144e2, 0xbdcbebaa, 0x3f5b7d63 ),
	VERT( 0x3fba7d85, 0xbecede56, 0x3c9a17fd ),
	NORM( 0x3ea7adb3, 0xbf707198, 0xbdd2b8eb ),
	VERT( 0x3f929b47, 0x3ec0958e, 0x3f1d3153 ),
	NORM( 0x3f03e149, 0xbd8bf2b4, 0x3f5ab7dc ),
	VERT( 0x3f6a85ee, 0x3ef922a1, 0xbf4667ad ),
	NORM( 0xbc1f922e, 0x3da9d2f1, 0xbf7f1b2e ),
	VERT( 0x3fb624f6, 0xbde97bd1, 0xbf0b3b1b ),
	NORM( 0x3e94c7e9, 0xbf16ec97, 0xbf40ef65 ),
	VERT( 0x3fdb5cc8, 0xbe83abe7, 0x3ea0f01d ),
	NORM( 0x3eedf026, 0xbf3e4bce, 0x3ef654d0 ),
	VERT( 0x3fdc7619, 0xbe1b00a7, 0x3eb7b222 ),
	NORM( 0x3e18a23c, 0xbeb9e9ca, 0x3f6b7474 ),
	VERT( 0x3f9de387, 0x3f68aaf6, 0x3f059c2d ),
	NORM( 0x3eb7c33d, 0xbdf55deb, 0x3f6cf76d ),
	VERT( 0x3fecd0ef, 0xbdfed940, 0xbb121af5 ),
	NORM( 0x3f3d4a41, 0xbf2585f7, 0xbe40239d ),
	VERT( 0x3ffb4a0c, 0x3cb54283, 0x3ec471b6 ),
	NORM( 0x3f4c3ad2, 0xbee041b4, 0x3ed42a2a ),
	VERT( 0x3ff58523, 0x3d24149c, 0x3e6a3f81 ),
	NORM( 0x3f68a679, 0xbed58bd3, 0xbc43e637 ),
	VERT( 0x3fe409f8, 0x3db5ae01, 0xbed74dd5 ),
	NORM( 0x3f21ae7c, 0xbede29ce, 0xbf247ca7 ),
	VERT( 0x3fbf31e7, 0x3f01e1b1, 0xbf2f25e9 ),
	NORM( 0x3eb30c95, 0x3dae5337, 0xbf6ed818 ),
	VERT( 0x3ffda8cf, 0x3dbd96b0, 0x3d4fa107 ),
	NORM( 0x3f6c88a4, 0xbec20e40, 0xbd52b1f9 ),
	VERT( 0x3ff077c3, 0x3e66d71f, 0xbec1c366 ),
	NORM( 0x3f497289, 0xbe50ef52, 0xbf1515fb ),
	VERT( 0x40017227, 0x3edca5c2, 0x3ef8e605 ),
	NORM( 0x3f47ec19, 0xbd429de2, 0x3f1f6f10 ),
	VERT( 0x3fd7fafb, 0x3f7ec97e, 0x3eeb23f6 ),
	NORM( 0x3e28e849, 0x3e3ed51c, 0x3f77f1fa ),
	VERT( 0x4000cb30, 0x3ee3d5a4, 0x3ea40d8e ),
	NORM( 0x3f7c8e82, 0xbc9b9175, 0x3e2640d2 ),
	VERT( 0x3fd603df, 0x3f8d898f, 0x3eddfad7 ),
	NORM( 0x3ee48b7f, 0x3f2fbec9, 0x3f12f0ad ),
	VERT( 0x3ffb8040, 0x3efdba15, 0xbe91d97b ),
	NORM( 0x3f5e4a9d, 0x3d84f824, 0xbefbc386 ),
	VERT( 0x3ff26379, 0x3f595f8f, 0x3e9950c2 ),
	NORM( 0x3f5d29c9, 0x3eff961f, 0x3d88a325 ),
	VERT( 0x3ff80dec, 0x3f581adc, 0x3ee94a8d ),
	NORM( 0x3f3f17c1, 0x3edfc474, 0x3f00755e ),
	VERT( 0x40067d24, 0x3eedb0d3, 0x3e17a306 ),
	NORM( 0x3f7e9df7, 0x3b9384e4, 0x3dd463d7 ),
	VERT( 0x3fe0dca5, 0x3f668c20, 0xbeb2eebb ),
	NORM( 0x3f16ee52, 0x3f17e374, 0xbf0c4e4d ),
	VERT( 0x3fee5641, 0x3f44cde8, 0xbea97080 ),
	NORM( 0x3f43815e, 0x3eb9429e, 0xbf08dea7 ),
	VERT( 0x3fe8416a, 0x3f85a4f6, 0x3dccab68 ),
	NORM( 0x3f2e2ef2, 0x3f3a6e20, 0xbda7cbc6 ),
	VERT( 0x3ffabdb1, 0x3f55a885, 0x3dec9c24 ),
	NORM( 0x3f62e788, 0x3eed1164, 0x3a90c74e ),
	CnkV_VN_NF(FV_CONT|FW_START, 71),
	OffnbIdx(5278, 10),
	VERT( 0x3ebd0d14, 0x3fe274f8, 0xbe6674df ),
	NORM( 0x3ddee944, 0xbf7e14da, 0x3d63886f ),
	NFlagsW( 0, 3.498648 ),
	VERT( 0x3f91b3c4, 0x3f810e9c, 0x3f1a3b41 ),
	NORM( 0x3ea083c0, 0x3eced94f, 0x3f5bfeec ),
	NFlagsW( 1, 99.830109 ),
	VERT( 0x3f7bcf6e, 0x3fa9835c, 0x3e877ec4 ),
	NORM( 0x3d8b82b7, 0x3f7b55ff, 0x3e35a4c0 ),
	NFlagsW( 2, 57.997478 ),
	VERT( 0x3f758645, 0x3f8b8288, 0xbee807c2 ),
	NORM( 0xbc9976e5, 0x3f3fb8df, 0xbf29932a ),
	NFlagsW( 3, 90.257256 ),
	VERT( 0x3f49be40, 0x3fece3d6, 0xbea4f636 ),
	NORM( 0x3e91ccde, 0xbf74e730, 0xbd79f778 ),
	NFlagsW( 4, 8.170891 ),
	VERT( 0x3fb3e30e, 0x3fa35f3e, 0x3e29be42 ),
	NORM( 0x3e86131e, 0x3f77080d, 0xbc85b64c ),
	NFlagsW( 5, 80.866203 ),
	VERT( 0x3fb174cf, 0x3f8afafb, 0xbee0bec4 ),
	NORM( 0x3e7ae200, 0x3f3eaab4, 0xbf1ee5a8 ),
	NFlagsW( 6, 99.320778 ),
	VERT( 0x3f8679de, 0x3ffff406, 0xbd1c68bb ),
	NORM( 0x3ee2c161, 0xbf3c50d6, 0x3f033853 ),
	NFlagsW( 7, 3.579203 ),
	VERT( 0x3f87daf9, 0x4006d364, 0x3a61841e ),
	NORM( 0x3e1828dc, 0xbea47c16, 0x3f6f6d40 ),
	NFlagsW( 8, 0.283846 ),
	VERT( 0x3f97f21f, 0x40070b71, 0xbeba0168 ),
	NORM( 0x3f36f0c9, 0xbf2e1e29, 0xbe276a9c ),
	NFlagsW( 9, 0.145001 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 43),
	OffnbIdx(0, 6),
	VERT( 0xbd87c066, 0x3fa7e51f, 0x3eed8fb1 ),
	NORM( 0x3da3feb2, 0x3f766989, 0x3e849dd5 ),
	NFlagsW( 5234, 11.096935 ),
	VERT( 0xbdbe2f9e, 0x3f965015, 0xbea5c2c7 ),
	NORM( 0x3e214eca, 0x3f44272a, 0xbf1f7ac9 ),
	NFlagsW( 5237, 23.695545 ),
	VERT( 0x3de4cbc1, 0x3fa4f348, 0x3ef89967 ),
	NORM( 0x3d8a10e8, 0x3f6e6c4d, 0x3eb738ee ),
	NFlagsW( 5238, 28.885954 ),
	VERT( 0x3da56e2c, 0x3f930782, 0xbe894b5b ),
	NORM( 0x3d9dcaac, 0x3f530a63, 0xbf0f8ece ),
	NFlagsW( 5240, 42.185139 ),
	VERT( 0x3eac69e6, 0x3fa53408, 0x3eeb2511 ),
	NORM( 0x3cdd2f28, 0x3f729506, 0x3ea2ffa7 ),
	NFlagsW( 5242, 45.440514 ),
	VERT( 0x3e9bf6c8, 0x3f92ec7d, 0xbea7603d ),
	NORM( 0xbdfa42ae, 0x3f49a965, 0xbf1a9057 ),
	NFlagsW( 5243, 61.632198 ),
	CnkV_VN_NF(FV_CONT|FW_END, 127),
	OffnbIdx(0, 18),
	VERT( 0xbdf6a426, 0xbe6bd4b2, 0x3f69a4f7 ),
	NORM( 0x3e862da1, 0xbefd3e89, 0x3f5422f2 ),
	NFlagsW( 5216, 43.003876 ),
	VERT( 0xbbe51318, 0xbf228f38, 0x3e965b63 ),
	NORM( 0x3e1cfe1d, 0xbf7c33db, 0x3d9de12c ),
	NFlagsW( 5217, 49.955074 ),
	VERT( 0x3e2d6fc2, 0xbf195513, 0x3ea40d56 ),
	NORM( 0x3e22cf76, 0xbf7818a0, 0x3e40fb06 ),
	NFlagsW( 5218, 51.641060 ),
	VERT( 0xbe41283b, 0x3e8f47d0, 0x3f75adaa ),
	NORM( 0x3e6e6480, 0xbd9dde1c, 0x3f782ec7 ),
	NFlagsW( 5219, 34.341866 ),
	VERT( 0xbd3ded63, 0xbebb6bb6, 0xbeeab18f ),
	NORM( 0x3e4f6276, 0xbf255bd6, 0xbf3c6d24 ),
	NFlagsW( 5220, 49.985874 ),
	VERT( 0x3ec987b0, 0xbf12ef35, 0x3e97ab2c ),
	NORM( 0x3e14eb69, 0xbf7adece, 0x3e0b5f27 ),
	NFlagsW( 5221, 68.436836 ),
	VERT( 0x3e4e2ed8, 0xbca7a35f, 0x3f6148f9 ),
	NORM( 0x3e7cfbff, 0xbe2f5b58, 0x3f7428f0 ),
	NFlagsW( 5222, 60.054882 ),
	VERT( 0x3e01079d, 0xbeaaaddf, 0xbecbaaee ),
	NORM( 0x3e1a1651, 0xbf3587fa, 0xbf305905 ),
	NFlagsW( 5223, 50.030678 ),
	VERT( 0xbe1b2f9e, 0x3f4bb0d2, 0x3f804ef9 ),
	NORM( 0x3e68a471, 0x3eb7156a, 0x3f67e41a ),
	NFlagsW( 5224, 21.795809 ),
	VERT( 0x3e288c7f, 0x3e9f404b, 0x3f4dad80 ),
	NORM( 0x3e63ccb5, 0xbda174b1, 0x3f78c48d ),
	NFlagsW( 5225, 56.638199 ),
	VERT( 0xbe199eaa, 0x3ed9cd44, 0xbf2e20de ),
	NORM( 0x3e1b5361, 0x3db755a1, 0xbf7bff77 ),
	NFlagsW( 5226, 46.080250 ),
	VERT( 0x3eb29089, 0xbe99e4ac, 0xbee837ca ),
	NORM( 0xbcc0fbe4, 0xbf31a702, 0xbf3839e3 ),
	NFlagsW( 5227, 57.815098 ),
	VERT( 0x3f159d53, 0xbe271417, 0x3f500686 ),
	NORM( 0x3e53c342, 0xbeddf10c, 0x3f608a90 ),
	NFlagsW( 5228, 97.896019 ),
	VERT( 0x3e39fcca, 0x3f207cd6, 0x3f6fc70c ),
	NORM( 0x3e7677a5, 0x3c97310f, 0x3f786ddd ),
	NFlagsW( 5229, 72.447739 ),
	VERT( 0x3ccf2096, 0x3edbc284, 0xbf1f4cc4 ),
	NORM( 0x3d5f5c88, 0x3dbf899c, 0xbf7e7ecf ),
	NFlagsW( 5231, 50.290100 ),
	VERT( 0x3f03fd74, 0x3ea5c059, 0x3f5b9ddb ),
	NORM( 0x3d93c9f7, 0xbde093e1, 0x3f7dc8e3 ),
	NFlagsW( 5232, 96.646957 ),
	VERT( 0x3e7ecb79, 0x3ee404a6, 0xbf2e09ba ),
	NORM( 0xbe498293, 0x3daae63b, 0xbf7a1561 ),
	NFlagsW( 5236, 60.531502 ),
	VERT( 0x3f0dedc6, 0x3f50f272, 0x3f65ef2d ),
	NORM( 0x3df63e79, 0x3e9feeb3, 0x3f713bf8 ),
	NFlagsW( 5241, 99.963470 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger22[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger22,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger22[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger22,
OPosition  (  3.156710F,  0.000000F,  0.000003F ),
OAngle     (  0.000000F, -0.000001F, -0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy08,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger21[]
START
	CnkV_VN(FV_CONT, 91),
	OffnbIdx(2538, 15),
	VERT( 0x3f14a39c, 0xbed1b9d6, 0x3f9b3204 ),
	NORM( 0x3e11c011, 0xbee98d32, 0x3f60e1b1 ),
	VERT( 0x3f5b8950, 0xbf656783, 0x3f11bd9d ),
	NORM( 0x3d311371, 0xbf7d67b8, 0x3e0a870c ),
	VERT( 0x3f91e52d, 0xbf642767, 0x3f1d50d7 ),
	NORM( 0x3e2af74d, 0xbf72228f, 0x3e8e8bb8 ),
	VERT( 0x3f878e59, 0xbe88d354, 0x3f9643c0 ),
	NORM( 0x3db1728d, 0xbea61b93, 0x3f71228e ),
	VERT( 0x3f0b9fdb, 0x3f3ab514, 0x3fa7ef7c ),
	NORM( 0x3e0617db, 0x3ea63ee4, 0x3f6fcc22 ),
	VERT( 0x3f8bea5f, 0xbf120186, 0xbeabb710 ),
	NORM( 0x3db4e999, 0xbf436861, 0xbf23d49c ),
	VERT( 0x3f8073ac, 0x3e44b981, 0x3f922e50 ),
	NORM( 0x3c755469, 0xbda8387e, 0x3f7f1b2e ),
	VERT( 0x3fbd011e, 0xbf4eba66, 0x3f08d2e9 ),
	NORM( 0x3e2e1953, 0xbf77686b, 0x3e45380c ),
	VERT( 0x3fc4dccb, 0xbeadcbbe, 0x3f9a37e5 ),
	NORM( 0x3cddf406, 0xbefbecae, 0x3f5ec237 ),
	VERT( 0x3f8402b2, 0x3f24aa2b, 0x3fa07153 ),
	NORM( 0xbd375df7, 0x3e1d10cf, 0x3f7cb600 ),
	VERT( 0x3fb6451c, 0xbf0bcbe0, 0xbee13b49 ),
	NORM( 0xbd2277f4, 0xbf31c5a8, 0xbf37ede6 ),
	VERT( 0x3fba99fe, 0x3e51ca9c, 0x3fa08ed9 ),
	NORM( 0xbc6580a4, 0xbde57fd4, 0x3f7e5cc1 ),
	VERT( 0x3f79d7d5, 0x3eb026fb, 0xbf1b958b ),
	NORM( 0x3d39a73d, 0x3dd7479d, 0xbf7e5133 ),
	VERT( 0x3fc08fd8, 0x3f4172f8, 0x3fa67a7c ),
	NORM( 0x3d552bc0, 0x3ea1bbe6, 0x3f7286bf ),
	VERT( 0x3fa6e5a9, 0x3ebd27df, 0xbf3690ca ),
	NORM( 0xbe1dfc70, 0x3da7394c, 0xbf7c11d4 ),
	CnkV_VN_NF(FV_CONT|FW_START, 267),
	OffnbIdx(5206, 38),
	VERT( 0x3ef4e0c6, 0x3fbbbc90, 0x3eb9630c ),
	NORM( 0x3d5849e3, 0xbf73ad87, 0x3e9a969f ),
	NFlagsW( 0, 33.974850 ),
	VERT( 0x3f49f435, 0x3fac49d6, 0x3f43af47 ),
	NORM( 0xbdb2ab43, 0x3f6d999b, 0x3eb94b38 ),
	NFlagsW( 1, 44.823814 ),
	VERT( 0x3f3fb82d, 0x3f9a4e65, 0xbeb3ce0f ),
	NORM( 0x3e3cd364, 0x3f41c711, 0xbf207e0d ),
	NFlagsW( 2, 51.144146 ),
	VERT( 0x3ed7b50c, 0x3fe4cf33, 0xbf1e323d ),
	NORM( 0x3dd8d09e, 0xbf4a8f8a, 0xbf1a2d69 ),
	NFlagsW( 3, 0.938161 ),
	VERT( 0x3f4dfd45, 0x3fc92c6b, 0x3e85c55a ),
	NORM( 0x3e60be1e, 0xbf76d297, 0x3e18b955 ),
	NFlagsW( 4, 39.248222 ),
	VERT( 0x3f8962ca, 0x3fb0e9e4, 0x3f5297e0 ),
	NORM( 0xbc430a96, 0x3f67b1fb, 0x3ed9a920 ),
	NFlagsW( 5, 46.708851 ),
	VERT( 0x3f84fa31, 0x3f9a608e, 0xbe386315 ),
	NORM( 0x3d08cf21, 0x3f5c4964, 0xbf022418 ),
	NFlagsW( 6, 50.797836 ),
	VERT( 0x3f3fef19, 0x3fe4cf16, 0xbf394c3c ),
	NORM( 0xbd9fe6a2, 0xbf3cb521, 0xbf2bd4cb ),
	NFlagsW( 7, 4.171805 ),
	VERT( 0x3fb4b953, 0x3fa9b088, 0x3f388fcd ),
	NORM( 0x3e0bca54, 0x3f72a835, 0x3e936844 ),
	NFlagsW( 8, 55.675751 ),
	VERT( 0x3faf58f3, 0x3f9dd376, 0xbe91903a ),
	NORM( 0xbdf09560, 0x3f4ea0ba, 0xbf141c29 ),
	NFlagsW( 9, 52.174538 ),
	VERT( 0x4042525f, 0xbe6bd4b2, 0x3f69a571 ),
	NORM( 0x3e862da1, 0xbefd3e89, 0x3f5422f3 ),
	NFlagsW( 10, 56.996124 ),
	VERT( 0x404994f6, 0xbf228f38, 0x3e965c56 ),
	NORM( 0x3e1cfe1d, 0xbf7c33db, 0x3d9de12c ),
	NFlagsW( 11, 50.044926 ),
	VERT( 0x4054de7c, 0xbf195513, 0x3ea40e49 ),
	NORM( 0x3e22cf76, 0xbf7818a0, 0x3e40fb06 ),
	NFlagsW( 12, 48.358936 ),
	VERT( 0x403df4fc, 0x3e8f47d0, 0x3f75ae24 ),
	NORM( 0x3e6e6480, 0xbd9dde1c, 0x3f782ec8 ),
	NFlagsW( 13, 65.658134 ),
	VERT( 0x40470fca, 0xbebb6bb6, 0xbeeab09e ),
	NORM( 0x3e4f6276, 0xbf255bd6, 0xbf3c6d24 ),
	NFlagsW( 14, 50.014133 ),
	VERT( 0x40633876, 0xbf12ef35, 0x3e97ac1f ),
	NORM( 0x3e14eb69, 0xbf7adece, 0x3e0b5f27 ),
	NFlagsW( 15, 31.563164 ),
	VERT( 0x4056ea6d, 0xbca7a35f, 0x3f614973 ),
	NORM( 0x3e7cfbff, 0xbe2f5b58, 0x3f7428f1 ),
	NFlagsW( 16, 39.945118 ),
	VERT( 0x405217fa, 0xbeaaaddf, 0xbecba9fc ),
	NORM( 0x3e1a1651, 0xbf3587fa, 0xbf305906 ),
	NFlagsW( 17, 49.969318 ),
	VERT( 0x40405486, 0x3f4bb0d2, 0x3f804f36 ),
	NORM( 0x3e68a471, 0x3eb7156a, 0x3f67e41b ),
	NFlagsW( 18, 78.204193 ),
	VERT( 0x40549048, 0x3e9f404b, 0x3f4dadfa ),
	NORM( 0x3e63ccb5, 0xbda174b1, 0x3f78c48e ),
	NFlagsW( 19, 43.361794 ),
	VERT( 0x40406d95, 0x3ed9cd44, 0xbf2e2065 ),
	NORM( 0x3e1b5361, 0x3db755a1, 0xbf7bff78 ),
	NFlagsW( 20, 53.919750 ),
	VERT( 0x40605991, 0xbe99e4ac, 0xbee836d8 ),
	NORM( 0xbcc0fbe4, 0xbf31a702, 0xbf3839e4 ),
	NFlagsW( 21, 42.184906 ),
	VERT( 0x406f6ed5, 0xbe271417, 0x3f500700 ),
	NORM( 0x3e53c342, 0xbeddf10c, 0x3f608a91 ),
	NFlagsW( 22, 2.103980 ),
	VERT( 0x4055a74d, 0x3f207cd6, 0x3f6fc786 ),
	NORM( 0x3e7677a5, 0x3c97310f, 0x3f786dde ),
	NFlagsW( 23, 27.552261 ),
	VERT( 0x401ea3e8, 0x3fda06c8, 0xbc4ff79b ),
	NORM( 0x3dfdaef0, 0xbf7c05d1, 0x3dfedff3 ),
	NFlagsW( 24, 18.943445 ),
	VERT( 0x404ba5c1, 0x3edbc284, 0xbf1f4c4b ),
	NORM( 0x3d5f5c88, 0x3dbf899c, 0xbf7e7ed0 ),
	NFlagsW( 25, 49.709900 ),
	VERT( 0x406b06dd, 0x3ea5c059, 0x3f5b9e56 ),
	NORM( 0x3d93c9f7, 0xbde093e1, 0x3f7dc8e4 ),
	NFlagsW( 26, 3.353047 ),
	VERT( 0x4029fee6, 0x3fddbdf1, 0x3c1a1449 ),
	NORM( 0x3defdb3e, 0xbf76ffd2, 0x3e70f238 ),
	NFlagsW( 27, 12.065429 ),
	VERT( 0x4045c97d, 0x3fa7e51f, 0x3eed90a5 ),
	NORM( 0x3da3feb2, 0x3f766989, 0x3e849dd6 ),
	NFlagsW( 28, 23.574711 ),
	VERT( 0x401c1e54, 0x3ff7f50a, 0xbf46c623 ),
	NORM( 0x3e3069cb, 0xbf2f0c10, 0xbf35850e ),
	NFlagsW( 29, 0.032106 ),
	VERT( 0x4059f438, 0x3ee404a6, 0xbf2e0941 ),
	NORM( 0xbe498293, 0x3daae63b, 0xbf7a1562 ),
	NFlagsW( 30, 39.468498 ),
	VERT( 0x40441603, 0x3f965015, 0xbea5c1d5 ),
	NORM( 0x3e214eca, 0x3f44272a, 0xbf1f7ac9 ),
	NFlagsW( 31, 44.106411 ),
	VERT( 0x40512dde, 0x3fa4f348, 0x3ef89a5b ),
	NORM( 0x3d8a10e8, 0x3f6e6c4d, 0x3eb738ef ),
	NFlagsW( 32, 8.965172 ),
	VERT( 0x40385782, 0x3fdf61ff, 0xbca09e27 ),
	NORM( 0x3dd13086, 0xbf7a482f, 0x3e3c1805 ),
	NFlagsW( 33, 3.247891 ),
	VERT( 0x404f32f1, 0x3f930782, 0xbe894a69 ),
	NORM( 0x3d9dcaac, 0x3f530a63, 0xbf0f8ecf ),
	NFlagsW( 34, 26.927668 ),
	VERT( 0x406d82f2, 0x3f50f272, 0x3f65efa7 ),
	NORM( 0x3df63e79, 0x3e9feeb3, 0x3f713bf9 ),
	NFlagsW( 35, 0.036529 ),
	VERT( 0x405f94bd, 0x3fa53408, 0x3eeb2605 ),
	NORM( 0x3cdd2f28, 0x3f729506, 0x3ea2ffa8 ),
	NFlagsW( 36, 0.364190 ),
	VERT( 0x405d8659, 0x3f92ec7d, 0xbea75f4a ),
	NORM( 0xbdfa42ae, 0x3f49a965, 0xbf1a9057 ),
	NFlagsW( 37, 5.276518 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 8),
	OffnbIdx(0, 1),
	VERT( 0x3e4cfbcf, 0x3fbede82, 0x3e981ae5 ),
	NORM( 0x3ce4501d, 0xbf79f845, 0x3e5b18c6 ),
	NFlagsW( 5198, 16.461859 ),
	CnkV_VN_NF(FV_CONT|FW_END, 57),
	OffnbIdx(0, 8),
	VERT( 0x3e7ccade, 0xbfdb3821, 0x3cf71509 ),
	NORM( 0x3e14d3aa, 0x3f72a024, 0x3e9163ae ),
	NFlagsW( 5174, 3.964515 ),
	VERT( 0x3f07f3e4, 0xbfe534fe, 0x3db6c8b8 ),
	NORM( 0x3e5b87dd, 0x3f5d0d91, 0x3ee9bf5e ),
	NFlagsW( 5175, 8.367970 ),
	VERT( 0x3f5d35d0, 0xbfe83b2b, 0xbc954520 ),
	NORM( 0x3e0be925, 0x3f6f74b8, 0x3ea7039b ),
	NFlagsW( 5176, 18.100224 ),
	VERT( 0x4015f908, 0xc000aefe, 0xbe92454a ),
	NORM( 0x3e50819f, 0x3f735f26, 0x3e6fa27c ),
	NFlagsW( 5189, 0.716685 ),
	VERT( 0x40213fe4, 0xc0039844, 0xbe87c318 ),
	NORM( 0x3e437b9a, 0x3f6c58ed, 0x3eaabc18 ),
	NFlagsW( 5191, 0.016638 ),
	VERT( 0x3f00a61e, 0x3e20535b, 0x3fa1d9f7 ),
	NORM( 0x3e384625, 0xbd95eff7, 0x3f7b1f53 ),
	NFlagsW( 5196, 99.975677 ),
	VERT( 0x3f4d95c2, 0xbf11afc3, 0xbf016f50 ),
	NORM( 0x3e79d9da, 0xbf20dccb, 0xbf3d18d6 ),
	NFlagsW( 5197, 99.895226 ),
	VERT( 0x3f30083d, 0x3ead46f8, 0xbf35e080 ),
	NORM( 0x3e5ed2cb, 0x3dc630ae, 0xbf78a270 ),
	NFlagsW( 5199, 99.250450 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger21[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger21,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger21[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger21,
OPosition  (  3.360367F, -0.000001F, -0.000001F ),
OAngle     (  0.000000F, -0.000001F, -0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Finger22,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger2[]
START
	CnkV_VN_NF(FV_CONT|FW_START, 29),
	OffnbIdx(5196, 4),
	VERT( 0x407739c1, 0x3e2052f2, 0x3fa1da40 ),
	NORM( 0x3e384624, 0xbd95eff9, 0x3f7b1f53 ),
	NFlagsW( 0, 0.024323 ),
	VERT( 0x40853ad5, 0xbf11afdd, 0xbf016ebf ),
	NORM( 0x3e79d9db, 0xbf20dccb, 0xbf3d18d6 ),
	NFlagsW( 1, 0.104774 ),
	VERT( 0x4063dff6, 0x3fbede75, 0x3e981c07 ),
	NORM( 0x3ce4501c, 0xbf79f845, 0x3e5b18c6 ),
	NFlagsW( 2, 0.052519 ),
	VERT( 0x40818924, 0x3ead46c5, 0xbf35dfef ),
	NORM( 0x3e5ed2cc, 0x3dc630b0, 0xbf78a270 ),
	NFlagsW( 3, 0.749556 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 43),
	OffnbIdx(0, 6),
	VERT( 0x3fe90f99, 0x3fa90022, 0x3f843090 ),
	NORM( 0x3eda7933, 0x3eeafbcd, 0x3f477f34 ),
	NFlagsW( 5116, 28.044689 ),
	VERT( 0x4021a203, 0x3fa1d244, 0x3f4ff72c ),
	NORM( 0x3d7b4ded, 0x3f747d8c, 0x3e948260 ),
	NFlagsW( 5123, 48.648800 ),
	VERT( 0x40034cc7, 0x3fb85ab9, 0xbf78cab7 ),
	NORM( 0x3f116b86, 0xbdee1742, 0xbf50930d ),
	NFlagsW( 5126, 22.818712 ),
	VERT( 0x401afd69, 0x3fb491b6, 0x3eaf8ccf ),
	NORM( 0x3d374ff7, 0xbf7e032f, 0x3deda57e ),
	NFlagsW( 5128, 44.503281 ),
	VERT( 0x402492b7, 0x3f89aa61, 0xbf005e15 ),
	NORM( 0x3ebde54a, 0x3f4be420, 0xbef488f0 ),
	NFlagsW( 5132, 60.843140 ),
	VERT( 0x401c3547, 0x3fe1a86f, 0xbf7104e8 ),
	NORM( 0x3e99daa3, 0xbf252037, 0xbf33dda6 ),
	NFlagsW( 5134, 0.153454 ),
	CnkV_VN_NF(FV_CONT|FW_END, 113),
	OffnbIdx(0, 16),
	VERT( 0x3f2949da, 0xbf1382af, 0x3fb5795c ),
	NORM( 0xbd5f58a5, 0xbd109b8c, 0x3f7f7596 ),
	NFlagsW( 5093, 15.283879 ),
	VERT( 0x3f116162, 0x3d08d294, 0x3f9f3e2c ),
	NORM( 0x3c104fa7, 0xbcbf6c3d, 0x3f7feb91 ),
	NFlagsW( 5095, 23.739044 ),
	VERT( 0x3fd9aec4, 0xbfb6fe29, 0x3f45b2a7 ),
	NORM( 0x3f0f53cd, 0xbf0816ea, 0x3f22b47d ),
	NFlagsW( 5099, 32.456886 ),
	VERT( 0x3fc4ac52, 0xbf316266, 0x3fbc906b ),
	NORM( 0x3e25d80c, 0xbec581f6, 0x3f6884a5 ),
	NFlagsW( 5100, 50.973236 ),
	VERT( 0x3f463653, 0xbe1b43c2, 0xbf96a2f3 ),
	NORM( 0x3ecedb98, 0x3e6457b7, 0xbf631c95 ),
	NFlagsW( 5102, 26.787868 ),
	VERT( 0x3fc7954e, 0xbbe60497, 0x3fcce69a ),
	NORM( 0xbd1b8852, 0xbdb45ecf, 0x3f7ed1e4 ),
	NFlagsW( 5103, 52.973652 ),
	VERT( 0x400cde36, 0xbfcc8ce3, 0x3db8fcac ),
	NORM( 0x3eda37e5, 0x3f52e292, 0x3ebf66f2 ),
	NFlagsW( 5104, 37.221104 ),
	VERT( 0x3fc613ca, 0x3f28abd1, 0x3fcbb3a6 ),
	NORM( 0x3d08d37d, 0x3e9aa77d, 0x3f73e466 ),
	NFlagsW( 5106, 37.557198 ),
	VERT( 0x40046144, 0xbf9ada95, 0xbf9af037 ),
	NORM( 0x3f356ca0, 0x3e50701a, 0xbf2ceed9 ),
	NFlagsW( 5108, 78.708374 ),
	VERT( 0x401f84b1, 0xbf831938, 0x3f1cdd8d ),
	NORM( 0x3e9f2340, 0xbf6bbe82, 0x3e70fb5b ),
	NFlagsW( 5109, 93.127083 ),
	VERT( 0x40177cdd, 0xbf005d80, 0x3fb49750 ),
	NORM( 0x3e264d71, 0xbf047184, 0x3f57188b ),
	NFlagsW( 5110, 97.871033 ),
	VERT( 0x3ff8414a, 0xbf06b654, 0xbf4a6fa3 ),
	NORM( 0x3e907a0d, 0x3e6081fa, 0xbf6f18d7 ),
	NFlagsW( 5111, 79.351250 ),
	VERT( 0x4013cd04, 0x3d13d144, 0x3fc44bd2 ),
	NORM( 0x3e02d410, 0xbdc4cccd, 0x3f7cb521 ),
	NFlagsW( 5113, 96.834183 ),
	VERT( 0x4023508e, 0xbf19b8c7, 0xbf281bd7 ),
	NORM( 0x3ed32c1d, 0xbef24083, 0xbf4749f5 ),
	NFlagsW( 5115, 99.058174 ),
	VERT( 0x40185d51, 0x3f17863e, 0x3fc0d0f3 ),
	NORM( 0x3e0074c2, 0x3eb7891c, 0x3f6cd1bc ),
	NFlagsW( 5117, 97.190765 ),
	VERT( 0x401f0ddf, 0x3e82b122, 0xbf66d7ea ),
	NORM( 0x3dfc4679, 0xbbeb4744, 0xbf7e0b31 ),
	NFlagsW( 5122, 98.603615 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger2[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger2,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger2[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger2,
OPosition  (  8.016154F, -1.080436F,  0.000861F ),
OAngle     ( -0.045623F,  0.000001F, -0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Finger21,
Sibling     object_kihon11_Bip01_Bip01_L_Finger3,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy07[]
START
EvalFlags ( 0x0000001e ),
CNKModel   NULL,
OPosition  (  2.727575F, -0.000003F, -0.000001F ),
OAngle     ( -0.000005F, -0.000003F, -0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger12[]
START
	CnkV_VN(FV_CONT, 253),
	OffnbIdx(2554, 42),
	VERT( 0x3f278a05, 0xbf6df0c2, 0xbed4cb63 ),
	NORM( 0x3e21cedc, 0xbf797368, 0x3e23a7f6 ),
	VERT( 0x3eba9f18, 0xbf3587d8, 0xbf8e61a0 ),
	NORM( 0x3e185711, 0xbf38e591, 0xbf2ce99c ),
	VERT( 0x3f15fae7, 0xbf2ce429, 0xbf95e091 ),
	NORM( 0xbca9ccfa, 0xbf36d733, 0xbf3319db ),
	VERT( 0x3f5070dc, 0xbf020a7d, 0x3db80b8d ),
	NORM( 0x3e634aeb, 0xbecd6037, 0x3f63836e ),
	VERT( 0x3fa62dc6, 0xbf5d0b5a, 0xbf1d6226 ),
	NORM( 0x3e2b14da, 0xbf7c43c1, 0x3d0527ad ),
	VERT( 0x3ed98e72, 0x3d732bf5, 0xbfb4d2e4 ),
	NORM( 0xbe518c07, 0x3d440c0d, 0xbf7a486a ),
	VERT( 0x3fb52f20, 0xbf1691ee, 0xbe6eac3f ),
	NORM( 0x3ec5c115, 0xbefb4c07, 0x3f47edf5 ),
	VERT( 0x3f9cebe3, 0xbf076b5e, 0xbfa4ec4c ),
	NORM( 0x3d4ef8b0, 0xbf24ba08, 0xbf4388e0 ),
	VERT( 0x3fbf447e, 0xbeefe33c, 0xbe9874a6 ),
	NORM( 0x3ec7cfea, 0xbcf50312, 0x3f6b9386 ),
	VERT( 0x3f9f0eff, 0x3c8db227, 0xbcc7cef2 ),
	NORM( 0x3f027029, 0xbd2f75d8, 0x3f5c00f7 ),
	VERT( 0x3fdac978, 0xbf418706, 0xbf34c4c4 ),
	NORM( 0x3eb086ac, 0xbf6f4665, 0xbdb1a7b8 ),
	VERT( 0x3eda04e3, 0x3f44160f, 0xbf89bba0 ),
	NORM( 0xbe0c7a86, 0x3f44f451, 0xbf1fb93c ),
	VERT( 0x3faada9d, 0x3ceee1fe, 0xbe0092ef ),
	NORM( 0x3f04fc18, 0xbb74cc51, 0x3f5abf2f ),
	VERT( 0x3f8bda06, 0x3dd783b9, 0xbfc1e176 ),
	NORM( 0xbc9db9d1, 0x3d71b3f9, 0xbf7f81a4 ),
	VERT( 0x3ffa6898, 0xbf19ccbf, 0xbed50737 ),
	NORM( 0x3efae630, 0xbf378618, 0x3efde8ba ),
	VERT( 0x3fd34e35, 0xbef63ce6, 0xbfa32c9a ),
	NORM( 0x3e97afe1, 0xbf188bb7, 0xbf3f15d4 ),
	VERT( 0x3ffa7188, 0xbefd3560, 0xbebf8d0d ),
	NORM( 0x3e2371de, 0xbeaa4d72, 0x3f6df0c0 ),
	VERT( 0x3fa37b11, 0x3f282fda, 0xbe1ac7d0 ),
	NORM( 0x3e9ef0d4, 0x3ee534a2, 0x3f56ad96 ),
	VERT( 0x40053e43, 0xbef31de9, 0xbf3c9d4e ),
	NORM( 0x3f440f80, 0xbf1de0fe, 0xbe3a5b4e ),
	VERT( 0x3fb0b2cb, 0x3f0ea461, 0xbe6bc74d ),
	NORM( 0x3ebd2fc8, 0xbd9be681, 0x3f6d1541 ),
	VERT( 0x3f8b4e5d, 0x3f365f0d, 0xbf9a76ea ),
	NORM( 0xbd0c15d7, 0x3f3bd9c8, 0xbf2db30d ),
	VERT( 0x3f8c3cef, 0x3f762963, 0xbefd43fb ),
	NORM( 0x3d6c40a4, 0x3f7c98f2, 0x3e1b9093 ),
	VERT( 0x400bd4f7, 0xbea36c90, 0xbeb5e554 ),
	NORM( 0x3f5315ad, 0xbec2a913, 0x3ed68880 ),
	VERT( 0x4008d553, 0xbe9c4216, 0xbf0299fb ),
	NORM( 0x3f6f225a, 0xbeb6c035, 0xbb97e958 ),
	VERT( 0x3fff6ba5, 0xbe8bc49d, 0xbf945e50 ),
	NORM( 0x3f24870d, 0xbed37a88, 0xbf252f39 ),
	VERT( 0x3fd5fbb5, 0x3e090afd, 0xbfb6f927 ),
	NORM( 0x3ead6223, 0x3db10efd, 0xbf6fdb0c ),
	VERT( 0x400c9e40, 0xbe835e09, 0xbf309bb7 ),
	NORM( 0x3f72498b, 0xbea377d5, 0xbd458cc3 ),
	VERT( 0x40053fff, 0xbe0a8975, 0xbf8f7c37 ),
	NORM( 0x3f4b1442, 0xbe254016, 0xbf164b28 ),
	VERT( 0x400d9290, 0x3db80317, 0xbe863f69 ),
	NORM( 0x3f48c1b3, 0x3cae4cad, 0x3f1ec144 ),
	VERT( 0x400cd3ea, 0x3dcccebe, 0xbedb4573 ),
	NORM( 0x3f7c32b4, 0x3d801f27, 0x3e23bd64 ),
	VERT( 0x3fc252e7, 0x3f367f7f, 0xbf991d63 ),
	NORM( 0x3e65019b, 0x3f3da314, 0xbf222921 ),
	VERT( 0x3fc3023a, 0x3f6a8ee7, 0xbf1894f4 ),
	NORM( 0x3e76489a, 0x3f784d12, 0xbd19287b ),
	VERT( 0x3fea3833, 0x3f257c3d, 0xbe9916f0 ),
	NORM( 0x3e2c42af, 0x3e6268d5, 0x3f75ec02 ),
	VERT( 0x3fe71d3c, 0x3f416545, 0xbea75cc0 ),
	NORM( 0x3edaf179, 0x3f374918, 0x3f0d4630 ),
	VERT( 0x40096fbf, 0x3e0b6e51, 0xbf845df5 ),
	NORM( 0x3f5bf78f, 0x3df8ad9b, 0xbefe6f50 ),
	VERT( 0x4012717e, 0x3dee226e, 0xbf1a0cb8 ),
	NORM( 0x3f7dff04, 0x3d987b08, 0x3dcd5147 ),
	VERT( 0x40031a29, 0x3effd308, 0xbeea0f07 ),
	NORM( 0x3f5458cc, 0x3f0e6b2b, 0x3d4b7c6d ),
	VERT( 0x4005fff0, 0x3eff58b5, 0xbe9a4724 ),
	NORM( 0x3f3852bd, 0x3efc5bb2, 0x3efa1e4f ),
	VERT( 0x3ff3efb1, 0x3f08f3d1, 0xbf8d901f ),
	NORM( 0x3f0fc2bf, 0x3f1cea02, 0xbf0e4a98 ),
	VERT( 0x400167f9, 0x3ecf92a1, 0xbf8aed23 ),
	NORM( 0x3f3d0f0f, 0x3ece27f9, 0xbf0a7289 ),
	VERT( 0x40075c82, 0x3ef6ba3a, 0xbf242a01 ),
	NORM( 0x3f5a78b1, 0x3f05672f, 0xbc48ef02 ),
	VERT( 0x3ff9faed, 0x3f30279f, 0xbf29058f ),
	NORM( 0x3f253d8e, 0x3f41eebe, 0xbdc77b1c ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 15),
	OffnbIdx(0, 2),
	VERT( 0x3d28d52b, 0x3f71496c, 0xbe92458d ),
	NORM( 0x3d8dfcfb, 0x3f784202, 0x3e6fa276 ),
	NFlagsW( 5189, 55.363102 ),
	VERT( 0x3e635d12, 0x3f6c086c, 0xbe87c35a ),
	NORM( 0x3d7807e2, 0x3f70d948, 0x3eaabc15 ),
	NFlagsW( 5191, 82.359406 ),
	CnkV_VN_NF(FV_CONT|FW_END, 113),
	OffnbIdx(0, 16),
	VERT( 0x3e83577e, 0xbf7e9589, 0xbed38ee7 ),
	NORM( 0x3e354677, 0xbf7abef7, 0x3dc55f78 ),
	NFlagsW( 5177, 94.553528 ),
	VERT( 0x3de495c7, 0xbf1451b7, 0x3e4a660e ),
	NORM( 0x3e94fb73, 0xbeea5bb7, 0x3f57128c ),
	NFlagsW( 5178, 51.365620 ),
	VERT( 0x3edc9f6a, 0xbf74cace, 0xbec71050 ),
	NORM( 0x3e2e1f5c, 0xbf7668c4, 0x3e584805 ),
	NFlagsW( 5179, 99.802383 ),
	VERT( 0x3afe0f05, 0xbd94d9bf, 0x3e6f92ba ),
	NORM( 0x3e921f44, 0xbb39c0f3, 0x3f755a19 ),
	NFlagsW( 5180, 50.000000 ),
	VERT( 0x3e46a009, 0xbf3e9bc5, 0xbf95dbb8 ),
	NORM( 0x3e5c6af6, 0xbf26c70a, 0xbf3a3d10 ),
	NFlagsW( 5181, 99.980202 ),
	VERT( 0x3ed5e83b, 0xbebcc1c7, 0x3e214a88 ),
	NORM( 0x3e85a941, 0xbe0657f9, 0x3f74d476 ),
	NFlagsW( 5182, 73.561066 ),
	VERT( 0xbb088a23, 0x3ee1c74f, 0x3e879d02 ),
	NORM( 0x3e84706b, 0x3ebd9bcf, 0x3f646479 ),
	NFlagsW( 5183, 49.998829 ),
	VERT( 0x3eb5745e, 0xbd290c42, 0x3d9747d3 ),
	NORM( 0x3e4170d6, 0x3ae748cc, 0x3f7b63ef ),
	NFlagsW( 5184, 51.831169 ),
	VERT( 0x3cd580bc, 0x3d123fa9, 0xbfb460d2 ),
	NORM( 0x3e12e107, 0x3da26f6c, 0xbf7c89b7 ),
	NFlagsW( 5185, 68.669891 ),
	VERT( 0x3eb14c61, 0x3e8d0be1, 0x3e4cbad3 ),
	NORM( 0x3e16a8ac, 0xbc29ee75, 0x3f7d3340 ),
	NFlagsW( 5186, 58.121101 ),
	VERT( 0x3e4e5c06, 0x3d2ce38d, 0xbfad2abb ),
	NORM( 0x3d3baeff, 0x3d9cd2f3, 0xbf7efa8d ),
	NFlagsW( 5187, 99.875984 ),
	VERT( 0x3f34c064, 0xbcc4dcba, 0x3dffff01 ),
	NORM( 0x3da3a5ac, 0xbda7762f, 0x3f7e524b ),
	NFlagsW( 5188, 98.630478 ),
	VERT( 0x3cc32cb4, 0x3f49bc1e, 0xbf88f42f ),
	NORM( 0x3e0ab9e4, 0x3f428ac3, 0xbf22bf40 ),
	NFlagsW( 5190, 61.151741 ),
	VERT( 0x3f34b38a, 0x3eeeeb78, 0x3e1db109 ),
	NORM( 0x3df97858, 0x3eaf116c, 0x3f6e8a45 ),
	NFlagsW( 5192, 99.840149 ),
	VERT( 0x3e4d71be, 0x3f43fbb2, 0xbf81f47c ),
	NORM( 0x3d86c1e0, 0x3f506fe2, 0xbf13ab65 ),
	NFlagsW( 5193, 98.419792 ),
	VERT( 0x3ee57356, 0x3f6cff62, 0xbe963f8b ),
	NORM( 0x3c97f982, 0x3f74b5c0, 0x3e9612c2 ),
	NFlagsW( 5194, 99.640060 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger12[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger12,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger12[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger12,
OPosition  (  2.705751F,  0.000002F,  0.000002F ),
OAngle     ( -0.000000F, -0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy07,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger11[]
START
	CnkV_VN(FV_CONT, 109),
	OffnbIdx(2520, 18),
	VERT( 0x3f607c0d, 0xbfa4845f, 0xbdee9375 ),
	NORM( 0x3e09b8ce, 0xbf7a54af, 0x3e2432c4 ),
	VERT( 0x3f943a05, 0xbf9c5f90, 0xbd5029e3 ),
	NORM( 0x3e528a51, 0xbf69b689, 0x3eb47c68 ),
	VERT( 0x3f4afb6c, 0xbf7c25f5, 0xbf994220 ),
	NORM( 0x3e7e24a4, 0xbf230048, 0xbf3ae534 ),
	VERT( 0x3f835c74, 0xbf1dadae, 0x3efbb49b ),
	NORM( 0x3ddb3a8b, 0xbe84eff5, 0x3f75b269 ),
	VERT( 0x3f8ae5ca, 0xbf7aefdc, 0xbf83a812 ),
	NORM( 0x3dd04c30, 0xbf499c50, 0xbf1b9983 ),
	VERT( 0x3fbecbff, 0xbf988a6a, 0xbe21be16 ),
	NORM( 0x3e002b71, 0xbf78e877, 0x3e4a26e2 ),
	VERT( 0x3f7008e5, 0xbe420f62, 0x3edce2e0 ),
	NORM( 0x3cbd2e11, 0xbd64f779, 0x3f7f8807 ),
	VERT( 0x3fc21f0a, 0xbf36366b, 0x3f004a96 ),
	NORM( 0x3d60bc16, 0xbef31ecd, 0x3f60dc11 ),
	VERT( 0x3f1a86fe, 0xbdb5ae01, 0xbfb5e5c5 ),
	NORM( 0x3e5fc3bb, 0x3db2d87b, 0xbf78cf92 ),
	VERT( 0x3fb52c7d, 0xbf746596, 0xbf9189ef ),
	NORM( 0xbd0214a5, 0xbf38de42, 0xbf30e671 ),
	VERT( 0x3f6eb6b7, 0x3e6bd143, 0x3f0c1956 ),
	NORM( 0xbc3a1db9, 0x3e1f22f6, 0x3f7cdf80 ),
	VERT( 0x3fb25182, 0xbe2dc9dd, 0x3f0a16a9 ),
	NORM( 0x3c5e1f09, 0xbdc20ba7, 0x3f7ed321 ),
	VERT( 0x3f64b4e2, 0xbda0fd02, 0xbfa91cd4 ),
	NORM( 0x3d130db4, 0x3db4f5be, 0xbf7ed542 ),
	VERT( 0x3f18eedf, 0x3f47ee8e, 0xbf8a6200 ),
	NORM( 0x3e35c614, 0x3f426a0f, 0xbf203b28 ),
	VERT( 0x3f9c5749, 0xbd554775, 0xbfb70847 ),
	NORM( 0xbe24ea20, 0x3d40af10, 0xbf7c5f02 ),
	VERT( 0x3fb29c1f, 0x3ec266ac, 0x3f12ad44 ),
	NORM( 0x3ca617de, 0x3ec3a6b1, 0x3f6c83c6 ),
	VERT( 0x3f638184, 0x3f49e49d, 0xbf6983ab ),
	NORM( 0xbb68b81b, 0x3f5e0941, 0xbefed59f ),
	VERT( 0x3f9bfe6f, 0x3f50f8c8, 0xbf829dbb ),
	NORM( 0xbe0d93a1, 0x3f49fdd1, 0xbf193da1 ),
	CnkV_VN_NF(FV_CONT|FW_START, 148),
	OffnbIdx(5174, 21),
	VERT( 0x3f2122b9, 0x3f722597, 0x3cf71586 ),
	NORM( 0x3c44f8c2, 0x3f75714a, 0x3e9163aa ),
	NFlagsW( 0, 96.031067 ),
	VERT( 0x3f6bf655, 0x3f687dc1, 0x3db6c8da ),
	NORM( 0x3dbcabf1, 0x3f628a3a, 0x3ee9bf5b ),
	NFlagsW( 1, 91.632027 ),
	VERT( 0x3fa09dab, 0x3f6e5e0d, 0xbc954490 ),
	NORM( 0x3ba7de74, 0x3f71fe59, 0x3ea70397 ),
	NFlagsW( 2, 81.899780 ),
	VERT( 0x403d95f0, 0xbf7e9589, 0xbed38e99 ),
	NORM( 0x3e354677, 0xbf7abef7, 0x3dc55f77 ),
	NFlagsW( 3, 5.446470 ),
	VERT( 0x40344fae, 0xbf1451b7, 0x3e4a66a8 ),
	NORM( 0x3e94fb73, 0xbeea5bb7, 0x3f57128b ),
	NFlagsW( 4, 48.634377 ),
	VERT( 0x4048beed, 0xbf74cace, 0xbec71001 ),
	NORM( 0x3e2e1f5c, 0xbf7668c4, 0x3e584804 ),
	NFlagsW( 5, 0.197618 ),
	VERT( 0x402d4ac2, 0xbd94d9bf, 0x3e6f9354 ),
	NORM( 0x3e921f44, 0xbb39c0f3, 0x3f755a18 ),
	NFlagsW( 6, 50.000000 ),
	VERT( 0x40399501, 0xbf3e9bc5, 0xbf95dba4 ),
	NORM( 0x3e5c6af6, 0xbf26c70a, 0xbf3a3d0f ),
	NFlagsW( 7, 0.019798 ),
	VERT( 0x4047e807, 0xbebcc1c7, 0x3e214b22 ),
	NORM( 0x3e85a941, 0xbe0657f9, 0x3f74d475 ),
	NFlagsW( 8, 26.438940 ),
	VERT( 0x402d08dd, 0x3ee1c74f, 0x3e879d4f ),
	NORM( 0x3e84706b, 0x3ebd9bcf, 0x3f646478 ),
	NFlagsW( 9, 50.001167 ),
	VERT( 0x4043d98c, 0xbd290c42, 0x3d974908 ),
	NORM( 0x3e4170d6, 0x3ae748cc, 0x3f7b63ee ),
	NFlagsW( 10, 48.168835 ),
	VERT( 0x402ed601, 0x3d123fa9, 0xbfb460be ),
	NORM( 0x3e12e107, 0x3da26f6c, 0xbf7c89b6 ),
	NFlagsW( 11, 31.330109 ),
	VERT( 0x4043548c, 0x3e8d0be1, 0x3e4cbb6d ),
	NORM( 0x3e16a8ac, 0xbc29ee75, 0x3f7d333f ),
	NFlagsW( 12, 41.878895 ),
	VERT( 0x403a10c0, 0x3d2ce38d, 0xbfad2aa7 ),
	NORM( 0x3d3baeff, 0x3d9cd2f3, 0xbf7efa8c ),
	NFlagsW( 13, 0.124016 ),
	VERT( 0x405a5b19, 0xbcc4dcba, 0x3e00001b ),
	NORM( 0x3da3a5ac, 0xbda7762f, 0x3f7e524a ),
	NFlagsW( 14, 1.369527 ),
	VERT( 0x402fce55, 0x3f71496c, 0xbe92453e ),
	NORM( 0x3d8dfcfb, 0x3f784202, 0x3e6fa275 ),
	NFlagsW( 15, 43.920216 ),
	VERT( 0x402eb159, 0x3f49bc1e, 0xbf88f41b ),
	NORM( 0x3e0ab9e4, 0x3f428ac3, 0xbf22bf3f ),
	NFlagsW( 16, 38.848259 ),
	VERT( 0x403b60d1, 0x3f6c086c, 0xbe87c30c ),
	NORM( 0x3d7807e2, 0x3f70d948, 0x3eaabc14 ),
	NFlagsW( 17, 17.623951 ),
	VERT( 0x405a57e3, 0x3eeeeb78, 0x3e1db1a3 ),
	NORM( 0x3df97858, 0x3eaf116c, 0x3f6e8a44 ),
	NFlagsW( 18, 0.159859 ),
	VERT( 0x403a021c, 0x3f43fbb2, 0xbf81f469 ),
	NORM( 0x3d86c1e0, 0x3f506fe2, 0xbf13ab64 ),
	NFlagsW( 19, 1.580213 ),
	VERT( 0x4049d96b, 0x3f6cff62, 0xbe963f3d ),
	NORM( 0x3c97f982, 0x3f74b5c0, 0x3e9612c1 ),
	NFlagsW( 20, 0.359939 ),
	CnkV_VN_NF(FV_CONT|FW_END, 22),
	OffnbIdx(0, 3),
	VERT( 0x3f0f8210, 0xbf4a7313, 0x3f04d5ff ),
	NORM( 0x3e2677f7, 0xbee05150, 0x3f625403 ),
	NFlagsW( 5170, 99.943695 ),
	VERT( 0x3edf6dd5, 0xbe68376d, 0x3f0f216d ),
	NORM( 0x3e4c9e6b, 0xbd07d72c, 0x3f7ab17b ),
	NFlagsW( 5171, 84.818237 ),
	VERT( 0x3ede7f16, 0x3eb01301, 0x3f17e543 ),
	NORM( 0x3e011c1f, 0x3eb34747, 0x3f6d9c6b ),
	NFlagsW( 5172, 89.392540 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger11[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger11,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger11[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger11,
OPosition  (  2.880314F,  0.000001F,  0.000002F ),
OAngle     ( -0.000000F, -0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Finger12,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger1[]
START
	CnkV_VN_NF(FV_CONT|FW_START, 22),
	OffnbIdx(5170, 3),
	VERT( 0x405c37a7, 0xbf4a72d3, 0x3f04d626 ),
	NORM( 0x3e2677f8, 0xbee05150, 0x3f625402 ),
	NFlagsW( 0, 0.056301 ),
	VERT( 0x405444de, 0xbe68366d, 0x3f0f2193 ),
	NORM( 0x3e4c9e6b, 0xbd07d72c, 0x3f7ab17a ),
	NFlagsW( 1, 15.181541 ),
	VERT( 0x40542706, 0x3eb01381, 0x3f17e569 ),
	NORM( 0x3e011c20, 0x3eb34747, 0x3f6d9c6a ),
	NFlagsW( 2, 10.607187 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 29),
	OffnbIdx(0, 4),
	VERT( 0x3fca89e6, 0x3f75f7b2, 0x3f45b23f ),
	NORM( 0x3f20df5b, 0xbee5a2b6, 0x3f22b47e ),
	NFlagsW( 5099, 48.096264 ),
	VERT( 0x40067c05, 0x3f5d19e0, 0x3db8f974 ),
	NORM( 0x3e9d654a, 0x3f60048f, 0x3ebf66ee ),
	NFlagsW( 5104, 59.757381 ),
	VERT( 0x3ff53dd6, 0x3f9d6698, 0xbf9af06b ),
	NORM( 0x3f2c6810, 0x3e99b413, 0xbf2ceed8 ),
	NFlagsW( 5108, 6.595772 ),
	VERT( 0x4013d78d, 0x3fbc7a92, 0x3f1cdd25 ),
	NORM( 0x3edf351a, 0xbf5e6048, 0x3e70fb63 ),
	NFlagsW( 5109, 5.795568 ),
	CnkV_VN_NF(FV_CONT|FW_END, 120),
	OffnbIdx(0, 17),
	VERT( 0x3f2cb89e, 0xbfcd33ea, 0x3e879b98 ),
	NORM( 0xbbdb644e, 0xbf6c40ec, 0x3ec52725 ),
	NFlagsW( 5077, 7.639149 ),
	VERT( 0x3f0a6963, 0xbf5b14fc, 0x3f37c31a ),
	NORM( 0xbd53a252, 0xbe7f7bc9, 0x3f778d17 ),
	NFlagsW( 5082, 40.450832 ),
	VERT( 0x3ef6f537, 0xbe9e2b01, 0x3f0fe4d0 ),
	NORM( 0x3d6d647b, 0xbdc1f46f, 0x3f7e6ac8 ),
	NFlagsW( 5084, 34.655766 ),
	VERT( 0x3f9f3ddc, 0xbf86d305, 0x3f4d3c95 ),
	NORM( 0x3cfbd351, 0xbefc311c, 0x3f5ea6e8 ),
	NFlagsW( 5085, 73.305984 ),
	VERT( 0x3fbf2390, 0xbfc7cfc9, 0x3df6a48b ),
	NORM( 0x3e303797, 0xbf7782c9, 0x3e413ae0 ),
	NFlagsW( 5086, 85.427383 ),
	VERT( 0x3f0934c6, 0x3e3c68a3, 0x3f490c5c ),
	NORM( 0x3c92c69d, 0xbea71fc6, 0x3f71ef43 ),
	NFlagsW( 5087, 32.828819 ),
	VERT( 0x3f9c28e4, 0xbed257ed, 0x3f69632a ),
	NORM( 0xbdb4edfb, 0xbd8bd566, 0x3f7e6637 ),
	NFlagsW( 5088, 61.459129 ),
	VERT( 0x3fd9e108, 0xbf918e52, 0xbf8d0d9c ),
	NORM( 0x3e03bd00, 0xbf4ab75c, 0xbf18d4d9 ),
	NFlagsW( 5089, 90.501869 ),
	VERT( 0x400e6664, 0xbfb28b58, 0xbd77e699 ),
	NORM( 0x3e170964, 0xbf7a9afc, 0x3e109ef0 ),
	NFlagsW( 5090, 99.622948 ),
	VERT( 0x3f956f8a, 0x3e783168, 0x3f631c88 ),
	NORM( 0x3be17495, 0x3e2c6b63, 0x3f7c56bc ),
	NFlagsW( 5091, 52.000446 ),
	VERT( 0x400a1e0b, 0xbf5c9098, 0x3f3a828b ),
	NORM( 0x3e331174, 0xbefe0c26, 0x3f59b553 ),
	NFlagsW( 5092, 99.300674 ),
	VERT( 0x4001c877, 0xbeb5dfe7, 0x3f56b641 ),
	NORM( 0x3e13526f, 0xbd84bfa3, 0x3f7ccaf2 ),
	NFlagsW( 5094, 97.283264 ),
	VERT( 0x400f4e2a, 0xbf812d62, 0xbfaa2e74 ),
	NORM( 0xbd061b59, 0xbf282289, 0xbf40dd1b ),
	NFlagsW( 5096, 95.414665 ),
	VERT( 0x3fdea1ca, 0xbe94dcd1, 0xbfaecd10 ),
	NORM( 0x3d2e9d20, 0xbdaaf3b1, 0xbf7edf7f ),
	NFlagsW( 5097, 91.616486 ),
	VERT( 0x40029c94, 0x3e5757cc, 0x3f4cf4c3 ),
	NORM( 0x3ddab1f2, 0x3ed2b855, 0x3f67b4e5 ),
	NFlagsW( 5098, 95.916328 ),
	VERT( 0x400c3af3, 0xbe1f98d3, 0xbfcce60f ),
	NORM( 0xbe33702b, 0x3d91649d, 0xbf7b6202 ),
	NFlagsW( 5101, 95.364807 ),
	VERT( 0x400b8244, 0x3f286ca9, 0xbf9c87cc ),
	NORM( 0x3e6d6b44, 0x3f10add9, 0xbf4aaf39 ),
	NFlagsW( 5105, 97.393051 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger1[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger1,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger1[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger1,
OPosition  (  8.016154F, -3.241309F,  0.002584F ),
OAngle     ( -0.045172F, -0.006347F, -7.999996F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Finger11,
Sibling     object_kihon11_Bip01_Bip01_L_Finger2,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy06[]
START
EvalFlags ( 0x0000001e ),
CNKModel   NULL,
OPosition  (  1.963853F,  0.000001F, -0.000001F ),
OAngle     (  0.000002F,  0.000004F, -0.000000F ),
OScale     (  1.000000F,  0.999999F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger02[]
START
	CnkV_VN(FV_CONT, 211),
	OffnbIdx(2484, 35),
	VERT( 0x3e229c14, 0xbf7c6bf3, 0xbf4fd441 ),
	NORM( 0x3b44362a, 0xbf3d15cf, 0xbf2c9342 ),
	VERT( 0x3f2fb58d, 0xbf8e6e24, 0xbe89aff4 ),
	NORM( 0x3daf0302, 0xbf7ee170, 0x3d1a8b2e ),
	VERT( 0x3f34ae1e, 0xbf688b77, 0xbf5a5d08 ),
	NORM( 0x3d9f39ef, 0xbf30e292, 0xbf37fce6 ),
	VERT( 0x3f5f4d55, 0xbf879b33, 0xbe3e4e09 ),
	NORM( 0x3d0ab91c, 0xbf5f1f5d, 0x3efa6ac6 ),
	VERT( 0x3f379749, 0xbf415a7f, 0x3eb980ea ),
	NORM( 0x3e08e94b, 0xbf479afe, 0x3f1c9871 ),
	VERT( 0x3faec32f, 0xbf8d2741, 0xbe991db3 ),
	NORM( 0x3e01dc6b, 0xbf7d2618, 0x3d9f897f ),
	VERT( 0x3fae925c, 0xbf8a570e, 0xbef30f36 ),
	NORM( 0x3eb3ef3b, 0xbf584b33, 0xbece7bf2 ),
	VERT( 0x3d86cde3, 0xbb233cd6, 0xbf9f3b0c ),
	NORM( 0x3d0b0e62, 0x3d37bced, 0xbf7f983a ),
	VERT( 0x3f961b19, 0xbf5f81b8, 0xbf509ccc ),
	NORM( 0x3e883346, 0xbf13a65c, 0xbf45bb5f ),
	VERT( 0x3fca172b, 0xbf859296, 0xbd9303f8 ),
	NORM( 0x3f15a669, 0xbf4a695a, 0x3e3a5a78 ),
	VERT( 0x3f07a9aa, 0xbe511424, 0x3f5c51d2 ),
	NORM( 0x3e3fd2ba, 0xbe6af43c, 0x3f74830a ),
	VERT( 0x3f41e75f, 0xbe93260b, 0x3f441d7a ),
	NORM( 0x3db9a033, 0xbf0a783f, 0x3f56109c ),
	VERT( 0x3fce7917, 0xbf6a0b09, 0xbe458632 ),
	NORM( 0x3f6a81a1, 0xbebb4ce4, 0xbe2866f2 ),
	VERT( 0x3fc35305, 0xbf46e12d, 0xbf1bcb1a ),
	NORM( 0x3f3ff429, 0xbea3e32c, 0xbf143d60 ),
	VERT( 0x3fc257d5, 0xbf4cbede, 0x3ea8195d ),
	NORM( 0x3edfcdee, 0xbf2a5622, 0x3f1aeade ),
	VERT( 0x3f1d1931, 0xbcd3ac27, 0xbf956b45 ),
	NORM( 0x3e812a69, 0x3e033c0b, 0xbf75899c ),
	VERT( 0x3fd19afa, 0xbf2e4ca4, 0x3e60d2cf ),
	NORM( 0x3f6bcc1d, 0xbe4c252e, 0x3eab3e00 ),
	VERT( 0x3fd4a67b, 0xbf2b190b, 0xbeaefe4e ),
	NORM( 0x3f779264, 0xbdf15671, 0xbe66f817 ),
	VERT( 0x3f8cb514, 0xbe33934a, 0xbf839d99 ),
	NORM( 0x3ed51a96, 0x3e1e2d6d, 0xbf656363 ),
	VERT( 0x3f90af3b, 0xbe7a9d45, 0x3f4cf632 ),
	NORM( 0x3e1ad667, 0xbe6af3a1, 0x3f76252d ),
	VERT( 0x3fb600fc, 0xbeefb4ac, 0x3f2a76f0 ),
	NORM( 0x3f09f446, 0xbe87db6a, 0x3f4cabe2 ),
	VERT( 0x3f8bf2ab, 0xbd987ffe, 0x3f50c251 ),
	NORM( 0x3ec048aa, 0x3e551f8e, 0x3f673376 ),
	VERT( 0x3fb9f5a9, 0xbea830cf, 0x3f0de40b ),
	NORM( 0x3f516a06, 0x3e89374e, 0x3f024973 ),
	VERT( 0x3fd9befd, 0xbef07a6d, 0x3d1618a5 ),
	NORM( 0x3f7da46f, 0x3d923ecc, 0x3deb9e14 ),
	VERT( 0x3fb81230, 0xbe5faedb, 0xbf4998b3 ),
	NORM( 0x3f326caa, 0x3e49c988, 0xbf30829f ),
	VERT( 0x3ee98597, 0x3f2bdca6, 0xbf4ebdf1 ),
	NORM( 0x3ea850bc, 0x3f437255, 0xbf0e5125 ),
	VERT( 0x3f59cf40, 0x3e9e728d, 0x3f338753 ),
	NORM( 0x3eb7f6ba, 0x3f281907, 0x3f29c294 ),
	VERT( 0x3fc6007b, 0xbe26d1e1, 0xbf18a8fd ),
	NORM( 0x3f5b889e, 0x3ea10053, 0xbed06dc4 ),
	VERT( 0x3fc22e22, 0xbe13445e, 0x3eaa5ef1 ),
	NORM( 0x3f5bff85, 0x3eb86689, 0x3eb9dc14 ),
	VERT( 0x3fa48fde, 0x3dcf14d4, 0x3f03fa1c ),
	NORM( 0x3f3077c3, 0x3f053427, 0x3f010acd ),
	VERT( 0x3f94409f, 0x3e978796, 0xbf115aa0 ),
	NORM( 0x3f11db31, 0x3f2f3625, 0xbee8eb79 ),
	VERT( 0x3fc966af, 0xbd084d0b, 0xbea11864 ),
	NORM( 0x3f64145d, 0x3edafb12, 0xbe1c56a3 ),
	VERT( 0x3f5f2520, 0x3f28b193, 0x3d33cbf8 ),
	NORM( 0x3ee5eb6b, 0x3f6206d8, 0x3e0c6873 ),
	VERT( 0x3fb8a847, 0x3e5b0c3d, 0xbdeeadaf ),
	NORM( 0x3f4bb912, 0x3f1aff73, 0xbc3c4ec1 ),
	VERT( 0x3fa27482, 0x3ec9f37c, 0xbbd4807a ),
	NORM( 0x3f25ad58, 0x3f41e62f, 0x3db12040 ),
	CnkV_VN_NF(FV_CONT|FW_END, 71),
	OffnbIdx(0, 10),
	VERT( 0xbe58466a, 0x3ebf54f3, 0x3f6e824e ),
	NORM( 0x3dba5584, 0x3ef6d65b, 0x3f5f128f ),
	NFlagsW( 5075, 1.722622 ),
	VERT( 0xbdf5fa65, 0x3f474a5d, 0xbf5852b7 ),
	NORM( 0x3d36b580, 0x3f49dc22, 0xbf1d0780 ),
	NFlagsW( 5081, 7.759307 ),
	VERT( 0xbe513c30, 0x3f7de68f, 0x3d147c0e ),
	NORM( 0x3e02c6a7, 0x3f7ae7e8, 0x3e1b9b37 ),
	NFlagsW( 5083, 2.793713 ),
	VERT( 0xbe2cace9, 0xbf751020, 0xbf476352 ),
	NORM( 0xbde602e1, 0xbf39ad5b, 0xbf2de09c ),
	NFlagsW( 5162, 0.019182 ),
	VERT( 0x3e627802, 0xbf98bd15, 0xbd7310e5 ),
	NORM( 0x3e89048a, 0xbf719c24, 0x3e46aee1 ),
	NFlagsW( 5163, 99.974663 ),
	VERT( 0x3dbdd371, 0xbf5af82c, 0x3f01f931 ),
	NORM( 0x3e726e82, 0xbf3fabfd, 0x3f1e81e7 ),
	NFlagsW( 5164, 59.323139 ),
	VERT( 0x3ee3e652, 0xbf4dcc30, 0x3edd6fcc ),
	NORM( 0x3e866203, 0xbf407abc, 0x3f1ad50b ),
	NFlagsW( 5165, 99.983566 ),
	VERT( 0x3b6f1476, 0xbec656c0, 0x3f782060 ),
	NORM( 0x3e8888f4, 0xbe9f9dfa, 0x3f697731 ),
	NFlagsW( 5166, 28.739080 ),
	VERT( 0x3eb3567d, 0x3ec2079f, 0x3f4c8f2e ),
	NORM( 0x3e4ebf87, 0x3f12b492, 0x3f4b53c9 ),
	NFlagsW( 5167, 95.689194 ),
	VERT( 0x3ebb9c0e, 0x3f578875, 0xbb670102 ),
	NORM( 0x3e8fcdf4, 0x3f72ffe1, 0x3e112d94 ),
	NFlagsW( 5168, 99.715302 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger02[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger02,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger02[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger02,
OPosition  (  1.945668F, -0.000002F, -0.000000F ),
OAngle     ( -0.000000F, -7.999987F,  0.000001F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy06,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger01[]
START
	CnkV_VN(FV_CONT, 43),
	OffnbIdx(2476, 7),
	VERT( 0x3f854f5f, 0xbf7ef188, 0xbf48f10c ),
	NORM( 0x3df23d1e, 0xbf4921e5, 0xbf1b735b ),
	VERT( 0x3fabe1eb, 0xbf949b49, 0xbda5db3a ),
	NORM( 0xbc977185, 0xbf7f1fc0, 0x3da4fd21 ),
	VERT( 0x3fe2be5a, 0xbfa62335, 0xbdaa920e ),
	NORM( 0xbd32a297, 0xbf7f70ed, 0x3d4b230b ),
	VERT( 0x3fcd2d29, 0xbf6d1d02, 0xbf590b69 ),
	NORM( 0x3d17b30c, 0xbf3acae8, 0xbf2ecc80 ),
	VERT( 0x3fc3addd, 0xbf685808, 0x3f095b2c ),
	NORM( 0xbd886bdd, 0xbf48b49b, 0x3f1dfece ),
	VERT( 0x3fcea224, 0x3cd975ae, 0xbfab2e46 ),
	NORM( 0x3e64313f, 0x3d0059d7, 0xbf796f08 ),
	VERT( 0x3ff01424, 0xbd015999, 0xbf9f254f ),
	NORM( 0x3e3e39bc, 0xbcfea2fc, 0xbf7b6b0b ),
	CnkV_VN_NF(FV_CONT|FW_START, 50),
	OffnbIdx(5162, 7),
	VERT( 0x3ff18bbd, 0xbf750ff7, 0xbf4b7496 ),
	NORM( 0xbc88b910, 0xbf39ad5b, 0xbf302fc7 ),
	NFlagsW( 0, 99.980820 ),
	VERT( 0x400b1161, 0xbf98bd01, 0xbce540d6 ),
	NORM( 0x3e73b79d, 0xbf719c25, 0x3e6ae34a ),
	NFlagsW( 1, 0.025342 ),
	VERT( 0x3ffbbff4, 0xbf5af802, 0x3f0402c8 ),
	NORM( 0x3e17d526, 0xbf3fabfe, 0x3f25665b ),
	NFlagsW( 2, 40.676861 ),
	VERT( 0x4014e178, 0xbf4dcc06, 0x3efaffcc ),
	NORM( 0x3e33f4d3, 0xbf407abc, 0x3f22ad35 ),
	NFlagsW( 3, 0.016437 ),
	VERT( 0x3fe83de1, 0xbec6566c, 0x3f75d77b ),
	NORM( 0x3e0c71b5, 0xbe9f9dfb, 0x3f70b1ca ),
	NFlagsW( 4, 71.260918 ),
	VERT( 0x400b9ac4, 0x3ec207f5, 0x3f570c4d ),
	NORM( 0x3db71753, 0x3f12b493, 0x3f508abd ),
	NFlagsW( 5, 4.310796 ),
	VERT( 0x4013c6f2, 0x3f5788a0, 0x3d4295a7 ),
	NORM( 0x3e844d76, 0x3f72ffe2, 0x3e37cae2 ),
	NFlagsW( 6, 0.284686 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 22),
	OffnbIdx(0, 3),
	VERT( 0x3fcdad61, 0x3ebf5548, 0x3f64a9b9 ),
	NORM( 0xbcff60a8, 0x3ef6d65c, 0x3f6024a5 ),
	NFlagsW( 5075, 98.202133 ),
	VERT( 0x3ff8dfea, 0x3f474a88, 0xbf5a7f3c ),
	NORM( 0x3e04a64a, 0x3f49dc23, 0xbf19e96e ),
	NFlagsW( 5081, 92.218796 ),
	VERT( 0x3fde7ffa, 0x3f7de6ba, 0x3bf47c5d ),
	NORM( 0x3dd7b1b8, 0x3f7ae7e9, 0x3e2c4adb ),
	NFlagsW( 5083, 96.915733 ),
	CnkV_VN_NF(FV_CONT|FW_END, 127),
	OffnbIdx(0, 18),
	VERT( 0x3f50f487, 0xbfa5e2a3, 0x3d2b480e ),
	NORM( 0x3decbbfc, 0xbf7727be, 0x3e6f271c ),
	NFlagsW( 5057, 99.963547 ),
	VERT( 0x3f1a0500, 0xbf7d4723, 0x3efb6ccc ),
	NORM( 0x3bf4b1f5, 0xbf498fb6, 0x3f1dd07b ),
	NFlagsW( 5058, 98.446114 ),
	VERT( 0x3d845121, 0x3d7da472, 0xbfb9f942 ),
	NORM( 0x3ebb048f, 0x3db1ab4b, 0xbf6d461b ),
	NFlagsW( 5061, 0.209491 ),
	VERT( 0x3f01c2c0, 0xbf1be583, 0x3f6304ee ),
	NORM( 0xbc339026, 0xbebff4f1, 0x3f6d4f80 ),
	NFlagsW( 5062, 93.595818 ),
	VERT( 0x3f8f11ff, 0xbf57cc50, 0x3ee8c96f ),
	NORM( 0x3cb73f40, 0xbf457c82, 0x3f22cba3 ),
	NFlagsW( 5063, 99.969994 ),
	VERT( 0x3f7d830e, 0xbec398a4, 0x3f60d91a ),
	NORM( 0xbe05e92a, 0xbe83f0ee, 0x3f7513ee ),
	NFlagsW( 5065, 99.206490 ),
	VERT( 0x3f892f5a, 0x3cf5d97e, 0xbfb1834c ),
	NORM( 0x3db5ae60, 0xbd5dc34f, 0xbf7e9d1f ),
	NFlagsW( 5066, 97.889008 ),
	VERT( 0x3c21bb68, 0x3f5c475e, 0xbf8d0e65 ),
	NORM( 0x3e21ae86, 0x3f42df29, 0xbf2104f1 ),
	NFlagsW( 5067, 0.122910 ),
	VERT( 0x3ef566b5, 0x3e80ba5d, 0x3f4071b8 ),
	NORM( 0xbd529321, 0x3ed7255f, 0x3f67edb5 ),
	NFlagsW( 5068, 65.657982 ),
	VERT( 0x3faddd85, 0xbec0cc23, 0x3f8686d0 ),
	NORM( 0xbde9d137, 0xbe7431cf, 0x3f76e3ee ),
	NFlagsW( 5069, 99.978760 ),
	VERT( 0x3f7f89b3, 0x3ed231bd, 0x3f4d3292 ),
	NORM( 0xbe1d0ffa, 0x3f04e85b, 0x3f573e59 ),
	NFlagsW( 5071, 94.141441 ),
	VERT( 0x3f5087b2, 0x3f5eab85, 0xbf86f6ff ),
	NORM( 0x3da959a0, 0x3f462c50, 0xbf20abe6 ),
	NFlagsW( 5072, 71.986618 ),
	VERT( 0x3f1e9fa7, 0x3f845e50, 0xbe192894 ),
	NORM( 0xbc731d23, 0x3f79955d, 0x3e635231 ),
	NFlagsW( 5073, 62.145935 ),
	VERT( 0x3fa4a4a2, 0x3ec03370, 0x3f5a33b3 ),
	NORM( 0xbdc50134, 0x3efbe4fb, 0x3f5d82ad ),
	NFlagsW( 5074, 99.006996 ),
	VERT( 0x3fae3bcd, 0x3f58a5c0, 0xbf72631b ),
	NORM( 0x3e7e6e32, 0x3f48dc14, 0xbf116a31 ),
	NFlagsW( 5076, 96.728310 ),
	VERT( 0x3fd088c8, 0x3f44fd96, 0xbf5ca59c ),
	NORM( 0x3e555425, 0x3f4afc02, 0xbf129763 ),
	NFlagsW( 5078, 99.612282 ),
	VERT( 0x3f91ff03, 0x3f87c6fd, 0xbd30c191 ),
	NORM( 0x3d32c105, 0x3f797650, 0x3e618f3d ),
	NFlagsW( 5079, 88.635429 ),
	VERT( 0x3fb50dc3, 0x3f7eb926, 0x3c8c9a5c ),
	NORM( 0x3dc8dc22, 0x3f76ab74, 0x3e7edc8c ),
	NFlagsW( 5080, 97.315941 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger01[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger01,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger01[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger01,
OPosition  (  2.260247F, -0.000001F,  0.000004F ),
OAngle     ( -0.000000F, -26.000029F, -0.000002F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Finger02,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Finger0[]
START
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 15),
	OffnbIdx(0, 2),
	VERT( 0x4014eefb, 0xbf1be59d, 0x3f8276b1 ),
	NORM( 0xbed51a92, 0xbebff4f0, 0x3f541037 ),
	NFlagsW( 5062, 0.120567 ),
	VERT( 0x401722e3, 0x3e80ba29, 0x3f62c1a8 ),
	NORM( 0xbee2ffe7, 0x3ed7255f, 0x3f4aafc3 ),
	NFlagsW( 5068, 10.943157 ),
	CnkV_VN_NF(FV_CONT|FW_END, 78),
	OffnbIdx(0, 11),
	VERT( 0x3f4137d2, 0xbf1625f2, 0xbf561407 ),
	NORM( 0xbe96b170, 0xbf476574, 0x3f0dc64a ),
	NFlagsW( 5050, 28.181107 ),
	VERT( 0x3fd1e89f, 0xbf919824, 0xbf47a6ad ),
	NORM( 0xbeec4018, 0xbf6167c2, 0x3ddeb1eb ),
	NFlagsW( 5051, 6.574933 ),
	VERT( 0x400393e0, 0xbfa2022b, 0xbeec654e ),
	NORM( 0xbe55fbf5, 0xbf792865, 0x3dc31233 ),
	NFlagsW( 5052, 0.956702 ),
	VERT( 0x3ebef10d, 0xbe25374c, 0xbebc5c30 ),
	NORM( 0xbeb57c63, 0xbf353399, 0x3f1c6bf1 ),
	NFlagsW( 5053, 26.541885 ),
	VERT( 0x3fa928c1, 0xbef5dcb2, 0xbf1677d1 ),
	NORM( 0xbf1b7978, 0xbf28c312, 0x3ee301dc ),
	NFlagsW( 5054, 31.692469 ),
	VERT( 0x3fcb74d7, 0xbf52317b, 0xbde7ef30 ),
	NORM( 0xbf219eb0, 0xbf3b4928, 0x3e83be36 ),
	NFlagsW( 5055, 49.710419 ),
	VERT( 0x3f9e66a0, 0xbecfed0c, 0x3ea76350 ),
	NORM( 0xbf435f2b, 0xbee2f400, 0x3ef0bd7b ),
	NFlagsW( 5056, 37.685574 ),
	VERT( 0x3f2c90b3, 0x3f38f8e0, 0x3da71255 ),
	NORM( 0x3d59a0b2, 0xbeccdc95, 0x3f6a3849 ),
	NFlagsW( 5059, 25.751490 ),
	VERT( 0x3f6e5901, 0x3f10e047, 0x3e9b5369 ),
	NORM( 0xbf2714e5, 0x3e0ab689, 0x3f3ed532 ),
	NFlagsW( 5060, 27.295729 ),
	VERT( 0x3fa3f682, 0x3f1653e9, 0x3ef1575d ),
	NORM( 0xbe99be70, 0x3ed81ffe, 0x3f5af91b ),
	NFlagsW( 5064, 30.070574 ),
	VERT( 0x400c4f42, 0x3f91fd94, 0xbe7c7708 ),
	NORM( 0x3e4bf622, 0x3f710b24, 0x3e8b0dd4 ),
	NFlagsW( 5070, 1.815285 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Finger0[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Finger0,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Finger0[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Finger0,
OPosition  (  5.611308F, -5.402181F,  0.004303F ),
OAngle     ( -7.352749F, 48.065188F, -26.301976F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Finger01,
Sibling     object_kihon11_Bip01_Bip01_L_Finger1,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Hand[]
START
	CnkV_VN(FV_CONT, 853),
	OffnbIdx(2334, 142),
	VERT( 0x3f7ba786, 0xc08465e6, 0xbcf491ae ),
	NORM( 0xbec1a78b, 0xbf62ffb2, 0x3e881e3c ),
	VERT( 0x3f76b83f, 0xc0469212, 0x3f8eb90e ),
	NORM( 0xbe4f61c1, 0xbf132d4c, 0x3f4af221 ),
	VERT( 0x3f45cbb7, 0xc0616b51, 0xc01c449f ),
	NORM( 0xbf0c709f, 0xbf0be8a6, 0xbf21fb61 ),
	VERT( 0x3ff1cb5e, 0xc08d77a1, 0xbdb00386 ),
	NORM( 0xbebc0a6b, 0xbf549af2, 0x3ed66e5c ),
	VERT( 0x3f67730d, 0xbff9784f, 0x3fcbad90 ),
	NORM( 0xbe0e6783, 0xbeddf707, 0x3f63edbb ),
	VERT( 0x4010491c, 0xc098edc8, 0xbe2375ec ),
	NORM( 0xbed32eda, 0xbf4b0ba9, 0x3ee56cc5 ),
	VERT( 0x3f6b7513, 0xbfa2b656, 0x3ff81071 ),
	NORM( 0xbe0252f8, 0xbebe79a2, 0x3f6b6193 ),
	VERT( 0x3ff60dcb, 0xc0497836, 0x3f8f63f9 ),
	NORM( 0x3c9e2005, 0xbf12c250, 0x3f51b2c4 ),
	VERT( 0x402c47e6, 0xc0a3d4d0, 0xbf2cfd43 ),
	NORM( 0xbedff652, 0xbf5bd12f, 0x3e88c5b3 ),
	VERT( 0x3fe0f21b, 0xc082a8ab, 0xc02db41f ),
	NORM( 0xbec4d335, 0xbf25a21a, 0xbf289280 ),
	VERT( 0x3f5a0a1a, 0xc0091a0f, 0xc02a7b2a ),
	NORM( 0xbeab583b, 0x3cf92f80, 0xbf711d00 ),
	VERT( 0x3ff8c190, 0xc00b855f, 0x3fcf2504 ),
	NORM( 0xbc93e42a, 0xbee5ed03, 0x3f64b01e ),
	VERT( 0x3e7f3ceb, 0xbf3ccd61, 0xc00a361e ),
	NORM( 0xbe3689c8, 0x3e0c2ee5, 0xbf797331 ),
	VERT( 0x3f751cc7, 0xbe35ae80, 0x4011c165 ),
	NORM( 0xbdb39958, 0xbe0fed57, 0x3f7c7667 ),
	VERT( 0x401115d2, 0xc088861d, 0xc02f8e80 ),
	NORM( 0xbe9d13ba, 0xbf23c541, 0xbf34685b ),
	VERT( 0x402cccb4, 0xc096b3c3, 0xc01d842b ),
	NORM( 0xbef83b95, 0xbf2e4993, 0xbf0c8d75 ),
	VERT( 0x40758580, 0xc0bcdb84, 0xbf98940a ),
	NORM( 0xbebd9cce, 0xbf5d16ee, 0x3eaf1ff8 ),
	VERT( 0x3ffa99f1, 0xbfb0a4b1, 0x40007a6f ),
	NORM( 0xb94a9c84, 0xbeb678a3, 0x3f6f30c0 ),
	VERT( 0x407e5186, 0xc0b1d2cd, 0xbf5e57eb ),
	NORM( 0xbdc5c785, 0xbf21c5dd, 0x3f44dc78 ),
	VERT( 0x3f623d64, 0xbf58a409, 0xc01935ed ),
	NORM( 0xbe93b9cf, 0x3e20ae9b, 0xbf71cc77 ),
	VERT( 0x3f7813b4, 0x3f6f9f53, 0x40105c94 ),
	NORM( 0xbd49a3f9, 0x3db7f4d3, 0x3f7ea74e ),
	VERT( 0x3e8ea025, 0x3eef6d09, 0xc004a2e7 ),
	NORM( 0xbddd5168, 0x3e392475, 0xbf7a41a9 ),
	VERT( 0x3feb718e, 0xc01f1154, 0xc03df237 ),
	NORM( 0xbe8bfe4e, 0x3be7a2dd, 0xbf763cf3 ),
	VERT( 0x4048b611, 0xc040f224, 0x3f8a1ce0 ),
	NORM( 0x3c1431ab, 0xbf09b47c, 0x3f57cbcf ),
	VERT( 0x4081e99b, 0xc0b9b49f, 0xc0261744 ),
	NORM( 0xbef939d9, 0xbf1e9181, 0xbf1daea5 ),
	VERT( 0x3ffc9bd3, 0xbe104c37, 0x4015d4d8 ),
	NORM( 0x3c6953cc, 0xbddfd7de, 0x3f7e70b0 ),
	VERT( 0x40a3a2d9, 0xc0cf9b0a, 0xbfd65c15 ),
	NORM( 0xbea90cf5, 0xbf5cf62c, 0x3ec3a062 ),
	VERT( 0x404dc821, 0xbfffaced, 0x3fcb8c77 ),
	NORM( 0x3d2515b7, 0xbed5cfab, 0x3f68616f ),
	VERT( 0x3f6f1b42, 0x3ee09cfc, 0xc00f22cc ),
	NORM( 0xbe824684, 0x3e3c07a9, 0xbf73121c ),
	VERT( 0x3ff0092a, 0xbf749f96, 0xc02c5438 ),
	NORM( 0xbe7ceb26, 0x3e1fa0cf, 0xbf74d66c ),
	VERT( 0x403098f1, 0xc01f0839, 0xc04d795f ),
	NORM( 0xbe158042, 0x3c81e9ee, 0xbf7d3975 ),
	VERT( 0x404edab6, 0xbf931a53, 0x3ffa508c ),
	NORM( 0x3d9e9b00, 0xbe9d0873, 0x3f72daa6 ),
	VERT( 0x3ffe6e1d, 0x3f94d22c, 0x40102d58 ),
	NORM( 0x3c5fc0a4, 0x3ddd1c48, 0x3f7e7ac8 ),
	VERT( 0x40b1ac16, 0xc0d6704b, 0xc02c8304 ),
	NORM( 0xbec8bef8, 0xbf3296e1, 0xbf19840a ),
	VERT( 0x3f669c87, 0x3fb1f089, 0xc0018f09 ),
	NORM( 0xbe8b8d2d, 0x3e72e37d, 0xbf6eb488 ),
	VERT( 0x40baf24c, 0xc0dd19c2, 0xc027085d ),
	NORM( 0xbed5fe8d, 0xbf43bcf0, 0xbefb30df ),
	VERT( 0x40a6cc13, 0xc09baab6, 0xbe17e53b ),
	NORM( 0xbe316827, 0xbf04253e, 0x3f56b968 ),
	VERT( 0x409d2a3a, 0xc0849e5b, 0x3e5381e7 ),
	NORM( 0xbdfc3532, 0xbf25e22f, 0x3f406b13 ),
	VERT( 0x40c5f89c, 0xc0e11280, 0xc02ee712 ),
	NORM( 0xbea40b02, 0xbf2d9863, 0xbf2954dd ),
	VERT( 0x404f38dd, 0x3e0c5cc8, 0x40113996 ),
	NORM( 0x3de7408d, 0xbd3da34e, 0x3f7e1623 ),
	VERT( 0x40001df0, 0x400c494a, 0x4007466a ),
	NORM( 0xbd8b4532, 0x3e9a375e, 0x3f737d62 ),
	VERT( 0x3ff72331, 0x3f0e846a, 0xc0211dfd ),
	NORM( 0xbdaf9ab6, 0x3e75b49a, 0xbf778ccb ),
	VERT( 0x4090b245, 0xc05bbfe3, 0xc052e955 ),
	NORM( 0x3d8f9b5a, 0xbd8dc01d, 0xbf7ec121 ),
	VERT( 0x40a1c21c, 0xc0884342, 0xc050ee5e ),
	NORM( 0x3dc475b7, 0x3cba50b5, 0xbf7ec0bd ),
	VERT( 0x40c2fc01, 0xc0bcd6ab, 0xc04a9031 ),
	NORM( 0x3dc742f7, 0xbe395e34, 0xbf7a8915 ),
	VERT( 0x40bb439a, 0xc0afb3f7, 0xc04df963 ),
	NORM( 0x3dd8d2d2, 0xbd3da14b, 0xbf7e4904 ),
	VERT( 0x40486170, 0xbf33e308, 0xc03d348f ),
	NORM( 0xbca7e6c6, 0x3eaf8760, 0xbf706db4 ),
	VERT( 0x3ff92278, 0x3fd34007, 0xc00a99d8 ),
	NORM( 0xbe0f49cb, 0x3e152aa9, 0xbf7ab922 ),
	VERT( 0x3ffb63d3, 0x4045995b, 0x3fd104b2 ),
	NORM( 0xbe52ba3a, 0x3f24c94b, 0x3f3cb21f ),
	VERT( 0x40c71390, 0xc08d6cd6, 0x3e7aa70d ),
	NORM( 0xbc91b0e3, 0xbf3258c1, 0x3f3798c0 ),
	VERT( 0x404e10c5, 0x3fbaea62, 0x4008fbed ),
	NORM( 0x3df52c02, 0x3dd4cb39, 0x3f7cc366 ),
	VERT( 0x3fef5a39, 0x4017be45, 0xc0089f9a ),
	NORM( 0xbe8775e6, 0x3e13623e, 0xbf741cd8 ),
	VERT( 0x3ffdda02, 0x40645f9a, 0x3f78ed80 ),
	NORM( 0xbeb1006e, 0x3f5652ce, 0x3ed8f87e ),
	VERT( 0x40a8fa47, 0xc058d73e, 0xc0383e90 ),
	NORM( 0x3ef36c4f, 0x3ccd9a83, 0xbf611fdc ),
	VERT( 0x3fe9ac7a, 0x4036dfa4, 0xc00088d0 ),
	NORM( 0xbecafc15, 0x3eb533c8, 0xbf58db44 ),
	VERT( 0x40c8e454, 0xc095201d, 0xc0360896 ),
	NORM( 0x3f1dcb27, 0x3e917ba2, 0xbf3c0146 ),
	VERT( 0x40d108d7, 0xc0a07f02, 0xc02d50a2 ),
	NORM( 0x3f0a5784, 0x3ee5922e, 0xbf3644bf ),
	VERT( 0x40dcb085, 0xc09437ad, 0xbe1d2079 ),
	NORM( 0xbc930a62, 0xbf7cdcec, 0x3e1ec177 ),
	VERT( 0x404708ff, 0x40247ac1, 0x40021317 ),
	NORM( 0x3d642ee3, 0x3e9ee6d0, 0x3f72f0d2 ),
	VERT( 0x3ff4152e, 0x407703d2, 0xbdba2b16 ),
	NORM( 0xbee8f129, 0x3f62fc71, 0x3da94bd7 ),
	VERT( 0x405e4622, 0x3f0ef792, 0xbff656cb ),
	NORM( 0x3e4a49d0, 0x3e83d422, 0xbf7224e4 ),
	VERT( 0x40d694d2, 0xc064add7, 0x3f80efd7 ),
	NORM( 0xbd002b6d, 0xbefebf79, 0x3f5deb13 ),
	VERT( 0x3feaa288, 0x406cec00, 0xbfb83a9d ),
	NORM( 0xbf030fb6, 0x3f406be8, 0xbed4e989 ),
	VERT( 0x40d42f13, 0xc088c994, 0xbfe08ef2 ),
	NORM( 0x3f605716, 0xbe8a9db4, 0xbecbffba ),
	VERT( 0x40dc95cf, 0xc0932cc4, 0xbfd150ea ),
	NORM( 0x3f425ac3, 0x3f241812, 0x3de73bea ),
	VERT( 0x40c9d08c, 0xc07639f3, 0xc0160b68 ),
	NORM( 0x3f2a8e1f, 0x3d8cedf4, 0xbf3e18a9 ),
	VERT( 0x40f143fb, 0xc09b5788, 0x3d84f594 ),
	NORM( 0xbe6a6fb8, 0xbf71caf6, 0x3e713cbe ),
	VERT( 0x4041a817, 0x4056fb1c, 0x3fcdac9e ),
	NORM( 0xbd7091b6, 0x3f1dd90b, 0x3f48fb8a ),
	VERT( 0x4098730e, 0xbf955fbd, 0xc0488b02 ),
	NORM( 0x3d6d529d, 0x3ea671f1, 0xbf71a3e7 ),
	VERT( 0x40f2dd22, 0xc08bae5b, 0x3f2b26a9 ),
	NORM( 0xbdb0f192, 0xbf20af78, 0x3f460ede ),
	VERT( 0x4048f681, 0x400027e1, 0xc00b8412 ),
	NORM( 0x3e19e1bf, 0xbda2991b, 0xbf7c4688 ),
	VERT( 0x40db84d3, 0xc08306be, 0xbff614fa ),
	NORM( 0x3eba930a, 0xbf0f8794, 0xbf3e595b ),
	VERT( 0x40d463c3, 0xc0596427, 0xc005e68c ),
	NORM( 0x3ee71f0c, 0xbe0ff9c8, 0xbf619465 ),
	VERT( 0x404142c4, 0x402e1801, 0xc01316f6 ),
	NORM( 0x3cf341f1, 0x3d280301, 0xbf7fabec ),
	VERT( 0x40407921, 0x4080145f, 0x3f63ccd2 ),
	NORM( 0xbe58cab3, 0x3f55cc97, 0x3f01f4af ),
	VERT( 0x40dc4b3c, 0xc00ff1c1, 0x3fb714e4 ),
	NORM( 0x3de78d62, 0xbe8a7153, 0x3f74c223 ),
	VERT( 0x40ced3d4, 0xc03b7fc5, 0xc017b194 ),
	NORM( 0x3f1753e0, 0xbe13d87b, 0xbf4b2655 ),
	VERT( 0x40f555cd, 0xc0691f2e, 0x3f7f36f7 ),
	NORM( 0x3e1d3f45, 0xbe75b738, 0x3f756445 ),
	VERT( 0x403d639a, 0x404c3d8b, 0xc00d2d2b ),
	NORM( 0xbd959efe, 0x3e9713f5, 0xbf73e2a9 ),
	VERT( 0x40f29261, 0xc0865ea8, 0xbfc8755e ),
	NORM( 0xbdae275e, 0xbf437d11, 0xbf23d939 ),
	VERT( 0x403ca881, 0x408a786d, 0xbd724788 ),
	NORM( 0xbe920433, 0x3f7443d3, 0x3db9fb68 ),
	VERT( 0x409b5aea, 0x3f3dda9c, 0xbfe26cac ),
	NORM( 0x3e485701, 0x3e7340da, 0xbf739371 ),
	VERT( 0x403d12e7, 0x408111fb, 0xbfeb81b7 ),
	NORM( 0xbe5169f5, 0x3f3fa609, 0xbf217314 ),
	VERT( 0x40bd82bc, 0xbfa9e43a, 0xc0412cf1 ),
	NORM( 0x3edfd15a, 0x3e818428, 0xbf5cf322 ),
	VERT( 0x40dc399b, 0xbf88408f, 0x3fd6e779 ),
	NORM( 0x3daffa4d, 0xbdb35e51, 0x3f7e10d8 ),
	VERT( 0x40fd0a6f, 0xc0406210, 0x3f4f0e63 ),
	NORM( 0x3e4f25ac, 0xbdfe023b, 0x3f78b046 ),
	VERT( 0x40f164b3, 0xc0471f65, 0xc011e878 ),
	NORM( 0xbd2e435f, 0xbe05aa48, 0xbf7d936d ),
	VERT( 0x41099db8, 0xc0919a1d, 0xbfcb04ce ),
	NORM( 0x3d954ffd, 0xbf3d4442, 0xbf2b5d51 ),
	VERT( 0x41000ea7, 0xc014b52e, 0x3f95a5eb ),
	NORM( 0xbc9a29d4, 0xbed00c13, 0x3f69dcec ),
	VERT( 0x41005067, 0xbfe506d2, 0x3fb067a0 ),
	NORM( 0x3d839d70, 0xbeb624ac, 0x3f6eafc7 ),
	VERT( 0x40c8d137, 0x3d3ada42, 0xbfbab917 ),
	NORM( 0x3ed4306f, 0x3e6da34f, 0xbf614752 ),
	VERT( 0x40dada06, 0x3e950746, 0x3fc71512 ),
	NORM( 0x3e830a94, 0x3dd2f773, 0x3f761074 ),
	VERT( 0x40ea548e, 0xbfdc9136, 0xbfe4ba3b ),
	NORM( 0xbdbf0579, 0x3e83097e, 0xbf7651bc ),
	VERT( 0x40fb0d56, 0xbf92094e, 0x3fd53448 ),
	NORM( 0x3e3cd787, 0xbd7182ca, 0x3f7b27ef ),
	VERT( 0x410a89dc, 0xc06bac51, 0xbfef4297 ),
	NORM( 0x3ea93461, 0xbe45d419, 0xbf6c801b ),
	VERT( 0x410b8945, 0xc01ff5fb, 0x3fb0d448 ),
	NORM( 0xbbf92262, 0xbeea73c2, 0x3f639322 ),
	VERT( 0x40e08e4f, 0xbe8ae45b, 0xbf933d8a ),
	NORM( 0x3da8ff59, 0x3dc51851, 0xbf7def42 ),
	VERT( 0x40fb8415, 0xbff60ff5, 0xc014aa45 ),
	NORM( 0xbceca1e0, 0x3e81396f, 0xbf779a07 ),
	VERT( 0x40d68dff, 0x3fcedf1d, 0x3fc10b63 ),
	NORM( 0x3e2c8314, 0x3d66a1f0, 0x3f7bedd1 ),
	VERT( 0x40ff12ed, 0xbeeb9fab, 0x3fb89171 ),
	NORM( 0x3e7514b7, 0x3ea73081, 0x3f6a14b8 ),
	VERT( 0x40c96a3b, 0x4028d23e, 0x3fc29542 ),
	NORM( 0x3e8719d8, 0x3e84e292, 0x3f6dd1e8 ),
	VERT( 0x40d97ee2, 0x3f4c8c65, 0xbfb8c6c1 ),
	NORM( 0xbd4c6c84, 0xbdd9d2a5, 0xbf7e3a22 ),
	VERT( 0x40fdbf12, 0x3e6e994c, 0x3f7b1cd9 ),
	NORM( 0x3dd7fc1f, 0x3e50f81d, 0x3f79277d ),
	VERT( 0x410ce6e5, 0xc00f184b, 0xbff04b8d ),
	NORM( 0x3ee82df6, 0x3e56a98f, 0xbf5dc387 ),
	VERT( 0x410a6f57, 0xbf1c0744, 0x3fbfd0f0 ),
	NORM( 0xbe4e958b, 0xbd5b1099, 0x3f7a5cb9 ),
	VERT( 0x41010b93, 0xbf26a759, 0xbfae8938 ),
	NORM( 0x3e0f32f1, 0x3e095a03, 0xbf7b25e0 ),
	VERT( 0x40be7cf5, 0x4076c9d0, 0x3f92bf10 ),
	NORM( 0x3e0e473d, 0x3ec05288, 0x3f6a9253 ),
	VERT( 0x40b5f40a, 0x4089a60b, 0x3f6bdbcd ),
	NORM( 0xbcfd2c5e, 0x3f296e8f, 0x3f3fbec9 ),
	VERT( 0x40d01f85, 0x40047836, 0xbfba40b0 ),
	NORM( 0xbcc808ac, 0xbde00846, 0xbf7e630d ),
	VERT( 0x40fafc09, 0x3f5fe6c7, 0x3f865aa8 ),
	NORM( 0x3e58054e, 0xbe2f46d3, 0x3f765f51 ),
	VERT( 0x40f3fa44, 0x3fc50b3d, 0x3fad8e8a ),
	NORM( 0x3ea7825f, 0x3daba95d, 0x3f70f53c ),
	VERT( 0x40f6061b, 0x3ed302ea, 0xbfd6bd29 ),
	NORM( 0xbdc1e438, 0xbe345d91, 0xbf7ad451 ),
	VERT( 0x40c9919b, 0x4032dcc6, 0xbfcc490b ),
	NORM( 0x3d21f053, 0xbd8506a6, 0xbf7f4242 ),
	VERT( 0x40b6b930, 0x409a0fc5, 0x3def7686 ),
	NORM( 0xbe1a021c, 0x3f71a9a6, 0x3e965e96 ),
	VERT( 0x40f3b8ed, 0x400609b1, 0x3f9284ad ),
	NORM( 0x3e69bdf0, 0x3ea129c3, 0x3f6bdb0e ),
	VERT( 0x410b3815, 0x3e9ef332, 0x3f9b2d09 ),
	NORM( 0xbded26e6, 0x3e518e3d, 0x3f78d28f ),
	VERT( 0x40ec2728, 0x4022d165, 0x3f77358e ),
	NORM( 0x3e46ff79, 0x3ed320ce, 0x3f63da7e ),
	VERT( 0x40c1f13b, 0x4082061e, 0xbfcc77b9 ),
	NORM( 0x3c072684, 0x3e50971a, 0xbf7a9fa1 ),
	VERT( 0x40f0aa60, 0x3fd79ba6, 0xbfd6d354 ),
	NORM( 0xbd5bcdf6, 0xbd9c1373, 0xbf7ee2b5 ),
	VERT( 0x40dc15ee, 0x407e7893, 0x3f7d64f7 ),
	NORM( 0x3e20652c, 0x3dbf9e06, 0x3f7bb3f5 ),
	VERT( 0x40ba0854, 0x409cab91, 0xbfa179cc ),
	NORM( 0xbe1bf56b, 0x3f5ac342, 0xbefe3bd5 ),
	VERT( 0x40e74c4f, 0x40554145, 0x3f28fda1 ),
	NORM( 0x3e09d910, 0x3db436c6, 0x3f7caae8 ),
	VERT( 0x4105ffbf, 0x4002593a, 0x3f99db3b ),
	NORM( 0xbe0d7312, 0xbe1dec10, 0x3f7a7403 ),
	VERT( 0x410cfe5d, 0x3ee2bd3c, 0xbfbec357 ),
	NORM( 0x3e8bb8c4, 0xbda39660, 0xbf756ed5 ),
	VERT( 0x40db7e3f, 0x4090e8cc, 0x3f1ef4e5 ),
	NORM( 0xbdae434b, 0x3f2e53b3, 0x3f3a3405 ),
	VERT( 0x40ef6502, 0x402ee36f, 0xbfebdd57 ),
	NORM( 0xbd42e750, 0x3c8095cc, 0xbf7fadaf ),
	VERT( 0x40f664fa, 0x408606f5, 0x3f596db9 ),
	NORM( 0xbe485009, 0xbdf6240d, 0x3f792962 ),
	VERT( 0x40e039c3, 0x40a1ef46, 0xbd5d4d81 ),
	NORM( 0xbde0424a, 0x3f77a976, 0x3e69b58a ),
	VERT( 0x40f3ed2d, 0x409182e4, 0x3f6c068f ),
	NORM( 0xbe8e3750, 0x3ea43452, 0x3f67d104 ),
	VERT( 0x40eeb2d7, 0x407c75f3, 0xbfddd004 ),
	NORM( 0x3dc1489e, 0xbaff88ee, 0xbf7edb5b ),
	VERT( 0x40e4440c, 0x409e1541, 0xbfbad734 ),
	NORM( 0xbcd57293, 0x3f3efc12, 0xbf2a578a ),
	VERT( 0x4108a525, 0x403666cd, 0xbfd1ecce ),
	NORM( 0x3ed22175, 0xbb5be870, 0xbf6971e8 ),
	VERT( 0x40f5ff21, 0x40a29384, 0x3e75f1fa ),
	NORM( 0xbe1a50a8, 0x3f70123b, 0x3ea02b2e ),
	VERT( 0x41050e80, 0x40832335, 0xbfcb8f8d ),
	NORM( 0x3e8d328e, 0x3e6fcb3c, 0xbf6ea8a5 ),
	VERT( 0x4107e87f, 0x409851c3, 0x3f5ba25d ),
	NORM( 0xbc066dd0, 0x3f1d7252, 0x3f49d8ce ),
	VERT( 0x40fb1f1d, 0x40a0467e, 0xbfa960b2 ),
	NORM( 0x3ddcf149, 0x3f4bdceb, 0xbf185bd1 ),
	VERT( 0x410aec0f, 0x40a5ab88, 0x3e9a2ec8 ),
	NORM( 0x3bd3285a, 0x3f7667b3, 0x3e8ad22f ),
	VERT( 0x410e3875, 0x409fcf62, 0xbf608aa8 ),
	NORM( 0x3db94b2c, 0x3f57b8e0, 0xbf07e164 ),
	VERT( 0x4116ef00, 0x40a45f4b, 0x3e240fb9 ),
	NORM( 0x3d0444fa, 0x3f798cc5, 0x3e62026e ),
	VERT( 0x4117fe0f, 0x409e3605, 0xbf87387c ),
	NORM( 0xbd276ff9, 0x3f381dc6, 0xbf318f74 ),
	VERT( 0x41234058, 0x40a69274, 0x3deb8de3 ),
	NORM( 0xbcb2fb92, 0x3f796fc9, 0x3e654c22 ),
	VERT( 0x412312b1, 0x409f0d96, 0xbf6b5846 ),
	NORM( 0x3e2c42da, 0x3f3a6fde, 0xbf2a110a ),
	CnkV_VN_NF(FV_CONT|FW_START, 778),
	OffnbIdx(5050, 111),
	VERT( 0x40a82b27, 0xc0bfd28d, 0xbf87d720 ),
	NORM( 0xbd5f032c, 0xbf417745, 0x3f271226 ),
	NFlagsW( 0, 71.818893 ),
	VERT( 0x40b430a4, 0xc0d902e0, 0xbfd14fed ),
	NORM( 0xbf0298dc, 0xbf34d812, 0x3efb3428 ),
	NFlagsW( 1, 93.425072 ),
	VERT( 0x40c20601, 0xc0e2ef5e, 0xbfdc8691 ),
	NORM( 0xbecd8985, 0xbf5d5e9a, 0x3e9a8892 ),
	NFlagsW( 2, 99.043297 ),
	VERT( 0x40b06dd1, 0xc0b2b6bf, 0xbf00cec2 ),
	NORM( 0xbcc66e87, 0xbf2f11f7, 0x3f3aad19 ),
	NFlagsW( 3, 73.458107 ),
	VERT( 0x40b9f30b, 0xc0c3b64d, 0xbfa9e505 ),
	NORM( 0xbe8ecb07, 0xbf0735e8, 0x3f4d5220 ),
	NFlagsW( 4, 68.307533 ),
	VERT( 0x40c620bd, 0xc0d3a19e, 0xbf976b9a ),
	NORM( 0xbee7af99, 0xbf0c88e8, 0x3f33e815 ),
	NFlagsW( 5, 50.289581 ),
	VERT( 0x40ce3270, 0xc0c6eb1a, 0xbf2a347a ),
	NORM( 0xbe8d94e6, 0xbe92bbca, 0x3f6ad2c3 ),
	NFlagsW( 6, 62.314415 ),
	VERT( 0x40e701c4, 0xc0f25f2e, 0xbfeb0c42 ),
	NORM( 0xbe1d8898, 0xbf747101, 0x3e8220db ),
	NFlagsW( 7, 0.036453 ),
	VERT( 0x40ea200c, 0xc0e7a4c1, 0xbfaf0302 ),
	NORM( 0xbd154d36, 0xbf460246, 0x3f21fdf7 ),
	NFlagsW( 8, 1.553888 ),
	VERT( 0x40ca8bff, 0xc09e4748, 0xbf013f6f ),
	NORM( 0x3f0c12bf, 0xbf151e4f, 0x3f19e16a ),
	NFlagsW( 9, 74.248512 ),
	VERT( 0x40d2cb87, 0xc0a6e30f, 0xbf091f3a ),
	NORM( 0x3e44e290, 0x3e251daa, 0x3f77cf1d ),
	NFlagsW( 10, 72.704269 ),
	VERT( 0x40cf8fa1, 0xc0be5a63, 0xc042f438 ),
	NORM( 0xbc4b65d5, 0x3bc62300, 0xbf7ff9c1 ),
	NFlagsW( 11, 99.790504 ),
	VERT( 0x40f0b226, 0xc0dbfd4e, 0xbf7fcb50 ),
	NORM( 0x3e59da8a, 0xbecda81a, 0x3f6406c9 ),
	NFlagsW( 12, 6.283609 ),
	VERT( 0x40f96e18, 0xc0e9242a, 0xbfcde29e ),
	NORM( 0xbc2e7f21, 0xbf43e32b, 0x3f24cafd ),
	NFlagsW( 13, 0.030006 ),
	VERT( 0x40dd9aec, 0xc0aab570, 0xbf2fb88b ),
	NORM( 0x3f1575b4, 0x3e99dfa6, 0x3f411390 ),
	NFlagsW( 14, 69.929436 ),
	VERT( 0x41002e6e, 0xc0dac3fd, 0xbf9ac68a ),
	NORM( 0x3e2790eb, 0xbe80adab, 0x3f74375d ),
	NFlagsW( 15, 0.793501 ),
	VERT( 0x40eb8245, 0xc0cb0229, 0xc0573fc5 ),
	NORM( 0xbea5ff3c, 0xbcb1d9ac, 0xbf721bb1 ),
	NFlagsW( 16, 2.111000 ),
	VERT( 0x40db69f4, 0xc0a69c4a, 0xc0314c30 ),
	NORM( 0x3e276cb3, 0x3f30c514, 0xbf3460f6 ),
	NFlagsW( 17, 99.877098 ),
	VERT( 0x40f809bb, 0xc0c1c4c6, 0xbf97ead9 ),
	NORM( 0x3ee74b60, 0x3eb590db, 0x3f519249 ),
	NFlagsW( 18, 23.398859 ),
	VERT( 0x41064b69, 0xc0df2b52, 0xbf98457e ),
	NORM( 0x3e3fd20a, 0xbe7591f2, 0x3f73dbee ),
	NFlagsW( 19, 0.021237 ),
	VERT( 0x40e4d996, 0xc09dfaec, 0xbff19aec ),
	NORM( 0x3f25d52e, 0x3f42a0cc, 0xbd477326 ),
	NFlagsW( 20, 98.184708 ),
	VERT( 0x41044f4b, 0xc0c3167a, 0xbface45a ),
	NORM( 0x3ebfea0b, 0x3ef9899b, 0x3f49e4bd ),
	NFlagsW( 21, 5.858557 ),
	VERT( 0x40f21319, 0xc0afac6e, 0xc0420314 ),
	NORM( 0x3dd5da3a, 0x3f3abcdb, 0xbf2d0fdf ),
	NFlagsW( 22, 28.013384 ),
	VERT( 0x40f9b2ac, 0xc0aa4ca5, 0xc008cfdc ),
	NORM( 0x3ed5c9d0, 0x3f66561d, 0x3e01e904 ),
	NFlagsW( 23, 37.854065 ),
	VERT( 0x41085acd, 0xc0c78b8b, 0xbfb47455 ),
	NORM( 0x3ed8c433, 0x3ee14b25, 0x3f4abb17 ),
	NFlagsW( 24, 0.993010 ),
	VERT( 0x410cf8d5, 0xc0cb5c19, 0xbfbf20c8 ),
	NORM( 0x3ef56584, 0x3ed04e7d, 0x3f4714b9 ),
	NFlagsW( 25, 0.075255 ),
	VERT( 0x41010695, 0xc0b6dded, 0xc048c330 ),
	NORM( 0x3e8b7846, 0x3f2d1163, 0xbf2f45d3 ),
	NFlagsW( 26, 3.271691 ),
	VERT( 0x410760ea, 0xc09d8576, 0x3e899d9d ),
	NORM( 0xbe0a4f4a, 0xbf69a325, 0x3ec58665 ),
	NFlagsW( 27, 92.360855 ),
	VERT( 0x4104c4ee, 0xc0bc668d, 0xc049d0e9 ),
	NORM( 0x3e7513b1, 0x3f32cf13, 0xbf2ca779 ),
	NFlagsW( 28, 0.387715 ),
	VERT( 0x4104c39b, 0xc0afb368, 0xc00f4906 ),
	NORM( 0x3eeee9d3, 0x3f60df8d, 0x3dd36037 ),
	NFlagsW( 29, 11.364570 ),
	VERT( 0x4108800c, 0xc0b4ecf3, 0xc011fe78 ),
	NORM( 0x3f0529a6, 0x3f58d24b, 0x3de1290b ),
	NFlagsW( 30, 2.684061 ),
	VERT( 0x41092c9b, 0xc0bfc579, 0xc050feda ),
	NORM( 0x3e236f1b, 0x3f3973aa, 0xbf2bae3b ),
	NFlagsW( 31, 0.021899 ),
	VERT( 0x4106eb57, 0xc0853af0, 0x3f389c84 ),
	NORM( 0xbdafe663, 0xbe74d864, 0x3f779995 ),
	NFlagsW( 32, 59.549164 ),
	VERT( 0x410cd7d8, 0xc0b8b94f, 0xc01a6234 ),
	NORM( 0x3f0057ca, 0x3f5d5b92, 0x3d00da2f ),
	NFlagsW( 33, 0.290556 ),
	VERT( 0x4107367c, 0xc0674a3c, 0x3f10a18c ),
	NORM( 0x3d351889, 0xbdcef74d, 0x3f7e7013 ),
	NFlagsW( 34, 65.344238 ),
	VERT( 0x41119fd8, 0xc08e9ebb, 0x3f4e254f ),
	NORM( 0xbd1c194b, 0xbefb92c6, 0x3f5ec08f ),
	NFlagsW( 35, 26.694016 ),
	VERT( 0x41147133, 0xc09fd600, 0x3dfecac7 ),
	NORM( 0x3d12dc14, 0xbf7b31d9, 0x3e4207ac ),
	NFlagsW( 36, 14.572615 ),
	VERT( 0x410928f8, 0xc0488446, 0x3f49b004 ),
	NORM( 0xbce2cc80, 0xbea6639a, 0x3f72003c ),
	NFlagsW( 37, 67.171181 ),
	VERT( 0x4112ac6f, 0xc0744d0e, 0x3f6a2a84 ),
	NORM( 0xbdc6a139, 0xbd5f57f9, 0x3f7e6914 ),
	NFlagsW( 38, 38.540867 ),
	VERT( 0x4118b230, 0xc0935d93, 0xbf8c9566 ),
	NORM( 0x3c8cd870, 0xbf4d72d9, 0xbf18aafd ),
	NFlagsW( 39, 9.498137 ),
	VERT( 0x412067e6, 0xc09dd58f, 0xbd67ce6f ),
	NORM( 0x3c20e8a8, 0xbf7d6488, 0x3e116d86 ),
	NFlagsW( 40, 0.377049 ),
	VERT( 0x41134bb9, 0xc04a6fab, 0x3f63c1c0 ),
	NORM( 0x3cf7c8e3, 0x3e2a9084, 0x3f7c4e11 ),
	NFlagsW( 41, 47.999561 ),
	VERT( 0x4120887d, 0xc08c9de1, 0x3f3b67ff ),
	NORM( 0x3dd53992, 0xbf03d832, 0x3f59d036 ),
	NFlagsW( 42, 0.699331 ),
	VERT( 0x410ad6cb, 0xbfd3e818, 0x3fb5a470 ),
	NORM( 0xbd5f58a1, 0xbd0d5a5a, 0x3f7f7767 ),
	NFlagsW( 43, 84.716125 ),
	VERT( 0x411f98ef, 0xc077f9f7, 0x3f578098 ),
	NORM( 0x3e08a69b, 0xbdaada5d, 0x3f7ccf51 ),
	NFlagsW( 44, 2.716741 ),
	VERT( 0x41095844, 0xbf85e4b6, 0x3f9f5959 ),
	NORM( 0x3c104fb6, 0xbcb8e6d9, 0x3f7fecc2 ),
	NFlagsW( 45, 76.260948 ),
	VERT( 0x41217d23, 0xc091b539, 0xbfa9b799 ),
	NORM( 0xbdfd997f, 0xbf257c51, 0xbf40bb64 ),
	NFlagsW( 46, 4.585327 ),
	VERT( 0x411b2b4c, 0xc0716eaa, 0xbfae6a94 ),
	NORM( 0x3cfaa936, 0xbdb70ff1, 0xbf7edada ),
	NFlagsW( 47, 8.383511 ),
	VERT( 0x41210fd3, 0xc05440af, 0x3f4da1fb ),
	NORM( 0x3e26efbe, 0x3ec96dd8, 0x3f67a063 ),
	NFlagsW( 48, 4.083670 ),
	VERT( 0x411b7806, 0xc0209ae0, 0x3f46355b ),
	NORM( 0x3f0f53ce, 0xbf07f5bc, 0x3f22d037 ),
	NFlagsW( 49, 19.446848 ),
	VERT( 0x4118d7b8, 0xbfe2d681, 0x3fbcbe8a ),
	NORM( 0x3e25d80c, 0xbec52326, 0x3f6898c0 ),
	NFlagsW( 50, 49.026760 ),
	VERT( 0x4122a0b3, 0xc06ceb5b, 0xbfcc856b ),
	NORM( 0xbe279314, 0x3dc0529f, 0xbf7b66ed ),
	NFlagsW( 51, 4.635194 ),
	VERT( 0x410ca593, 0xbf9dd2ed, 0xbf9682eb ),
	NORM( 0x3ecedb98, 0x3e639e84, 0xbf632833 ),
	NFlagsW( 52, 73.212120 ),
	VERT( 0x411934d7, 0xbf8b0800, 0x3fcd02d3 ),
	NORM( 0xbd1b884e, 0xbdb2bf3f, 0x3f7ed677 ),
	NFlagsW( 53, 47.026344 ),
	VERT( 0x412379bb, 0xc02b6b22, 0x3dbd58c2 ),
	NORM( 0x3eda37e5, 0x3f52f60f, 0x3ebf10f3 ),
	NFlagsW( 54, 3.021508 ),
	VERT( 0x412442dd, 0xc03939c4, 0xbf9c3c39 ),
	NORM( 0x3e9dd336, 0x3f06d95d, 0xbf4acab9 ),
	NFlagsW( 55, 2.606944 ),
	VERT( 0x411904a7, 0xbed7314f, 0x3fcbbe80 ),
	NORM( 0x3d08d381, 0x3e9b0ae8, 0x3f73d49c ),
	NFlagsW( 56, 62.442810 ),
	VERT( 0x410948dc, 0x3f8b21de, 0x3f8adb93 ),
	NORM( 0xbd22702e, 0x3db0bd72, 0x3f7ed7c2 ),
	NFlagsW( 57, 74.546669 ),
	VERT( 0x41215a7e, 0xc012a2f4, 0xbf9ab493 ),
	NORM( 0x3f356ca0, 0x3e4fe315, 0xbf2cf974 ),
	NFlagsW( 58, 14.695844 ),
	VERT( 0x4128235a, 0xc006aa7c, 0x3f1d4b1a ),
	NORM( 0x3e9f2340, 0xbf6bb235, 0x3e71bb8d ),
	NFlagsW( 59, 1.077346 ),
	VERT( 0x41262165, 0xbfca55af, 0x3fb4c070 ),
	NORM( 0x3e264d72, 0xbf0445a8, 0x3f573385 ),
	NFlagsW( 60, 2.128971 ),
	VERT( 0x411f4a57, 0xbfcdbb8b, 0xbf4a1c09 ),
	NORM( 0x3e907a0d, 0x3e5fbf01, 0xbf6f2442 ),
	NFlagsW( 61, 20.648750 ),
	VERT( 0x4106f041, 0x3fd7f82a, 0x3f710d54 ),
	NORM( 0xbca5bba7, 0xbe11c348, 0x3f7d5717 ),
	NFlagsW( 62, 74.466179 ),
	VERT( 0x4125356f, 0xbf858533, 0x3fc466eb ),
	NORM( 0x3e02d411, 0xbdc330ad, 0x3f7cba1e ),
	NFlagsW( 63, 3.165818 ),
	VERT( 0x4101b7e1, 0x403c5bc6, 0x3f6f3cf2 ),
	NORM( 0x3caf5cc4, 0x3e5064d5, 0x3f7a952f ),
	NFlagsW( 64, 89.472870 ),
	VERT( 0x41291651, 0xbfd73944, 0xbf27c45e ),
	NORM( 0x3ed32c1d, 0xbef291bc, 0xbf473140 ),
	NFlagsW( 65, 0.933744 ),
	VERT( 0x411d6421, 0x3e767a82, 0x3f842a29 ),
	NORM( 0x3eda7933, 0x3eeb4d1d, 0x3f47673c ),
	NFlagsW( 66, 22.052826 ),
	VERT( 0x41265982, 0xbef98554, 0x3fc0dd8c ),
	NORM( 0x3e0074c3, 0x3eb7e9a5, 0x3f6cbf01 ),
	NFlagsW( 67, 2.809248 ),
	VERT( 0x4118da36, 0x3f58f554, 0x3f98b641 ),
	NORM( 0x3df09dff, 0xbe3347e7, 0x3f7a3eb3 ),
	NFlagsW( 68, 47.174877 ),
	VERT( 0x40fd8b2a, 0x4069aaae, 0x3f5dd94c ),
	NORM( 0xbe69cce3, 0xbd600939, 0x3f78d829 ),
	NFlagsW( 69, 89.705864 ),
	VERT( 0x410b6aa4, 0x3fd6c8f5, 0xbfbf1b99 ),
	NORM( 0x3ea3440d, 0x3c88d168, 0xbf729916 ),
	NFlagsW( 70, 83.542511 ),
	VERT( 0x4118e640, 0x3fbe48e1, 0x3fa4a070 ),
	NORM( 0xbc2b2ab4, 0xbd470b44, 0x3f7faeff ),
	NFlagsW( 71, 43.065105 ),
	VERT( 0x412805a5, 0xbf536e00, 0xbf66ad18 ),
	NORM( 0x3dfc4677, 0xbc0295e1, 0xbf7e0acb ),
	NFlagsW( 72, 1.396375 ),
	VERT( 0x4128aaae, 0x3e3cdd90, 0x3f4fed4d ),
	NORM( 0x3d7b4def, 0x3f748ca9, 0x3e941eb0 ),
	NFlagsW( 73, 0.759064 ),
	VERT( 0x4109a06b, 0x405fed1c, 0x3f7288cb ),
	NORM( 0x3e165f9b, 0xbea3a16a, 0x3f6fa4bc ),
	NFlagsW( 74, 60.564030 ),
	VERT( 0x4123c9aa, 0x3f5ea337, 0x3f8ebd6c ),
	NORM( 0x3e1b0b2e, 0xbefbf55a, 0x3f5b75da ),
	NFlagsW( 75, 6.627228 ),
	VERT( 0x4121155f, 0x3eb7d663, 0xbf78ddbb ),
	NORM( 0x3f116b86, 0xbdef6b5e, 0xbf508cf7 ),
	NFlagsW( 76, 12.460537 ),
	VERT( 0x41185bcd, 0x4009541e, 0x3f9f4eb9 ),
	NORM( 0x3e3b3872, 0x3eeb0462, 0x3f5e91b2 ),
	NFlagsW( 77, 46.834713 ),
	VERT( 0x41270188, 0x3ea93b92, 0x3eaf69cd ),
	NORM( 0x3d374ff7, 0xbf7dfd1b, 0x3def43b2 ),
	NFlagsW( 78, 1.752267 ),
	VERT( 0x410e95ec, 0x403f4763, 0x3ec10c48 ),
	NORM( 0x3f0c66da, 0x3e04c936, 0x3f537966 ),
	NFlagsW( 79, 60.708912 ),
	VERT( 0x4121e47e, 0x3fb267cb, 0x3f9b12a4 ),
	NORM( 0x3e2d2f00, 0xbd3ffeba, 0x3f7c06d9 ),
	NFlagsW( 80, 9.645460 ),
	VERT( 0x4106ad40, 0x40874dbf, 0x3f893787 ),
	NORM( 0xbd0aadb2, 0x3d9db114, 0x3f7f17c1 ),
	NFlagsW( 81, 95.434952 ),
	VERT( 0x412966db, 0xbbae780b, 0xbf005e13 ),
	NORM( 0x3ebde54a, 0x3f4bcb2f, 0xbef4dc0a ),
	NFlagsW( 82, 0.532871 ),
	VERT( 0x41221812, 0x3ff8bc59, 0x3f9451f0 ),
	NORM( 0x3e37659e, 0x3ed4ff1d, 0x3f643c95 ),
	NFlagsW( 83, 8.222455 ),
	VERT( 0x41274f7f, 0x3f2e8833, 0xbf7128c2 ),
	NORM( 0x3e99daa2, 0xbf2544dd, 0xbf33bbf8 ),
	NFlagsW( 84, 1.900314 ),
	VERT( 0x411d1b65, 0x3fe93768, 0xbf7d21a6 ),
	NORM( 0xbdf9a840, 0xbd8f89da, 0xbf7d74dc ),
	NFlagsW( 85, 26.800056 ),
	VERT( 0x41149a8b, 0x40420801, 0xbf7c4a54 ),
	NORM( 0x3f209523, 0xbd530474, 0xbf46ef79 ),
	NFlagsW( 86, 45.764961 ),
	VERT( 0x4117674c, 0x406464b0, 0x3f5a8892 ),
	NORM( 0x3e2cf679, 0xbefbf7e4, 0x3f5a9e73 ),
	NFlagsW( 87, 27.819017 ),
	VERT( 0x411a4c83, 0x4044b4d9, 0x3db81b35 ),
	NORM( 0x3de5d98b, 0xbf785ed4, 0x3e5bea30 ),
	NFlagsW( 88, 28.811106 ),
	VERT( 0x4124c404, 0x3fc1e8f8, 0xbf9d95cd ),
	NORM( 0xbd99b214, 0xbb8c13dd, 0xbf7f4698 ),
	NFlagsW( 89, 3.869511 ),
	VERT( 0x41158848, 0x40844612, 0x3f78db54 ),
	NORM( 0x3e3636ac, 0x3c014adb, 0x3f7be807 ),
	NFlagsW( 90, 22.265430 ),
	VERT( 0x41234dca, 0x4024d4c8, 0x3ede25db ),
	NORM( 0x3e2ca09a, 0x3f6c20f0, 0x3eb1f3c2 ),
	NFlagsW( 91, 4.239739 ),
	VERT( 0x4110a698, 0x40829712, 0xbf9b7bfa ),
	NORM( 0x3e19747e, 0x3e1497ec, 0xbf7a5e41 ),
	NFlagsW( 92, 64.701935 ),
	VERT( 0x4124b351, 0x401598ed, 0xbf5f6b41 ),
	NORM( 0x3e8f2a3f, 0x3f359232, 0xbf25a978 ),
	NFlagsW( 93, 4.333367 ),
	VERT( 0x411ae131, 0x405517e4, 0xbf833168 ),
	NORM( 0x3e862e46, 0xbf27a22a, 0xbf357a20 ),
	NFlagsW( 94, 17.536453 ),
	VERT( 0x41169149, 0x4095bedb, 0x3f5cf957 ),
	NORM( 0x3e13bff8, 0x3f043d48, 0x3f5810ce ),
	NFlagsW( 95, 54.851097 ),
	VERT( 0x4120f2ec, 0x4062242b, 0x3f34a260 ),
	NORM( 0x3e31ae80, 0xbee7deb5, 0x3f5fe117 ),
	NFlagsW( 96, 3.351859 ),
	VERT( 0x4124a327, 0x4044566b, 0x3dc0df3f ),
	NORM( 0xbd32f045, 0xbf7c6da5, 0x3e247b51 ),
	NFlagsW( 97, 1.421412 ),
	VERT( 0x411f98f4, 0x4083b93f, 0x3f4136d3 ),
	NORM( 0x3e892d44, 0x3c2afb67, 0x3f76a050 ),
	NFlagsW( 98, 2.071808 ),
	VERT( 0x41194915, 0x4083d5a7, 0xbfaeefd0 ),
	NORM( 0x3bede094, 0x3c0bb63b, 0xbf7ffbe4 ),
	NFlagsW( 99, 77.228920 ),
	VERT( 0x4124314e, 0x4052649f, 0xbf654692 ),
	NORM( 0x3e308db1, 0xbf3e533f, 0xbf256bcc ),
	NFlagsW( 100, 1.964676 ),
	VERT( 0x412b484a, 0x40420981, 0x3e223a29 ),
	NORM( 0x3e39e965, 0xbf6ce5b1, 0x3eaa5bd2 ),
	NFlagsW( 101, 0.125252 ),
	VERT( 0x41201dd1, 0x4095cca4, 0x3f340924 ),
	NORM( 0x3e35891c, 0x3eeac911, 0x3f5eeca0 ),
	NFlagsW( 102, 11.459223 ),
	VERT( 0x4129b3bc, 0x406e12f8, 0x3f208c63 ),
	NORM( 0x3debb21b, 0xbe884167, 0x3f7500d7 ),
	NFlagsW( 103, 0.073976 ),
	VERT( 0x412a81a7, 0x40535378, 0xbf3ea452 ),
	NORM( 0x3d9e1275, 0xbf4c1522, 0xbf1948a2 ),
	NFlagsW( 104, 0.114002 ),
	VERT( 0x4128da64, 0x4084b0ff, 0x3f19b273 ),
	NORM( 0x3cf1ad27, 0xbc4ae970, 0x3f7fde73 ),
	NFlagsW( 105, 0.058303 ),
	VERT( 0x41229460, 0x4083ac44, 0xbf9b06f7 ),
	NORM( 0x3e7f9fc4, 0xbc6fb21d, 0xbf77dded ),
	NFlagsW( 106, 31.321869 ),
	VERT( 0x4129217c, 0x40914d7b, 0x3f24f9b8 ),
	NORM( 0x3b1d155a, 0x3e8239df, 0x3f779483 ),
	NFlagsW( 107, 0.024704 ),
	VERT( 0x4128bc1f, 0x40846f4f, 0xbf8f02bb ),
	NORM( 0x3d4b7f8a, 0xbb474ff7, 0xbf7faec4 ),
	NFlagsW( 108, 0.138739 ),
	VERT( 0x4129c550, 0x40a61395, 0x3e2d5ab0 ),
	NORM( 0x3d94d24a, 0x3f6be6fa, 0x3ec358be ),
	NFlagsW( 109, 0.075933 ),
	VERT( 0x41295743, 0x40a00ab1, 0xbf44743c ),
	NORM( 0xbc1a1448, 0x3f4f9c72, 0xbf15c25f ),
	NFlagsW( 110, 0.494983 ),
	CnkV_VN_NF(FV_CONT|FW_END, 491),
	OffnbIdx(0, 70),
	VERT( 0xc062ec6c, 0xc06736f2, 0x3ea765ef ),
	NORM( 0xbd622216, 0xbf7f1624, 0xbd82c1a9 ),
	NFlagsW( 4980, 14.822324 ),
	VERT( 0xc0448447, 0xc0514c8e, 0x40000a65 ),
	NORM( 0x3e3c2073, 0xbf5e0b55, 0x3eecd0b9 ),
	NFlagsW( 4981, 21.842485 ),
	VERT( 0xc077bfbe, 0xc046b203, 0xbf9a8d28 ),
	NORM( 0xbe17bf4c, 0xbf51a54c, 0xbf0def4e ),
	NFlagsW( 4982, 1.842936 ),
	VERT( 0xc03e5bdf, 0xc012b4b0, 0x4039d72d ),
	NORM( 0x3eb65a6b, 0xbf06cf65, 0x3f459bbf ),
	NFlagsW( 4983, 7.670270 ),
	VERT( 0xc02f3297, 0xbf96a73d, 0x4050e8a0 ),
	NORM( 0x3ecf4551, 0xbea4a543, 0x3f5b21b3 ),
	NFlagsW( 4984, 0.804266 ),
	VERT( 0xbfa26b6f, 0xc04701ad, 0x3fa3be62 ),
	NORM( 0x3e8968f8, 0xbf497964, 0x3f0e35dc ),
	NFlagsW( 4985, 63.234055 ),
	VERT( 0xbf84c204, 0xc064444c, 0xbe3bced1 ),
	NORM( 0xbcce4476, 0xbf7f7d94, 0xbd6ccdbd ),
	NFlagsW( 4986, 68.323433 ),
	VERT( 0xbf96b972, 0xc00bf553, 0x400652c2 ),
	NORM( 0x3ed65e1d, 0xbf05a66d, 0x3f3e396e ),
	NFlagsW( 4987, 64.630836 ),
	VERT( 0xbfa3b2f6, 0xc04a6cd7, 0xbfc83280 ),
	NORM( 0xbd8f89a6, 0xbf4e72e6, 0xbf164f3e ),
	NFlagsW( 4988, 63.992577 ),
	VERT( 0xbff77485, 0xbfe4be3e, 0xc0163c88 ),
	NORM( 0xbc84489c, 0xbea796b2, 0xbf71dcc6 ),
	NFlagsW( 4989, 45.785370 ),
	VERT( 0xbe145bbe, 0xc069d540, 0x3d1d2b6f ),
	NORM( 0xbdde384d, 0xbf793ad4, 0x3e4ddefa ),
	NFlagsW( 4990, 77.976761 ),
	VERT( 0xbf83c04d, 0xbf90f582, 0x402134b6 ),
	NORM( 0x3ed6303a, 0xbea77e7f, 0x3f58eaec ),
	NFlagsW( 4991, 65.748451 ),
	VERT( 0xbd213536, 0xc02faf3b, 0x3f8e26bf ),
	NORM( 0x3e3d0f6c, 0xbf1e153c, 0x3f43bbe9 ),
	NFlagsW( 4992, 75.335922 ),
	VERT( 0x3ea769c9, 0xc0722cb5, 0x3a594497 ),
	NORM( 0xbeb98dff, 0xbf662ea3, 0x3e7b38e1 ),
	NFlagsW( 4993, 82.251945 ),
	VERT( 0xbf0cb110, 0xc03d4dd4, 0xc001f616 ),
	NORM( 0xbea1cd09, 0xbf145506, 0xbf405310 ),
	NFlagsW( 4994, 74.889420 ),
	VERT( 0xbf60bacf, 0xbe86747c, 0x402ce593 ),
	NORM( 0x3ed87c6f, 0xbe1d8e26, 0x3f649f35 ),
	NFlagsW( 4995, 63.899784 ),
	VERT( 0x3e9b170f, 0xc02d2cf7, 0x3f8e2dc1 ),
	NORM( 0xbdfceb37, 0xbf108ba1, 0x3f50e8ce ),
	NFlagsW( 4996, 75.870148 ),
	VERT( 0xbe36b4c4, 0xc042ef99, 0xc0068110 ),
	NORM( 0xbe93eec6, 0xbf24f7bf, 0xbf353f54 ),
	NFlagsW( 4997, 79.147469 ),
	VERT( 0xbd86b698, 0xbfe0d6fd, 0x3fd4c080 ),
	NORM( 0x3ea9fb82, 0xbeed9541, 0x3f523d94 ),
	NFlagsW( 4998, 74.977158 ),
	VERT( 0xbffb568e, 0xbe068ae1, 0xc020204b ),
	NORM( 0x3e22889f, 0x3c685c46, 0xbf7cba86 ),
	NFlagsW( 4999, 6.429414 ),
	VERT( 0x3e44c38a, 0xc04897c6, 0xc00b0a65 ),
	NORM( 0xbef2688c, 0xbf15506c, 0xbf28f84b ),
	NFlagsW( 5000, 83.332001 ),
	VERT( 0xbd4241bd, 0xbf8c06c0, 0x3fffe6a2 ),
	NORM( 0x3eb81b3e, 0xbeb8fd43, 0x3f5c3e32 ),
	NFlagsW( 5001, 74.983658 ),
	VERT( 0x3e835549, 0xbfd9547a, 0x3fcd232a ),
	NORM( 0x3d1ed77c, 0xbee8e182, 0x3f63c510 ),
	NFlagsW( 5002, 75.013794 ),
	VERT( 0xbef5b9e1, 0xbfe97a86, 0xc0125eb3 ),
	NORM( 0xbd903556, 0xbde01fd9, 0xbf7dd2ba ),
	NFlagsW( 5003, 74.010437 ),
	VERT( 0xbf4fda44, 0x3f387578, 0x402d644c ),
	NORM( 0x3edbc466, 0x3dfb3496, 0x3f651355 ),
	NFlagsW( 5004, 59.436310 ),
	VERT( 0x3e8b0f70, 0xbf8f3977, 0x3ff282e2 ),
	NORM( 0x3d78ff55, 0xbec1cdfd, 0x3f6c7094 ),
	NFlagsW( 5005, 75.000511 ),
	VERT( 0xbe04b8ad, 0xbfea472e, 0xc015f10e ),
	NORM( 0xbe27e1ba, 0xbb664145, 0xbf7c88d5 ),
	NFlagsW( 5006, 75.765457 ),
	VERT( 0xbfed0946, 0x3f918d31, 0xc015243c ),
	NORM( 0x3e639e66, 0x3e470358, 0xbf74961a ),
	NFlagsW( 5007, 6.786594 ),
	VERT( 0xc01d0f11, 0x407074fd, 0x3fe0e42f ),
	NORM( 0x3ecc0fcb, 0x3f49f64d, 0x3eef7977 ),
	NFlagsW( 5008, 0.032727 ),
	VERT( 0xbb5a6829, 0xbde7e86f, 0x40133e22 ),
	NORM( 0x3eb82ee8, 0xbe1086d0, 0x3f6c1d16 ),
	NFlagsW( 5009, 74.911346 ),
	VERT( 0xbee8c515, 0xbf2a470c, 0xc007b04a ),
	NORM( 0x3ddb36b3, 0x3dbc983e, 0xbf7d6f69 ),
	NFlagsW( 5010, 74.542770 ),
	VERT( 0x3e61fd65, 0xbfeb12bb, 0xc019820b ),
	NORM( 0xbe834b9c, 0x3d487c47, 0xbf771f48 ),
	NFlagsW( 5011, 77.235352 ),
	VERT( 0xbf302faa, 0x3fc76611, 0x40167c52 ),
	NORM( 0x3eb4f73d, 0x3ebcb58b, 0x3f5c1acb ),
	NFlagsW( 5012, 65.317123 ),
	VERT( 0x3e9a2eb3, 0xbdce20f3, 0x400df1b7 ),
	NORM( 0x3dac97db, 0xbe11ce11, 0x3f7c78b6 ),
	NFlagsW( 5013, 74.999672 ),
	VERT( 0xbdd1aa85, 0xbf337f57, 0xc008f3e1 ),
	NORM( 0xbd53d503, 0x3dddcac5, 0xbf7e2657 ),
	NFlagsW( 5014, 74.985298 ),
	VERT( 0x3894533a, 0x3f705bef, 0x40123e38 ),
	NORM( 0x3e9da2d5, 0x3e0781e3, 0x3f71327a ),
	NFlagsW( 5015, 74.711624 ),
	VERT( 0xbfd44fcf, 0x40257af3, 0xbfeb5b9a ),
	NORM( 0x3e60ad4f, 0x3effbc3f, 0xbf568c50 ),
	NFlagsW( 5016, 23.323479 ),
	VERT( 0x3e93fc34, 0x3f6ea083, 0x400dc1b8 ),
	NORM( 0x3db96970, 0x3db57447, 0x3f7df011 ),
	NFlagsW( 5017, 74.971779 ),
	VERT( 0xbedd96d7, 0x3f01d668, 0xc005f11c ),
	NORM( 0x3dfc69cd, 0x3e103beb, 0xbf7b79e8 ),
	NFlagsW( 5018, 74.126999 ),
	VERT( 0xbf0a3e3e, 0x4022af82, 0x3fda3894 ),
	NORM( 0x3e489b9e, 0x3f28d39e, 0x3f39ca89 ),
	NFlagsW( 5019, 66.312141 ),
	VERT( 0x3d4d481a, 0x3fe0efa5, 0x40059335 ),
	NORM( 0x3e17c3d5, 0x3eb5de1a, 0x3f6c4749 ),
	NFlagsW( 5020, 74.238686 ),
	VERT( 0xbd9df87f, 0x3ef99071, 0xc0054a37 ),
	NORM( 0x3d05d368, 0x3e2b3c94, 0xbf7c41b5 ),
	NFlagsW( 5021, 74.940109 ),
	VERT( 0xbed4dbd7, 0x3faec44b, 0xbfebb9aa ),
	NORM( 0x3e1f7b0d, 0x3e97e795, 0xbf71334c ),
	NFlagsW( 5022, 73.649475 ),
	VERT( 0x3ea1505b, 0x3fdfb599, 0x40044350 ),
	NORM( 0x3c584183, 0x3eaa92d6, 0x3f715a17 ),
	NFlagsW( 5023, 74.760445 ),
	VERT( 0xbf1ddd36, 0x404c82d3, 0x3f5a1e62 ),
	NORM( 0x3ea46929, 0x3f61379c, 0x3eb38132 ),
	NFlagsW( 5024, 62.651157 ),
	VERT( 0xbd8fdc0c, 0x3fad7303, 0xbfeb1180 ),
	NORM( 0x3cc57a07, 0x3e9bf4e0, 0xbf73c1b5 ),
	NFlagsW( 5025, 74.798477 ),
	VERT( 0xbd9f67bf, 0x402e01bf, 0x3fcc9d12 ),
	NORM( 0xbd34ddd4, 0x3f3d95d9, 0x3f2ba7d1 ),
	NFlagsW( 5026, 71.477951 ),
	VERT( 0xbf7ceb4e, 0x4053dbd2, 0xbf6bba55 ),
	NORM( 0x3e3f3ebe, 0x3f621050, 0xbedc694c ),
	NFlagsW( 5027, 52.029724 ),
	VERT( 0xbecae75e, 0x400fbfb8, 0xbfc3aaa8 ),
	NORM( 0x3e2ff7b7, 0x3eb29972, 0xbf6bda2d ),
	NFlagsW( 5028, 71.382721 ),
	VERT( 0xbf44bc84, 0x405a72fd, 0xbe05f8e0 ),
	NORM( 0x3e8ce9ae, 0x3f75f01b, 0xbd14c120 ),
	NFlagsW( 5029, 58.692242 ),
	VERT( 0x3e2cbf3d, 0x402e447d, 0x3fcb0447 ),
	NORM( 0x3cdfc6c9, 0x3f3789bf, 0x3f3253f7 ),
	NFlagsW( 5030, 73.183548 ),
	VERT( 0xbe1e0786, 0x4045168a, 0x3f5ee79c ),
	NORM( 0x3dc15ab7, 0x3f6c4913, 0x3ebf021f ),
	NFlagsW( 5031, 70.337830 ),
	VERT( 0x3e8d3d5c, 0x3fac2c5e, 0xbfea6dfa ),
	NORM( 0xbe07df8b, 0x3e966c7f, 0xbf725546 ),
	NFlagsW( 5032, 75.021767 ),
	VERT( 0x3f7e3247, 0x3fe52f97, 0x4007a4ad ),
	NORM( 0xbdc86d1b, 0x3ea09ad1, 0x3f71c8e6 ),
	NFlagsW( 5033, 75.639854 ),
	VERT( 0xbd5d317f, 0x400e3c10, 0xbfc2fc19 ),
	NORM( 0x3d185154, 0x3eb3e075, 0xbf6f7dfa ),
	NFlagsW( 5034, 73.968269 ),
	VERT( 0x3ed494e1, 0x402e884c, 0x3fc96c56 ),
	NORM( 0xba970feb, 0x3f377f80, 0x3f328188 ),
	NFlagsW( 5035, 74.315819 ),
	VERT( 0x3db59597, 0x40445530, 0x3f5e5ce4 ),
	NORM( 0x3d45fc23, 0x3f713015, 0x3ea9d6c9 ),
	NFlagsW( 5036, 72.517784 ),
	VERT( 0xbeb996bd, 0x4046a57e, 0xbf944b10 ),
	NORM( 0x3dc8b055, 0x3f481067, 0xbf1dbcc1 ),
	NFlagsW( 5037, 67.252335 ),
	VERT( 0xbe7923af, 0x4054543a, 0xbe019c9b ),
	NORM( 0x3de6b0cc, 0x3f7e5ed6, 0x3ac6d5c3 ),
	NFlagsW( 5038, 68.542984 ),
	VERT( 0x3e939daf, 0x400cb73a, 0xbfc24ed0 ),
	NORM( 0xbe093899, 0x3eb3557b, 0xbf6d50f5 ),
	NFlagsW( 5039, 74.947441 ),
	VERT( 0x3ea9cd81, 0x404393ae, 0x3f5dcbb3 ),
	NORM( 0x3b4b763f, 0x3f70f8e8, 0x3eacd4fd ),
	NFlagsW( 5040, 73.947174 ),
	VERT( 0x3d38aab6, 0x40539d10, 0xbe0440a3 ),
	NORM( 0x3d226610, 0x3f7fc3d1, 0x3c85155d ),
	NFlagsW( 5041, 71.863701 ),
	VERT( 0x39ae15bb, 0x40461f32, 0xbf970078 ),
	NORM( 0x3b693f70, 0x3f448099, 0xbf24144d ),
	NFlagsW( 5042, 72.019409 ),
	VERT( 0x3eaa9632, 0x4052e251, 0xbe06e1a7 ),
	NORM( 0xbc298554, 0x3f7ffc20, 0x3b5c7e07 ),
	NFlagsW( 5043, 74.071823 ),
	VERT( 0x3f86b3fd, 0x4032e525, 0x3fc4c6f2 ),
	NORM( 0xbe52cad1, 0x3f34f82a, 0x3f2d3b28 ),
	NFlagsW( 5044, 77.016403 ),
	VERT( 0x3eb4b4d8, 0x404509bc, 0xbf993b74 ),
	NORM( 0xbcccfd60, 0x3f4899ea, 0xbf1eea5b ),
	NFlagsW( 5045, 74.883255 ),
	VERT( 0x3f7743bb, 0x4046120a, 0x3f52aa83 ),
	NORM( 0xbe780c4c, 0x3f699547, 0x3ea8df47 ),
	NFlagsW( 5046, 76.889923 ),
	VERT( 0x3f69b61a, 0x40135e51, 0xbfd846c7 ),
	NORM( 0xbeb9034f, 0x3ebd6503, 0xbf5b1d35 ),
	NFlagsW( 5047, 76.967400 ),
	VERT( 0x3f766950, 0x40563f5f, 0xbe01a909 ),
	NORM( 0xbe927be4, 0x3f7549d4, 0xbc1277ac ),
	NFlagsW( 5048, 77.957397 ),
	VERT( 0x3f7adda6, 0x4041d7a2, 0xbfa20777 ),
	NORM( 0xbead6c23, 0x3f3f1f3c, 0xbf1297db ),
	NFlagsW( 5049, 78.823792 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Hand[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Hand,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Hand[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Hand,
OPosition  ( 18.810850F,  0.000005F, -0.000001F ),
OAngle     ( -81.954378F,  6.500039F, 14.000035F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Finger0,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Forearm[]
START
	CnkV_VN(FV_CONT, 253),
	OffnbIdx(2292, 42),
	VERT( 0x410a949a, 0x3f75bd42, 0x4099e7c8 ),
	NORM( 0x3e0dc28f, 0x3dc8ec3e, 0x3f7c49ba ),
	VERT( 0x410c22ce, 0xbf9a7d34, 0x40893121 ),
	NORM( 0x3debb544, 0xbeae8bdc, 0x3f6edaaa ),
	VERT( 0x4108479c, 0xc056353b, 0x404fa504 ),
	NORM( 0x3dd84577, 0xbf2929c1, 0x3f3e3bee ),
	VERT( 0x41083d62, 0x403d6ad1, 0x407c2191 ),
	NORM( 0x3e186ca2, 0x3f201846, 0x3f441889 ),
	VERT( 0x41012c16, 0x407e9ada, 0x402b1943 ),
	NORM( 0x3e0f2e5d, 0x3f5b8f95, 0x3efd5bf9 ),
	VERT( 0x4107642f, 0xc0954099, 0x3fb01dae ),
	NORM( 0x3db70d6b, 0xbf70ca29, 0x3ea7b915 ),
	VERT( 0x40f533c9, 0x40962301, 0x3f9ec590 ),
	NORM( 0x3df27b4a, 0x3f796877, 0x3e447c29 ),
	VERT( 0x40f04f5a, 0x40961f9a, 0xbe1c433b ),
	NORM( 0x3dbb487e, 0x3f7c7250, 0xbe0de97d ),
	VERT( 0x41007222, 0xc09b531c, 0xbf16b73c ),
	NORM( 0x3ded3ac8, 0xbf7d8105, 0xbd9e77f1 ),
	VERT( 0x4138aa57, 0xbf618cc9, 0x40821d24 ),
	NORM( 0x3d9a5d79, 0xbe907e72, 0x3f74d5b3 ),
	VERT( 0x413ad497, 0x3f83c6b5, 0x40887e73 ),
	NORM( 0x3e007daf, 0x3e3a8358, 0x3f79a8df ),
	VERT( 0x413694ff, 0x402485a1, 0x40641dc8 ),
	NORM( 0x3e3f5ddc, 0x3f27e92d, 0x3f3b398f ),
	VERT( 0x4139d57e, 0xc0268374, 0x404e7362 ),
	NORM( 0x3db9b509, 0xbf1bf0a3, 0x3f49b147 ),
	VERT( 0x40e4d483, 0x408995c9, 0xbfdee498 ),
	NORM( 0x3d80e38f, 0x3f6453b0, 0xbee549bb ),
	VERT( 0x40f414c0, 0xc08cdd5a, 0xc01ff9aa ),
	NORM( 0x3e0098c1, 0xbf5d2d24, 0xbef9aadc ),
	VERT( 0x41332493, 0x405e5129, 0x40113034 ),
	NORM( 0x3e6373a5, 0x3f5e8fe2, 0x3ee1ff6a ),
	VERT( 0x4138d97f, 0xc07a59ff, 0x3fdbafe8 ),
	NORM( 0x3e1eaf2b, 0xbf636fd8, 0x3edd3886 ),
	VERT( 0x40db4fbc, 0x403c443e, 0xc05ea1ce ),
	NORM( 0x3d614e21, 0x3f31c6f3, 0xbf37aa5a ),
	VERT( 0x40e7b19f, 0xc03c1cf7, 0xc0847d19 ),
	NORM( 0x3dd49c1d, 0xbefd3067, 0xbf5cea4c ),
	VERT( 0x40d7154b, 0x3fdf5385, 0xc08cee67 ),
	NORM( 0x3ccbc31d, 0x3f000cf0, 0xbf5d94f5 ),
	VERT( 0x40dd529c, 0xbfaf76de, 0xc0928c6f ),
	NORM( 0x3d89fab1, 0xbe723f5a, 0xbf782277 ),
	VERT( 0x4133251c, 0x407757b4, 0x3fa10e4d ),
	NORM( 0x3e6ad1e6, 0x3f724747, 0x3e68ecd8 ),
	VERT( 0x40d7f8df, 0x3ea76cbe, 0xc09dd413 ),
	NORM( 0x3d131ce0, 0x3da95632, 0xbf7ef52b ),
	VERT( 0x413585bb, 0xc08ade49, 0xbe0399db ),
	NORM( 0x3e309fee, 0xbf7c283e, 0xbbdcb04b ),
	VERT( 0x4131cd14, 0x40808795, 0x3db0c55d ),
	NORM( 0x3e5e7f77, 0x3f792086, 0xbd9b7608 ),
	VERT( 0x4131ee78, 0xc080b0c5, 0xbff672e3 ),
	NORM( 0x3e271c6e, 0xbf64c652, 0xbed608fa ),
	VERT( 0x413091a0, 0x406933e5, 0xbfa2d5f8 ),
	NORM( 0x3e538801, 0x3f60fcbf, 0xbedc2ecd ),
	VERT( 0x4131a8f4, 0x402c070f, 0xc023005b ),
	NORM( 0x3e1fffc4, 0x3f4d021a, 0xbf140327 ),
	VERT( 0x4130ace0, 0xc036c4b5, 0xc0535105 ),
	NORM( 0x3e193358, 0xbf15f8fc, 0xbf4be7bb ),
	VERT( 0x412e5e4c, 0xbf902f4a, 0xc082bdd3 ),
	NORM( 0x3dfcf016, 0xbea3508c, 0xbf708f00 ),
	VERT( 0x417c221d, 0xc0595cf2, 0x3fe6ff01 ),
	NORM( 0x3e384254, 0xbf6e1497, 0x3ea41828 ),
	VERT( 0x4130337a, 0x3ff052f7, 0xc06ff2fb ),
	NORM( 0x3df50ffa, 0x3f237a76, 0xbf429bc4 ),
	VERT( 0x412e61f8, 0x3e947144, 0xc08e8434 ),
	NORM( 0x3e0652d1, 0x3da178c4, 0xbf7cfbec ),
	VERT( 0x4179265e, 0x403026be, 0x3f6f6e26 ),
	NORM( 0x3e778840, 0x3f71e0ac, 0x3e625589 ),
	VERT( 0x4177fd5e, 0xc068914a, 0x3c2314bc ),
	NORM( 0x3e7c4f7d, 0xbf77bb4c, 0xbd5a5a62 ),
	VERT( 0x4177904d, 0x403746f8, 0xbd9a2409 ),
	NORM( 0x3e619df8, 0x3f797b0a, 0xbd2acf0c ),
	VERT( 0x41751c24, 0xc05320f4, 0xbfce4a8c ),
	NORM( 0x3e84805c, 0xbf631151, 0xbec3d3e4 ),
	VERT( 0x41799551, 0x402c35b3, 0xbf720d35 ),
	NORM( 0x3e39741a, 0x3f70874a, 0xbe94c2dd ),
	VERT( 0x41770372, 0x400e60e9, 0xc004725f ),
	NORM( 0x3e148f28, 0x3f5ffa1c, 0xbeec9109 ),
	VERT( 0x4174065b, 0xc019491e, 0xc03f1c93 ),
	NORM( 0x3e57cde9, 0xbf22d5c5, 0xbf3e06c1 ),
	VERT( 0x41771d91, 0xbf8258f9, 0xc067db32 ),
	NORM( 0x3e255871, 0xbe99bb21, 0xbf70a9e7 ),
	VERT( 0x417735ed, 0x3dd985a5, 0xc07156d4 ),
	NORM( 0x3e283b7f, 0x3dfb5fa3, 0xbf7a8f19 ),
	CnkV_VN_NF(FV_CONT|FW_START, 491),
	OffnbIdx(4980, 70),
	VERT( 0x417d5a61, 0xbf6df6c7, 0x40800863 ),
	NORM( 0x3dd35a14, 0xbe3b8cc6, 0x3f7a4771 ),
	NFlagsW( 0, 85.177673 ),
	VERT( 0x417de5ac, 0x3f5615d4, 0x4075f56e ),
	NORM( 0x3e49dd41, 0x3ecac50e, 0x3f659654 ),
	NFlagsW( 1, 78.157516 ),
	VERT( 0x417cad7c, 0xc01baf2f, 0x4054c65e ),
	NORM( 0x3dc925f0, 0xbf28cfd0, 0x3f3ecdfa ),
	NFlagsW( 2, 98.157059 ),
	VERT( 0x4179e90a, 0x3feb1d3a, 0x403fb87f ),
	NORM( 0x3e7b50ab, 0x3f45df54, 0x3f15c88e ),
	NFlagsW( 3, 92.329727 ),
	VERT( 0x4179ba02, 0x401735dd, 0x3ff5fae4 ),
	NORM( 0x3e7a1deb, 0x3f635528, 0x3ec7757e ),
	NFlagsW( 4, 99.195732 ),
	VERT( 0x418df440, 0x3f174a5b, 0x40585c0a ),
	NORM( 0x3e7c5d19, 0x3f03ca2b, 0x3f523504 ),
	NFlagsW( 5, 36.765945 ),
	VERT( 0x4192e2d1, 0xbf5058cb, 0x406672f3 ),
	NORM( 0x3e062a95, 0xbe2e6033, 0x3f7a0565 ),
	NFlagsW( 6, 31.676567 ),
	VERT( 0x418c22e9, 0x3fc07a9e, 0x4024e67e ),
	NORM( 0x3e9f803f, 0x3f42b93d, 0x3f11cda3 ),
	NFlagsW( 7, 35.369164 ),
	VERT( 0x41930975, 0xc00a3a37, 0x40427d6d ),
	NORM( 0x3e375d14, 0xbf2bbc82, 0x3f383b41 ),
	NFlagsW( 8, 36.007420 ),
	VERT( 0x418dd352, 0xc03b15c4, 0x3fd34397 ),
	NORM( 0x3e78bb8f, 0xbf73656a, 0x3e4514be ),
	NFlagsW( 9, 54.214626 ),
	VERT( 0x41997822, 0xbeca3176, 0x40676f25 ),
	NORM( 0xbc315e80, 0x3d7e1352, 0x3f7f7df4 ),
	NFlagsW( 10, 22.023239 ),
	VERT( 0x418b52c5, 0x4003c8c4, 0x3fca5c02 ),
	NORM( 0x3e852054, 0x3f61dfa9, 0x3ec8dccc ),
	NFlagsW( 11, 34.251545 ),
	VERT( 0x419752dd, 0x3f436f06, 0x4037018a ),
	NORM( 0x3dc1e0ee, 0x3f36fae5, 0x3f3163ab ),
	NFlagsW( 12, 24.664076 ),
	VERT( 0x419d5313, 0xbea9ea93, 0x406be347 ),
	NORM( 0xbe8d62e8, 0x3d543262, 0x3f75b021 ),
	NFlagsW( 13, 17.748055 ),
	VERT( 0x419943c2, 0xc01a62f8, 0x402c250d ),
	NORM( 0xbd5b988a, 0xbf5d145e, 0x3f005756 ),
	NFlagsW( 14, 25.110579 ),
	VERT( 0x418b2bdc, 0x4017711b, 0x3f3bc063 ),
	NORM( 0x3e6ae1e8, 0x3f7242ba, 0x3e692878 ),
	NFlagsW( 15, 36.100208 ),
	VERT( 0x4199eb16, 0x3f59a369, 0x40320f5b ),
	NORM( 0xbe62c6e0, 0x3f32332e, 0x3f2ed53b ),
	NFlagsW( 16, 24.129858 ),
	VERT( 0x419c5ada, 0xc019abca, 0x402e5d56 ),
	NORM( 0xbce4d02e, 0xbf528945, 0x3f11766d ),
	NFlagsW( 17, 20.852524 ),
	VERT( 0x419500bf, 0x3fb2c180, 0x3ffbbbfd ),
	NORM( 0x3e4eff6a, 0x3f524fb4, 0x3f087b36 ),
	NFlagsW( 18, 25.022844 ),
	VERT( 0x418bfac6, 0xc0399303, 0x3b6cd920 ),
	NORM( 0x3ebe9e14, 0xbf699d68, 0xbe2d443a ),
	NFlagsW( 19, 93.570587 ),
	VERT( 0x419f70df, 0xc018f5fc, 0x40309d39 ),
	NORM( 0xbe66b361, 0xbf5058c2, 0x3f091e16 ),
	NFlagsW( 20, 16.668003 ),
	VERT( 0x4193c8af, 0x3fe628c0, 0x3fae07b0 ),
	NORM( 0x3e524278, 0x3f6083da, 0x3ede6782 ),
	NFlagsW( 21, 25.016338 ),
	VERT( 0x4197873f, 0x3fb624a0, 0x3fee9e0b ),
	NORM( 0xbdc70c73, 0x3f516eae, 0x3f111a7e ),
	NFlagsW( 22, 24.986202 ),
	VERT( 0x4198f7cb, 0xc021417c, 0x3fc3f084 ),
	NORM( 0x3e2e10bb, 0xbf7c35c3, 0xbcb63e43 ),
	NFlagsW( 23, 25.989574 ),
	VERT( 0x418a8b4f, 0x401fc5b3, 0xbe75f680 ),
	NORM( 0x3e486b09, 0x3f7ac955, 0xbd379aa3 ),
	NFlagsW( 24, 40.563690 ),
	VERT( 0x419675e4, 0x3fe2b636, 0x3faab10a ),
	NORM( 0xbdc16e71, 0x3f5d45ef, 0x3efce650 ),
	NFlagsW( 25, 24.999493 ),
	VERT( 0x419bc6ea, 0xc01f5af0, 0x3fbea80a ),
	NORM( 0x3d823605, 0xbf7dc678, 0xbdebdaf7 ),
	NFlagsW( 26, 24.234537 ),
	VERT( 0x418b1611, 0xc0246fa8, 0xbf9dd6c9 ),
	NORM( 0x3ecd2f15, 0xbf58d644, 0xbeb2cd83 ),
	NFlagsW( 27, 93.213402 ),
	VERT( 0x41783eb9, 0x3fc1b124, 0xc04b24a2 ),
	NORM( 0x3e2adfea, 0x3f21f8b4, 0xbf41968c ),
	NFlagsW( 28, 99.967278 ),
	VERT( 0x419276e5, 0x400d304c, 0x3edd097d ),
	NORM( 0x3e2405e7, 0x3f75f56f, 0x3e67d24b ),
	NFlagsW( 29, 25.088659 ),
	VERT( 0x41978aa2, 0xc00e8093, 0x3ed26e9d ),
	NORM( 0x3e9fbbb7, 0xbf6b4f2c, 0xbe76265d ),
	NFlagsW( 30, 25.457224 ),
	VERT( 0x419e95f2, 0xc01d7317, 0x3fb95eed ),
	NORM( 0xbd1adb15, 0xbf7cc948, 0xbe1d0b48 ),
	NFlagsW( 31, 22.764650 ),
	VERT( 0x418b2f4c, 0x40116783, 0xbf90573d ),
	NORM( 0x3dc3780b, 0x3f744ff7, 0xbe90eb8d ),
	NFlagsW( 32, 34.682873 ),
	VERT( 0x4194f25f, 0x400cd966, 0x3ebf27a9 ),
	NORM( 0xbdf4c9c4, 0x3f74c09b, 0x3e890e06 ),
	NFlagsW( 33, 25.000330 ),
	VERT( 0x419a55b5, 0xc00a8d9a, 0x3ecec006 ),
	NORM( 0x3e210497, 0xbf7550fa, 0xbe747959 ),
	NFlagsW( 34, 25.014702 ),
	VERT( 0x41915179, 0x4013986e, 0xbf1b1e40 ),
	NORM( 0x3d88ae40, 0x3f7f47dd, 0xbd0b5791 ),
	NFlagsW( 35, 25.288376 ),
	VERT( 0x418a0aa9, 0xbff214d8, 0xc0272548 ),
	NORM( 0x3ea80472, 0xbf338cab, 0xbf21fd42 ),
	NFlagsW( 36, 76.676521 ),
	VERT( 0x4193ae28, 0x4013aa8d, 0xbf2448aa ),
	NORM( 0xbe174396, 0x3f7cfa95, 0x3d260147 ),
	NFlagsW( 37, 25.028219 ),
	VERT( 0x419652cd, 0xc00453a3, 0xbf3db228 ),
	NORM( 0x3ea34bab, 0xbf6710b6, 0xbe940888 ),
	NFlagsW( 38, 25.872999 ),
	VERT( 0x418c5d45, 0x3fe53dce, 0xc00cf698 ),
	NORM( 0xbd8b0406, 0x3f519d3f, 0xbf11ee61 ),
	NFlagsW( 39, 33.687855 ),
	VERT( 0x4191201c, 0x400dd6c2, 0xbfb8ddbf ),
	NORM( 0xbdeadbe2, 0x3f76e983, 0xbe73972f ),
	NFlagsW( 40, 25.761314 ),
	VERT( 0x41991219, 0xbffcba5b, 0xbf42aab5 ),
	NORM( 0x3e6a05f6, 0xbf6ca86d, 0xbe9c4874 ),
	NFlagsW( 41, 25.059881 ),
	VERT( 0x41950676, 0xbfdd2b9f, 0xbfc6b0cc ),
	NORM( 0x3ea3592b, 0xbf56d168, 0xbee18d9b ),
	NFlagsW( 42, 26.350519 ),
	VERT( 0x4193376f, 0x4010951c, 0xbfbbdd08 ),
	NORM( 0xbe7c098a, 0x3f72e26f, 0xbe4ae570 ),
	NFlagsW( 43, 25.239559 ),
	VERT( 0x418c8e97, 0x3f82ae1f, 0xc03d2549 ),
	NORM( 0x3dd8160d, 0x3f02cf95, 0xbf5a6447 ),
	NFlagsW( 44, 37.348843 ),
	VERT( 0x4197b141, 0xbfd20cd3, 0xbfca4f33 ),
	NORM( 0x3e45e1b9, 0xbf6129e7, 0xbede9ee2 ),
	NFlagsW( 45, 25.201523 ),
	VERT( 0x418feaed, 0x3fe8cbf7, 0xc01c654a ),
	NORM( 0xbe98d50d, 0x3f3776a8, 0xbf215cb1 ),
	NFlagsW( 46, 28.522051 ),
	VERT( 0x418cbdd9, 0xbf441051, 0xc0517657 ),
	NORM( 0x3e1a398d, 0xbe8c7a92, 0xbf732335 ),
	NFlagsW( 47, 47.970264 ),
	VERT( 0x41939bee, 0xbfa9ae1a, 0xc018271e ),
	NORM( 0x3ea5172f, 0xbf4f37c7, 0xbefb42d0 ),
	NFlagsW( 48, 28.617281 ),
	VERT( 0x418ce667, 0x3d76090d, 0xc0528153 ),
	NORM( 0x3e0bbaf2, 0x3e0acab1, 0xbf7b3877 ),
	NFlagsW( 49, 41.307766 ),
	VERT( 0x4191d638, 0x3feee5f1, 0xc01e8ca0 ),
	NORM( 0xbe6da3b3, 0x3f41a3f1, 0xbf1c8e66 ),
	NFlagsW( 50, 26.816454 ),
	VERT( 0x419038b4, 0x3f919972, 0xc03906b5 ),
	NORM( 0xbdfe7569, 0x3ef7394f, 0xbf5de928 ),
	NFlagsW( 51, 29.662174 ),
	VERT( 0x419a5d38, 0xbfc6ec92, 0xbfcdfaf7 ),
	NORM( 0x3d2d95d5, 0xbf69bd4a, 0xbecfb19b ),
	NFlagsW( 52, 24.978230 ),
	VERT( 0x41984d1b, 0x401e91a7, 0xbfca2239 ),
	NORM( 0xbeb39c97, 0x3f6bed14, 0xbe2a2a99 ),
	NFlagsW( 53, 24.360149 ),
	VERT( 0x41964438, 0xbf9ed1f6, 0xc0191879 ),
	NORM( 0x3e4825f1, 0xbf5af202, 0xbef5b9ab ),
	NFlagsW( 54, 26.031736 ),
	VERT( 0x4193c169, 0x3ff500b7, 0xc020b4e4 ),
	NORM( 0xbe84f0ba, 0x3f400e51, 0xbf1baac5 ),
	NFlagsW( 55, 25.684183 ),
	VERT( 0x41921ce1, 0x3f98a663, 0xc03a0ffd ),
	NORM( 0xbe260531, 0x3ede3321, 0xbf62decf ),
	NFlagsW( 56, 27.482214 ),
	VERT( 0x41923a3e, 0xbf5e0595, 0xc04b1c95 ),
	NORM( 0x3df81667, 0xbef8c050, 0xbf5d98b8 ),
	NFlagsW( 57, 32.747658 ),
	VERT( 0x41910d55, 0x3e3857c6, 0xc050405c ),
	NORM( 0xbd090c0e, 0x3e0bcfa1, 0xbf7d753e ),
	NFlagsW( 58, 31.457020 ),
	VERT( 0x4198ec96, 0xbf93f725, 0xc01a08ca ),
	NORM( 0x3cead122, 0xbf636902, 0xbeeaa9e7 ),
	NFlagsW( 59, 25.052565 ),
	VERT( 0x41940117, 0x3f9fb01c, 0xc03b1955 ),
	NORM( 0xbe53e440, 0x3edb7929, 0xbf6123ae ),
	NFlagsW( 60, 26.052826 ),
	VERT( 0x41934b2a, 0x3e7b888b, 0xc051a8ec ),
	NORM( 0xbddcfea4, 0x3e08ffaa, 0xbf7c30ad ),
	NFlagsW( 61, 28.136305 ),
	VERT( 0x419512ae, 0xbf4d2669, 0xc04d6998 ),
	NORM( 0x3d1a26df, 0xbf08b0e1, 0xbf583cdf ),
	NFlagsW( 62, 27.980587 ),
	VERT( 0x4195887b, 0x3e9f51c9, 0xc0530d63 ),
	NORM( 0xbe1d054c, 0x3de021ab, 0xbf7b6a8e ),
	NFlagsW( 63, 25.928175 ),
	VERT( 0x4198a830, 0x40028967, 0xc029f01d ),
	NORM( 0xbee6e4ad, 0x3f2e18d9, 0xbf13fb11 ),
	NFlagsW( 64, 22.983595 ),
	VERT( 0x4197d7d1, 0xbf3c39fd, 0xc04f0e54 ),
	NORM( 0x3b5698f3, 0xbf0505f5, 0xbf5ab94c ),
	NFlagsW( 65, 25.116741 ),
	VERT( 0x4198ede3, 0x3fae602c, 0xc04288ba ),
	NORM( 0xbee00c9c, 0x3eb7daa8, 0xbf53090b ),
	NFlagsW( 66, 23.110077 ),
	VERT( 0x419dee44, 0xbf947df0, 0xc026a1d3 ),
	NORM( 0xbe5646ba, 0xbf5f4bb5, 0xbee25256 ),
	NFlagsW( 67, 23.032598 ),
	VERT( 0x419a5168, 0x3ef23796, 0xc05ae02c ),
	NORM( 0xbed228b7, 0x3cdb1d02, 0xbf6956f8 ),
	NFlagsW( 68, 22.042606 ),
	VERT( 0x419cdbe7, 0xbf280128, 0xc05110fe ),
	NORM( 0xbe9bfb68, 0xbf0d7874, 0xbf469804 ),
	NFlagsW( 69, 21.176207 ),
	CnkV_VN_NF(FV_CONT|FW_END, 932),
	OffnbIdx(0, 133),
	VERT( 0xbe36de48, 0x3f7f80ab, 0x40d0964a ),
	NORM( 0x3f405052, 0x3de17719, 0x3f269ad2 ),
	NFlagsW( 4846, 0.020805 ),
	VERT( 0xbfad6e41, 0xc088922f, 0x406ea928 ),
	NORM( 0x3eefbdb6, 0xbf53ad9f, 0x3e9f7dd0 ),
	NFlagsW( 4847, 0.410015 ),
	VERT( 0xbee208b1, 0xc03791c6, 0x40a15de0 ),
	NORM( 0x3f2ee37e, 0xbf12f24e, 0x3ee7246d ),
	NFlagsW( 4848, 2.415171 ),
	VERT( 0x3e5aa7ec, 0xbf57f8ab, 0x40b7ada9 ),
	NORM( 0x3f3dcc89, 0xbe8e8d71, 0x3f1c4ebf ),
	NFlagsW( 4849, 6.394460 ),
	VERT( 0xbffdc3e6, 0x4092924f, 0x4053c969 ),
	NORM( 0x3dc44fe2, 0x3f7dfa84, 0x3da5a477 ),
	NFlagsW( 4850, 0.017718 ),
	VERT( 0xc0b20fd4, 0xbddf2e1d, 0xbfeb742b ),
	NORM( 0xbf093934, 0x3e44df27, 0xbf526fa2 ),
	NFlagsW( 4851, 0.032326 ),
	VERT( 0x3ed1825d, 0x3f7a4667, 0x40ba2b97 ),
	NORM( 0x3f431564, 0x3dc88e7c, 0x3f23dc0a ),
	NFlagsW( 4852, 6.265347 ),
	VERT( 0xc02f7e01, 0x4090bd20, 0x4006f5c2 ),
	NORM( 0xbdcaadd7, 0x3f77c0d6, 0xbe6d1058 ),
	NFlagsW( 4853, 0.059883 ),
	VERT( 0xc06618cd, 0x4071d45f, 0x3f55fd18 ),
	NORM( 0xbe757842, 0x3f5d2799, 0xbee2cf3a ),
	NFlagsW( 4854, 0.259066 ),
	VERT( 0xc0910525, 0x40271d3c, 0xbf0beda2 ),
	NORM( 0xbeafd929, 0x3f3fbb5d, 0xbf1110f8 ),
	NFlagsW( 4855, 0.213510 ),
	VERT( 0xc0a1d674, 0x3fc0d655, 0xbfb3a9f2 ),
	NORM( 0xbeecd7c5, 0x3f07e407, 0xbf35c92a ),
	NFlagsW( 4856, 0.121349 ),
	VERT( 0x3dea11d6, 0x4032b811, 0x40a92bd3 ),
	NORM( 0x3f1dc618, 0x3f098324, 0x3f136c88 ),
	NFlagsW( 4857, 3.315852 ),
	VERT( 0x3e1cd243, 0xc0390eba, 0x40837d73 ),
	NORM( 0x3f0b0f07, 0xbf1de349, 0x3f11d7be ),
	NFlagsW( 4858, 23.041294 ),
	VERT( 0xbf184ce5, 0x40864b84, 0x407893d5 ),
	NORM( 0x3e9eed53, 0x3f5f0c94, 0x3ec2a266 ),
	NFlagsW( 4859, 2.484441 ),
	VERT( 0xbf14bd45, 0xc0857ad6, 0x403a9431 ),
	NORM( 0x3eb071b1, 0xbf579180, 0x3ed471bd ),
	NFlagsW( 4860, 12.652519 ),
	VERT( 0x3f4fd394, 0xbf5d46d6, 0x40a07c38 ),
	NORM( 0x3f097d27, 0xbea6639f, 0x3f474704 ),
	NFlagsW( 4861, 29.205259 ),
	VERT( 0x3f66238c, 0x3f75f040, 0x40a77d80 ),
	NORM( 0x3f0ae882, 0x3dc0c2ed, 0x3f55ae90 ),
	NFlagsW( 4862, 24.602531 ),
	VERT( 0xc097f9b3, 0xbfe2eebe, 0xc0165ab4 ),
	NORM( 0xbefc8186, 0xbe42a369, 0xbf595232 ),
	NFlagsW( 4863, 0.059938 ),
	VERT( 0xbfb90923, 0xc09e9844, 0x3fae16af ),
	NORM( 0x3de57042, 0xbf7ca109, 0x3deeef29 ),
	NFlagsW( 4864, 3.328423 ),
	VERT( 0x3eeba605, 0xc037f750, 0x407c0584 ),
	NORM( 0x3eb1f68f, 0xbf1df196, 0x3f34c112 ),
	NFlagsW( 4865, 30.252010 ),
	VERT( 0x3f17e97a, 0x4037ccf1, 0x4095ff05 ),
	NORM( 0x3ee0a06d, 0x3f13dc46, 0x3f303c57 ),
	NFlagsW( 4866, 16.810871 ),
	VERT( 0xbe888915, 0xc086412e, 0x402f2608 ),
	NORM( 0x3e6190a3, 0xbf566e37, 0x3effef23 ),
	NFlagsW( 4867, 18.686428 ),
	VERT( 0xc02ce395, 0xc09b401a, 0xbedb9a6e ),
	NORM( 0xbe3bf4a9, 0xbf72c189, 0xbe84a0d8 ),
	NFlagsW( 4868, 0.195255 ),
	VERT( 0xbf8c1625, 0x40910f87, 0x40297940 ),
	NORM( 0x3dbc0f09, 0x3f7ec224, 0x3d1082e4 ),
	NFlagsW( 4869, 4.475027 ),
	VERT( 0x3f978ad0, 0xbf6387d7, 0x409c2499 ),
	NORM( 0x3e21366d, 0xbeb15ce2, 0x3f6cbe37 ),
	NFlagsW( 4870, 35.991348 ),
	VERT( 0xc0939538, 0xbe07d92f, 0xc019a540 ),
	NORM( 0xbefd7cec, 0x3e396c2b, 0xbf5989f0 ),
	NFlagsW( 4871, 0.306930 ),
	VERT( 0x3fa06986, 0x3f7636a1, 0x40a46f18 ),
	NORM( 0x3dd73b6f, 0x3d9d9257, 0x3f7dd1be ),
	NFlagsW( 4872, 31.120661 ),
	VERT( 0xc0851df5, 0x3fbb1106, 0xbffe735f ),
	NORM( 0xbee16b8d, 0x3f05c887, 0xbf3ae85c ),
	NFlagsW( 4873, 1.041857 ),
	VERT( 0x3f75a799, 0x4036e69b, 0x4092d536 ),
	NORM( 0x3deab7e8, 0x3f0887c0, 0x3f568e93 ),
	NFlagsW( 4874, 23.977306 ),
	VERT( 0x3d43250e, 0xc087072a, 0x4023b82a ),
	NORM( 0x3e42ed0b, 0xbf573344, 0x3f01ced1 ),
	NFlagsW( 4875, 24.965061 ),
	VERT( 0xc02455f4, 0x4066e56b, 0x3d813211 ),
	NORM( 0xbe58aef2, 0x3f5c2864, 0xbeedc1bb ),
	NFlagsW( 4876, 8.284569 ),
	VERT( 0x3f72cbb2, 0xc0359fd7, 0x4071e447 ),
	NORM( 0x3e679d19, 0xbf1d6f04, 0x3f41629e ),
	NFlagsW( 4877, 38.612701 ),
	VERT( 0xbfd6a993, 0x408a6d3d, 0x3f9d9756 ),
	NORM( 0xbda88eb0, 0x3f7363e2, 0xbe990377 ),
	NFlagsW( 4878, 9.230601 ),
	VERT( 0xbf6ee2fe, 0xc09f00da, 0x3f8e6639 ),
	NORM( 0x3d76cc5c, 0xbf7b7d99, 0x3e352182 ),
	NFlagsW( 4879, 9.661378 ),
	VERT( 0xc05caabe, 0x40244b31, 0xbf9cabd9 ),
	NORM( 0xbea34392, 0x3f42da72, 0xbf109566 ),
	NFlagsW( 4880, 3.789025 ),
	VERT( 0xc0672a97, 0xc061816a, 0xc00a7fc0 ),
	NORM( 0xbed04051, 0xbf21986e, 0xbf290efc ),
	NFlagsW( 4881, 0.132284 ),
	VERT( 0x3cc492e3, 0x40870590, 0x405249d0 ),
	NORM( 0x3e1c76ef, 0x3f67165d, 0x3ecdf4f8 ),
	NFlagsW( 4882, 14.333860 ),
	VERT( 0x3fee9eb8, 0xbf72eeaf, 0x409b8bf4 ),
	NORM( 0xbc8a82be, 0xbeb89b19, 0x3f6ebdca ),
	NFlagsW( 4883, 43.458469 ),
	VERT( 0x3ff74625, 0x3f793d1f, 0x40a53d54 ),
	NORM( 0xbd132d3d, 0x3d8911bf, 0x3f7f42a5 ),
	NFlagsW( 4884, 39.692108 ),
	VERT( 0xc00670ff, 0xc09bbac4, 0xbf587b33 ),
	NORM( 0xbe49aa38, 0xbf7243a5, 0xbe832ed0 ),
	NFlagsW( 4885, 1.590888 ),
	VERT( 0x3ef8c1cb, 0xc0879674, 0x401908d4 ),
	NORM( 0x3e0714c4, 0xbf55cbe5, 0x3f08b2f6 ),
	NFlagsW( 4886, 33.154099 ),
	VERT( 0x3ebd662d, 0x4088c5a5, 0x404c2741 ),
	NORM( 0x3b424732, 0x3f64313b, 0x3ee810fc ),
	NFlagsW( 4887, 19.620409 ),
	VERT( 0xc07585eb, 0xbfe4015d, 0xc037fd9d ),
	NORM( 0xbf057aa5, 0xbe3ee5cf, 0xbf552bb1 ),
	NFlagsW( 4888, 0.589174 ),
	VERT( 0x3fd10542, 0x4038e4d1, 0x40920139 ),
	NORM( 0x3a5f89b9, 0x3f055a18, 0x3f5a866e ),
	NFlagsW( 4889, 34.960278 ),
	VERT( 0xbec4f8da, 0x408fdba5, 0x4002307e ),
	NORM( 0x3c82d5c3, 0x3f7fd0bd, 0xbd0d16d3 ),
	NFlagsW( 4890, 19.545036 ),
	VERT( 0xbed76316, 0xc09f695a, 0x3f5d697c ),
	NORM( 0x3cdd8929, 0xbf7bdb36, 0x3e35649c ),
	NFlagsW( 4891, 18.988300 ),
	VERT( 0x3fe09766, 0xc03486a9, 0x40670f92 ),
	NORM( 0x3d1a066f, 0xbf2398e5, 0x3f44aba3 ),
	NFlagsW( 4892, 48.855328 ),
	VERT( 0xc06a34ed, 0xbe20189a, 0xc03d8feb ),
	NORM( 0xbf018d2d, 0x3e33f7f9, 0xbf582abc ),
	NFlagsW( 4893, 2.141755 ),
	VERT( 0xc040e811, 0xc0623359, 0xc0220911 ),
	NORM( 0xbed5d5e8, 0xbf21c452, 0xbf272410 ),
	NFlagsW( 4894, 0.733601 ),
	VERT( 0x403776fd, 0x3f7d6758, 0x40a6ba29 ),
	NORM( 0xbd3e376d, 0x3d92d6bd, 0x3f7f1073 ),
	NFlagsW( 4895, 57.133038 ),
	VERT( 0x3bd3edb2, 0x408fe98c, 0x3ffce1f3 ),
	NORM( 0xbd3a13dc, 0x3f7fbb5f, 0xbbb19f85 ),
	NFlagsW( 4896, 26.018024 ),
	VERT( 0x3f7f189f, 0x40885757, 0x404ca25c ),
	NORM( 0x3c26b366, 0x3f5ff1b6, 0x3ef80491 ),
	NFlagsW( 4897, 30.495272 ),
	VERT( 0x40330180, 0xbf83c513, 0x409b3f30 ),
	NORM( 0xbcf3a51e, 0xbebac6b1, 0x3f6e3c95 ),
	NFlagsW( 4898, 57.542038 ),
	VERT( 0xc050c991, 0x3fb54daf, 0xc024a050 ),
	NORM( 0xbed52f26, 0x3f02a45c, 0xbf40a199 ),
	NFlagsW( 4899, 5.612429 ),
	VERT( 0xbfbffee5, 0xc09c3619, 0xbfa1913f ),
	NORM( 0xbe2283f7, 0xbf71384b, 0xbe96f940 ),
	NFlagsW( 4900, 6.366909 ),
	VERT( 0x3d9f1392, 0xc0a0b663, 0x3f2a5238 ),
	NORM( 0xbce5d629, 0xbf7b39b3, 0x3e42bd2e ),
	NFlagsW( 4901, 28.800455 ),
	VERT( 0xbf4a2d1e, 0x40852b28, 0x3f00017d ),
	NORM( 0xbde53b56, 0x3f7041b6, 0xbea73b78 ),
	NFlagsW( 4902, 31.239513 ),
	VERT( 0xc04df69f, 0xbfeb73f3, 0xc0526e02 ),
	NORM( 0xbf0d9b56, 0xbe44302e, 0xbf4f8d5d ),
	NFlagsW( 4903, 1.894861 ),
	VERT( 0x4023ab96, 0x403b9dc5, 0x409122c5 ),
	NORM( 0xbb9e5ace, 0x3f0a81ff, 0x3f574a69 ),
	NFlagsW( 4904, 55.414398 ),
	VERT( 0xbfc527f0, 0x405bf5a7, 0xbf35aace ),
	NORM( 0xbe51f9fc, 0x3f5d39e7, 0xbeeb480b ),
	NFlagsW( 4905, 31.922037 ),
	VERT( 0xc01748ac, 0x40217b01, 0xbff36531 ),
	NORM( 0xbe82b24a, 0x3f42f58c, 0xbf18803c ),
	NFlagsW( 4906, 20.054344 ),
	VERT( 0x3fbeb553, 0xc0891736, 0x400971fc ),
	NORM( 0x3d608b45, 0xbf5352d3, 0x3f0fcf71 ),
	NFlagsW( 4907, 51.007347 ),
	VERT( 0xc0473167, 0xbe51e97c, 0xc0536130 ),
	NORM( 0xbf01afd7, 0x3e3ab691, 0xbf57ba4e ),
	NFlagsW( 4908, 5.251531 ),
	VERT( 0x3f1b8734, 0x4091843d, 0x3ff6a2c4 ),
	NORM( 0xbd8f1eb4, 0x3f7f3a9e, 0x3d09bc14 ),
	NFlagsW( 4909, 35.502258 ),
	VERT( 0xc01aa648, 0xc062e61e, 0xc0399265 ),
	NORM( 0xbeaddf7b, 0xbf256a01, 0xbf2ef997 ),
	NFlagsW( 4910, 2.848627 ),
	VERT( 0x402a729d, 0xc03ea59f, 0x40664b78 ),
	NORM( 0xbdb0b479, 0xbf29e17f, 0x3f3e3ba9 ),
	NFlagsW( 4911, 61.872162 ),
	VERT( 0xc0308a1d, 0x3fb52206, 0xc033fa32 ),
	NORM( 0xbebd79ed, 0x3f053548, 0xbf4504bc ),
	NFlagsW( 4912, 12.085091 ),
	VERT( 0xbed2fd17, 0x40853a2d, 0x3eb9a04f ),
	NORM( 0xbe1835ae, 0x3f70a8db, 0xbe9d1c65 ),
	NFlagsW( 4913, 37.002079 ),
	VERT( 0xbf85f2dc, 0xc09b79f5, 0xbfbdcf63 ),
	NORM( 0xbddae150, 0xbf6e9f4b, 0xbeb12a36 ),
	NFlagsW( 4914, 13.891562 ),
	VERT( 0x3febc496, 0x4088b65f, 0x404957b2 ),
	NORM( 0x3c092fbd, 0x3f60ad4d, 0x3ef55eda ),
	NFlagsW( 4915, 49.511475 ),
	VERT( 0xc0266a6f, 0xbff2e657, 0xc06cdbf5 ),
	NORM( 0xbee5ee44, 0xbe4d3926, 0xbf5ee7b7 ),
	NFlagsW( 4916, 5.022486 ),
	VERT( 0x400a6962, 0xc08b8562, 0x40018d2c ),
	NORM( 0x3c5b1288, 0xbf5357fb, 0x3f106c67 ),
	NFlagsW( 4917, 63.729721 ),
	VERT( 0xbfe08e92, 0x4016ea42, 0xc00fa0d8 ),
	NORM( 0xbdac1e15, 0x3f38d32a, 0xbf2fd213 ),
	NFlagsW( 4918, 33.318581 ),
	VERT( 0xbf167feb, 0xc09bb9b6, 0xbfcc61b7 ),
	NORM( 0xbe05fd28, 0xbf6d7d03, 0xbeb30884 ),
	NFlagsW( 4919, 23.680368 ),
	VERT( 0xbf6f3f11, 0x4056d75b, 0xbf8f96e7 ),
	NORM( 0xbe3b48b5, 0x3f523397, 0xbf0a6a9b ),
	NFlagsW( 4920, 41.368694 ),
	VERT( 0xc010463c, 0x3fb4f83a, 0xc0435626 ),
	NORM( 0xbe7e1c4d, 0x3f0dfa52, 0xbf4b5422 ),
	NFlagsW( 4921, 20.980042 ),
	VERT( 0xc0242d9d, 0xbe81d9da, 0xc06931fa ),
	NORM( 0xbee893f2, 0x3e4561c9, 0xbf5ea936 ),
	NFlagsW( 4922, 10.827941 ),
	VERT( 0x3e1e6797, 0x408846ef, 0x3e9ec2bd ),
	NORM( 0xbe359b5e, 0x3f72d02a, 0xbe8668b5 ),
	NFlagsW( 4923, 42.778786 ),
	VERT( 0x3f870edf, 0xc0a4b7c0, 0x3eae2b10 ),
	NORM( 0xbd188770, 0xbf7b0ef1, 0x3e44901c ),
	NFlagsW( 4924, 51.477825 ),
	VERT( 0x3fb5f0e6, 0x40937cd3, 0x3feef173 ),
	NORM( 0xbd8b3ee9, 0x3f7e8e26, 0x3da6c8fe ),
	NFlagsW( 4925, 50.702297 ),
	VERT( 0xbfc1872b, 0x40124154, 0xc0140d86 ),
	NORM( 0xbcd42559, 0x3f34e9b1, 0xbf35011f ),
	NFlagsW( 4926, 38.071926 ),
	VERT( 0xbfd7775c, 0xc0571433, 0xc053f295 ),
	NORM( 0xbe610a82, 0xbf1c6645, 0xbf42b474 ),
	NFlagsW( 4927, 12.721734 ),
	VERT( 0x409790e7, 0x3f82e36c, 0x40a9b238 ),
	NORM( 0x3d60d2c8, 0x3dbb8d58, 0x3f7e8967 ),
	NFlagsW( 4928, 97.532303 ),
	VERT( 0x40953221, 0xbf985e13, 0x409aa5ec ),
	NORM( 0x3d17d03b, 0xbebaae09, 0x3f6e3031 ),
	NFlagsW( 4929, 95.405380 ),
	VERT( 0xbfdd097a, 0x3faa7c1d, 0xc04afe36 ),
	NORM( 0xbdb6f5b7, 0x3f1624b7, 0xbf4e1513 ),
	NFlagsW( 4930, 32.714989 ),
	VERT( 0x40357405, 0xc08df4ad, 0x3ff357df ),
	NORM( 0xbbab1903, 0xbf57805a, 0x3f0a2dc1 ),
	NFlagsW( 4931, 77.891365 ),
	VERT( 0xbf914f31, 0x400ce4c7, 0xc01b67fd ),
	NORM( 0x3ceeb05a, 0x3f325822, 0xbf3780ff ),
	NFlagsW( 4932, 43.326893 ),
	VERT( 0xbff35fa3, 0x3f0bafac, 0xc0663565 ),
	NORM( 0xbe5f97dc, 0x3ed7662d, 0xbf616a64 ),
	NFlagsW( 4933, 26.631197 ),
	VERT( 0xbff384a4, 0xbff28c5c, 0xc07d191f ),
	NORM( 0xbe6e8932, 0xbe4d6254, 0xbf739ae1 ),
	NFlagsW( 4934, 15.474161 ),
	VERT( 0x3fd40b85, 0xc0a61402, 0x3e39b529 ),
	NORM( 0xbcbdc05f, 0xbf7bde1a, 0x3e35b497 ),
	NFlagsW( 4935, 68.014709 ),
	VERT( 0xbe44a307, 0x4061819a, 0xbf9adc29 ),
	NORM( 0xbe86fc09, 0x3f50f26b, 0xbf039ce8 ),
	NFlagsW( 4936, 46.841240 ),
	VERT( 0x3f6bcc41, 0x408c6ed4, 0x3e889f91 ),
	NORM( 0xbe2e1dd9, 0x3f75afdb, 0xbe650e08 ),
	NFlagsW( 4937, 51.661171 ),
	VERT( 0x408cffc8, 0x4041115b, 0x408f64a2 ),
	NORM( 0x3d805ed4, 0x3f16cf85, 0x3f4e3d47 ),
	NFlagsW( 4938, 96.848190 ),
	VERT( 0xbff636f6, 0xbea62f5f, 0xc07d3de9 ),
	NORM( 0xbe98ea03, 0x3e317690, 0xbf704109 ),
	NFlagsW( 4939, 21.884455 ),
	VERT( 0x3ec11510, 0xc0a07b4e, 0xbfd4803c ),
	NORM( 0xbde8657d, 0xbf6f0391, 0xbeadf2a8 ),
	NFlagsW( 4940, 47.925343 ),
	VERT( 0xbf0c9b26, 0x40177f5f, 0xc00ba51b ),
	NORM( 0xbe2c04c3, 0x3f2f9b0c, 0xbf353e5f ),
	NFlagsW( 4941, 48.224564 ),
	VERT( 0xbfa5e1bf, 0x3fa27413, 0xc050da05 ),
	NORM( 0xbd041503, 0x3f123e2b, 0xbf51f459 ),
	NFlagsW( 4942, 40.522514 ),
	VERT( 0x40621d5a, 0x4089741e, 0x4042c044 ),
	NORM( 0x3d4bf828, 0x3f60cb87, 0x3ef3a504 ),
	NFlagsW( 4943, 89.848503 ),
	VERT( 0x4094fcd0, 0xc054dbd0, 0x4064a2dd ),
	NORM( 0xbcc5fd1d, 0xbf2fdcd9, 0x3f39ee20 ),
	NFlagsW( 4944, 97.966766 ),
	VERT( 0xbf75c6c2, 0xc0500002, 0xc0637130 ),
	NORM( 0xbdd6c980, 0xbf0d7d66, 0xbf53a672 ),
	NFlagsW( 4945, 31.683973 ),
	VERT( 0xbfb57a52, 0xbea3c53f, 0xc081c0f7 ),
	NORM( 0xbe33bb42, 0x3e5e3084, 0xbf75d40a ),
	NFlagsW( 4946, 34.244530 ),
	VERT( 0x401083f8, 0xc0a77065, 0x3cb8b17d ),
	NORM( 0xbd1d2b5a, 0xbf7c9f53, 0x3e21118f ),
	NFlagsW( 4947, 83.814606 ),
	VERT( 0xbf9d0e41, 0xbfddaa7e, 0xc08163ba ),
	NORM( 0xbe136521, 0xbe396dc0, 0xbf790e7e ),
	NFlagsW( 4948, 34.472363 ),
	VERT( 0x3d2403c3, 0x4041cb77, 0xbff83e8e ),
	NORM( 0xbeb92781, 0x3f3027a3, 0xbf210b16 ),
	NFlagsW( 4949, 50.517071 ),
	VERT( 0x3f0ced16, 0x406c2bd5, 0xbfa62150 ),
	NORM( 0xbe74cba0, 0x3f593ae8, 0xbef1acf8 ),
	NFlagsW( 4950, 53.008770 ),
	VERT( 0x3f821304, 0xc0a0c51d, 0xbfe18239 ),
	NORM( 0xbd9af84b, 0xbf6c1d9a, 0xbec2030d ),
	NFlagsW( 4951, 69.029495 ),
	VERT( 0x404325c6, 0x40976dff, 0x3fdf8ee1 ),
	NORM( 0xbcaa89b5, 0x3f7d5779, 0x3e11a241 ),
	NFlagsW( 4952, 85.867004 ),
	VERT( 0xbeb63d0d, 0x3f9c8b5e, 0xc052f52a ),
	NORM( 0xbe4248fd, 0x3f14aaac, 0xbf4aab78 ),
	NFlagsW( 4953, 51.491333 ),
	VERT( 0x3e6e4905, 0x40221fb9, 0xc01e0c29 ),
	NORM( 0xbec4f80d, 0x3f1af60b, 0xbf326478 ),
	NFlagsW( 4954, 53.355373 ),
	VERT( 0x4085c6a8, 0xc092d1c5, 0x3fd3cb92 ),
	NORM( 0x3c7ad13c, 0xbf64f5ca, 0x3ee4e45e ),
	NFlagsW( 4955, 98.264626 ),
	VERT( 0xbd24db82, 0xc053660f, 0xc0656b4a ),
	NORM( 0xbdc6e954, 0xbf15a9d8, 0xbf4e3353 ),
	NFlagsW( 4956, 57.838596 ),
	VERT( 0x3fd3e14a, 0xc0a10f99, 0xbfee840c ),
	NORM( 0xbdad1f3c, 0xbf6a7698, 0xbec8f1ce ),
	NFlagsW( 4957, 86.438843 ),
	VERT( 0x401d1500, 0x4094bfc4, 0x3e384011 ),
	NORM( 0xbdd6d289, 0x3f7a8a9d, 0xbe34d670 ),
	NFlagsW( 4958, 79.500519 ),
	VERT( 0x3ea89ff9, 0x3ffb05d9, 0xc041b46b ),
	NORM( 0xbeae6411, 0x3f15cbc8, 0xbf3c6617 ),
	NFlagsW( 4959, 56.596756 ),
	VERT( 0x3e1f1bd8, 0x3fa2a9ec, 0xc05d3ba6 ),
	NORM( 0xbe966352, 0x3f0a26b0, 0xbf49fb03 ),
	NFlagsW( 4960, 57.340782 ),
	VERT( 0xbe5a19f9, 0xbfd110d2, 0xc089266c ),
	NORM( 0xbe3805b3, 0xbe52a25f, 0xbf7643e8 ),
	NFlagsW( 4961, 60.927170 ),
	VERT( 0xbe94754e, 0xbe3df6bf, 0xc0888933 ),
	NORM( 0xbe5eae65, 0x3e907f5f, 0xbf6f335c ),
	NFlagsW( 4962, 58.824192 ),
	VERT( 0x3f136dba, 0xc054425e, 0xc06a2e9c ),
	NORM( 0xbde31749, 0xbf175538, 0xbf4c8537 ),
	NFlagsW( 4963, 74.412033 ),
	VERT( 0x405d8047, 0xc0aa27ec, 0xbe9716bc ),
	NORM( 0x3d20189c, 0xbf7ef160, 0x3da7cf4e ),
	NFlagsW( 4964, 99.023796 ),
	VERT( 0x3f81d706, 0x402cbe6e, 0xc0306f93 ),
	NORM( 0xbea12503, 0x3f2930f3, 0xbf2e68aa ),
	NFlagsW( 4965, 65.258919 ),
	VERT( 0x4002464e, 0x4080bfb6, 0xbfbcac25 ),
	NORM( 0xbe244efd, 0x3f60372d, 0xbee9085c ),
	NFlagsW( 4966, 78.373535 ),
	VERT( 0x3f2a9939, 0x3fa8c5d4, 0xc0677ef8 ),
	NORM( 0xbe949ed3, 0x3f055a80, 0xbf4d805e ),
	NFlagsW( 4967, 65.544434 ),
	VERT( 0x3ea88e15, 0xbfcc1f4b, 0xc08c4983 ),
	NORM( 0xbe23d3c4, 0xbe5368d9, 0xbf771d1a ),
	NFlagsW( 4968, 73.584358 ),
	VERT( 0x3e6be19e, 0xbe05a9dc, 0xc08bdd52 ),
	NORM( 0xbe607d69, 0x3e88194c, 0xbf7052e9 ),
	NFlagsW( 4969, 69.377747 ),
	VERT( 0x3f988b68, 0xc0551fd6, 0xc06eee2b ),
	NORM( 0xbde46ccf, 0xbf16cf08, 0xbf4ce24e ),
	NFlagsW( 4970, 87.263748 ),
	VERT( 0x403bba78, 0xc0a1a4d3, 0xc004403f ),
	NORM( 0xbbe7acca, 0xbf667e9e, 0xbedec150 ),
	NFlagsW( 4971, 99.182022 ),
	VERT( 0x3f5f1116, 0xbfc72cbc, 0xc08f6d07 ),
	NORM( 0xbe20c494, 0xbe5986d3, 0xbf76e84a ),
	NFlagsW( 4972, 84.224358 ),
	VERT( 0x3f402a23, 0xbd9aa357, 0xc08f31b7 ),
	NORM( 0xbe59bdcb, 0x3e81fee3, 0xbf718db1 ),
	NFlagsW( 4973, 79.475769 ),
	VERT( 0x3ff2d6f7, 0x40368117, 0xc04114ce ),
	NORM( 0xbe453f8e, 0x3f2e0411, 0xbf352bae ),
	NFlagsW( 4974, 83.837227 ),
	VERT( 0x3fd82138, 0x3fb4fdf2, 0xc07c0467 ),
	NORM( 0xbe55e044, 0x3f00c89a, 0xbf56b0ad ),
	NFlagsW( 4975, 85.157928 ),
	VERT( 0x401b1b2e, 0xc056da49, 0xc0786ca8 ),
	NORM( 0xbd3462f3, 0xbf138a43, 0xbf50e763 ),
	NFlagsW( 4976, 98.228302 ),
	VERT( 0x3fe55997, 0x3d0e1330, 0xc095dd92 ),
	NORM( 0xbe103498, 0x3e635b6e, 0xbf76fe3d ),
	NFlagsW( 4977, 93.339394 ),
	VERT( 0x3ffa52ee, 0xbfbd48d7, 0xc095b416 ),
	NORM( 0xbd92e51e, 0xbe511f33, 0xbf79ee64 ),
	NFlagsW( 4978, 95.974419 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Forearm[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Forearm,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Forearm[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Forearm,
OPosition  ( 22.032433F, -0.000000F,  0.000001F ),
OAngle     ( -0.000001F, -43.056302F,  0.000003F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Hand,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_UpperArm[]
START
	CnkV_VN(FV_CONT, 235),
	OffnbIdx(2252, 39),
	VERT( 0x411f40c7, 0xc04b8392, 0xc0aa267b ),
	NORM( 0x3d8aecdf, 0xbf0b4ed9, 0xbf5612f9 ),
	VERT( 0x4129ce73, 0xbf8312c4, 0xc0c464ca ),
	NORM( 0x3da3ba49, 0xbe4b37f9, 0xbf7a1273 ),
	VERT( 0x41335aab, 0x3f4ff36b, 0xc0c365f2 ),
	NORM( 0x3e0221a9, 0x3e824554, 0xbf756d9e ),
	VERT( 0x41379b88, 0x4016b36c, 0xc0a5fd17 ),
	NORM( 0x3e0ea5a9, 0x3f1ab123, 0xbf48d5b9 ),
	VERT( 0x412b2c0a, 0x3f9f747b, 0x409ee6b0 ),
	NORM( 0xbc9fe475, 0x3e1b8589, 0x3f7cfb20 ),
	VERT( 0x41386a6e, 0x406a94c1, 0xc074b457 ),
	NORM( 0x3dfe6075, 0x3f540e7b, 0xbf0bd89e ),
	VERT( 0x4131901e, 0x40232445, 0x408f63bb ),
	NORM( 0xbb193e59, 0x3f0acfb9, 0x3f571905 ),
	VERT( 0x413914a2, 0x408d777d, 0xc0014466 ),
	NORM( 0x3dc3061e, 0x3f724da6, 0xbe9ddef6 ),
	VERT( 0x4139c952, 0x4099b32c, 0xbe727901 ),
	NORM( 0x3d661c9d, 0x3f7ec97f, 0xbda28433 ),
	VERT( 0x4136d2b4, 0x407bda40, 0x404035a1 ),
	NORM( 0x3bc3aa99, 0x3f50e5f9, 0x3f13f859 ),
	VERT( 0x413af8f8, 0x40979f93, 0x3fb39c45 ),
	NORM( 0x3cad58e2, 0x3f77dda8, 0x3e7f2901 ),
	VERT( 0x415708b0, 0xc09e287d, 0xbe8ee259 ),
	NORM( 0xbb15f6b5, 0xbf7eab30, 0x3dd08967 ),
	VERT( 0x415364ba, 0xc088e3e7, 0x4000909e ),
	NORM( 0xbc4156f8, 0xbf643f4f, 0x3ee7c6aa ),
	VERT( 0x415a9b41, 0xc0987f55, 0xc03a50e6 ),
	NORM( 0x3d54e54d, 0xbf7462c8, 0xbe962065 ),
	VERT( 0x41550a8d, 0xc03043c6, 0x40867734 ),
	NORM( 0xbb8de785, 0xbf19283f, 0x3f4d20da ),
	VERT( 0x41632bf1, 0xc0607566, 0xc09ef3d1 ),
	NORM( 0x3d88ae8f, 0xbf29f9a7, 0xbf3ea9d4 ),
	VERT( 0x41581b25, 0xbf8f2557, 0x40999c76 ),
	NORM( 0x3cf89626, 0xbe694c17, 0x3f79257b ),
	VERT( 0x416c04f0, 0xbff7f7c9, 0xc0b68fdd ),
	NORM( 0x3dc9cb3b, 0xbe7ecdc2, 0xbf76a95e ),
	VERT( 0x4160142c, 0x3f598140, 0x409e0464 ),
	NORM( 0x3d52d436, 0x3dd0b00c, 0x3f7e538d ),
	VERT( 0x417146ff, 0xbd94a9be, 0xc0b6c01a ),
	NORM( 0x3e0b447d, 0x3e2e4aff, 0xbf79d9ac ),
	VERT( 0x416fb75a, 0x3fd1f416, 0xc0a00d7c ),
	NORM( 0x3e17c658, 0x3f075c43, 0xbf55f2bf ),
	VERT( 0x41660a9f, 0x401b36d8, 0x408d94e9 ),
	NORM( 0x3d1b1a3f, 0x3f00c299, 0x3f5d0caa ),
	VERT( 0x4170e209, 0x40401dfe, 0xc0719ee8 ),
	NORM( 0x3e0a44e0, 0x3f44714a, 0xbf2078f4 ),
	VERT( 0x41692873, 0x407e9f31, 0x403c303b ),
	NORM( 0x3ccbd816, 0x3f5434bb, 0x3f0f0d76 ),
	VERT( 0x416d6137, 0x40924e12, 0xbf062692 ),
	NORM( 0x3d5afee4, 0x3f7b34f8, 0xbe3d78ea ),
	VERT( 0x41704be0, 0x407f2e40, 0xc002d808 ),
	NORM( 0x3dc25091, 0x3f670d58, 0xbed70b27 ),
	VERT( 0x416bb113, 0x409393ef, 0x3f9dc311 ),
	NORM( 0x3d1495eb, 0x3f7c1900, 0x3e2e3239 ),
	VERT( 0x418b3cc1, 0xc08d4888, 0x3ff2a066 ),
	NORM( 0x3d966647, 0xbf5ad9b4, 0x3f037af2 ),
	VERT( 0x418eda27, 0xc09c78fa, 0xc01d4ffd ),
	NORM( 0x3cce35a3, 0xbf706c7e, 0xbeaf6525 ),
	VERT( 0x418dfe40, 0xc0a6c5c8, 0xbe88cd30 ),
	NORM( 0x3c85636b, 0xbf7eb646, 0x3dca7315 ),
	VERT( 0x418a3d35, 0xc03394a9, 0x406cd976 ),
	NORM( 0x3e25d623, 0xbf0ca1b8, 0x3f51db56 ),
	VERT( 0x41893612, 0xbf519d36, 0x408f86f9 ),
	NORM( 0x3df41085, 0xbe73b718, 0x3f76c3d5 ),
	VERT( 0x41933807, 0xc05fe67c, 0xc09358ed ),
	NORM( 0x3dde0a35, 0xbf220465, 0xbf444156 ),
	VERT( 0x418cc6a3, 0x402f46f0, 0x40816a7c ),
	NORM( 0x3d8d42cd, 0x3f0c2727, 0x3f557f7a ),
	VERT( 0x418fbd5a, 0x40849eaa, 0x4018bfa6 ),
	NORM( 0xbbd663aa, 0x3f5f6485, 0x3efa0804 ),
	VERT( 0x41972fdb, 0xc0a2af0f, 0xbe054c1d ),
	NORM( 0x3dc98713, 0xbf7baee4, 0x3e1dd5ce ),
	VERT( 0x4198d503, 0xc09bdc72, 0xc013b313 ),
	NORM( 0x3d8d30d1, 0xbf714456, 0xbea78235 ),
	VERT( 0x41991f2f, 0xbfe1db55, 0xc0a65780 ),
	NORM( 0x3e2cdbfc, 0xbe3b3253, 0xbf77f2c0 ),
	VERT( 0x419d179a, 0xc060b3c8, 0xc08a6e04 ),
	NORM( 0x3e216a57, 0xbf240021, 0xbf40622c ),
	CnkV_VN_NF(FV_CONT|FW_START, 932),
	OffnbIdx(4846, 133),
	VERT( 0x418b9d36, 0x3f7f803f, 0x40948278 ),
	NORM( 0x3dd6367a, 0x3de1771c, 0x3f7d07f5 ),
	NFlagsW( 0, 99.979195 ),
	VERT( 0x4193f8da, 0xc088923d, 0x3fe65df5 ),
	NORM( 0x3e04931d, 0xbf53ad9f, 0x3f0c1b41 ),
	NFlagsW( 1, 99.589989 ),
	VERT( 0x4192230d, 0xc03791e1, 0x405886be ),
	NORM( 0x3e438b1f, 0xbf12f24d, 0x3f4bd863 ),
	NFlagsW( 2, 97.584831 ),
	VERT( 0x41922858, 0xbf57f917, 0x408ae030 ),
	NORM( 0x3dffc0c2, 0xbe8e8d71, 0x3f73ca4d ),
	NFlagsW( 3, 93.605545 ),
	VERT( 0x419298c8, 0x40929241, 0x3f883f9e ),
	NORM( 0x3c72d70c, 0x3f7dfa84, 0x3dff0ebf ),
	NFlagsW( 4, 99.982277 ),
	VERT( 0x4199c78f, 0xbddf318c, 0xc0a49385 ),
	NORM( 0x3e2d9af4, 0x3e44df27, 0xbf777263 ),
	NFlagsW( 5, 99.967667 ),
	VERT( 0x4192e044, 0x3f7a45fb, 0x4090f8a4 ),
	NORM( 0x3df565b4, 0x3dc88e7f, 0x3f7cea8b ),
	NFlagsW( 6, 93.734657 ),
	VERT( 0x4194b6a0, 0x4090bd12, 0xbea9963a ),
	NORM( 0x3daf99c0, 0x3f77c0d6, 0xbe72679f ),
	NFlagsW( 7, 99.940125 ),
	VERT( 0x4196ad95, 0x4071d443, 0xbfec00b5 ),
	NORM( 0x3e025521, 0x3f5d2799, 0xbef984df ),
	NFlagsW( 8, 99.740944 ),
	VERT( 0x4198c0fe, 0x40271d21, 0xc05f9372 ),
	NORM( 0x3e0b2d86, 0x3f3fbb5d, 0xbf260657 ),
	NFlagsW( 9, 99.786491 ),
	VERT( 0x419a5cd7, 0x3fc0d61e, 0xc08f4eff ),
	NORM( 0x3e165188, 0x3f07e407, 0xbf55ad15 ),
	NFlagsW( 10, 99.878654 ),
	VERT( 0x41940db6, 0x4032b7f6, 0x407c370d ),
	NORM( 0x3d6a2464, 0x3f098324, 0x3f576f5c ),
	NFlagsW( 11, 96.684143 ),
	VERT( 0x419ab64a, 0xc0390ed5, 0x4046d8c4 ),
	NORM( 0x3c027886, 0xbf1de349, 0x3f4980a6 ),
	NFlagsW( 12, 76.958710 ),
	VERT( 0x41979180, 0x40864b77, 0x401ba311 ),
	NORM( 0xbd0609d1, 0x3f5f0c94, 0x3efab7db ),
	NFlagsW( 13, 97.515556 ),
	VERT( 0x419cf0cc, 0xc0857ae3, 0x3fdde30b ),
	NORM( 0xbd00ea70, 0xbf579180, 0x3f09d86c ),
	NFlagsW( 14, 87.347481 ),
	VERT( 0x41999d0c, 0xbf5d4741, 0x4086ffee ),
	NORM( 0xbe0e5b50, 0xbea6639e, 0x3f6f797e ),
	NFlagsW( 15, 70.794746 ),
	VERT( 0x4198ed66, 0x3f75efd5, 0x408e05b5 ),
	NORM( 0xbe318b87, 0x3dc0c2ef, 0x3f7af7fe ),
	NFlagsW( 16, 75.397469 ),
	VERT( 0x41a15445, 0xbfe2eef5, 0xc09eafcf ),
	NORM( 0x3e60789a, 0xbe42a369, 0xbf74fce5 ),
	NFlagsW( 17, 99.940071 ),
	VERT( 0x41a06188, 0xc09e9851, 0x3be07a3c ),
	NORM( 0x3b10b8f6, 0xbf7ca109, 0x3e259d05 ),
	NFlagsW( 18, 96.671585 ),
	VERT( 0x419d7144, 0xc037f76b, 0x404c4216 ),
	NORM( 0xbe698bd1, 0xbf1df196, 0x3f40d2c0 ),
	NFlagsW( 19, 69.747993 ),
	VERT( 0x419a2082, 0x4037ccd6, 0x407520af ),
	NORM( 0xbe1903ab, 0x3f13dc46, 0x3f4d735d ),
	NFlagsW( 20, 83.189125 ),
	VERT( 0x419fc0e9, 0xc086413b, 0x3fe8a713 ),
	NORM( 0xbe38a4f5, 0xbf566e37, 0x3f0400ac ),
	NFlagsW( 21, 81.313568 ),
	VERT( 0x41a2cfaa, 0xc09b4027, 0xc00a1776 ),
	NORM( 0x3d2f093e, 0xbf72c189, 0xbea111cb ),
	NFlagsW( 22, 99.804749 ),
	VERT( 0x419b6634, 0x40910f79, 0x3f98061c ),
	NORM( 0x3d30298e, 0x3f7ec224, 0x3db52fd0 ),
	NFlagsW( 23, 95.524979 ),
	VERT( 0x419c879b, 0xbf638841, 0x408bf4c8 ),
	NORM( 0xbf042df8, 0xbeb15ce2, 0x3f487ff3 ),
	NFlagsW( 24, 64.008652 ),
	VERT( 0x41a26995, 0xbe07dae4, 0xc09ce3ed ),
	NORM( 0x3e5fa16f, 0x3e396c2b, 0xbf757b70 ),
	NFlagsW( 25, 99.693069 ),
	VERT( 0x419b8509, 0x3f763636, 0x40938738 ),
	NORM( 0xbf19a0db, 0x3d9d9256, 0x3f4bd44f ),
	NFlagsW( 26, 68.879333 ),
	VERT( 0x41a2ccdc, 0x3fbb10d0, 0xc0895ca3 ),
	NORM( 0x3e34ff99, 0x3f05c887, 0xbf5584f2 ),
	NFlagsW( 27, 98.958138 ),
	VERT( 0x419cceb2, 0x4036e681, 0x4080409e ),
	NORM( 0xbefa1643, 0x3f0887c0, 0x3f30cdcd ),
	NFlagsW( 28, 76.022697 ),
	VERT( 0x41a290f4, 0xc0870738, 0x3ff36ae8 ),
	NORM( 0xbe540f10, 0xbf573344, 0x3f001e45 ),
	NFlagsW( 29, 75.034935 ),
	VERT( 0x41a0e7be, 0x4066e550, 0xbfda7d3f ),
	NORM( 0x3e265064, 0x3f5c2864, 0xbef7b109 ),
	NFlagsW( 30, 91.715424 ),
	VERT( 0x41a12916, 0xc0359ff2, 0x405a2fbc ),
	NORM( 0xbeb36fbd, 0xbf1d6f04, 0x3f34d5c0 ),
	NFlagsW( 31, 61.387306 ),
	VERT( 0x419fbb61, 0x408a6d30, 0xbe7b3bc8 ),
	NORM( 0x3e135945, 0x3f7363e2, 0xbe8c92db ),
	NFlagsW( 32, 90.769402 ),
	VERT( 0x41a4ba87, 0xc09f00e8, 0x3e340626 ),
	NORM( 0xbd9d2809, 0xbf7b7d99, 0x3e2e78ff ),
	NFlagsW( 33, 90.338615 ),
	VERT( 0x41a2ca36, 0x40244b16, 0xc04fe435 ),
	NORM( 0x3e1c3fff, 0x3f42da72, 0xbf216055 ),
	NFlagsW( 34, 96.210983 ),
	VERT( 0x41a6f71a, 0xc0618185, 0xc081828d ),
	NORM( 0x3e1d584d, 0xbf21986e, 0xbf429dd4 ),
	NFlagsW( 35, 99.867714 ),
	VERT( 0x419e742d, 0x40870583, 0x401ab3e4 ),
	NORM( 0xbe26e4f6, 0x3f67165d, 0x3ecbe655 ),
	NFlagsW( 36, 85.666138 ),
	VERT( 0x41a09bae, 0xbf72ef19, 0x409a6203 ),
	NORM( 0xbf2627ca, 0xbeb89b19, 0x3f2b7d3d ),
	NFlagsW( 37, 56.541531 ),
	VERT( 0x419f5955, 0x3f793cb4, 0x40a2f13d ),
	NORM( 0xbf34fddf, 0x3d8911bd, 0x3f343c05 ),
	NFlagsW( 38, 60.307892 ),
	VERT( 0x41a8994c, 0xc09bbad2, 0xc0035481 ),
	NORM( 0x3cfe2572, 0xbf7243a5, 0xbea4b16f ),
	NFlagsW( 39, 98.409119 ),
	VERT( 0x41a60a24, 0xc0879681, 0x40050c73 ),
	NORM( 0xbe894d7c, 0xbf55cbe5, 0x3ef5e0e5 ),
	NFlagsW( 40, 66.845901 ),
	VERT( 0x41a0ffdd, 0x4088c597, 0x402555b2 ),
	NORM( 0xbe9d5397, 0x3f64313b, 0x3eaa9a6c ),
	NFlagsW( 41, 80.379585 ),
	VERT( 0x41a98944, 0xbfe40194, 0xc09707e0 ),
	NORM( 0x3e400455, 0xbe3ee5d0, 0xbf76e37c ),
	NFlagsW( 42, 99.410820 ),
	VERT( 0x41a0e28e, 0x4038e4b7, 0x408e5bd5 ),
	NORM( 0xbf1507fe, 0x3f055a18, 0x3f1fd259 ),
	NFlagsW( 43, 65.039719 ),
	VERT( 0x41a2e67d, 0x408fdb98, 0x3f9ca2b6 ),
	NORM( 0x3d101f8d, 0x3f7fd0bd, 0xbc69b83b ),
	NFlagsW( 44, 80.454964 ),
	VERT( 0x41a9139d, 0xc09f6968, 0x3eb08439 ),
	NORM( 0xbdcf363b, 0xbf7bdb36, 0x3e177255 ),
	NFlagsW( 45, 81.011703 ),
	VERT( 0x41a6cc23, 0xc03486c4, 0x40757f9c ),
	NORM( 0xbefe78f0, 0xbf2398e5, 0x3f1646aa ),
	NFlagsW( 46, 51.144672 ),
	VERT( 0x41ab0b96, 0xbe201a4c, 0xc095340d ),
	NORM( 0x3e53adbc, 0x3e33f7f8, 0xbf766580 ),
	NFlagsW( 47, 97.858246 ),
	VERT( 0x41ac77e3, 0xc0623374, 0xc07a18d1 ),
	NORM( 0x3e0ff280, 0xbf21c453, 0xbf431f1f ),
	NFlagsW( 48, 99.266403 ),
	VERT( 0x41a48f38, 0x3f7d66ef, 0x40b873b8 ),
	NORM( 0xbf36d2c7, 0x3d92d6bb, 0x3f324133 ),
	NFlagsW( 49, 42.866962 ),
	VERT( 0x41a581bf, 0x408fe97f, 0x3fb957a9 ),
	NORM( 0xbcf19c79, 0x3f7fbb5f, 0xbd0f42f5 ),
	NFlagsW( 50, 73.981972 ),
	VERT( 0x41a49ef3, 0x4088574a, 0x40410ffe ),
	NORM( 0xbea584fd, 0x3f5ff1b6, 0x3eb8c76e ),
	NFlagsW( 51, 69.504723 ),
	VERT( 0x41a61c95, 0xbf83c548, 0x40ae8a9b ),
	NORM( 0xbf283623, 0xbebac6b1, 0x3f28e09d ),
	NFlagsW( 52, 42.457954 ),
	VERT( 0x41ab3d2a, 0x3fb54d79, 0xc0836a83 ),
	NORM( 0x3e56828c, 0x3f02a45b, 0xbf55864c ),
	NFlagsW( 53, 94.387566 ),
	VERT( 0x41ae62b1, 0xc09c3626, 0xbff9220f ),
	NORM( 0x3daecb51, 0xbf71384b, 0xbea5ca37 ),
	NFlagsW( 54, 93.633087 ),
	VERT( 0x41ad1469, 0xc0a0b670, 0x3f0a06d3 ),
	NORM( 0xbe19f198, 0xbf7b39b3, 0x3df55b54 ),
	NFlagsW( 55, 71.199539 ),
	VERT( 0x41a8e97a, 0x40852b1a, 0xbe31fcfa ),
	NORM( 0x3e1098bb, 0x3f7041b6, 0xbea151a5 ),
	NFlagsW( 56, 68.760490 ),
	VERT( 0x41af67dc, 0xbfeb7429, 0xc0932f9d ),
	NORM( 0x3e18eb26, 0xbe44302f, 0xbf78550c ),
	NFlagsW( 57, 98.105148 ),
	VERT( 0x41a66fcb, 0x403b9dab, 0x40a1eb26 ),
	NORM( 0xbf13e2f0, 0x3f0a81ff, 0x3f1c76f4 ),
	NFlagsW( 58, 44.585613 ),
	VERT( 0x41ab21b4, 0x405bf58c, 0xbfc8f8dc ),
	NORM( 0x3e27d5b1, 0x3f5d39e7, 0xbef397ea ),
	NFlagsW( 59, 68.077965 ),
	VERT( 0x41acd3d8, 0x40217ae6, 0xc04034d4 ),
	NORM( 0x3e6176d7, 0x3f42f58c, 0xbf1c0b50 ),
	NFlagsW( 60, 79.945663 ),
	VERT( 0x41ad3d39, 0xc0891743, 0x40258764 ),
	NORM( 0xbeafdac3, 0xbf5352d3, 0x3ee55273 ),
	NFlagsW( 61, 48.992645 ),
	VERT( 0x41b01aeb, 0xbe51eb2d, 0xc09138cf ),
	NORM( 0x3e521562, 0x3e3ab690, 0xbf762b04 ),
	NFlagsW( 62, 94.748466 ),
	VERT( 0x41a94971, 0x40918430, 0x3fe94dba ),
	NORM( 0xbd9797a0, 0x3f7f3a9f, 0xbcbd8f82 ),
	NFlagsW( 63, 64.497742 ),
	VERT( 0x41b1f89b, 0xc062e639, 0xc0712d0c ),
	NORM( 0x3e5fbdbc, 0xbf256a01, 0xbf3b344a ),
	NFlagsW( 64, 97.151367 ),
	VERT( 0x41ac2c93, 0xc03ea5b9, 0x408e51ef ),
	NORM( 0xbf1203c2, 0xbf29e17f, 0x3ef7d722 ),
	NFlagsW( 65, 38.127842 ),
	VERT( 0x41af7e8e, 0x3fb521d0, 0xc07c0865 ),
	NORM( 0x3e829186, 0x3f053548, 0xbf50a32d ),
	NFlagsW( 66, 87.914917 ),
	VERT( 0x41abded7, 0x40853a1f, 0xbc8692e4 ),
	NORM( 0x3dce9d5f, 0x3f70a8db, 0xbea6c1a1 ),
	NFlagsW( 67, 62.997921 ),
	VERT( 0x41b23dd3, 0xc09b7a02, 0xbfe623cf ),
	NORM( 0x3e21f0da, 0xbf6e9f4b, 0xbea6cf47 ),
	NFlagsW( 68, 86.108437 ),
	VERT( 0x41a9d80d, 0x4088b652, 0x4063995b ),
	NORM( 0xbea462d3, 0x3f60ad4d, 0x3eb63709 ),
	NFlagsW( 69, 50.488525 ),
	VERT( 0x41b545f6, 0xbff2e68d, 0xc08f5786 ),
	NORM( 0x3e885b06, 0xbe4d3926, 0xbf715c9f ),
	NFlagsW( 70, 94.977516 ),
	VERT( 0x41b1d872, 0xc08b856f, 0x403d2836 ),
	NORM( 0xbec032c3, 0xbf5357fb, 0x3ed7babf ),
	NFlagsW( 71, 36.270279 ),
	VERT( 0x41b242fb, 0x4016ea27, 0xc03599e0 ),
	NORM( 0x3ed0a163, 0x3f38d32a, 0xbf0f2859 ),
	NFlagsW( 72, 66.681419 ),
	VERT( 0x41b58b3d, 0xc09bb9c3, 0xbfc8b662 ),
	NORM( 0x3e128df7, 0xbf6d7d03, 0xbeb08e09 ),
	NFlagsW( 73, 76.319633 ),
	VERT( 0x41b0ec69, 0x4056d741, 0xbfba9644 ),
	NORM( 0x3e7126c4, 0x3f523397, 0xbf051aa2 ),
	NFlagsW( 74, 58.631302 ),
	VERT( 0x41b3c086, 0x3fb4f804, 0xc0713a3f ),
	NORM( 0x3eb8cb65, 0x3f0dfa52, 0xbf3ff0b1 ),
	NFlagsW( 75, 79.019966 ),
	VERT( 0x41b52a3b, 0xbe81dab1, 0xc08d3d4d ),
	NORM( 0x3e861682, 0x3e4561c8, 0xbf721648 ),
	NFlagsW( 76, 89.172058 ),
	VERT( 0x41af785b, 0x408846e1, 0x3eaa13be ),
	NORM( 0x3d4b5149, 0x3f72d02a, 0xbea03415 ),
	NFlagsW( 77, 57.221214 ),
	VERT( 0x41b491c0, 0xc0a4b7ce, 0x3f780b43 ),
	NORM( 0xbe220f32, 0xbf7b0ef1, 0x3deb2ef7 ),
	NFlagsW( 78, 48.522175 ),
	VERT( 0x41ae5f65, 0x40937cc5, 0x4015672d ),
	NORM( 0xbdd79c90, 0x3f7e8e26, 0x3c5669ec ),
	NFlagsW( 79, 49.297703 ),
	VERT( 0x41b40e67, 0x4012413a, 0xc02e3df5 ),
	NORM( 0x3eed760f, 0x3f34e9b1, 0xbf08c872 ),
	NFlagsW( 80, 61.928070 ),
	VERT( 0x41b881d4, 0xc057144e, 0xc0646aeb ),
	NORM( 0x3eb7a3c2, 0xbf1c6645, 0xbf34ad6b ),
	NFlagsW( 81, 87.278267 ),
	VERT( 0x41aefb89, 0x3f82e338, 0x40e37887 ),
	NORM( 0xbf238260, 0x3dbb8d57, 0x3f439432 ),
	NFlagsW( 82, 2.467699 ),
	VERT( 0x41b11e34, 0xbf985e47, 0x40d6db77 ),
	NORM( 0xbf1bae9e, 0xbebaae09, 0x3f34849c ),
	NFlagsW( 83, 4.594614 ),
	VERT( 0x41b77d12, 0x3faa7be7, 0xc05fc6be ),
	NORM( 0x3ef7f85f, 0x3f1624b7, 0xbf2631d2 ),
	NFlagsW( 84, 67.285011 ),
	VERT( 0x41b672fd, 0xc08df4ba, 0x4054c8db ),
	NORM( 0xbebea092, 0xbf57805b, 0x3ec81ac7 ),
	NFlagsW( 85, 22.108629 ),
	VERT( 0x41b6e2c5, 0x400ce4ad, 0xc02327ba ),
	NORM( 0x3f02bb38, 0x3f325822, 0xbf00fda6 ),
	NFlagsW( 86, 56.673111 ),
	VERT( 0x41b8ca83, 0x3f0baf41, 0xc07b497c ),
	NORM( 0x3ee21a1e, 0x3ed7662d, 0xbf4adebe ),
	NFlagsW( 87, 73.368797 ),
	VERT( 0x41babce3, 0xbff28c92, 0xc08607dc ),
	NORM( 0x3ef57ab0, 0xbe4d6254, 0xbf5ab610 ),
	NFlagsW( 88, 84.525833 ),
	VERT( 0x41b8f3db, 0xc0a6140f, 0x3fa1ba7d ),
	NORM( 0xbe0d6262, 0xbf7bde1a, 0x3de926d2 ),
	NFlagsW( 89, 31.985287 ),
	VERT( 0x41b5beac, 0x4061817f, 0xbf81ef32 ),
	NORM( 0x3e2227c9, 0x3f50f26b, 0xbf0e3ed5 ),
	NFlagsW( 90, 53.158760 ),
	VERT( 0x41b42fac, 0x408c6ec7, 0x3f52e5c7 ),
	NORM( 0x3ce93e4b, 0x3f75afdb, 0xbe8f1e91 ),
	NFlagsW( 91, 48.338833 ),
	VERT( 0x41b18aac, 0x40411140, 0x40c90994 ),
	NORM( 0xbf01140a, 0x3f16cf85, 0x3f21a696 ),
	NFlagsW( 92, 3.151811 ),
	VERT( 0x41baa080, 0xbea63036, 0xc0868b20 ),
	NORM( 0x3ed851af, 0x3e317690, 0xbf63bf84 ),
	NFlagsW( 93, 78.115547 ),
	VERT( 0x41bb8800, 0xc0a07b5c, 0xbf74a195 ),
	NORM( 0x3e189c32, 0xbf6f0391, 0xbea6c41a ),
	NFlagsW( 94, 52.074657 ),
	VERT( 0x41b8f754, 0x40177f44, 0xbffc11c0 ),
	NORM( 0x3eb8a16a, 0x3f2f9b0c, 0xbf21caac ),
	NFlagsW( 95, 51.775433 ),
	VERT( 0x41ba81e1, 0x3fa273dd, 0xc0513abd ),
	NORM( 0x3f094eba, 0x3f123e2c, 0xbf1f0bd0 ),
	NFlagsW( 96, 59.477489 ),
	VERT( 0x41b44ab1, 0x40897411, 0x40945639 ),
	NORM( 0xbe93b5ea, 0x3f60cb87, 0x3ec36f06 ),
	NFlagsW( 97, 10.151491 ),
	VERT( 0x41b7f6a3, 0xc054dbea, 0x40b93f22 ),
	NORM( 0xbf03755e, 0xbf2fdcd9, 0x3f03a1cb ),
	NFlagsW( 98, 2.033235 ),
	VERT( 0x41be0ea9, 0xc050001c, 0xc0502312 ),
	NORM( 0x3ef9c244, 0xbf0d7d66, 0xbf2cfaa5 ),
	NFlagsW( 99, 68.316032 ),
	VERT( 0x41be1e39, 0xbea3c615, 0xc07b9112 ),
	NORM( 0x3f06ffd5, 0x3e5e3085, 0xbf524c8c ),
	NFlagsW( 100, 65.755478 ),
	VERT( 0x41bd55f1, 0xc0a77072, 0x3fc76f5e ),
	NORM( 0xbe0aaca7, 0xbf7c9f53, 0x3db5baad ),
	NFlagsW( 101, 16.185396 ),
	VERT( 0x41bf2bd3, 0xbfddaab3, 0xc072b2a0 ),
	NORM( 0x3f0f1c3d, 0xbe396dc0, 0xbf4f2385 ),
	NFlagsW( 102, 65.527634 ),
	VERT( 0x41bb1609, 0x4041cb5d, 0xbfb1e37c ),
	NORM( 0x3e29359d, 0x3f3027a3, 0xbf34e028 ),
	NFlagsW( 103, 49.482929 ),
	VERT( 0x41ba90eb, 0x406c2bbb, 0xbf12906a ),
	NORM( 0x3e171fc1, 0x3f593ae8, 0xbf02135e ),
	NFlagsW( 104, 46.991226 ),
	VERT( 0x41bfd273, 0xc0a0c52a, 0xbf17f15b ),
	NORM( 0x3e504b1c, 0xbf6c1d9a, 0xbea8361e ),
	NFlagsW( 105, 30.970505 ),
	VERT( 0x41b88b4f, 0x40976df2, 0x4056e7d6 ),
	NORM( 0xbde6016f, 0x3f7d5779, 0x3db7b793 ),
	NFlagsW( 106, 14.132995 ),
	VERT( 0x41c02e91, 0x3f9c8b29, 0xc029b200 ),
	NORM( 0x3ecdc06a, 0x3f14aaac, 0xbf353f72 ),
	NFlagsW( 107, 48.508667 ),
	VERT( 0x41bf1b80, 0x40221f9f, 0xbfd2a149 ),
	NORM( 0x3e475276, 0x3f1af60b, 0xbf4595da ),
	NFlagsW( 108, 46.644630 ),
	VERT( 0x41bfa8c0, 0xc092d1d2, 0x4082051a ),
	NORM( 0xbe968a91, 0xbf64f5ca, 0x3eac9948 ),
	NFlagsW( 109, 1.735370 ),
	VERT( 0x41c39a4c, 0xc053662a, 0xc0296427 ),
	NORM( 0x3ef537ba, 0xbf15a9d8, 0xbf27a46b ),
	NFlagsW( 110, 42.161407 ),
	VERT( 0x41c41ceb, 0xc0a10fa6, 0xbe6d00b8 ),
	NORM( 0x3e5320b1, 0xbf6a7698, 0xbeb06008 ),
	NFlagsW( 111, 13.561153 ),
	VERT( 0x41bd9fb6, 0x4094bfb7, 0x3fe7504f ),
	NORM( 0x3d33e8b9, 0x3f7a8a9e, 0xbe4d776a ),
	NFlagsW( 112, 20.499485 ),
	VERT( 0x41c2b720, 0x3ffb05a4, 0xbffe4af2 ),
	NORM( 0x3e81d24b, 0x3f15cbc8, 0xbf45308a ),
	NFlagsW( 113, 43.403244 ),
	VERT( 0x41c40c34, 0x3fa2a9b7, 0xc01adcaf ),
	NORM( 0x3ea5e7a9, 0x3f0a26b0, 0xbf46eb83 ),
	NFlagsW( 114, 42.659222 ),
	VERT( 0x41c66c50, 0xbfd11107, 0xc051bb99 ),
	NORM( 0x3f06838e, 0xbe52a25f, 0xbf5359c5 ),
	NFlagsW( 115, 39.072823 ),
	VERT( 0x41c5de4d, 0xbe3df868, 0xc05432c5 ),
	NORM( 0x3ef541fc, 0x3e907f5f, 0xbf54c974 ),
	NFlagsW( 116, 41.175812 ),
	VERT( 0x41c79c5f, 0xc0544278, 0xc011f329 ),
	NORM( 0x3eedc6aa, 0xbf175538, 0xbf28d1c8 ),
	NFlagsW( 117, 25.587961 ),
	VERT( 0x41c61a23, 0xc0aa27f9, 0x40096c3a ),
	NORM( 0xbce04e84, 0xbf7ef160, 0x3db14416 ),
	NFlagsW( 118, 0.976208 ),
	VERT( 0x41c53ef4, 0x402cbe54, 0xbfa93183 ),
	NORM( 0x3e70cbc4, 0x3f2930f3, 0xbf367216 ),
	NFlagsW( 119, 34.741081 ),
	VERT( 0x41c43572, 0x4080bfa9, 0x3ea01627 ),
	NORM( 0x3e46220c, 0x3f60372d, 0xbee25c74 ),
	NFlagsW( 120, 21.626467 ),
	VERT( 0x41c7e921, 0x3fa8c59f, 0xc00c0855 ),
	NORM( 0x3eac0108, 0x3f055a80, 0xbf48e3a7 ),
	NFlagsW( 121, 34.455563 ),
	VERT( 0x41ca20c1, 0xbfcc1f80, 0xc03ea060 ),
	NORM( 0x3f0ac83c, 0xbe5368d9, 0xbf508612 ),
	NFlagsW( 122, 26.415644 ),
	VERT( 0x41c97a5b, 0xbe05ab83, 0xc042540a ),
	NORM( 0x3ef62174, 0x3e88194c, 0xbf55ea97 ),
	NFlagsW( 123, 30.622255 ),
	VERT( 0x41cb9db5, 0xc0551ff0, 0xbff5051c ),
	NORM( 0x3eee0763, 0xbf16cf08, 0xbf2932f2 ),
	NFlagsW( 124, 12.736254 ),
	VERT( 0x41ccb124, 0xc0a1a4e0, 0x3efc411c ),
	NORM( 0x3e956f02, 0xbf667e9e, 0xbea53c1d ),
	NFlagsW( 125, 0.817981 ),
	VERT( 0x41cdd52f, 0xbfc72cf0, 0xc02b865e ),
	NORM( 0x3f0b333e, 0xbe5986d3, 0xbf4fd9ce ),
	NFlagsW( 126, 15.775636 ),
	VERT( 0x41cd166c, 0xbd9aa6a2, 0xc03075ed ),
	NORM( 0x3efa4671, 0x3e81fee3, 0xbf55a9ba ),
	NFlagsW( 127, 20.524231 ),
	VERT( 0x41cbd3ae, 0x403680fd, 0xbf68be4c ),
	NORM( 0x3eaf5039, 0x3f2e0411, 0xbf260b64 ),
	NFlagsW( 128, 16.162767 ),
	VERT( 0x41cfa2fc, 0x3fb4fdbd, 0xbfdcbbe6 ),
	NORM( 0x3ed701d9, 0x3f00c89a, 0xbf415fea ),
	NFlagsW( 129, 14.842075 ),
	VERT( 0x41d3a068, 0xc056da63, 0xbf97407d ),
	NORM( 0x3f066261, 0xbf138a43, 0xbf2056f0 ),
	NFlagsW( 130, 1.771693 ),
	VERT( 0x41d44ff1, 0x3d0e0ca5, 0xc00cb7c5 ),
	NORM( 0x3f0e48bf, 0x3e635b6e, 0xbf4d162b ),
	NFlagsW( 131, 6.660604 ),
	VERT( 0x41d53e11, 0xbfbd490b, 0xc0055247 ),
	NORM( 0x3f1d3729, 0xbe511f33, 0xbf432811 ),
	NFlagsW( 132, 4.025588 ),
	CnkV_VN_NF(FV_CONT|FW_END, 1051),
	OffnbIdx(0, 150),
	VERT( 0xbff3416a, 0x4056a1ee, 0x408f4ed8 ),
	NORM( 0x3de0a969, 0x3f3d6ae5, 0x3f29e82b ),
	NFlagsW( 3378, 0.116298 ),
	VERT( 0xbf84f0af, 0x3fed87b4, 0x40b4bfc4 ),
	NORM( 0x3e95c66d, 0x3f0958b8, 0x3f4aa45b ),
	NFlagsW( 3384, 0.515181 ),
	VERT( 0xbf24a2c0, 0xbd9771a8, 0x40ca1764 ),
	NORM( 0x3efe678a, 0x3de57a56, 0x3f5c4d35 ),
	NFlagsW( 3386, 0.170161 ),
	VERT( 0xbdee47ce, 0xc037885f, 0x40afba4b ),
	NORM( 0x3f10d06a, 0xbe70c52d, 0x3f4a5734 ),
	NFlagsW( 3388, 1.506122 ),
	VERT( 0x3f2dc86e, 0xc0a97ce3, 0x40399fec ),
	NORM( 0x3f3604fa, 0xbede8794, 0x3f0d828c ),
	NFlagsW( 3391, 8.327547 ),
	VERT( 0x3e182925, 0x3ff00ab2, 0x40a8c097 ),
	NORM( 0x3e6c0d52, 0x3ef8448c, 0x3f57f90a ),
	NFlagsW( 3392, 14.906327 ),
	VERT( 0x3f3da0b4, 0xc05f04d3, 0x4090345e ),
	NORM( 0x3eb69ff8, 0xbf16d12d, 0x3f399cf6 ),
	NFlagsW( 3393, 15.446551 ),
	VERT( 0x3ee57d78, 0xbde0e5b1, 0x40ba8d90 ),
	NORM( 0x3eb81476, 0x3d4fd9a0, 0x3f6e8752 ),
	NFlagsW( 3394, 11.808198 ),
	VERT( 0x3f31c600, 0xc0205499, 0x40a7969a ),
	NORM( 0x3ec82261, 0xbebb01cd, 0x3f58493b ),
	NFlagsW( 3395, 13.331591 ),
	VERT( 0x3fc76fbe, 0xc0bd56d4, 0x3ff4a779 ),
	NORM( 0x3e384edd, 0xbf54524e, 0x3f0765c0 ),
	NFlagsW( 3396, 15.712266 ),
	VERT( 0x3fcd3e32, 0xc09cbd62, 0x40442a70 ),
	NORM( 0x3e3c2c8b, 0xbf28e0cc, 0x3f3a8e4d ),
	NFlagsW( 3399, 25.123608 ),
	VERT( 0x3fdc358c, 0xc064c1c4, 0x4080290a ),
	NORM( 0x3e84ed1c, 0xbf0f96e2, 0x3f493f7a ),
	NFlagsW( 3400, 34.149586 ),
	VERT( 0x3fab8316, 0x3fe5532c, 0x40a07bc4 ),
	NORM( 0x3e4667f2, 0x3eda6699, 0x3f622a73 ),
	NFlagsW( 3401, 36.365822 ),
	VERT( 0x3fc48693, 0x3d65f094, 0x40adc5f2 ),
	NORM( 0x3e9c125f, 0x3d387dd5, 0x3f738b26 ),
	NFlagsW( 3402, 35.239418 ),
	VERT( 0x3fdf43cf, 0xc0045131, 0x40a054bb ),
	NORM( 0x3eb11606, 0xbeb963b1, 0x3f5d9806 ),
	NFlagsW( 3403, 35.087856 ),
	VERT( 0x401812d7, 0xc0b59f80, 0x4000b9bb ),
	NORM( 0x3e4b2bf9, 0xbf4d0928, 0x3f10a003 ),
	NFlagsW( 3404, 30.995962 ),
	VERT( 0x4030cd82, 0xc0daa2eb, 0xbf48ff0e ),
	NORM( 0x3e91bbe9, 0xbf6f7565, 0x3e56e295 ),
	NFlagsW( 3405, 19.914289 ),
	VERT( 0x4047c135, 0xc0d9b7c8, 0xc08d9809 ),
	NORM( 0x3ed1b2b9, 0xbf5b1196, 0xbea1e232 ),
	NFlagsW( 3406, 0.342118 ),
	VERT( 0x404a8610, 0xc086f8e0, 0xc0de6143 ),
	NORM( 0x3ef861e7, 0xbecaf68a, 0xbf4788da ),
	NFlagsW( 3407, 0.217725 ),
	VERT( 0x4024800c, 0xc09420f2, 0x4040297b ),
	NORM( 0x3e53d435, 0xbf26cca2, 0x3f3ad741 ),
	NFlagsW( 3408, 40.682430 ),
	VERT( 0x400e0f63, 0x3ed5a710, 0x40a5cac2 ),
	NORM( 0x3e6943a3, 0x3dc4f514, 0x3f780cf6 ),
	NFlagsW( 3409, 44.703083 ),
	VERT( 0x4037a338, 0xc051daa3, 0x407c6748 ),
	NORM( 0x3e3a7962, 0xbf020d67, 0x3f578541 ),
	NFlagsW( 3410, 46.344643 ),
	VERT( 0x40758861, 0xc0ce17dc, 0xc08b4186 ),
	NORM( 0x3ee7354b, 0xbf503eac, 0xbebbadab ),
	NFlagsW( 3411, 7.382286 ),
	VERT( 0x40225706, 0x3f35a8bc, 0x40a2b0cc ),
	NORM( 0x3e1909d4, 0x3e119d45, 0x3f7a7e57 ),
	NFlagsW( 3412, 46.871849 ),
	VERT( 0x406322a2, 0xc0d17b88, 0xbf3aefa5 ),
	NORM( 0x3ea6b605, 0xbf6cc7fa, 0x3e48e63c ),
	NFlagsW( 3413, 38.442410 ),
	VERT( 0x402ebbf3, 0xbfae4c0a, 0x409d184e ),
	NORM( 0x3e7083ce, 0xbe913ccf, 0x3f6e01a5 ),
	NFlagsW( 3414, 47.017769 ),
	VERT( 0x40559705, 0xc0ac004f, 0x4002e94c ),
	NORM( 0x3e71f98d, 0xbf4a3779, 0x3f10dc96 ),
	NFlagsW( 3415, 44.403458 ),
	VERT( 0x406cdf98, 0xc08167b7, 0x404dbe33 ),
	NORM( 0x3e7a256c, 0xbf1d86ad, 0x3f3fdc76 ),
	NFlagsW( 3416, 48.952274 ),
	VERT( 0x405612c1, 0xbf4b26c1, 0x409e21a8 ),
	NORM( 0x3e15c63e, 0xbe5dcef8, 0x3f7719ee ),
	NFlagsW( 3417, 49.307953 ),
	VERT( 0x408abc26, 0xc0c853f0, 0xbf2ce013 ),
	NORM( 0x3ea9d275, 0xbf6d5df4, 0x3e321fce ),
	NFlagsW( 3418, 51.273624 ),
	VERT( 0x407a7c67, 0xc02c94dc, 0x4080fffe ),
	NORM( 0x3e5507ed, 0xbef228e1, 0x3f5b2dbc ),
	NFlagsW( 3419, 49.777081 ),
	VERT( 0x40898de5, 0xc0a260d9, 0x400518df ),
	NORM( 0x3e66b7eb, 0xbf47ca04, 0x3f154f44 ),
	NFlagsW( 3420, 50.058067 ),
	VERT( 0x4093b8f7, 0xc06c691a, 0x4048f96d ),
	NORM( 0x3e362548, 0xbf171a53, 0x3f4991dc ),
	NFlagsW( 3421, 49.980461 ),
	VERT( 0x3f82a6fd, 0xc0e43435, 0xbf6ddfe1 ),
	NORM( 0x3f2d0961, 0xbf345bb6, 0x3e5d751e ),
	NFlagsW( 3627, 0.259257 ),
	VERT( 0x3f3d7118, 0xc0c50dbf, 0x3fe7db33 ),
	NORM( 0x3f4651bc, 0xbf096eff, 0x3eab15a0 ),
	NFlagsW( 3628, 3.896982 ),
	VERT( 0x3ff45361, 0xc0e1e8e0, 0xbf56fe99 ),
	NORM( 0x3e1e802d, 0xbf76842a, 0x3e621e08 ),
	NFlagsW( 3629, 4.431193 ),
	VERT( 0xbfdab294, 0x40a6a60b, 0x3f0f05ce ),
	NORM( 0xbcadcc6c, 0x3f7def49, 0x3dfff4d3 ),
	NFlagsW( 4732, 1.850859 ),
	VERT( 0xbfb6965a, 0x40a3ab18, 0xc00da3df ),
	NORM( 0x3dd28ddb, 0x3f7c73ac, 0xbe055907 ),
	NFlagsW( 4733, 1.049288 ),
	VERT( 0xbfdae48e, 0x4092b99b, 0x4038856a ),
	NORM( 0x3d9ca566, 0x3f61ec7e, 0x3eed9466 ),
	NFlagsW( 4734, 0.852895 ),
	VERT( 0xbf92b544, 0x40a714fd, 0x3f070125 ),
	NORM( 0x3b9a0367, 0x3f7e3961, 0x3df09e15 ),
	NFlagsW( 4735, 6.357017 ),
	VERT( 0xbf92d6b5, 0x40931b5f, 0x402dfb44 ),
	NORM( 0x3dcef167, 0x3f640f92, 0x3ee2c2c3 ),
	NFlagsW( 4736, 4.955873 ),
	VERT( 0xbf95078d, 0x405c7fb9, 0x4086d29a ),
	NORM( 0x3e0bc24a, 0x3f3a53dc, 0x3f2c09dd ),
	NFlagsW( 4737, 3.521173 ),
	VERT( 0xbe835e14, 0x408fe32a, 0xc08568a3 ),
	NORM( 0x3e168f8f, 0x3f6a7983, 0xbebf3729 ),
	NFlagsW( 4738, 2.128392 ),
	VERT( 0xbd5e3762, 0x406fcc41, 0xc0ae9499 ),
	NORM( 0x3e56af57, 0x3f49b223, 0xbf143ca5 ),
	NFlagsW( 4739, 0.267571 ),
	VERT( 0xbeb40d3b, 0x40a2c131, 0xc00a903a ),
	NORM( 0x3d46f716, 0x3f7c1304, 0xbe2b93a1 ),
	NFlagsW( 4740, 10.412042 ),
	VERT( 0xbec76707, 0x40a71069, 0x3edac26a ),
	NORM( 0x3c176309, 0x3f7e7c62, 0x3ddd9b73 ),
	NFlagsW( 4741, 16.542408 ),
	VERT( 0x3ede7d57, 0x401af0f9, 0xc0d48221 ),
	NORM( 0x3e54c42b, 0x3f133642, 0xbf4a925c ),
	NFlagsW( 4742, 0.040578 ),
	VERT( 0xbeba5f29, 0x4093b7e8, 0x401e9484 ),
	NORM( 0x3d994942, 0x3f668b6d, 0x3edb40ed ),
	NFlagsW( 4743, 16.879963 ),
	VERT( 0xbe419d43, 0x406309dc, 0x407d9f61 ),
	NORM( 0x3de46360, 0x3f37f012, 0x3f2fbfde ),
	NFlagsW( 4744, 17.379696 ),
	VERT( 0x3ee46944, 0x408f84bc, 0xc0790a31 ),
	NORM( 0x3e19bfb0, 0x3f6a173d, 0xbec0756a ),
	NFlagsW( 4745, 10.981663 ),
	VERT( 0x3eb7cc0b, 0x40a22553, 0xc003f138 ),
	NORM( 0x3d70a87d, 0x3f7b399f, 0xbe3b6efc ),
	NFlagsW( 4746, 21.079884 ),
	VERT( 0x3f43b40e, 0x407081ec, 0xc0a42755 ),
	NORM( 0x3e57093a, 0x3f4c1f7e, 0xbf10d80a ),
	NFlagsW( 4747, 6.100816 ),
	VERT( 0x3ec218c4, 0x40a73c88, 0x3eca618c ),
	NORM( 0xbc021f36, 0x3f7e8390, 0x3ddbbf95 ),
	NFlagsW( 4748, 27.026424 ),
	VERT( 0x3f9503c7, 0x40196b0b, 0xc0cf0347 ),
	NORM( 0x3e57eba5, 0x3f16cb92, 0xbf47b50a ),
	NFlagsW( 4749, 1.926327 ),
	VERT( 0x3f03abfa, 0x409488b4, 0x4015b52b ),
	NORM( 0x3c538675, 0x3f661141, 0x3ee07255 ),
	NFlagsW( 4750, 29.791006 ),
	VERT( 0x3f8a3f22, 0x408edf66, 0xc06c30e4 ),
	NORM( 0x3e18646a, 0x3f68fc7b, 0xbec60267 ),
	NFlagsW( 4751, 22.628277 ),
	VERT( 0x3f044b64, 0x4064d34a, 0x407598f8 ),
	NORM( 0x3dbc7e5d, 0x3f349eb6, 0x3f33e19e ),
	NFlagsW( 4752, 28.725359 ),
	VERT( 0x3fa6c525, 0x4071faa1, 0xc09d1261 ),
	NORM( 0x3e450c61, 0x3f4e88da, 0xbf0f0350 ),
	NFlagsW( 4753, 15.302223 ),
	VERT( 0x3f7eb92e, 0x40a13e2e, 0xbffaafd3 ),
	NORM( 0x3d9912c3, 0x3f7a555b, 0xbe481f45 ),
	NFlagsW( 4754, 30.931431 ),
	VERT( 0x3fe57fd1, 0x3ecdc1bd, 0xc0ec0a1a ),
	NORM( 0x3e6a7043, 0x3ea1a893, 0xbf6bba4a ),
	NFlagsW( 4755, 0.740425 ),
	VERT( 0x3f646c34, 0x40a764b6, 0x3ed85395 ),
	NORM( 0xbc53b146, 0x3f7e747a, 0x3ddf1979 ),
	NFlagsW( 4756, 33.205379 ),
	VERT( 0x3fd40d03, 0x401ce5ba, 0xc0c99853 ),
	NORM( 0x3e46b120, 0x3f1d8fc6, 0xbf438ed9 ),
	NFlagsW( 4757, 6.806544 ),
	VERT( 0x3f7ea036, 0x40953232, 0x40146569 ),
	NORM( 0xbc84b1ff, 0x3f647c41, 0x3ee6c41b ),
	NFlagsW( 4758, 35.176086 ),
	VERT( 0x4013a5e1, 0xbfea4e25, 0xc0f2f979 ),
	NORM( 0x3ead659c, 0x3c81a5e6, 0xbf70d68b ),
	NFlagsW( 4759, 0.175305 ),
	VERT( 0x3fc46d76, 0x408e68d9, 0xc062fa52 ),
	NORM( 0x3e2da877, 0x3f683b92, 0xbec52be3 ),
	NFlagsW( 4760, 30.777035 ),
	VERT( 0x3fdca733, 0x407321b6, 0xc0978920 ),
	NORM( 0x3e73662c, 0x3f4d6935, 0xbf0c2438 ),
	NFlagsW( 4761, 23.760649 ),
	VERT( 0x3f833f93, 0x4068968a, 0x406dd4b8 ),
	NORM( 0x3da4c73a, 0x3f3572b8, 0x3f33693d ),
	NFlagsW( 4762, 35.684937 ),
	VERT( 0x400d590a, 0x3f0812e1, 0xc0e7f3b7 ),
	NORM( 0x3e451fc1, 0x3ea49f21, 0xbf6d5824 ),
	NFlagsW( 4763, 3.054629 ),
	VERT( 0x3fbac11e, 0x40a09589, 0xbff10f22 ),
	NORM( 0x3d713f62, 0x3f7a225c, 0xbe517023 ),
	NFlagsW( 4764, 36.912720 ),
	VERT( 0x40045915, 0x401fcd5f, 0xc0c511bb ),
	NORM( 0x3e811139, 0x3f1f11fd, 0xbf3dea7a ),
	NFlagsW( 4765, 13.288334 ),
	VERT( 0x3fb3e5e9, 0x40a78d23, 0x3ee645af ),
	NORM( 0xbcb85942, 0x3f7e6274, 0x3de109bf ),
	NFlagsW( 4766, 38.321602 ),
	VERT( 0x3fbcca36, 0x4095dbd1, 0x401315b1 ),
	NORM( 0xbc8bd804, 0x3f6321db, 0x3eec0855 ),
	NFlagsW( 4767, 39.592308 ),
	VERT( 0x3fff683a, 0x408b416f, 0xc061d514 ),
	NORM( 0x3e1fd0d2, 0x3f66ea34, 0xbece165e ),
	NFlagsW( 4768, 37.379913 ),
	VERT( 0x4006900f, 0x407de888, 0xc08990f7 ),
	NORM( 0x3e6376b8, 0x3f56300e, 0xbf0029d9 ),
	NFlagsW( 4769, 33.420364 ),
	VERT( 0x3ff3c236, 0x409fdd57, 0xbff18574 ),
	NORM( 0x3d0b211f, 0x3f78adf6, 0xbe70a0c8 ),
	NFlagsW( 4770, 41.067768 ),
	VERT( 0x3fc4596c, 0x406c59c6, 0x4066104a ),
	NORM( 0x3cfb59da, 0x3f33686f, 0x3f367291 ),
	NFlagsW( 4771, 41.064350 ),
	VERT( 0x40368ade, 0xbfcb4a05, 0xc0edd732 ),
	NORM( 0x3ea7776c, 0x3c04a0b8, 0xbf71e8f7 ),
	NFlagsW( 4772, 2.375899 ),
	VERT( 0x401bbc97, 0x403516e6, 0xc0b6f867 ),
	NORM( 0x3e153f60, 0x3f33e043, 0xbf324b08 ),
	NFlagsW( 4773, 24.340277 ),
	VERT( 0x402f8087, 0x3f3dff5f, 0xc0e2027e ),
	NORM( 0x3e44f6d7, 0x3eb5079d, 0xbf6a58c2 ),
	NFlagsW( 4774, 9.577654 ),
	VERT( 0x3fd4ef1e, 0x3ff7152a, 0x409c3623 ),
	NORM( 0x3e1ae07a, 0x3eed6b97, 0x3f5f7bb2 ),
	NFlagsW( 4775, 40.606171 ),
	VERT( 0x3ff08ef6, 0x40a840e4, 0x3eafbc39 ),
	NORM( 0xbc591127, 0x3f7f83f9, 0x3d75f488 ),
	NFlagsW( 4776, 41.934540 ),
	VERT( 0x4022a439, 0x4086d40a, 0xc06a9a6f ),
	NORM( 0x3df1e5ea, 0x3f626701, 0xbee733e1 ),
	NFlagsW( 4777, 41.959637 ),
	VERT( 0x3ffe5b44, 0x40046be7, 0x4097f035 ),
	NORM( 0x3dfc4126, 0x3ef057f6, 0x3f5fd4d7 ),
	NFlagsW( 4778, 43.818207 ),
	VERT( 0x4002a043, 0x409a19ae, 0x400251f4 ),
	NORM( 0xbcec7388, 0x3f6b852d, 0x3ec81dbd ),
	NFlagsW( 4779, 43.541817 ),
	VERT( 0x40502808, 0xbf93d119, 0xc0e88c80 ),
	NORM( 0x3e958e19, 0x3d39dfe5, 0xbf748f3e ),
	NFlagsW( 4780, 8.441360 ),
	VERT( 0x40352256, 0x4046e67b, 0xc0ac39b8 ),
	NORM( 0x3cea1514, 0x3f4321e7, 0xbf258c0a ),
	NFlagsW( 4781, 32.646248 ),
	VERT( 0x404a2a57, 0x3f838d4a, 0xc0db78b9 ),
	NORM( 0x3e1e4399, 0x3ecd7459, 0xbf671f61 ),
	NFlagsW( 4782, 17.766342 ),
	VERT( 0x400a0b4c, 0x4079ff27, 0x405a18ca ),
	NORM( 0xbd8dc70f, 0x3f386eff, 0x3f30a718 ),
	NFlagsW( 4783, 44.728756 ),
	VERT( 0x40227d53, 0x40a00626, 0xbfed112f ),
	NORM( 0x3d668439, 0x3f7743a0, 0xbe817150 ),
	NFlagsW( 4784, 45.097202 ),
	VERT( 0x406ddfb7, 0xc06e3101, 0xc0dae916 ),
	NORM( 0x3ee5a609, 0xbeb79be9, 0xbf519435 ),
	NFlagsW( 4785, 4.080634 ),
	VERT( 0x401b5d97, 0x4018bd3b, 0x40918287 ),
	NORM( 0xbc08c743, 0x3ef3fabc, 0x3f610e31 ),
	NFlagsW( 4786, 46.467175 ),
	VERT( 0x4025f463, 0x40a82b17, 0x3ea1ff55 ),
	NORM( 0x3d1edbe0, 0x3f7f801c, 0x3d487113 ),
	NFlagsW( 4787, 46.068760 ),
	VERT( 0x40621366, 0x3fb2dd52, 0xc0d4de0f ),
	NORM( 0x3c2da0e6, 0x3eea0a0a, 0xbf63ac52 ),
	NFlagsW( 4788, 25.307604 ),
	VERT( 0x40723609, 0xbf1abced, 0xc0e33479 ),
	NORM( 0x3e5b755a, 0x3d884c9b, 0xbf79787d ),
	NFlagsW( 4789, 18.958120 ),
	VERT( 0x40299434, 0x409bfbb2, 0x3ff4632e ),
	NORM( 0x3ada88ee, 0x3f6ebbd2, 0x3eb8d8b0 ),
	NFlagsW( 4790, 46.509533 ),
	VERT( 0x40631c3a, 0x4045d082, 0xc0aa09ee ),
	NORM( 0x3d322b47, 0x3f3efe76, 0xbf2a190e ),
	NFlagsW( 4791, 39.906097 ),
	VERT( 0x40369f4d, 0x3f803e34, 0x409f9695 ),
	NORM( 0x3d9f1d7c, 0x3e453e84, 0x3f7a6ad7 ),
	NFlagsW( 4792, 48.192345 ),
	VERT( 0x40348906, 0x4082cd54, 0x4054d058 ),
	NORM( 0xbd51feef, 0x3f43c284, 0x3f2471ab ),
	NFlagsW( 4793, 46.875134 ),
	VERT( 0x405c6c12, 0x40845582, 0xc06a3169 ),
	NORM( 0x3d206c24, 0x3f629e63, 0xbeed5043 ),
	NFlagsW( 4794, 47.027172 ),
	VERT( 0x40892f7f, 0xc04f3c89, 0xc0d86196 ),
	NORM( 0x3ecdc0dd, 0xbeae0b68, 0xbf59ab1b ),
	NFlagsW( 4795, 14.060563 ),
	VERT( 0x4084f928, 0xbc4499d0, 0xc0dffa85 ),
	NORM( 0x3d863dad, 0x3e0e0fdc, 0xbf7cf7f3 ),
	NFlagsW( 4796, 25.873306 ),
	VERT( 0x40820fa5, 0x3fca9d6a, 0xc0d1c2f8 ),
	NORM( 0x3cec0e05, 0x3ef3e39c, 0xbf60f818 ),
	NFlagsW( 4797, 31.586317 ),
	VERT( 0x405fcc71, 0x409ccfb4, 0xbfec52ef ),
	NORM( 0x3d67cd42, 0x3f76afc9, 0xbe85be29 ),
	NFlagsW( 4798, 48.964096 ),
	VERT( 0x4091a7c9, 0xc0c277f9, 0xc088eabb ),
	NORM( 0x3ee69f30, 0xbf4c9e1e, 0xbecbad21 ),
	NFlagsW( 4799, 25.281452 ),
	VERT( 0x405835c0, 0x403402f6, 0x408c0f23 ),
	NORM( 0xbd75b035, 0x3efef19c, 0x3f5d7993 ),
	NFlagsW( 4800, 48.765732 ),
	VERT( 0x40677afc, 0x40a4fe45, 0x3dcf93be ),
	NORM( 0x3d8e596b, 0x3f7f5f01, 0xbc0eae3f ),
	NFlagsW( 4801, 49.847382 ),
	VERT( 0x406c574f, 0x3fbb9bed, 0x409d5d6b ),
	NORM( 0x3b274749, 0x3e524058, 0x3f7a8b7e ),
	NFlagsW( 4802, 49.449284 ),
	VERT( 0x406f8025, 0x409e379a, 0x3fd4cc1c ),
	NORM( 0x3d0f2e4e, 0x3f743b87, 0x3e986639 ),
	NFlagsW( 4803, 49.502583 ),
	VERT( 0x407d6a28, 0xbe66cf0f, 0x409f2b07 ),
	NORM( 0x3de3cbe3, 0xbe092d39, 0x3f7c16ea ),
	NFlagsW( 4804, 49.871681 ),
	VERT( 0x40a69dcb, 0xc01a3f0a, 0xc0d56f36 ),
	NORM( 0x3e88ded5, 0xbe9aa805, 0xbf6a3ff6 ),
	NFlagsW( 4805, 33.090977 ),
	VERT( 0x407bd86b, 0x40860cf8, 0x4048dc80 ),
	NORM( 0x3cdf6b07, 0x3f5088db, 0x3f145372 ),
	NFlagsW( 4806, 49.439079 ),
	VERT( 0x40ac6046, 0x3d0797ad, 0xc0dc1fff ),
	NORM( 0x3ddd3e3d, 0x3dc2edc5, 0xbf7d552f ),
	NFlagsW( 4807, 38.663288 ),
	VERT( 0x40ac8f40, 0x3fd28dd6, 0xc0cd89c1 ),
	NORM( 0x3d9a3186, 0x3ee7c1ff, 0xbf6374f0 ),
	NFlagsW( 4808, 43.372944 ),
	VERT( 0x408ca9de, 0x4044f7d0, 0x40894aa2 ),
	NORM( 0x3c54901b, 0x3f11d41f, 0x3f5260d3 ),
	NFlagsW( 4809, 49.704300 ),
	VERT( 0x40a0e373, 0xc06a8080, 0x4047396e ),
	NORM( 0x3daa491c, 0xbf1938a1, 0x3f4bf9d5 ),
	NFlagsW( 4810, 50.000660 ),
	VERT( 0x409e4c36, 0xbffa42ea, 0x40865c9d ),
	NORM( 0x3dee42ce, 0xbed2a9db, 0x3f676af9 ),
	NFlagsW( 4811, 50.000000 ),
	VERT( 0x40ac517d, 0x404ad52e, 0xc0a5b2dd ),
	NORM( 0x3c9af983, 0x3f4093da, 0xbf2899f4 ),
	NFlagsW( 4812, 49.655933 ),
	VERT( 0x40bf6f01, 0xc0ab37ef, 0xc0843dba ),
	NORM( 0x3e9368a2, 0xbf54967d, 0xbef436b0 ),
	NFlagsW( 4813, 57.924335 ),
	VERT( 0x409a2bd8, 0x3fe1f690, 0x409ae559 ),
	NORM( 0x3ce967e4, 0x3e69a0c0, 0x3f792433 ),
	NFlagsW( 4814, 49.960899 ),
	VERT( 0x40bd1196, 0xc0b60534, 0xbf10c0c2 ),
	NORM( 0x3e6de65d, 0xbf7584ab, 0x3e25de3e ),
	NFlagsW( 4815, 63.065720 ),
	VERT( 0x40b1a9ae, 0x408688ed, 0xc0635bf4 ),
	NORM( 0x3bdefc76, 0x3f63c9e5, 0xbee9a045 ),
	NFlagsW( 4816, 53.546597 ),
	VERT( 0x40b764d8, 0xc093c6c7, 0x4003d581 ),
	NORM( 0x3e35d357, 0xbf53520a, 0x3f09296e ),
	NFlagsW( 4817, 52.442825 ),
	VERT( 0x40a593b4, 0x3e37467f, 0x409cf356 ),
	NORM( 0x3dca5e13, 0xbddfc4ce, 0x3f7d34f9 ),
	NFlagsW( 4818, 50.000000 ),
	VERT( 0x40b7320b, 0x409c0eac, 0xbff3edb1 ),
	NORM( 0x3c9984f4, 0x3f78718c, 0xbe763655 ),
	NFlagsW( 4819, 59.213875 ),
	VERT( 0x40b7de3a, 0xc00bb7f9, 0x40819d13 ),
	NORM( 0x3c4b1508, 0xbed9a86c, 0x3f67b1b6 ),
	NFlagsW( 4820, 50.000000 ),
	VERT( 0x40bafc83, 0x40a1ae74, 0xbd3b62a3 ),
	NORM( 0x3d367023, 0x3f7fbe4d, 0xbb920c64 ),
	NFlagsW( 4821, 63.235519 ),
	VERT( 0x40c7397e, 0xc063e14f, 0x404398c2 ),
	NORM( 0x3d59a2ca, 0xbf298238, 0x3f3f5b96 ),
	NFlagsW( 4822, 50.343903 ),
	VERT( 0x40e10f3c, 0xc02b78d0, 0xc0bf5c53 ),
	NORM( 0x3e407683, 0xbee2c0c2, 0xbf606cd8 ),
	NFlagsW( 4823, 62.234070 ),
	VERT( 0x40bd09bf, 0x409d0d49, 0x3fb5ed81 ),
	NORM( 0x3d801ab5, 0x3f77ef8b, 0x3e76d184 ),
	NFlagsW( 4824, 61.855591 ),
	VERT( 0x40e2dd40, 0xbe4ef9ee, 0xc0d57798 ),
	NORM( 0x3e143280, 0xbc24f25f, 0xbf7d4ab0 ),
	NFlagsW( 4825, 61.911713 ),
	VERT( 0x40c27be2, 0x40883cfc, 0x40403736 ),
	NORM( 0x3d91e8e4, 0x3f5289e2, 0x3f107cfd ),
	NFlagsW( 4826, 56.698883 ),
	VERT( 0x40c8e381, 0x3d671702, 0x4098ee63 ),
	NORM( 0x3d83dd1c, 0xbe20fd51, 0x3f7c4750 ),
	NFlagsW( 4827, 50.003815 ),
	VERT( 0x40c4b1be, 0x403fa862, 0x4086d702 ),
	NORM( 0x3da3fb4b, 0x3f14c339, 0x3f4f545c ),
	NFlagsW( 4828, 51.565403 ),
	VERT( 0x40c87758, 0x3fe1e184, 0x40997e7a ),
	NORM( 0x3cfb60e3, 0x3e5e485b, 0x3f79c5b6 ),
	NFlagsW( 4829, 50.412743 ),
	VERT( 0x40d6f62b, 0xc01b257f, 0x407d9fba ),
	NORM( 0xbca4f3b4, 0xbeecb781, 0x3f62f00d ),
	NFlagsW( 4830, 50.131470 ),
	VERT( 0x40eddfdb, 0x3fc840e9, 0xc0c646e6 ),
	NORM( 0x3de00f74, 0x3ec6cafc, 0xbf6a3f61 ),
	NFlagsW( 4831, 72.236374 ),
	VERT( 0x40f53678, 0x403b5262, 0xc0ab4ca3 ),
	NORM( 0x3da20b3b, 0x3f2e8530, 0xbf3a31ca ),
	NFlagsW( 4832, 82.329903 ),
	VERT( 0x40ec9d23, 0xbc16a429, 0x40967b37 ),
	NORM( 0xbc8a9e3a, 0xbe3b6f77, 0x3f7ba33b ),
	NFlagsW( 4833, 51.283009 ),
	VERT( 0x41001af5, 0x4085d540, 0xc0612ab3 ),
	NORM( 0x3d57a2fe, 0x3f629982, 0xbeecb3b3 ),
	NFlagsW( 4834, 93.268677 ),
	VERT( 0x40f345bf, 0x3fbda175, 0x409b9519 ),
	NORM( 0xbbac3f69, 0x3e4487e5, 0x3f7b3cbf ),
	NFlagsW( 4835, 57.964413 ),
	VERT( 0x410dfef4, 0xc0a5c829, 0xc052717c ),
	NORM( 0x3e0b7702, 0xbf6fd129, 0xbea505d9 ),
	NFlagsW( 4836, 99.948082 ),
	VERT( 0x410a7513, 0xc0a51907, 0xbdfca494 ),
	NORM( 0x3dc9179b, 0xbf7ab33d, 0x3e3543fd ),
	NFlagsW( 4837, 98.061172 ),
	VERT( 0x41029afa, 0x40995d87, 0xbff52e88 ),
	NORM( 0x3d5119df, 0x3f789fce, 0xbe6e5dfd ),
	NFlagsW( 4838, 98.152565 ),
	VERT( 0x4109ba54, 0xc08f3085, 0x4001ed8a ),
	NORM( 0x3d3c64f9, 0xbf5bf23a, 0x3f0276f1 ),
	NFlagsW( 4839, 94.371971 ),
	VERT( 0x40fe3fb7, 0x4032c409, 0x4082a8ff ),
	NORM( 0x3d3daa0a, 0x3f1866a2, 0x3f4d5a1d ),
	NFlagsW( 4840, 70.964806 ),
	VERT( 0x41045c02, 0x409dca41, 0xbe0f9a7d ),
	NORM( 0x3d16d37c, 0x3f7fd1ef, 0x3be615d1 ),
	NFlagsW( 4841, 99.253441 ),
	VERT( 0x4104626a, 0x40832304, 0x4033d8c3 ),
	NORM( 0x3d42472d, 0x3f53a16d, 0x3f0f87dd ),
	NFlagsW( 4842, 93.736732 ),
	VERT( 0x4106e9d8, 0x4098b339, 0x3fa2b1af ),
	NORM( 0x3d10c542, 0x3f771a01, 0x3e8496ab ),
	NFlagsW( 4843, 99.453773 ),
	VERT( 0x411628cc, 0xc01c9a65, 0x40831c85 ),
	NORM( 0xbcfe964c, 0xbf065836, 0x3f59c565 ),
	NFlagsW( 4844, 97.644463 ),
	VERT( 0x411fd3f7, 0xbee30926, 0x40993214 ),
	NORM( 0xbd4f430c, 0xbe4f45b5, 0x3f7a5dac ),
	NFlagsW( 4845, 99.802231 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_UpperArm[]
START
VList      vertex_kihon11_Bip01_Bip01_L_UpperArm,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_UpperArm[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_UpperArm,
OPosition  ( 10.968479F,  0.000003F,  0.000001F ),
OAngle     ( 13.848063F,  5.650157F,  7.700972F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_Forearm,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_L_Clavicle[]
START
	CnkV_VN(FV_CONT, 115),
	OffnbIdx(2232, 19),
	VERT( 0x407aa9b9, 0x4030312d, 0xc1023035 ),
	NORM( 0x3dcd52f8, 0x3f1c9203, 0xbf48e7cc ),
	VERT( 0x40b76cea, 0x40aafaa1, 0xc09e9191 ),
	NORM( 0x3e827ac2, 0x3f5e2f7c, 0xbeda4bfc ),
	VERT( 0x40bf9605, 0x40915044, 0xc0bd287a ),
	NORM( 0x3e320d31, 0x3f43e54b, 0xbf1eae31 ),
	VERT( 0x40b92ede, 0x40b61c6f, 0xc06c3b22 ),
	NORM( 0x3e8fc34e, 0x3f734181, 0xbe0a4fa5 ),
	VERT( 0x40d946e7, 0x40444e0c, 0xc0f3a17a ),
	NORM( 0x3e0b1ee0, 0x3f293aa1, 0xbf3ce991 ),
	VERT( 0x40e2564d, 0x405c8301, 0x408380f3 ),
	NORM( 0x3ceda6d0, 0x3f5399a7, 0x3f0fe57e ),
	VERT( 0x40e10bc5, 0x40866e29, 0x400cd591 ),
	NORM( 0xbd83f3aa, 0x3f6d5117, 0x3ebd2715 ),
	VERT( 0x40e3fc88, 0x4088060b, 0xc0bcfde8 ),
	NORM( 0x3e38a672, 0x3f49232c, 0xbf177d10 ),
	VERT( 0x40ddb8da, 0x40ac3858, 0xc068ba3d ),
	NORM( 0x3e51a75b, 0x3f7815f8, 0xbe0cfb5c ),
	VERT( 0x40de5a8b, 0x40ac7cec, 0xbff04a0d ),
	NORM( 0x3e06ac87, 0x3f7d8ed0, 0x3d286f1f ),
	VERT( 0x40dfb803, 0x40a8c02d, 0xbf171ba3 ),
	NORM( 0x3d664abb, 0x3f7a37f1, 0x3e509879 ),
	VERT( 0x40e1903b, 0x40a0237d, 0xc09c586d ),
	NORM( 0x3e525a3e, 0x3f61cb13, 0xbed924e0 ),
	VERT( 0x40ff55cc, 0x4030e5e8, 0xc0f43b4f ),
	NORM( 0x3e3e4be5, 0x3f26d646, 0xbf3c400a ),
	VERT( 0x410a1e05, 0x40a5c528, 0xc050528b ),
	NORM( 0x3d878533, 0x3f7c6248, 0xbe1d8cd8 ),
	VERT( 0x410ceeeb, 0x4098a389, 0xc0948a1d ),
	NORM( 0x3de68028, 0x3f68352a, 0xbecfb4ab ),
	VERT( 0x4113fd79, 0x4078ae75, 0xc0be497a ),
	NORM( 0x3dba6e2e, 0x3f4407e9, 0xbf22fcb8 ),
	VERT( 0x411db394, 0x400bd1a0, 0xc0f2eb71 ),
	NORM( 0x3e3520ab, 0x3f18c9bf, 0xbf485a64 ),
	VERT( 0x4131af97, 0x400896ee, 0xc0ec4dbf ),
	NORM( 0x3dfd13f9, 0x3f0bdfb2, 0xbf54100a ),
	VERT( 0x4140fe74, 0x3df59c18, 0xc102934c ),
	NORM( 0x3e81c806, 0x3e94e704, 0xbf6c2ec0 ),
	CnkV_VN_NF(FV_CONT|FW_START, 799),
	OffnbIdx(4732, 114),
	VERT( 0x410cc659, 0x409591ca, 0x3ff96670 ),
	NORM( 0xbde343ab, 0x3f6d3a92, 0x3eb7dd1b ),
	NFlagsW( 0, 98.149147 ),
	VERT( 0x410bc2f9, 0x40a7cc63, 0xbf47999d ),
	NORM( 0xbca720d2, 0x3f7eb0bb, 0x3dcaa066 ),
	NFlagsW( 1, 98.950714 ),
	VERT( 0x411287bb, 0x406347bb, 0x40817aac ),
	NORM( 0x3d241132, 0x3f420c97, 0x3f26a91d ),
	NFlagsW( 2, 99.147110 ),
	VERT( 0x41158ff4, 0x40989cdc, 0x3feeda0b ),
	NORM( 0xbdb11d83, 0x3f6ed2b7, 0x3eb2fd73 ),
	NFlagsW( 3, 93.642982 ),
	VERT( 0x411b0ed0, 0x406b2fc9, 0x407568e2 ),
	NORM( 0x3d78a4e7, 0x3f462a0f, 0x3f2152ec ),
	NFlagsW( 4, 95.044128 ),
	VERT( 0x411fc9ae, 0x400e6a7f, 0x40a03224 ),
	NORM( 0x3e118512, 0x3f11ed02, 0x3f4f2ac0 ),
	NFlagsW( 5, 96.470604 ),
	VERT( 0x411b4ef8, 0x40a7bd2c, 0xc03ba49f ),
	NORM( 0xb9111d4c, 0x3f7cd17e, 0xbe20f0e5 ),
	NFlagsW( 6, 97.871605 ),
	VERT( 0x411d2bc6, 0x409aaefe, 0xc08bf415 ),
	NORM( 0x3d4997f6, 0x3f6b1f5b, 0xbec8f1c0 ),
	NFlagsW( 7, 99.732422 ),
	VERT( 0x411cdde8, 0x40ab285b, 0xbf588a17 ),
	NORM( 0xbda0b092, 0x3f7e9e6f, 0x3d8af7be ),
	NFlagsW( 8, 89.587959 ),
	VERT( 0x41214cc5, 0x409c8b0f, 0x3fd8eb4d ),
	NORM( 0xbdaa949a, 0x3f6fc391, 0x3eae4b3a ),
	NFlagsW( 9, 83.457588 ),
	VERT( 0x4124be61, 0x4078a4f1, 0xc0bc3ee9 ),
	NORM( 0x3d30d9e2, 0x3f42a7ab, 0xbf25e6c2 ),
	NFlagsW( 10, 99.959427 ),
	VERT( 0x4126e4f5, 0x407681c6, 0x4061e298 ),
	NORM( 0x3d02f4fb, 0x3f488284, 0x3f1ef2f8 ),
	NFlagsW( 11, 83.120033 ),
	VERT( 0x412e7e32, 0x4020a5a9, 0x40962959 ),
	NORM( 0x3df66c37, 0x3f0def14, 0x3f52d007 ),
	NFlagsW( 12, 82.620308 ),
	VERT( 0x4126fab2, 0x40a86311, 0xc02f11c4 ),
	NORM( 0x3b3673f8, 0x3f7cb189, 0xbe2405e2 ),
	NFlagsW( 13, 89.018333 ),
	VERT( 0x4128527b, 0x40acdc0d, 0xbf520560 ),
	NORM( 0xbd8f6d84, 0x3f7f093e, 0x3d514f4e ),
	NFlagsW( 14, 78.920120 ),
	VERT( 0x412abb3d, 0x409c2e22, 0xc0845faf ),
	NORM( 0x3d4db77a, 0x3f6cb745, 0xbec13fa8 ),
	NFlagsW( 15, 93.899193 ),
	VERT( 0x412d5a3f, 0x40a03809, 0x3fcb7112 ),
	NORM( 0xbdcd8abe, 0x3f6f41b0, 0x3eaeb96e ),
	NFlagsW( 16, 72.973572 ),
	VERT( 0x4130a532, 0x407aef51, 0xc0b96a7f ),
	NORM( 0x3d3cfc0f, 0x3f45938f, 0xbf225b99 ),
	NFlagsW( 17, 98.073669 ),
	VERT( 0x41346dc3, 0x4080c8cc, 0x40542a9a ),
	NORM( 0xbce24871, 0x3f455a26, 0x3f22e7bf ),
	NFlagsW( 18, 70.209000 ),
	VERT( 0x41316c7a, 0x40a906f5, 0xc026f4ef ),
	NORM( 0x3a13b744, 0x3f7c346d, 0xbe2fab0c ),
	NFlagsW( 19, 77.371719 ),
	VERT( 0x41395408, 0x402a325e, 0x40904607 ),
	NORM( 0x3dd61ae4, 0x3f092395, 0x3f56816d ),
	NFlagsW( 20, 71.274635 ),
	VERT( 0x4133a303, 0x409d995a, 0xc07e1ac0 ),
	NORM( 0x3d065b5c, 0x3f6e088b, 0xbebbad19 ),
	NFlagsW( 21, 84.697784 ),
	VERT( 0x41329d87, 0x40adf636, 0xbf4a44be ),
	NORM( 0xbd632f99, 0x3f7f6ed5, 0x3d166c9c ),
	NFlagsW( 22, 69.068565 ),
	VERT( 0x413c226d, 0x40120e2c, 0xc0e6a6a7 ),
	NORM( 0x3d9a3ade, 0x3f0abc48, 0xbf564835 ),
	NFlagsW( 23, 99.259575 ),
	VERT( 0x41357f28, 0x40a25d5d, 0x3fc87e1c ),
	NORM( 0xbdd71f38, 0x3f6eef8d, 0x3eafc1b7 ),
	NFlagsW( 24, 66.794624 ),
	VERT( 0x4138aa9c, 0x40800857, 0xc0b55184 ),
	NORM( 0x3cebc4a0, 0x3f4a9a58, 0xbf1c5025 ),
	NFlagsW( 25, 93.193459 ),
	VERT( 0x413bee1f, 0x40839ec2, 0x40503030 ),
	NORM( 0xbd5d9bb3, 0x3f421f4d, 0x3f2650a9 ),
	NFlagsW( 26, 64.823906 ),
	VERT( 0x41479e63, 0x3e7a2945, 0xc0fffc7b ),
	NORM( 0x3e5a1c1c, 0x3e8b05f2, 0xbf7045c6 ),
	NFlagsW( 27, 99.824692 ),
	VERT( 0x4138e99c, 0x40a97c76, 0xc02123b8 ),
	NORM( 0x3cb0a9dc, 0x3f7c17a1, 0xbe30dc4c ),
	NFlagsW( 28, 69.222969 ),
	VERT( 0x413a9965, 0x409eb5a4, 0xc075c8c1 ),
	NORM( 0x3da27855, 0x3f6dd982, 0xbeb8f1b8 ),
	NFlagsW( 29, 76.239349 ),
	VERT( 0x414101b6, 0x4033e991, 0x408b5dff ),
	NORM( 0x3dbd888f, 0x3f09a60e, 0x3f568a53 ),
	NFlagsW( 30, 64.315056 ),
	VERT( 0x4142bace, 0x401bc776, 0xc0e305cc ),
	NORM( 0x3d1b74ce, 0x3f0b48cf, 0xbf56929f ),
	NFlagsW( 31, 96.945366 ),
	VERT( 0x413a1fdf, 0x40aec40b, 0xbf449d24 ),
	NORM( 0xbd93c937, 0x3f7f38e9, 0x3cf0199a ),
	NFlagsW( 32, 63.087280 ),
	VERT( 0x413f5d8f, 0x40822c9c, 0xc0b1e539 ),
	NORM( 0x3db49e23, 0x3f4cc666, 0xbf17f722 ),
	NFlagsW( 33, 86.711670 ),
	VERT( 0x413da40b, 0x40a482ee, 0x3fc58b6b ),
	NORM( 0xbdea2b8e, 0x3f6e7c7d, 0x3eb0acab ),
	NFlagsW( 34, 61.678402 ),
	VERT( 0x41436e79, 0x408674d7, 0x404c35df ),
	NORM( 0xbd597ab1, 0x3f403207, 0x3f288f1f ),
	NFlagsW( 35, 60.407692 ),
	VERT( 0x4140633e, 0x40a8477f, 0xc0247048 ),
	NORM( 0x3bd77a4f, 0x3f7b5be3, 0xbe41fb93 ),
	NFlagsW( 36, 62.620087 ),
	VERT( 0x41412c28, 0x40a26482, 0xc05a9bcf ),
	NORM( 0x3d87b1ff, 0x3f731a70, 0xbe9cd503 ),
	NFlagsW( 37, 66.579636 ),
	VERT( 0x41412ebb, 0x40afff60, 0xbf521a43 ),
	NORM( 0xbdccce71, 0x3f7eb76f, 0x3a807a51 ),
	NFlagsW( 38, 58.932240 ),
	VERT( 0x4148af62, 0x403da0c9, 0x408675e1 ),
	NORM( 0x3d3ba6d1, 0x3f054c73, 0x3f5a3e29 ),
	NFlagsW( 39, 58.935650 ),
	VERT( 0x4150221c, 0x3f03d1d2, 0xc0fae58b ),
	NORM( 0x3e4eb6e9, 0x3e86e46c, 0xbf717cdf ),
	NFlagsW( 40, 97.624107 ),
	VERT( 0x41457520, 0x408ad848, 0xc0a2e395 ),
	NORM( 0xbca07d1e, 0x3f5a9f1b, 0xbf051978 ),
	NFlagsW( 41, 75.659721 ),
	VERT( 0x414b2ac7, 0x402aae40, 0xc0dd5b61 ),
	NORM( 0x3d12e4e9, 0x3f1286b2, 0xbf51b7e8 ),
	NFlagsW( 42, 90.422348 ),
	VERT( 0x415059e3, 0x3f7d6bde, 0x40a067ee ),
	NORM( 0x3e576570, 0x3e8b39f7, 0x3f706567 ),
	NFlagsW( 43, 59.384304 ),
	VERT( 0x4144dd68, 0x40a7f9f3, 0x3fb31154 ),
	NORM( 0xbde562d4, 0x3f72c1a9, 0x3e9817f5 ),
	NFlagsW( 44, 58.065456 ),
	VERT( 0x4148f5a7, 0x40a751a7, 0xc0327648 ),
	NORM( 0xbd1026b0, 0x3f78865a, 0xbe72fd2d ),
	NFlagsW( 45, 58.040363 ),
	VERT( 0x4154f30a, 0x3f9936e0, 0x409c50af ),
	NORM( 0x3e3a98c8, 0x3e8bf9aa, 0x3f71c9d0 ),
	NFlagsW( 46, 56.181789 ),
	VERT( 0x414b9b2c, 0x408ed8fb, 0x403a7738 ),
	NORM( 0xbd9df03b, 0x3f4beb63, 0x3f1980b0 ),
	NFlagsW( 47, 56.458187 ),
	VERT( 0x41560b1c, 0x3f731506, 0xc0f3bdcb ),
	NORM( 0x3e25f7ab, 0x3e981ee6, 0xbf70e483 ),
	NFlagsW( 48, 91.558640 ),
	VERT( 0x414becc8, 0x4092b95b, 0xc097a2e0 ),
	NORM( 0xbe0a7037, 0x3f627d2c, 0xbee464ca ),
	NFlagsW( 49, 67.353752 ),
	VERT( 0x4151aadf, 0x403cf1fa, 0xc0d62cf6 ),
	NORM( 0xbba0ab1b, 0x3f1c4d33, 0xbf4abde8 ),
	NFlagsW( 50, 82.233658 ),
	VERT( 0x4151c561, 0x4052cd85, 0x40805778 ),
	NORM( 0xbd6c424b, 0x3f080a21, 0x3f585be4 ),
	NFlagsW( 51, 55.271244 ),
	VERT( 0x414b41ba, 0x40b29bfc, 0xbf592f36 ),
	NORM( 0xbda32a95, 0x3f7f22d3, 0xbca1e050 ),
	NFlagsW( 52, 54.902798 ),
	VERT( 0x41629e86, 0xbfc7f334, 0xc0fb9772 ),
	NORM( 0x3ec0ec1b, 0xbdd24742, 0xbf6bab88 ),
	NFlagsW( 53, 95.919365 ),
	VERT( 0x415af2eb, 0x3fcdba77, 0x409722d2 ),
	NORM( 0x3d56839d, 0x3e85f4c3, 0x3f76b808 ),
	NFlagsW( 54, 53.532822 ),
	VERT( 0x4150136b, 0x40ab21dc, 0x3fa6ac9c ),
	NORM( 0xbd7e571a, 0x3f75280f, 0x3e8ff76d ),
	NFlagsW( 55, 53.931244 ),
	VERT( 0x41575988, 0x4054019c, 0xc0ce2782 ),
	NORM( 0xbe1abf5a, 0x3f2468fa, 0xbf406058 ),
	NFlagsW( 56, 74.692390 ),
	VERT( 0x415dd689, 0x3fc1d543, 0xc0ec0f3f ),
	NORM( 0x3da5395d, 0x3e9f7a7c, 0xbf7262e5 ),
	NFlagsW( 57, 81.041878 ),
	VERT( 0x4154d9fe, 0x40942c92, 0x402facfa ),
	NORM( 0xbd5587e5, 0x3f51c6e3, 0x3f121f23 ),
	NFlagsW( 58, 53.490459 ),
	VERT( 0x41576d76, 0x4094c65a, 0xc097ea7f ),
	NORM( 0xbdf7d151, 0x3f600649, 0xbeefe961 ),
	NFlagsW( 59, 60.093903 ),
	VERT( 0x4164ed2f, 0x3e6a2aaf, 0x4098d7e0 ),
	NORM( 0x3e386a52, 0xbcbde82b, 0x3f7bbe90 ),
	NFlagsW( 60, 51.805973 ),
	VERT( 0x415bc503, 0x4064dc0b, 0x407a28ff ),
	NORM( 0xbd4fd54d, 0x3f16535d, 0x3f4ececc ),
	NFlagsW( 61, 53.124863 ),
	VERT( 0x415759df, 0x40a8b7bd, 0xc038f14d ),
	NORM( 0xbdeacf5d, 0x3f76b95d, 0xbe76a1e0 ),
	NFlagsW( 62, 52.972824 ),
	VERT( 0x416af397, 0xbf84b8ee, 0xc0f74204 ),
	NORM( 0x3ea648f8, 0xbdab925d, 0xbf712bbd ),
	NFlagsW( 63, 85.939438 ),
	VERT( 0x4162e1e5, 0x40073c68, 0xc0e59854 ),
	NORM( 0xbd9a9107, 0x3eba90e2, 0xbf6d9d81 ),
	NFlagsW( 64, 74.126694 ),
	VERT( 0x415f9fa2, 0x40629dc0, 0xc0cb6a4a ),
	NORM( 0xbe091500, 0x3f292df2, 0xbf3d0cc0 ),
	NFlagsW( 65, 68.413681 ),
	VERT( 0x415a8e24, 0x40b38dde, 0xbf7603b6 ),
	NORM( 0xbda43871, 0x3f7f125c, 0xbce9026c ),
	NFlagsW( 66, 51.035904 ),
	VERT( 0x417903f4, 0xc0899513, 0xc0c0f387 ),
	NORM( 0x3ef54af7, 0xbf1f4c12, 0xbf1e7cc7 ),
	NFlagsW( 67, 74.718544 ),
	VERT( 0x4168e048, 0x400bc03f, 0x40921f47 ),
	NORM( 0xbb2aeac1, 0x3e8e9f2d, 0x3f75ddd1 ),
	NFlagsW( 68, 51.234268 ),
	VERT( 0x415ff6c0, 0x40adfaf5, 0x3f784d36 ),
	NORM( 0xbd1ff5d9, 0x3f796441, 0x3e63adbd ),
	NFlagsW( 69, 50.152618 ),
	VERT( 0x41713cbc, 0x3f4dcd8a, 0x409795f1 ),
	NORM( 0x3dd66c88, 0xbcac7528, 0x3f7e8937 ),
	NFlagsW( 70, 50.550716 ),
	VERT( 0x4165785c, 0x409cc3ca, 0x401a982a ),
	NORM( 0xbcf2bf1e, 0x3f5bdc9f, 0x3f02eab9 ),
	NFlagsW( 71, 50.497417 ),
	VERT( 0x41787311, 0xbf4e3d5b, 0x408b991a ),
	NORM( 0x3e7ed494, 0xbeabbe71, 0x3f6899ee ),
	NFlagsW( 72, 50.128281 ),
	VERT( 0x41783c67, 0xbe0ae543, 0xc0f0ff5b ),
	NORM( 0x3e3828fb, 0xbd4f5f04, 0xbf7b7e04 ),
	NFlagsW( 73, 66.909019 ),
	VERT( 0x416ccc55, 0x4077529e, 0x40692360 ),
	NORM( 0x3c5b9931, 0x3f28f493, 0x3f404c26 ),
	NFlagsW( 74, 50.560921 ),
	VERT( 0x41767a83, 0x4012cd53, 0xc0e5683e ),
	NORM( 0xbcee7601, 0x3ea81aa5, 0xbf71b187 ),
	NFlagsW( 75, 61.336708 ),
	VERT( 0x4174bd9d, 0x406fe329, 0xc0cb0bb9 ),
	NORM( 0xbdb1a4ea, 0x3f257805, 0xbf4211cd ),
	NFlagsW( 76, 56.627052 ),
	VERT( 0x41784d5a, 0x40260b8b, 0x408e430f ),
	NORM( 0x3d6624ef, 0x3ebc05ff, 0x3f6dad9b ),
	NFlagsW( 77, 50.295700 ),
	VERT( 0x4185b35d, 0xc0642a2f, 0x3fd1eaed ),
	NORM( 0x3e7cda7b, 0xbf3ed6dc, 0x3f1e7e87 ),
	NFlagsW( 78, 49.998615 ),
	VERT( 0x4184b439, 0xc00adebe, 0x4046abbf ),
	NORM( 0x3e8beb85, 0xbf15a25f, 0x3f439441 ),
	NFlagsW( 79, 50.000000 ),
	VERT( 0x41748b40, 0x409e0f2e, 0xc098e90e ),
	NORM( 0xbe14a5f2, 0x3f6060d9, 0xbeeb06be ),
	NFlagsW( 80, 50.344067 ),
	VERT( 0x41875258, 0xc05c2a57, 0xc0bb6713 ),
	NORM( 0x3e9fcad5, 0xbf27fdd4, 0xbf2fdf96 ),
	NFlagsW( 81, 42.075661 ),
	VERT( 0x418128fe, 0x3fa15853, 0x4093f083 ),
	NORM( 0x3e0232f7, 0x3bb9f1ba, 0x3f7deb0b ),
	NFlagsW( 82, 50.039101 ),
	VERT( 0x418aa53d, 0xc092700e, 0xc01ee761 ),
	NORM( 0x3eb43de1, 0xbf6e6169, 0xbdc22545 ),
	NFlagsW( 83, 36.934280 ),
	VERT( 0x4178b5a5, 0x40b31207, 0xc03e92b1 ),
	NORM( 0xbe15a5f8, 0x3f7655c5, 0xbe6b211f ),
	NFlagsW( 84, 46.453407 ),
	VERT( 0x418afee5, 0xc084fcf2, 0x3ea6fa50 ),
	NORM( 0x3ea98f48, 0xbf64b5a8, 0x3e9b7048 ),
	NFlagsW( 85, 47.557178 ),
	VERT( 0x4185645e, 0xbe737090, 0x4088b5f1 ),
	NORM( 0x3e702891, 0xbea0e2a6, 0x3f6b7ffe ),
	NFlagsW( 86, 50.000000 ),
	VERT( 0x417da141, 0x40bcc2a5, 0xbf9f269e ),
	NORM( 0xbdecc646, 0x3f7e483c, 0xbb453733 ),
	NFlagsW( 87, 40.786125 ),
	VERT( 0x418b0d63, 0xc0100078, 0x4034fc55 ),
	NORM( 0x3e308214, 0xbf1c9ee3, 0x3f45a208 ),
	NFlagsW( 88, 50.000000 ),
	VERT( 0x41817c7a, 0x40b55722, 0x3f157d20 ),
	NORM( 0xbd819df1, 0x3f78a78c, 0x3e6ac1bc ),
	NFlagsW( 89, 36.764481 ),
	VERT( 0x418f0197, 0xc052bbf0, 0x3fbef6ef ),
	NORM( 0x3e5f198c, 0xbf4cc167, 0x3f0f2dee ),
	NFlagsW( 90, 49.656101 ),
	VERT( 0x418b74ce, 0xbe9d06c9, 0xc0e37990 ),
	NORM( 0x3df8c42f, 0xbe52b1a6, 0xbf7895ca ),
	NFlagsW( 91, 37.765938 ),
	VERT( 0x41839a96, 0x40a69c77, 0x3ffaf717 ),
	NORM( 0xbc369249, 0x3f63a18c, 0x3eea3235 ),
	NFlagsW( 92, 38.144405 ),
	VERT( 0x418915b8, 0x400fd050, 0xc0e621bd ),
	NORM( 0x3c963239, 0x3e6d2505, 0xbf78ff0a ),
	NFlagsW( 93, 38.088280 ),
	VERT( 0x41871b5b, 0x4087e2c6, 0x40545391 ),
	NORM( 0x3d5d4f2a, 0x3f2d408d, 0x3f3bf55c ),
	NFlagsW( 94, 43.301117 ),
	VERT( 0x418e133b, 0xbe390c5b, 0x40806a9b ),
	NORM( 0x3e522a66, 0xbeba8548, 0x3f688bee ),
	NFlagsW( 95, 49.996189 ),
	VERT( 0x4189f548, 0x4030f675, 0x4085be86 ),
	NORM( 0x3df4fbeb, 0x3ec7a31c, 0x3f69bd7e ),
	NFlagsW( 96, 48.434601 ),
	VERT( 0x418c87a5, 0x3fbb37c7, 0x408e05b0 ),
	NORM( 0x3e05f21d, 0xbbad0d98, 0x3f7dcbff ),
	NFlagsW( 97, 49.587257 ),
	VERT( 0x4192d5d0, 0xc0155848, 0x4025c645 ),
	NORM( 0x3e115065, 0xbf25dcf1, 0x3f3f9658 ),
	NFlagsW( 98, 49.868526 ),
	VERT( 0x418ac5a7, 0x407913ad, 0xc0cb12e5 ),
	NORM( 0xbd4b1c91, 0x3f183eff, 0xbf4d6aa7 ),
	NFlagsW( 99, 27.763622 ),
	VERT( 0x418c45df, 0x40a18ccb, 0xc0a75888 ),
	NORM( 0xbdb2208c, 0x3f54f326, 0xbf0c5491 ),
	NFlagsW( 100, 17.670099 ),
	VERT( 0x4196dc79, 0xbd9fbc3f, 0x40741057 ),
	NORM( 0x3e028e73, 0xbecc8c89, 0x3f6866e0 ),
	NFlagsW( 101, 48.716995 ),
	VERT( 0x418fc608, 0x40bc9f15, 0xc04c4177 ),
	NORM( 0xbdcf4221, 0x3f7718e5, 0xbe76d3e3 ),
	NFlagsW( 102, 6.731322 ),
	VERT( 0x41976436, 0x3fad2ee2, 0x4089aac1 ),
	NORM( 0x3dca48bd, 0xbd11f5a1, 0x3f7e95b7 ),
	NFlagsW( 103, 42.035583 ),
	VERT( 0x419eda41, 0xc0451bd4, 0xc0a91d21 ),
	NORM( 0x3e46178c, 0xbf505720, 0xbf0c4709 ),
	NFlagsW( 104, 0.051919 ),
	VERT( 0x41a04cca, 0xc0731f84, 0xc00ccd7d ),
	NORM( 0x3e6531ee, 0xbf78d35b, 0xbd933812 ),
	NFlagsW( 105, 1.938823 ),
	VERT( 0x41921c62, 0x40c4a2ae, 0xbfc1a675 ),
	NORM( 0xbda9af17, 0x3f7f1e99, 0x3ab4e80f ),
	NFlagsW( 106, 1.847432 ),
	VERT( 0x41a18a44, 0xc06823ab, 0x3d459fd3 ),
	NORM( 0x3e4e8aec, 0xbf70066d, 0x3e910514 ),
	NFlagsW( 107, 5.628038 ),
	VERT( 0x41982ff1, 0x4035be4e, 0x407501fd ),
	NORM( 0x3dabad83, 0x3ecd3e61, 0x3f698c0e ),
	NFlagsW( 108, 29.035196 ),
	VERT( 0x4194a895, 0x40bca0ca, 0x3e65e88a ),
	NORM( 0xbd8e49ef, 0x3f77ce41, 0x3e76f70a ),
	NFlagsW( 109, 0.746559 ),
	VERT( 0x41986008, 0x408db8b6, 0x40381b02 ),
	NORM( 0x3cf29e57, 0x3f2db54a, 0x3f3be4bf ),
	NFlagsW( 110, 6.263271 ),
	VERT( 0x41977c41, 0x40ae4333, 0x3fc46b52 ),
	NORM( 0xbd10cd85, 0x3f60de02, 0x3ef40a19 ),
	NFlagsW( 111, 0.546219 ),
	VERT( 0x41a808f7, 0xc001ea52, 0x401cedac ),
	NORM( 0x3e087111, 0xbf339c9d, 0x3f3332cd ),
	NFlagsW( 112, 2.355537 ),
	VERT( 0x41abca9e, 0xbe2e3c82, 0x40625686 ),
	NORM( 0x3dc40937, 0xbed7da38, 0x3f66d73d ),
	NFlagsW( 113, 0.197772 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 253),
	OffnbIdx(0, 36),
	VERT( 0x4114ddf7, 0x3ffd5336, 0x40aa03df ),
	NORM( 0x3de82416, 0x3f1478fa, 0x3f4e84ba ),
	NFlagsW( 3378, 99.609772 ),
	VERT( 0x412765ec, 0x3ec55f89, 0x40c00f1a ),
	NORM( 0x3ea9c501, 0x3ec234c3, 0x3f5d2314 ),
	NFlagsW( 3384, 92.777168 ),
	VERT( 0x4132499d, 0xbfc97e8f, 0x40c4ba03 ),
	NORM( 0x3f1650b9, 0xbc98e6a8, 0x3f4f2af3 ),
	NFlagsW( 3386, 77.589943 ),
	VERT( 0x413db319, 0xc08082e1, 0x40944cde ),
	NORM( 0x3f2ee4ec, 0xbea86444, 0x3f26e90f ),
	NFlagsW( 3388, 65.397163 ),
	VERT( 0x41492363, 0xc0b58a6c, 0x3fbcacbf ),
	NORM( 0x3f5152d5, 0xbee5c62e, 0x3eb89d3c ),
	NFlagsW( 3391, 64.197395 ),
	VERT( 0x41395615, 0x3f259951, 0x40b0e074 ),
	NORM( 0x3e90a95a, 0x3e9e7b0d, 0x3f686eed ),
	NFlagsW( 3392, 83.626038 ),
	VERT( 0x414a4746, 0xc088d6e1, 0x405ce0ed ),
	NORM( 0x3f01afae, 0xbf2f0f61, 0x3f066e17 ),
	NFlagsW( 3393, 59.687626 ),
	VERT( 0x41429559, 0xbfad5a21, 0x40b20063 ),
	NORM( 0x3eef4099, 0xbde5a7d2, 0x3f6080b6 ),
	NFlagsW( 3394, 76.209755 ),
	VERT( 0x41495b75, 0xc0600d67, 0x408ca508 ),
	NORM( 0x3f08173a, 0xbefae57d, 0x3f30db25 ),
	NFlagsW( 3395, 64.163170 ),
	VERT( 0x41561095, 0xc0bdd9bc, 0x3e91736b ),
	NORM( 0x3eaa8cd0, 0xbf653281, 0x3e976e14 ),
	NFlagsW( 3396, 69.790977 ),
	VERT( 0x41576196, 0xc0a678b8, 0x3fd189c3 ),
	NORM( 0x3eb0279e, 0xbf469c21, 0x3f0765c3 ),
	NFlagsW( 3399, 59.926350 ),
	VERT( 0x4158df35, 0xc083d41a, 0x403655a8 ),
	NORM( 0x3ed4c884, 0xbf2ee79f, 0x3f19b468 ),
	NFlagsW( 3400, 53.091286 ),
	VERT( 0x414bc0b9, 0x3f486bd3, 0x40a47eeb ),
	NORM( 0x3e83df56, 0x3e752128, 0x3f6fa6d0 ),
	NFlagsW( 3401, 63.530941 ),
	VERT( 0x4152a4a9, 0xbf75a402, 0x40a37e4a ),
	NORM( 0x3ed53714, 0xbe046f95, 0x3f66611c ),
	NFlagsW( 3402, 61.825211 ),
	VERT( 0x4158b6e2, 0xc038cb27, 0x4085a943 ),
	NORM( 0x3efaa01d, 0xbefeca54, 0x3f374fce ),
	NFlagsW( 3403, 56.172501 ),
	VERT( 0x4162c375, 0xc0b3a0fd, 0x3eb713f9 ),
	NORM( 0x3eb4a2d2, 0xbf5f9b0f, 0x3eabcdc5 ),
	NFlagsW( 3404, 62.958347 ),
	VERT( 0x4165298d, 0xc0c1a194, 0xc02a1c38 ),
	NORM( 0x3ed07820, 0xbf697ea2, 0xbd44d99f ),
	NFlagsW( 3405, 77.222504 ),
	VERT( 0x41636335, 0xc0a514b1, 0xc0c68036 ),
	NORM( 0x3ee90b24, 0xbf3354c2, 0xbf0cb583 ),
	NFlagsW( 3406, 99.157310 ),
	VERT( 0x415a880b, 0xc005c8c7, 0xc1007e1a ),
	NORM( 0x3ed802ae, 0xbe128624, 0xbf653131 ),
	NFlagsW( 3407, 99.762436 ),
	VERT( 0x41660ce1, 0xc0999580, 0x3fc5d226 ),
	NORM( 0x3ebb7271, 0xbf43e0e6, 0x3f0795f5 ),
	NFlagsW( 3408, 53.766994 ),
	VERT( 0x415c5171, 0xbeed678b, 0x409c60e0 ),
	NORM( 0x3eacab63, 0xbdc0eaf8, 0x3f6fcb12 ),
	NFlagsW( 3409, 54.841328 ),
	VERT( 0x416a5f46, 0xc06ab98b, 0x402fd002 ),
	NORM( 0x3eae5f5b, 0xbf27af8f, 0x3f2cac57 ),
	NFlagsW( 3410, 50.217426 ),
	VERT( 0x416e3392, 0xc09754d6, 0xc0c3b9ff ),
	NORM( 0x3ef8ac91, 0xbf248de6, 0xbf17a6c9 ),
	NFlagsW( 3411, 92.590729 ),
	VERT( 0x41609f3d, 0xbdf0a1aa, 0x409a9c89 ),
	NORM( 0x3e83370b, 0xbd7f6462, 0x3f76ef5b ),
	NFlagsW( 3412, 53.055328 ),
	VERT( 0x417131b7, 0xc0b5d541, 0xc0274f0a ),
	NORM( 0x3ee3b29a, 0xbf64ba14, 0xbd809c62 ),
	NFlagsW( 3413, 61.065418 ),
	VERT( 0x4166dc65, 0xc00352e2, 0x4084ceb2 ),
	NORM( 0x3ec2757b, 0xbee6f94e, 0x3f4ebfc9 ),
	NFlagsW( 3414, 51.317112 ),
	VERT( 0x41717c4c, 0xc0a67bf0, 0x3ebc309f ),
	NORM( 0x3ec73a2d, 0xbf5ba4d2, 0x3eabb19d ),
	NFlagsW( 3415, 54.251068 ),
	VERT( 0x4177530e, 0xc0843524, 0x3fe3a727 ),
	NORM( 0x3ecda245, 0xbf3ac697, 0x3f0db3bf ),
	NFlagsW( 3416, 50.206036 ),
	VERT( 0x416fa7a9, 0xbfb6e2b3, 0x408833e2 ),
	NORM( 0x3e945b88, 0xbecff65b, 0x3f5ddbea ),
	NFlagsW( 3417, 50.514610 ),
	VERT( 0x417d39ff, 0xc0aa08b2, 0xc02481c7 ),
	NORM( 0x3ee57262, 0xbf63ceb1, 0xbdaef6b9 ),
	NFlagsW( 3418, 48.705894 ),
	VERT( 0x417a0925, 0xc03f15ed, 0x40378428 ),
	NORM( 0x3eba7aac, 0xbf1ef5b3, 0x3f31b0f3 ),
	NFlagsW( 3419, 49.884243 ),
	VERT( 0x41801aa2, 0xc0995697, 0x3ec14de3 ),
	NORM( 0x3ec24961, 0xbf5aac78, 0x3eb5ffee ),
	NFlagsW( 3420, 49.852573 ),
	VERT( 0x41828205, 0xc069e94a, 0x3fd9933e ),
	NORM( 0x3ead31d6, 0xbf390544, 0x3f1a4950 ),
	NFlagsW( 3421, 49.982597 ),
	VERT( 0x4149e5aa, 0xc0d143f8, 0xc02c99c6 ),
	NORM( 0x3f44eae7, 0xbf237434, 0xbcd006ca ),
	NFlagsW( 3627, 76.970444 ),
	VERT( 0x41495d86, 0xc0c8121b, 0x3e57a7b0 ),
	NORM( 0x3f5d183d, 0xbefad58b, 0x3df32390 ),
	NFlagsW( 3628, 70.672249 ),
	VERT( 0x4157f7f6, 0xc0cbe722, 0xc02b93a9 ),
	NORM( 0x3e911fd4, 0xbf755ee1, 0xbcfff11b ),
	NFlagsW( 3629, 85.467972 ),
	CnkV_VN_NF(FV_CONT|FW_END, 470),
	OffnbIdx(0, 67),
	VERT( 0xbf3d8324, 0x3fa92133, 0x40cc2422 ),
	NORM( 0x3e3ae3c8, 0x3ec96cc5, 0x3f66ac49 ),
	NFlagsW( 3356, 3.114163 ),
	VERT( 0x3f4d7978, 0x4002f7c7, 0x40baa410 ),
	NORM( 0x3dd6214e, 0x3f0c340b, 0x3f5483d4 ),
	NFlagsW( 3357, 43.162956 ),
	VERT( 0x3f933293, 0x3ed3a80d, 0x40f54fb3 ),
	NORM( 0xbe09674c, 0x3f3673f4, 0x3f304216 ),
	NFlagsW( 3358, 47.237015 ),
	VERT( 0x3ff75487, 0xbf189d95, 0x410ff0d9 ),
	NORM( 0x3be784a8, 0x3f0d85f9, 0x3f5550ff ),
	NFlagsW( 3359, 32.445381 ),
	VERT( 0x4023eaf8, 0xc04a392a, 0x411a0435 ),
	NORM( 0x3d80a1d5, 0x3e95303e, 0x3f745ce0 ),
	NFlagsW( 3360, 9.183104 ),
	VERT( 0x405a773f, 0xc0a71194, 0x4124cf74 ),
	NORM( 0x3da615d4, 0x3e9fd0fa, 0x3f72524c ),
	NFlagsW( 3361, 0.653599 ),
	VERT( 0x4011cb31, 0x403f3669, 0x409014aa ),
	NORM( 0x3e902fa1, 0x3f2956a5, 0x3f31f0f4 ),
	NFlagsW( 3362, 55.490154 ),
	VERT( 0x40622020, 0x3fcadbff, 0x40e8c380 ),
	NORM( 0x3b3490b4, 0x3f30befc, 0x3f393155 ),
	NFlagsW( 3363, 96.120178 ),
	VERT( 0x40916f7b, 0x3e75593c, 0x4100b1fe ),
	NORM( 0x3e412419, 0x3f0ff83b, 0x3f4e19a4 ),
	NFlagsW( 3364, 78.264854 ),
	VERT( 0x40b06fb4, 0xbfbca970, 0x410c3548 ),
	NORM( 0x3e7575e9, 0x3eda3fec, 0x3f5f4c57 ),
	NFlagsW( 3365, 61.317791 ),
	VERT( 0x40c4f8fa, 0xc04988f0, 0x4115ce82 ),
	NORM( 0x3e726db5, 0x3eb3ecd6, 0x3f67e1ef ),
	NFlagsW( 3366, 54.240589 ),
	VERT( 0x40b97bca, 0xbeb2115d, 0xc1202237 ),
	NORM( 0x3e0bcf08, 0x3eebb1d0, 0xbf608ee3 ),
	NFlagsW( 3367, 90.849312 ),
	VERT( 0x40e8200b, 0xc0c48963, 0x411f3ee2 ),
	NORM( 0x3e919838, 0x3e8f9870, 0x3f6ab1de ),
	NFlagsW( 3368, 29.546070 ),
	VERT( 0x40dcd743, 0xc07d9f00, 0xc1365450 ),
	NORM( 0x3e210946, 0x3e923aed, 0xbf7202db ),
	NFlagsW( 3369, 13.758348 ),
	VERT( 0x40ed020c, 0x3fad5af2, 0x40bde2a7 ),
	NORM( 0x3e4a67c4, 0x3f1ccb6a, 0x3f43efa6 ),
	NFlagsW( 3370, 92.482338 ),
	VERT( 0x410082c2, 0xbdbfe608, 0xc114fdc4 ),
	NORM( 0x3e515599, 0x3ee33646, 0xbf5f5cd8 ),
	NFlagsW( 3371, 96.745476 ),
	VERT( 0x410795ff, 0xbde691de, 0x40d5a8ae ),
	NORM( 0x3e735c0e, 0x3ef8685d, 0x3f576ccb ),
	NFlagsW( 3372, 77.087814 ),
	VERT( 0x411639b9, 0xc043b55a, 0x40f8a468 ),
	NORM( 0x3f22174b, 0x3e6df7d9, 0x3f3d0180 ),
	NFlagsW( 3373, 66.098190 ),
	VERT( 0x4126e2ff, 0xc0ceb174, 0x410c32a6 ),
	NORM( 0x3f315a3f, 0x3e9deb67, 0x3f26e023 ),
	NFlagsW( 3374, 86.267838 ),
	VERT( 0x41147d16, 0xbd2bb754, 0xc10fd877 ),
	NORM( 0x3e8464d0, 0x3ec2b59c, 0xbf6352da ),
	NFlagsW( 3375, 98.592827 ),
	VERT( 0x411af305, 0xc004d6de, 0x40ec4745 ),
	NORM( 0x3f0df60d, 0x3e756c17, 0x3f4c0197 ),
	NFlagsW( 3376, 70.152489 ),
	VERT( 0x412197df, 0xc04be56b, 0xc11eecf3 ),
	NORM( 0x3f21b34c, 0x3e9735a6, 0xbf378077 ),
	NFlagsW( 3377, 91.121742 ),
	VERT( 0x411b0c0d, 0x3e4576d1, 0x40cbce73 ),
	NORM( 0x3e57c8be, 0x3ed26c2e, 0x3f630f76 ),
	NFlagsW( 3379, 88.248833 ),
	VERT( 0x4125a607, 0xbfdd5b18, 0x40da5b41 ),
	NORM( 0x3f12e45a, 0x3dd4d3f0, 0x3f4ff800 ),
	NFlagsW( 3380, 74.045883 ),
	VERT( 0x412be681, 0xc05246dd, 0xc10e932d ),
	NORM( 0x3f2920ac, 0x3c5d36f4, 0xbf402541 ),
	NFlagsW( 3381, 88.811913 ),
	VERT( 0x4133987d, 0xc08efae0, 0x40a3fe6b ),
	NORM( 0x3f518c51, 0x3b68fb9f, 0x3f130db9 ),
	NFlagsW( 3382, 63.019855 ),
	VERT( 0x41394aff, 0xc0c56f26, 0xc0f603a0 ),
	NORM( 0x3f62cc67, 0x3d66b192, 0xbeebb770 ),
	NFlagsW( 3383, 78.354683 ),
	VERT( 0x412ce541, 0xbc3c992c, 0xc108cba3 ),
	NORM( 0x3e81159e, 0x3e94e52f, 0xbf6c4779 ),
	NFlagsW( 3385, 99.761253 ),
	VERT( 0x41416170, 0xc0c16685, 0x4071ab26 ),
	NORM( 0x3f71bd77, 0x3e250960, 0x3e92e825 ),
	NFlagsW( 3387, 74.399277 ),
	VERT( 0x413d526f, 0xc03ca6f6, 0xc1099644 ),
	NORM( 0x3eabbe48, 0xbe4af2d5, 0xbf6bc54b ),
	NFlagsW( 3389, 96.283928 ),
	VERT( 0x414751b5, 0xc0ba4ac7, 0xc0d255aa ),
	NORM( 0x3f2bef80, 0xbefdffdf, 0xbf0cdf81 ),
	NFlagsW( 3390, 88.690033 ),
	VERT( 0x41555a71, 0xc0afafa6, 0xc0cc6ae9 ),
	NORM( 0x3ecb1639, 0xbf3b1f08, 0xbf0e29f6 ),
	NFlagsW( 3397, 96.513039 ),
	VERT( 0x414e2e65, 0xc020b91d, 0xc104981a ),
	NORM( 0x3eba23e8, 0xbe2acfa8, 0xbf6aa0d8 ),
	NFlagsW( 3398, 99.484749 ),
	VERT( 0x41363741, 0xc0f7a910, 0x40e15d83 ),
	NORM( 0x3f68c7a5, 0x3eadc1fa, 0x3e76a0bf ),
	NFlagsW( 3621, 60.261726 ),
	VERT( 0x413ceb23, 0xc10e75d0, 0x40f4b5da ),
	NORM( 0x3f5c4b7c, 0x3eb42396, 0x3ebc9cc4 ),
	NFlagsW( 3622, 0.207115 ),
	VERT( 0x41423ea4, 0xc10e7d80, 0x40af0641 ),
	NORM( 0x3f521efe, 0x3eb9ae85, 0x3ee1f88c ),
	NFlagsW( 3623, 3.472919 ),
	VERT( 0x414834f5, 0xc0f50b94, 0xc03624bd ),
	NORM( 0x3f7e7bfb, 0x3dc6a9b0, 0xbd4886ae ),
	NFlagsW( 3624, 33.252422 ),
	VERT( 0x4147e53e, 0xc0e7dfb5, 0xc0a9fe5c ),
	NORM( 0x3f7dc68e, 0x3d6b745f, 0xbdf24e69 ),
	NFlagsW( 3625, 59.188004 ),
	VERT( 0x414afa71, 0xc0e78f03, 0x3fcace6f ),
	NORM( 0x3f7a38d7, 0x3e554bcf, 0x3d106d62 ),
	NFlagsW( 3626, 77.683228 ),
	VERT( 0x3e4220a3, 0x4058d0c6, 0x40b7abe5 ),
	NORM( 0x3f0bcc42, 0xbe4c2164, 0x3f504c65 ),
	NFlagsW( 4200, 8.374297 ),
	VERT( 0x3f8dadb5, 0x408b590f, 0x40a86660 ),
	NORM( 0x3f4bb09f, 0xbe6a1ecc, 0x3f0f9953 ),
	NFlagsW( 4202, 16.833082 ),
	VERT( 0x3f5d2d63, 0x40c6aeb0, 0xc0c45c9f ),
	NORM( 0x3e939fcb, 0x3ef67700, 0xbf53e65d ),
	NFlagsW( 4203, 0.559639 ),
	VERT( 0x3fa8f5ad, 0x40a99852, 0x40caf1fe ),
	NORM( 0x3f3b0438, 0xbf2c290a, 0x3df2de73 ),
	NFlagsW( 4204, 0.993780 ),
	VERT( 0x3ff3779f, 0x40912f6a, 0xc0d4a4ae ),
	NORM( 0x3e45ac75, 0x3f191a8b, 0xbf47217e ),
	NFlagsW( 4205, 68.127510 ),
	VERT( 0x40000d80, 0x40e5ff66, 0xc090cefa ),
	NORM( 0x3f243749, 0x3f009091, 0xbf1475a3 ),
	NFlagsW( 4206, 14.570825 ),
	VERT( 0x40294850, 0x40ad171d, 0x40358f96 ),
	NORM( 0x3f5dbf22, 0x3dd64f3a, 0x3efa2ca5 ),
	NFlagsW( 4207, 43.640064 ),
	VERT( 0x40258b7b, 0x40c6ddde, 0xc0a64b89 ),
	NORM( 0x3ecc5a14, 0x3f33bb0f, 0xbf16f92e ),
	NFlagsW( 4208, 88.617828 ),
	VERT( 0x4028e454, 0x40c992f2, 0x4081d281 ),
	NORM( 0x3f66eaba, 0xbed0a252, 0x3e11f309 ),
	NFlagsW( 4209, 22.967403 ),
	VERT( 0x404fbf09, 0x40ba3051, 0x3fc47cb7 ),
	NORM( 0x3f58786c, 0x3eb99b52, 0x3ec8a3d4 ),
	NFlagsW( 4210, 54.616158 ),
	VERT( 0x40440807, 0x40db52b5, 0xc02a801e ),
	NORM( 0x3f3b38f8, 0x3f282047, 0xbe3c5aba ),
	NFlagsW( 4211, 74.914505 ),
	VERT( 0x406559b3, 0x40951f2a, 0xc0c506be ),
	NORM( 0x3e1d7607, 0x3f2cac4e, 0xbf38da32 ),
	NFlagsW( 4212, 98.935326 ),
	VERT( 0x40485a0a, 0x40e5d712, 0x400b66c5 ),
	NORM( 0x3f7acdbe, 0xbde55483, 0x3e2a424f ),
	NFlagsW( 4213, 10.475783 ),
	VERT( 0x40594b42, 0x40c3132e, 0x3f1b768c ),
	NORM( 0x3f59a994, 0x3ef10739, 0x3e712d8a ),
	NFlagsW( 4214, 59.924286 ),
	VERT( 0x406e972b, 0x408d1144, 0x4025bd9f ),
	NORM( 0x3eca8c63, 0x3f35f74b, 0x3f14e390 ),
	NFlagsW( 4215, 63.551075 ),
	VERT( 0x4079ef93, 0x4062f89e, 0x40830400 ),
	NORM( 0xbd3f6958, 0x3f5ecd97, 0x3efb02dc ),
	NFlagsW( 4216, 79.963936 ),
	VERT( 0x405a044a, 0x40d0e73f, 0xbf9ba752 ),
	NORM( 0x3f45bf98, 0x3f222538, 0x3d3d9b35 ),
	NFlagsW( 4217, 72.365250 ),
	VERT( 0x4055dc47, 0x40f04eb3, 0x3f8d821a ),
	NORM( 0x3f7f61e8, 0x3cc23616, 0x3d859e07 ),
	NFlagsW( 4218, 7.987918 ),
	VERT( 0x40889208, 0x40a1353c, 0x3fc06252 ),
	NORM( 0x3f007125, 0x3f32f4a1, 0x3f026f9f ),
	NFlagsW( 4219, 74.162109 ),
	VERT( 0x408f1baf, 0x408594bd, 0x4026c8a3 ),
	NORM( 0x3e16e434, 0x3f63aa98, 0x3edda3a6 ),
	NFlagsW( 4220, 79.374680 ),
	VERT( 0x40881b84, 0x40c89dbe, 0xc046764b ),
	NORM( 0x3ec3d679, 0x3f6a9a5c, 0xbdf13daa ),
	NFlagsW( 4221, 98.135330 ),
	VERT( 0x4096f9c5, 0x4094caf3, 0x3fcb0f93 ),
	NORM( 0x3e8f67cc, 0x3f553ba3, 0x3ef458f4 ),
	NFlagsW( 4222, 81.878395 ),
	VERT( 0x4094f3ca, 0x40b1a04d, 0x3dcbef09 ),
	NORM( 0x3eda417d, 0x3f573a5b, 0x3eaaed57 ),
	NFlagsW( 4223, 86.954231 ),
	VERT( 0x40949e02, 0x40c2dac6, 0xbfc781f9 ),
	NORM( 0x3ee0c111, 0x3f625c23, 0x3e236487 ),
	NFlagsW( 4224, 96.121399 ),
	VERT( 0x40a4338d, 0x40ae5d2b, 0xbe02af80 ),
	NORM( 0x3e8580d3, 0x3f6aebf2, 0x3e9984e0 ),
	NFlagsW( 4225, 94.799522 ),
	VERT( 0x40b1e679, 0x40b62080, 0xc0067100 ),
	NORM( 0x3ea75e2c, 0x3f708784, 0x3dd0668a ),
	NFlagsW( 4226, 99.934479 ),
	VERT( 0x404263a0, 0x40ddd084, 0x40b0e6fe ),
	NORM( 0x3f51f612, 0xbf10af1b, 0xbdb63860 ),
	NFlagsW( 4230, 0.745514 ),
	VERT( 0x404b9b71, 0x40ffbdbf, 0xbf632b12 ),
	NORM( 0x3f7c4cf3, 0x3dd4bd42, 0xbe0902cf ),
	NFlagsW( 4231, 2.669301 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_L_Clavicle[]
START
VList      vertex_kihon11_Bip01_Bip01_L_Clavicle,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_L_Clavicle[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_L_Clavicle,
OPosition  (  0.000010F,  3.080339F, -0.005338F ),
OAngle     ( -0.044894F, 179.991915F, -79.540841F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_L_UpperArm,
Sibling     object_kihon11_Bip01_Bip01_R_Clavicle,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Dummy21[]
START
EvalFlags ( 0x0000001e ),
CNKModel   NULL,
OPosition  ( 32.307186F,  0.000000F, -0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000002F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_Head[]
START
	CnkV_VN(FV_CONT, 5215),
	OffnbIdx(1016, 869),
	VERT( 0x4156a138, 0xc167853d, 0x3fd16c97 ),
	NORM( 0x3e2fd0ca, 0xbf766e05, 0x3e568761 ),
	VERT( 0x416b0e9e, 0xc163ecaa, 0x3f13d6eb ),
	NORM( 0x3ed33d7a, 0xbf69320b, 0xbaf11f43 ),
	VERT( 0x413effe9, 0xc163cdc5, 0x3ffee369 ),
	NORM( 0xbe20f0dd, 0xbf7b277a, 0x3de7aef4 ),
	VERT( 0x4152121f, 0xc15ee98b, 0x3f506e8f ),
	NORM( 0xbe8430bc, 0xbf24bad9, 0xbf3879f1 ),
	VERT( 0x413e4be8, 0xc15d4f4f, 0x3f8f0796 ),
	NORM( 0xbe556102, 0xbf394043, 0xbf2870ef ),
	VERT( 0x41591729, 0xc15d3264, 0x4000be41 ),
	NORM( 0x3f056452, 0xbd157b54, 0x3f5a4d0c ),
	VERT( 0x413e3ea2, 0xc15cf007, 0x4027f22e ),
	NORM( 0x3d62aa34, 0xbea296c7, 0x3f7255e6 ),
	VERT( 0x415e1b26, 0xc15bf0a4, 0x3eaa85e9 ),
	NORM( 0xbf01c3f7, 0xbf19bd2e, 0xbf1e4eba ),
	VERT( 0x4120d4a9, 0xc15b3579, 0x3fd9dfd3 ),
	NORM( 0xbeb967ec, 0xbf69ecbd, 0xbe3c8702 ),
	VERT( 0x41725f6c, 0xc15a2b24, 0xbf3c91a3 ),
	NORM( 0x3f0c3c86, 0xbf468981, 0xbea0a841 ),
	VERT( 0x411e6212, 0xc1580cf1, 0x401ba66b ),
	NORM( 0xbedbc3a8, 0xbee9ac3a, 0x3f478707 ),
	VERT( 0x416eeedf, 0xc157643c, 0x3f6c5436 ),
	NORM( 0x3f48530a, 0x3dd17c0f, 0x3f1d3a3a ),
	VERT( 0x413ef136, 0xc1573300, 0x3ea191b6 ),
	NORM( 0xbdf6102a, 0xbf733b2e, 0xbe935b89 ),
	VERT( 0x4162d65d, 0xc1567260, 0xbf08a4e5 ),
	NORM( 0xbf29231f, 0xbf32a314, 0xbe8dab12 ),
	VERT( 0x413ff03f, 0xc15638dd, 0x3f5b73d7 ),
	NORM( 0xbdf644c5, 0xbf559053, 0xbf09c390 ),
	VERT( 0x4128af18, 0xc155db65, 0x3f918cbb ),
	NORM( 0xbe02ff20, 0xbf24be1d, 0xbf41314d ),
	VERT( 0x414b85f6, 0xc153da64, 0xbd139c60 ),
	NORM( 0x3e0f8f94, 0xbf6f7f16, 0xbea60108 ),
	VERT( 0x41600e6c, 0xc1535c86, 0xbfb0698f ),
	NORM( 0xbf0271df, 0xbf597458, 0xbe0c7fd5 ),
	VERT( 0x414ff6f7, 0xc1532e59, 0x3f2f2a6b ),
	NORM( 0xbdce14d0, 0xbf42ad4d, 0xbf243c4c ),
	VERT( 0x412d0c57, 0xc152f20b, 0x3eb86a32 ),
	NORM( 0xbd02e65d, 0xbf5672bc, 0xbf0b9315 ),
	VERT( 0x4137657e, 0xc152bd8b, 0x3ebdd1f8 ),
	NORM( 0xbe459bf1, 0x3e082447, 0xbf78df17 ),
	VERT( 0x41559cf0, 0xc1524c57, 0x3fd2b24f ),
	NORM( 0x3f1e3695, 0x3df324e8, 0x3f46f309 ),
	VERT( 0x415a583e, 0xc151fab8, 0x3eddb947 ),
	NORM( 0xbec591b0, 0xbf1d002a, 0xbf306ebc ),
	VERT( 0x412b30a8, 0xc1519e8c, 0x3f7f4c58 ),
	NORM( 0xbe32cfac, 0xbf5084b3, 0xbf0da01e ),
	VERT( 0x4176176d, 0xc150f1e5, 0xbf08a8fa ),
	NORM( 0x3f7fb592, 0xbca6788d, 0x3d30806a ),
	VERT( 0x410f3a88, 0xc150b3db, 0x3f888fb4 ),
	NORM( 0xbeb91fa4, 0xbf6ac0ea, 0xbe2c784a ),
	VERT( 0x416c162b, 0xc150a943, 0xbffc98aa ),
	NORM( 0x3ed3d0cf, 0xbf1e0666, 0xbf2b4fba ),
	VERT( 0x4146959d, 0xc150637f, 0xbecbff80 ),
	NORM( 0xbebd9997, 0xbf01e874, 0xbf472e3a ),
	VERT( 0x4153cef5, 0xc150293d, 0xbe8acb5a ),
	NORM( 0x3e51d557, 0xbf5a65f9, 0xbef5a702 ),
	VERT( 0x413e2261, 0xc14fa71e, 0x40183c29 ),
	NORM( 0x3ddf739b, 0xbcf9e076, 0x3f7e5a13 ),
	VERT( 0x4157c9cb, 0xc14daf43, 0xbfee4265 ),
	NORM( 0xbed88120, 0xbf5df0ba, 0xbe870e32 ),
	VERT( 0x415f8025, 0xc14c6cdb, 0xbe9ac811 ),
	NORM( 0xbf1df05c, 0xbf3279e9, 0xbebaf341 ),
	VERT( 0x415220f5, 0xc14c29b2, 0xbf1e7973 ),
	NORM( 0x3d7a2cb5, 0xbf2284ba, 0xbf452da3 ),
	VERT( 0x411929d7, 0xc14be1b7, 0x3f15e24c ),
	NORM( 0xbe08ed79, 0xbf648f14, 0xbedc3a33 ),
	VERT( 0x41252ece, 0xc14b8819, 0xbe3f3f7f ),
	NORM( 0x3e20a82f, 0xbf2e77a1, 0xbf36fc7d ),
	VERT( 0x4166968e, 0xc14afe86, 0x3ee42398 ),
	NORM( 0x3f3e186c, 0x3e862402, 0x3f1dcd33 ),
	VERT( 0x410c2ee9, 0xc14aebef, 0x3fee63a0 ),
	NORM( 0xbf1e805b, 0xbe2b5dc4, 0x3f4469a2 ),
	VERT( 0x410284f7, 0xc149d8da, 0x3e6b02c9 ),
	NORM( 0xbe9f945a, 0xbf6ff61f, 0xbe1f6812 ),
	VERT( 0x412410f9, 0xc1495c6c, 0x400e31a7 ),
	NORM( 0xbe826f95, 0x3da7e1e4, 0x3f76a985 ),
	VERT( 0x414a7663, 0xc148b48d, 0xbfdb1b9f ),
	NORM( 0xbe5f2a6e, 0xbf79d8bd, 0x37e13eb9 ),
	VERT( 0x4113955e, 0xc14769bf, 0xbe87b064 ),
	NORM( 0xbdbe9e07, 0xbf6956a7, 0xbecd25e6 ),
	VERT( 0x415b459d, 0xc146a6bf, 0xbf490331 ),
	NORM( 0xbef9ea3e, 0xbf59c997, 0xbe479c89 ),
	VERT( 0x4140c5b4, 0xc1461564, 0xbfa09ba1 ),
	NORM( 0xbe53c4ba, 0xbf79e391, 0x3d87ecf2 ),
	VERT( 0x415f335a, 0xc145f8cf, 0xc021ba13 ),
	NORM( 0x3dedb6d5, 0xbf06a0bf, 0xbf57b452 ),
	VERT( 0x40f94afb, 0xc1459f35, 0xbf0081c4 ),
	NORM( 0xbe8cb73d, 0xbf6c6658, 0xbe89207c ),
	VERT( 0x418d2746, 0xc144f4d9, 0xbe8cd91c ),
	NORM( 0xbda21834, 0xbf7f2ffe, 0x3c0c839f ),
	VERT( 0x41a3b03d, 0xc144920d, 0xc0215f3b ),
	NORM( 0x3d782b23, 0xbf7e60b9, 0xbdc1e164 ),
	VERT( 0x40f71050, 0xc143dcc6, 0x3f82823c ),
	NORM( 0xbf4f1936, 0xbe08388b, 0x3f129528 ),
	VERT( 0x4171eb6c, 0xc14371aa, 0xbf3c35bb ),
	NORM( 0x3f6c01cc, 0x3e5429e9, 0x3ea79c6c ),
	VERT( 0x41a9992f, 0xc1436f33, 0x3eb819a8 ),
	NORM( 0x3df83228, 0xbf7e12ed, 0x3c8ec8e8 ),
	VERT( 0x414b656a, 0xc1436586, 0xc029d596 ),
	NORM( 0xbe5c7dde, 0xbf0d608d, 0xbf4e2df3 ),
	VERT( 0x413957ed, 0xc14315fc, 0xbf3f687c ),
	NORM( 0xbedbe3a0, 0xbf672f2c, 0x3bb838a8 ),
	VERT( 0x4133e68f, 0xc14309e4, 0x3f240eac ),
	NORM( 0x3e909fc5, 0xbeac819f, 0xbf65edd4 ),
	VERT( 0x4118105d, 0xc142d78d, 0xbf4af70f ),
	NORM( 0x3e514547, 0xbf47715a, 0xbf17ba68 ),
	VERT( 0x41510074, 0xc14297e7, 0xbf6b21b4 ),
	NORM( 0xbe801038, 0xbf736944, 0xbe3b0f52 ),
	VERT( 0x41a601c1, 0xc142563d, 0x4057adc7 ),
	NORM( 0x3d760378, 0xbf7c28b0, 0x3e25abfe ),
	VERT( 0x413c2c87, 0xc1424afe, 0x3f10d53c ),
	NORM( 0xbef6031d, 0xbef3fcdb, 0xbf3c79bd ),
	VERT( 0x4114a5ad, 0xc141e896, 0xbf73db5e ),
	NORM( 0x3e0e512e, 0xbf555153, 0xbf08fce6 ),
	VERT( 0x4145912d, 0xc14150d0, 0xbef189c4 ),
	NORM( 0xbe8921b3, 0xbf6afaf7, 0xbe95eb8a ),
	VERT( 0x41704e2b, 0xc140f711, 0xbffcd125 ),
	NORM( 0x3f06a438, 0xbf3b3880, 0xbede50b7 ),
	VERT( 0x413a61fb, 0xc140bacf, 0xc0093d80 ),
	NORM( 0xbf17f35a, 0xbf07b9c5, 0xbf1b007f ),
	VERT( 0x4113bf41, 0xc1408e24, 0x3fcf8840 ),
	NORM( 0xbef85cde, 0x3e5f8e49, 0x3f58c665 ),
	VERT( 0x4155bec9, 0xc1406dfb, 0x401a2109 ),
	NORM( 0x3e84c4e7, 0xbf55899b, 0x3ef93ec3 ),
	VERT( 0x40e3a0bc, 0xc13f6058, 0xbeaa82e0 ),
	NORM( 0xbf77dec7, 0xbe4cd2a3, 0x3e1996a8 ),
	VERT( 0x417685ab, 0xc13f5722, 0xbfacf14c ),
	NORM( 0x3e3ac14d, 0xbf7b49b0, 0xbd682a61 ),
	VERT( 0x416fa1ed, 0xc13e6c2e, 0xbf1e9367 ),
	NORM( 0x3f1851e9, 0xbf2d8953, 0x3edd15d9 ),
	VERT( 0x40fb7018, 0xc13e02e0, 0xbfd8bd2a ),
	NORM( 0xbdfca599, 0xbf4b5c50, 0xbf184295 ),
	VERT( 0x4189281c, 0xc13df9e4, 0xc081b4e5 ),
	NORM( 0xbdc23a06, 0xbf7ce51f, 0xbdfbcd28 ),
	VERT( 0x4131e32c, 0xc13d818f, 0xbfc352a5 ),
	NORM( 0xbec7a4ed, 0xbf649ab4, 0xbe663026 ),
	VERT( 0x412ee8de, 0xc13cd233, 0xbe0c3e1e ),
	NORM( 0x3db92b90, 0xbf633e87, 0xbee72c6a ),
	VERT( 0x416635ef, 0xc13cc7d8, 0x3f7adf42 ),
	NORM( 0x3ef59f99, 0xbf55ba68, 0x3e8a2e5c ),
	VERT( 0x41817951, 0xc13c9095, 0x404e3d35 ),
	NORM( 0xbd603aa7, 0xbf7c42f9, 0x3e251a65 ),
	VERT( 0x4142b45a, 0xc13c77db, 0x40357cd4 ),
	NORM( 0xbd4756f8, 0xbf4a0a0d, 0x3f1cb820 ),
	VERT( 0x415e6992, 0xc13b6837, 0xc03428c9 ),
	NORM( 0x3d9c3a67, 0xbf20ca89, 0xbf463e91 ),
	VERT( 0x417c2837, 0xc13aa39d, 0xc08b5035 ),
	NORM( 0xbe0465a5, 0xbf7c0bef, 0xbdf1b8f0 ),
	VERT( 0x41a15792, 0xc13a7c2b, 0x40a2efa0 ),
	NORM( 0x3b18563e, 0xbf791452, 0x3e6c7a47 ),
	VERT( 0x40e58079, 0xc13a7b6f, 0xbfacdc92 ),
	NORM( 0xbf709288, 0xbe9f77dc, 0xbe106971 ),
	VERT( 0x4128ad33, 0xc13a5746, 0xbfe4d526 ),
	NORM( 0xbe56fefb, 0xbf692bde, 0xbeb5f81c ),
	VERT( 0x412932ca, 0xc13a088a, 0x4022b6ac ),
	NORM( 0xbed04dc2, 0xbf0b9fa6, 0x3f3b9988 ),
	VERT( 0x41c4203b, 0xc1398a4f, 0xc07e6f53 ),
	NORM( 0x3ea1ef81, 0xbf7147bd, 0xbddd20d1 ),
	VERT( 0x41226164, 0xc1394bf9, 0xbf98a8a8 ),
	NORM( 0x3db39b51, 0xbf7961f9, 0xbe552cb4 ),
	VERT( 0x413a9acb, 0xc139462d, 0xc00af549 ),
	NORM( 0xbecb897d, 0xbf0a2efd, 0xbf3df58e ),
	VERT( 0x418d63f2, 0xc1394124, 0xc0d03a89 ),
	NORM( 0xbc5b5688, 0xbf7d91f0, 0xbe0c159f ),
	VERT( 0x41261995, 0xc1392332, 0xbf4f66d7 ),
	NORM( 0x3df2ad40, 0xbf75a358, 0xbe82cf16 ),
	VERT( 0x41034c47, 0xc1389a33, 0x3f3f5696 ),
	NORM( 0xbf36f510, 0x3eade610, 0x3f1c884e ),
	VERT( 0x40e6b5c8, 0xc1384ae3, 0xbfdbb263 ),
	NORM( 0xbf56905b, 0xbeae4c6a, 0xbeda3487 ),
	VERT( 0x414d0f22, 0xc1381bf7, 0xc02e8e35 ),
	NORM( 0xbe5631e3, 0xbf07f1ab, 0xbf523579 ),
	VERT( 0x41a2e531, 0xc1381232, 0xc0fde853 ),
	NORM( 0x3b397f27, 0xbf780b3c, 0xbe7d49f8 ),
	VERT( 0x417698e0, 0xc137829f, 0xc1100ae9 ),
	NORM( 0x3c909010, 0xbf7b43c0, 0xbe433588 ),
	VERT( 0x415d3be6, 0xc1376619, 0xc0aa52c5 ),
	NORM( 0xbdc285ef, 0xbf7eafdd, 0x3d0e7f64 ),
	VERT( 0x417c9775, 0xc1372cf2, 0xc0b4a9bd ),
	NORM( 0xbd87fece, 0xbf7e5e8a, 0xbdba77c2 ),
	VERT( 0x41ba3489, 0xc1371bf2, 0xc0dff898 ),
	NORM( 0x3e7393fc, 0xbf710d24, 0xbe740917 ),
	VERT( 0x4118465c, 0xc136e25b, 0xbfdee8ba ),
	NORM( 0x3c84c075, 0xbf569e6d, 0xbf0b7d82 ),
	VERT( 0x415849d1, 0xc1360f01, 0xc10c0f18 ),
	NORM( 0xbd4b3c0f, 0xbf7cb558, 0xbe1b98bb ),
	VERT( 0x41501b3d, 0xc1360770, 0x409ed095 ),
	NORM( 0xbe0f3631, 0xbf6fe079, 0x3ea3de7a ),
	VERT( 0x415db84d, 0xc134fc17, 0x40982fc9 ),
	NORM( 0x3d0073f0, 0xbf77ec3a, 0x3e7d2abc ),
	VERT( 0x41ceaf07, 0xc1346b63, 0x3f89c7dd ),
	NORM( 0x3ecc90df, 0xbf6a4286, 0x3d604492 ),
	VERT( 0x4132187a, 0xc1346ab4, 0xc10719a9 ),
	NORM( 0xbe119e52, 0xbf7c8dba, 0xbda56395 ),
	VERT( 0x40f0bdfb, 0xc1341e82, 0xbf10e8ce ),
	NORM( 0xbf4c5b29, 0x3eff2620, 0x3ead3262 ),
	VERT( 0x41ceced5, 0xc1340541, 0xbf7468f8 ),
	NORM( 0x3ed1a9da, 0xbf693208, 0xbd4e3c4b ),
	VERT( 0x415e9a21, 0xc133f21d, 0xc05855a5 ),
	NORM( 0xbe2ee53e, 0xbf74b235, 0xbe74e2b4 ),
	VERT( 0x41133151, 0xc133c336, 0x3fdb5586 ),
	NORM( 0xbf210560, 0xbef8bf07, 0x3f1b5e88 ),
	VERT( 0x41cbcad9, 0xc132d1e0, 0x4056f74f ),
	NORM( 0x3ecd3f1c, 0xbf687a93, 0x3df79d91 ),
	VERT( 0x418d55ab, 0xc132b2f1, 0x40cde81a ),
	NORM( 0xbd7d89d5, 0xbf7b28c5, 0x3e3bc8c9 ),
	VERT( 0x418784c8, 0xc1327845, 0xc1154449 ),
	NORM( 0x3e0f0df2, 0xbf75dbd9, 0xbe76e9ff ),
	VERT( 0x4101ff0b, 0xc1316372, 0xc0170d82 ),
	NORM( 0xbd9073da, 0xbf3203e9, 0xbf37160c ),
	VERT( 0x40eab448, 0xc1315156, 0xbfc8685f ),
	NORM( 0xbf793e2e, 0x3ca58387, 0x3e68cc90 ),
	VERT( 0x41c8cd62, 0xc1313a50, 0x40a22e27 ),
	NORM( 0x3ec42c7f, 0xbf644c28, 0x3e766b72 ),
	VERT( 0x413108d7, 0xc12f99e6, 0xc09b0a4e ),
	NORM( 0xbe160e9f, 0xbf7cf22e, 0x3d41ff1c ),
	VERT( 0x412e2bb2, 0xc12ed9e2, 0xc038196f ),
	NORM( 0xbe20054c, 0xbf70b9ec, 0xbe9abea2 ),
	VERT( 0x415a9c8a, 0xc12dcf1a, 0x410bba3e ),
	NORM( 0xbe913c36, 0xbf621e6b, 0x3ebf2227 ),
	VERT( 0x40ec9d36, 0xc12d9825, 0xc011d404 ),
	NORM( 0xbefee0a5, 0xbf303b5b, 0xbf070c14 ),
	VERT( 0x41b464cc, 0xc12d8f2b, 0x41095488 ),
	NORM( 0x3e7c059b, 0xbf5b2063, 0x3ee8cec9 ),
	VERT( 0x41bfb73b, 0xc12d73bc, 0x40e1a87d ),
	NORM( 0x3eb2c0fc, 0xbf618775, 0x3ea383fe ),
	VERT( 0x4111ce6a, 0xc12d2ce4, 0xc1045afc ),
	NORM( 0xbdd80341, 0xbf7e8164, 0xbcba5e25 ),
	VERT( 0x417152ee, 0xc12c936a, 0xc12ecb46 ),
	NORM( 0xbd0b2a81, 0xbf66725c, 0xbede4d95 ),
	VERT( 0x40f39445, 0xc12c727d, 0xc102d19d ),
	NORM( 0xbd296b2e, 0xbf7fa9dc, 0x3cf7fd4b ),
	VERT( 0x418255c7, 0xc12c274d, 0xc1305c5f ),
	NORM( 0x3d7e3eb4, 0xbf6c95fa, 0xbec0fbb7 ),
	VERT( 0x415a5ea6, 0xc12c216b, 0xc12af3d1 ),
	NORM( 0xbd2f80e1, 0xbf68f54d, 0xbed32699 ),
	VERT( 0x41a052bd, 0xc12bf569, 0x4116e756 ),
	NORM( 0x3d82366f, 0xbf57909e, 0x3f091f9a ),
	VERT( 0x413257fe, 0xc12beb0f, 0xc129ec6f ),
	NORM( 0xbd998484, 0xbf724e15, 0xbea0b2f7 ),
	VERT( 0x40d3972f, 0xc12be324, 0xc127d345 ),
	NORM( 0xbe01a090, 0xbf7a5981, 0xbe2a37d1 ),
	VERT( 0x40ff284e, 0xc12b4619, 0xc128628e ),
	NORM( 0x3d95b9f0, 0xbf7b27b5, 0xbe3799bd ),
	VERT( 0x41b45048, 0xc12b41af, 0xc11370d3 ),
	NORM( 0x3e3ef387, 0xbf673878, 0xbec5ee33 ),
	VERT( 0x40b87415, 0xc12b1b87, 0xc106cc01 ),
	NORM( 0xbe4715c2, 0xbf7aeb80, 0x3d1e6d66 ),
	VERT( 0x415e4990, 0xc12ae98e, 0x40e4707b ),
	NORM( 0xbe66dff5, 0xbf78b893, 0x3d940aa9 ),
	VERT( 0x410d61d7, 0xc12a7d23, 0xc0a1d8d6 ),
	NORM( 0xbdfbf810, 0xbf7dd90f, 0x3d242849 ),
	VERT( 0x418a032e, 0xc12a6f03, 0x411884d4 ),
	NORM( 0xbd6a35e3, 0xbf579710, 0x3f0944be ),
	VERT( 0x419ae63f, 0xc12a302c, 0xc11d2a0d ),
	NORM( 0x3dad8d7a, 0xbf6d9f22, 0xbeb97c97 ),
	VERT( 0x40dd91d8, 0xc12997d4, 0xbfd71b75 ),
	NORM( 0xbf1e68f5, 0xbf3e907e, 0x3e807ddc ),
	VERT( 0x410d00aa, 0xc1298c6e, 0xc038f635 ),
	NORM( 0xbe03db0d, 0xbf6fae83, 0xbea75b5f ),
	VERT( 0x41036d37, 0xc128ff78, 0x3f4faad7 ),
	NORM( 0xbf62cb1b, 0xbedd5a1b, 0x3e2c1f47 ),
	VERT( 0x4113dd3f, 0xc128af9a, 0xc124c672 ),
	NORM( 0xbb9a6cd4, 0xbf7a1257, 0xbe5b0ad1 ),
	VERT( 0x40dffc3e, 0xc127293e, 0xc0a05596 ),
	NORM( 0xbe639569, 0xbf769af5, 0x3e1a20b1 ),
	VERT( 0x4180c18e, 0xc126b922, 0xc13b252c ),
	NORM( 0x3ceb530d, 0xbf69f6c9, 0xbecf4b6b ),
	VERT( 0x411fa3fc, 0xc1266861, 0x40720951 ),
	NORM( 0xbeb6f82b, 0xbf579d68, 0x3ecea844 ),
	VERT( 0x40fddb3a, 0xc1265822, 0xbf4c985d ),
	NORM( 0xbf517177, 0xbec42975, 0x3edb8ace ),
	VERT( 0x40904a94, 0xc125d461, 0xc10ab80c ),
	NORM( 0xbe9903e8, 0xbf744b19, 0x3beb5ea7 ),
	VERT( 0x4102015e, 0xc125bde9, 0x3cb41ecc ),
	NORM( 0xbf5122d9, 0xbf0d229d, 0x3e2d6389 ),
	VERT( 0x40dfc79b, 0xc125813c, 0xc13c1b70 ),
	NORM( 0xbd4fe5a6, 0xbf6d02c1, 0xbebfc2d6 ),
	VERT( 0x4102287d, 0xc1257f7a, 0xc13b1f82 ),
	NORM( 0x3d9d42d4, 0xbf6d5446, 0xbebbe076 ),
	VERT( 0x413276ad, 0xc123f0ad, 0xc13c5d3e ),
	NORM( 0x3c73c076, 0xbf668ae2, 0xbede74ac ),
	VERT( 0x4174bffb, 0xc12328b9, 0xc14a0c1e ),
	NORM( 0xbe09828e, 0xbf67aadc, 0xbecebb16 ),
	VERT( 0x418cb0ae, 0xc1228fa2, 0xc13ab018 ),
	NORM( 0x3e2e7567, 0xbf5cd5c3, 0xbef3d979 ),
	VERT( 0x409c186e, 0xc121baa1, 0xc12ba9f7 ),
	NORM( 0xbe90971e, 0xbf70d8ae, 0xbe3fef8c ),
	VERT( 0x4118b3ad, 0xc1216e7e, 0xc13efee2 ),
	NORM( 0xbb79eea0, 0xbf6ceb3f, 0xbec1f405 ),
	VERT( 0x40e486e4, 0xc1203f97, 0xc048b977 ),
	NORM( 0xbe9c1c8d, 0xbf6ded0f, 0xbe54f643 ),
	VERT( 0x40b57eff, 0xc11fcdd3, 0xc09d1951 ),
	NORM( 0xbe8e4dbf, 0xbf7174fd, 0x3e3a6ae3 ),
	VERT( 0x40a55b0b, 0xc11f940b, 0xc13e4611 ),
	NORM( 0xbe905056, 0xbf69739a, 0xbe98b4bc ),
	VERT( 0x405e02a9, 0xc11f5797, 0xc10b8cdd ),
	NORM( 0xbeda1870, 0xbf676fb8, 0x3d10bc87 ),
	VERT( 0x40e97148, 0xc11ee3d8, 0xc1490020 ),
	NORM( 0x3c65dab7, 0xbf6788e6, 0xbeda4f38 ),
	VERT( 0x4189633e, 0xc11e9122, 0xc14333c3 ),
	NORM( 0x3e3e67af, 0xbf54eb8e, 0xbf05ec0d ),
	VERT( 0x407ccf1d, 0xc11e6817, 0xc12b4805 ),
	NORM( 0xbe9d35e7, 0xbf6c925a, 0xbe68eea4 ),
	VERT( 0x41a853be, 0xc11d2e4a, 0xc13352be ),
	NORM( 0x3dcaf1e0, 0xbf621fd8, 0xbeea9b98 ),
	VERT( 0x41621854, 0xc11cc313, 0xc14533b3 ),
	NORM( 0xbe3abaac, 0xbf4f85de, 0xbf0e7251 ),
	VERT( 0x40ef9585, 0xc11c9ac8, 0x4036b587 ),
	NORM( 0xbeb349ca, 0xbf6d6ebe, 0x3e06354b ),
	VERT( 0x40bbb9e5, 0xc11b49cd, 0xc03d94d3 ),
	NORM( 0xbece0094, 0xbf69edf8, 0x3d64654c ),
	VERT( 0x4083af9e, 0xc119d5c5, 0xc0a8d245 ),
	NORM( 0xbec3e186, 0xbf674441, 0x3e465f33 ),
	VERT( 0x41261683, 0xc1198e2e, 0xc153f599 ),
	NORM( 0x3c875e7a, 0xbf59d829, 0xbf06650a ),
	VERT( 0x4151fe0b, 0xc1197cdb, 0xc14809eb ),
	NORM( 0x3d8a2b12, 0xbf43bac8, 0xbf2418ad ),
	VERT( 0x41807d65, 0xc119213b, 0xc151f970 ),
	NORM( 0x3e1ae2a4, 0xbf4bff6e, 0xbf15bd00 ),
	VERT( 0x4110512b, 0xc119042a, 0xc15025ed ),
	NORM( 0x3c2a1f84, 0xbf5f7760, 0xbef9bbd9 ),
	VERT( 0x408066eb, 0xc118ae7a, 0xc13c03a0 ),
	NORM( 0xbeafcdea, 0xbf61621d, 0xbea77896 ),
	VERT( 0x40e836d5, 0xc117d793, 0xc15b5c03 ),
	NORM( 0x3d5c3879, 0xbf5921ac, 0xbf06e8b6 ),
	VERT( 0x403ba4be, 0xc117c5d1, 0xc128adc1 ),
	NORM( 0xbf065143, 0xbf53dd6d, 0xbe4c4769 ),
	VERT( 0x401b4308, 0xc11631ea, 0xc10f7bf6 ),
	NORM( 0xbf16accb, 0xbf4ef400, 0xbbf00dc2 ),
	VERT( 0x40ab5c76, 0xc115b701, 0xc1587008 ),
	NORM( 0xbe611682, 0xbf5bd6d0, 0xbeecfbaf ),
	VERT( 0x40c5f6fb, 0xc115aaf3, 0x40944ecd ),
	NORM( 0xbea7b743, 0xbf6ae46e, 0x3e66ce84 ),
	VERT( 0x4164d84b, 0xc11439ee, 0xc1504247 ),
	NORM( 0xbee05b1f, 0xbf2c4808, 0xbf188c9c ),
	VERT( 0x41ce4496, 0xc113fc19, 0xc13441dc ),
	NORM( 0x3eb550dc, 0xbf599375, 0xbec7c71a ),
	VERT( 0x40979aaf, 0xc1139a67, 0x3f21fff1 ),
	NORM( 0xbea85702, 0xbf71b6f4, 0x3ca18a47 ),
	VERT( 0x413dae72, 0xc11322de, 0xc156bf03 ),
	NORM( 0x3e6ba912, 0xbf31d064, 0xbf2e7dbd ),
	VERT( 0x419884f5, 0xc113103e, 0xc14b97a4 ),
	NORM( 0x3dfbfc69, 0xbf53227d, 0xbf0d4d10 ),
	VERT( 0x4040fad7, 0xc1122d71, 0xc13c945e ),
	NORM( 0xbf01f927, 0xbf4d0b30, 0xbea27b59 ),
	VERT( 0x411dcbc1, 0xc1108764, 0x40e785d8 ),
	NORM( 0xbe966415, 0xbf5e7bfa, 0x3ecbc9ce ),
	VERT( 0x40a3aaea, 0xc11062f0, 0xbf82e128 ),
	NORM( 0xbeb2a476, 0xbf6fe73a, 0xbc032ad1 ),
	VERT( 0x41dfb291, 0xc11008f8, 0xc0e5a951 ),
	NORM( 0x3f0d450e, 0xbf5186c7, 0xbe23d3b5 ),
	VERT( 0x408b8a56, 0xc1100364, 0xc156e8a2 ),
	NORM( 0xbebd227b, 0xbf51c81a, 0xbee05cfa ),
	VERT( 0x417042e9, 0xc10fe7e1, 0xc15eab7f ),
	NORM( 0xbeadb510, 0xbf0e19dd, 0xbf426bf0 ),
	VERT( 0x40a61d68, 0xc10fcdb8, 0x4074e275 ),
	NORM( 0xbec763ed, 0xbf69d3d2, 0x3df2ded1 ),
	VERT( 0x4194056d, 0xc10f42d8, 0xc152f9be ),
	NORM( 0x3e32ea8d, 0xbf541beb, 0xbf082e20 ),
	VERT( 0x4072de68, 0xc10efde0, 0xc05325c0 ),
	NORM( 0xbec690bc, 0xbf6930f2, 0x3e10450d ),
	VERT( 0x4107c60a, 0xc10e589c, 0xc15f281c ),
	NORM( 0x3da20a74, 0xbf4acdf7, 0xbf1ae813 ),
	VERT( 0x4160b34a, 0xc10d3b35, 0xc154d0ac ),
	NORM( 0xbe99c374, 0xbf2ed5f7, 0xbf2a768d ),
	VERT( 0x40266a9c, 0xc10d0bcd, 0xc0b04bcb ),
	NORM( 0xbeeead86, 0xbf5d8b7d, 0x3e3c2233 ),
	VERT( 0x407094e0, 0xc10cc8c1, 0x3f5794c6 ),
	NORM( 0xbecc001e, 0xbf693aa7, 0x3dd90f84 ),
	VERT( 0x415de97a, 0xc10c63e9, 0xc154f23b ),
	NORM( 0xbeaaa968, 0xbf031c12, 0xbf4aa514 ),
	VERT( 0x40557bb6, 0xc10c3d16, 0xbf68d471 ),
	NORM( 0xbeabf832, 0xbf711c91, 0x3c338b88 ),
	VERT( 0x411f9b49, 0xc10b54cf, 0xc16533b0 ),
	NORM( 0x3db44963, 0xbf40a077, 0xbf271a15 ),
	VERT( 0x41882954, 0xc10b1366, 0xc1671bb4 ),
	NORM( 0x3d9eaa2f, 0xbf4092be, 0xbf27817e ),
	VERT( 0x40549e4f, 0xc10999ef, 0xc1533bec ),
	NORM( 0xbeece57a, 0xbf43cc6b, 0xbee5833a ),
	VERT( 0x41eea5f6, 0xc1091178, 0xbea53c3c ),
	NORM( 0x3f3f27ae, 0xbf2a3a1b, 0x3c898ec5 ),
	VERT( 0x416b8c29, 0xc108a4e1, 0xc15d648f ),
	NORM( 0xbeffbd29, 0xbe893710, 0xbf52e62a ),
	VERT( 0x41ea4fac, 0xc1088bda, 0xc045054d ),
	NORM( 0x3f2cd63a, 0xbf393c47, 0xbe1308d0 ),
	VERT( 0x41eb46c8, 0xc106e99c, 0x402eeb90 ),
	NORM( 0x3f42e89e, 0xbf2067a1, 0x3e2a7f88 ),
	VERT( 0x3fd66b40, 0xc106d7b0, 0xc125138e ),
	NORM( 0xbf35d2c2, 0xbf2c36e7, 0xbe545c07 ),
	VERT( 0x41bdf334, 0xc1066d49, 0xc1558d5e ),
	NORM( 0x3e2e525f, 0xbf453717, 0xbf1d4c7a ),
	VERT( 0x40b10be1, 0xc1059fc2, 0xc1706123 ),
	NORM( 0xbe136983, 0xbf2ed4c3, 0xbf3755ec ),
	VERT( 0x3fd29c38, 0xc1053621, 0xc0b1a538 ),
	NORM( 0xbf0dc13a, 0xbf523bf1, 0x3e0d09c6 ),
	VERT( 0x3faa6c11, 0xc1051265, 0xc10e2171 ),
	NORM( 0xbf40e34b, 0xbf27ffee, 0xbd250f6a ),
	VERT( 0x41387a39, 0xc104d1e9, 0xc163a83f ),
	NORM( 0x3e9504bb, 0xbf16a3ff, 0xbf411c5a ),
	VERT( 0x41e73f9a, 0xc104c01c, 0x40a6fbcf ),
	NORM( 0x3f3c8094, 0xbf1ad412, 0x3e9b51ad ),
	VERT( 0x41682019, 0xc104550f, 0xc15cf3b8 ),
	NORM( 0xbef7c1a4, 0xbe98d613, 0xbf529874 ),
	VERT( 0x40e11951, 0xc103b785, 0xc1721be5 ),
	NORM( 0x3cb6d87c, 0xbf2de425, 0xbf3bca51 ),
	VERT( 0x417fca58, 0xc1035576, 0xc16b0b86 ),
	NORM( 0xbe8af520, 0xbee6422b, 0xbf59d6de ),
	VERT( 0x401238a8, 0xc103500a, 0xc05da7fe ),
	NORM( 0xbeeb3a58, 0xbf625f1d, 0x3dab61dd ),
	VERT( 0x4159db4a, 0xc1034398, 0xc15669e6 ),
	NORM( 0xbd1c6ed3, 0xbedacca4, 0xbf673d8a ),
	VERT( 0x4096b5b2, 0xc10317da, 0xc16de528 ),
	NORM( 0xbe94c797, 0xbf2ea3d3, 0xbf2bc3bc ),
	VERT( 0x40020597, 0xc102ebd7, 0xc13cc54b ),
	NORM( 0xbf375eaf, 0xbf25e0e1, 0xbe849a68 ),
	VERT( 0x40224f66, 0xc101b6cf, 0x3fdff2ad ),
	NORM( 0xbecab6f6, 0xbf6754a9, 0x3e2746b3 ),
	VERT( 0x40c50eb3, 0xc1016a03, 0x40ed604a ),
	NORM( 0xbed271b3, 0xbf1e32de, 0x3f2b92dc ),
	VERT( 0x4006c9bf, 0xc10115cf, 0x3f015372 ),
	NORM( 0xbeb11a75, 0xbf6f756c, 0x3d968e7c ),
	VERT( 0x4152623d, 0xc100fcb4, 0x41290adb ),
	NORM( 0xbe856ba1, 0xbf1d22e7, 0x3f3ec59f ),
	VERT( 0x411a9223, 0xc100c996, 0x41110e9e ),
	NORM( 0xbe9f4fbe, 0xbf270310, 0x3f30e992 ),
	VERT( 0x41369824, 0xc100afa6, 0x411c16c3 ),
	NORM( 0xbed056f8, 0xbf1886ab, 0x3f31421a ),
	VERT( 0x41038b18, 0xc0ffdd3f, 0xc175d900 ),
	NORM( 0x3d0a9c38, 0xbf2f0760, 0xbf3a9ded ),
	VERT( 0x41daeba4, 0xc0ff4172, 0x40fd1b5a ),
	NORM( 0x3f213bf4, 0xbf17600a, 0x3f00f02b ),
	VERT( 0x41c9939d, 0xc0fe539b, 0x4123d511 ),
	NORM( 0x3ee488f8, 0xbf110017, 0x3f315a28 ),
	VERT( 0x400ee0b0, 0xc0fe1d4b, 0xc150c5a0 ),
	NORM( 0xbf23cd93, 0xbf2659f9, 0xbed21099 ),
	VERT( 0x3fceab66, 0xc0fd21f5, 0xbfce4c71 ),
	NORM( 0xbea9e3e9, 0xbf7159df, 0xbd05e57a ),
	VERT( 0x41a97f1c, 0xc0fc7900, 0xc1634352 ),
	NORM( 0x3ddc7598, 0xbf40bb8d, 0xbf263993 ),
	VERT( 0x411cd2f8, 0xc0fbdd5f, 0xc17450a3 ),
	NORM( 0x3e4555ba, 0xbf1a8a3e, 0xbf460a0f ),
	VERT( 0x41b010ae, 0xc0fb6272, 0x41346e3f ),
	NORM( 0x3e4e12e9, 0xbf07dc95, 0x3f52c4ca ),
	VERT( 0x4190200f, 0xc0f9a461, 0x413e7c33 ),
	NORM( 0xbc1665d4, 0xbf0fa3c4, 0x3f53e449 ),
	VERT( 0x406af685, 0xc0f95a68, 0xc16c5c26 ),
	NORM( 0xbeeafacd, 0xbf222e3b, 0xbf1f777a ),
	VERT( 0x4153e10a, 0xc0f947f7, 0xc15cdd84 ),
	NORM( 0x3ebf56d8, 0xbf03ab36, 0xbf459a2a ),
	VERT( 0x40386fb3, 0xc0f8c7a7, 0x40820cd3 ),
	NORM( 0xbeecc030, 0xbf589444, 0x3e87e4d4 ),
	VERT( 0x417508d8, 0xc0f7985b, 0xc1680b3f ),
	NORM( 0xbee06232, 0xbea12d40, 0xbf57887c ),
	VERT( 0x419d2c5c, 0xc0f74190, 0xc16b505c ),
	NORM( 0x3e130005, 0xbf37f461, 0xbf2e338f ),
	VERT( 0x41639699, 0xc0f5be9a, 0xc15c9f7f ),
	NORM( 0xbf18b334, 0xbe8faf9f, 0xbf4080b2 ),
	VERT( 0x3f9f630e, 0xc0f4ee05, 0xc06d3885 ),
	NORM( 0xbeedaa1e, 0xbf62af71, 0x3cab7432 ),
	VERT( 0x4170be38, 0xc0f11b02, 0xc166fa0c ),
	NORM( 0xbea5606c, 0xbedfc979, 0xbf56e450 ),
	VERT( 0x415eb432, 0xc0f08ce2, 0xc159db7f ),
	NORM( 0xbd859652, 0xbebd0ff9, 0xbf6d520d ),
	VERT( 0x3f61ffa4, 0xc0eeb4c1, 0x4008604e ),
	NORM( 0xbe20c622, 0xbf7252a1, 0x3e90397d ),
	VERT( 0x4137f968, 0xc0e9f323, 0xc16f939d ),
	NORM( 0x3ea7c7e4, 0xbef7233b, 0xbf4fea8a ),
	VERT( 0x418f618b, 0xc0e686b1, 0xc178e2b7 ),
	NORM( 0x3d42c291, 0xbf0cae57, 0xbf5588a7 ),
	VERT( 0x41881efb, 0xc0e68450, 0xc1776663 ),
	NORM( 0xbe6d5657, 0xbed6cd71, 0xbf60adb1 ),
	VERT( 0x403cbffc, 0xc0e3da1c, 0x40b502b4 ),
	NORM( 0xbf0666a6, 0xbf124451, 0x3f217cf8 ),
	VERT( 0x41f212d8, 0xc0df92c5, 0xc1082d24 ),
	NORM( 0x3f3e9530, 0xbf222eb2, 0xbe57d0bc ),
	VERT( 0x41e0e0cd, 0xc0de3fed, 0xc148c175 ),
	NORM( 0x3f152939, 0xbf1cf2ec, 0xbf08945f ),
	VERT( 0x416bef49, 0xc0dcff42, 0xc163cc2f ),
	NORM( 0xbf031ad2, 0x3f555898, 0x3e54d384 ),
	VERT( 0x41510ad0, 0xc0dc45f5, 0xc169d660 ),
	NORM( 0x3ea69f0d, 0xbf032d56, 0xbf4b70ac ),
	VERT( 0x41598a01, 0xc0daf082, 0xc166cdcc ),
	NORM( 0x3f0987c8, 0xbef07248, 0xbf335a8a ),
	VERT( 0x402c13e6, 0xc0daddd3, 0xc16b0d86 ),
	NORM( 0xbf11983b, 0xbf0a6db4, 0xbf1eab34 ),
	VERT( 0x3eb31cfc, 0xc0d8a231, 0xc12899ba ),
	NORM( 0xbf519718, 0xbf0b2331, 0xbe3daf29 ),
	VERT( 0x416cae98, 0xc0d5d4aa, 0xc16f1b18 ),
	NORM( 0xbf46020c, 0x3e177386, 0xbf1dc83d ),
	VERT( 0x4180942c, 0xc0d38885, 0xc1735708 ),
	NORM( 0xbea82357, 0xbea39ba2, 0xbf638b68 ),
	VERT( 0x3f85db6e, 0xc0d21e17, 0x4091ce5d ),
	NORM( 0xbea53285, 0xbf38450c, 0x3f1d58e6 ),
	VERT( 0x41f67eb3, 0xc0d19cff, 0xc05d5d17 ),
	NORM( 0x3f5458d7, 0xbf0dd8d2, 0xbd9006a0 ),
	VERT( 0x415f4229, 0xc0d0f792, 0xc1618415 ),
	NORM( 0x3f4135e2, 0xbe9d4d4c, 0xbf1463ec ),
	VERT( 0x41cce2ab, 0xc0d0a134, 0xc16a2656 ),
	NORM( 0x3eb1c896, 0xbf271647, 0xbf2c623c ),
	VERT( 0x3e14287b, 0xc0ced61d, 0xc1121ca2 ),
	NORM( 0xbf5d2f6a, 0xbf003045, 0xbd572949 ),
	VERT( 0x417bc5e7, 0xc0ceb499, 0xc172fe50 ),
	NORM( 0xbdc7e507, 0xbefa7a0b, 0xbf5ddf22 ),
	VERT( 0x3f20f062, 0xc0cdcfd2, 0xc13b2a72 ),
	NORM( 0xbf47bb75, 0xbf09ed86, 0xbea2b6dd ),
	VERT( 0x40b9224e, 0xc0cd65db, 0xc18291d8 ),
	NORM( 0xbdcbd382, 0xbee91e20, 0xbf627f3d ),
	VERT( 0x4152fce7, 0xc0cd0ff2, 0x414198eb ),
	NORM( 0xbe90c791, 0xbf069a82, 0x3f4d5f36 ),
	VERT( 0x40e6783d, 0xc0c77a48, 0xc183f39a ),
	NORM( 0xbd06721b, 0xbedc682f, 0xbf66e99a ),
	VERT( 0x41711027, 0xc0c74240, 0xc1718841 ),
	NORM( 0x3f41130a, 0xbf1f38f5, 0xbe57a526 ),
	VERT( 0x41b5f3d3, 0xc0c69e99, 0xc17abe02 ),
	NORM( 0x3e0428b9, 0xbf248935, 0xbf4151b2 ),
	VERT( 0x3f7c213f, 0xc0c695d8, 0xc152fec7 ),
	NORM( 0xbf499be1, 0xbeffa4b6, 0xbeb8f2e3 ),
	VERT( 0x408352df, 0xc0c65cb2, 0xc1809900 ),
	NORM( 0xbea4dd1d, 0xbef3463b, 0xbf51a1b1 ),
	VERT( 0x40a2a18e, 0xc0c617f6, 0xc1826cb4 ),
	NORM( 0xbe2ab866, 0xbed67c95, 0xbf648096 ),
	VERT( 0x411c75ee, 0xc0c581d8, 0xc181c3b5 ),
	NORM( 0x3e82ceef, 0xbed4cae1, 0xbf5f77e9 ),
	VERT( 0x410416c6, 0xc0c4ce15, 0xc1842b03 ),
	NORM( 0x3da0cb97, 0xbeda8baf, 0xbf66a1fb ),
	VERT( 0x41336ff7, 0xc0bfad73, 0xc17a5238 ),
	NORM( 0x3eb7325c, 0xbead3ef4, 0xbf5ece26 ),
	VERT( 0x41760977, 0xc0bef9da, 0xc17a6288 ),
	NORM( 0xbeff80c9, 0xbe65c018, 0xbf564804 ),
	VERT( 0x415806d8, 0xc0bdbd69, 0xc16f7233 ),
	NORM( 0x3edf3af9, 0xbec6e6d0, 0xbf4fd0f1 ),
	VERT( 0x417559f7, 0xc0bb7d67, 0xc1738dba ),
	NORM( 0xbf707d97, 0x3e8dd6a8, 0xbe4eb707 ),
	VERT( 0x415c14a8, 0xc0ba7eb2, 0xc16d5e27 ),
	NORM( 0x3f0f9d7c, 0xbec9c631, 0xbf3a5dce ),
	VERT( 0x414cce7f, 0xc0b8a2ae, 0xc1749729 ),
	NORM( 0x3e97b136, 0xbea518f4, 0xbf66266c ),
	VERT( 0x41a5c733, 0xc0b765d1, 0xc1814c01 ),
	NORM( 0x3d98082b, 0xbf197ce7, 0xbf4c0031 ),
	VERT( 0x418c57ab, 0xc0b5a326, 0xc181cb76 ),
	NORM( 0xbe92c75f, 0xbea33cab, 0xbf674691 ),
	VERT( 0x4195d472, 0xc0b11cd3, 0xc1842359 ),
	NORM( 0xbd88512c, 0xbee97491, 0xbf633376 ),
	VERT( 0x4183c64b, 0xc0aff7bb, 0xc17b7a05 ),
	NORM( 0xbeb87f8e, 0xbe7bec8b, 0xbf6658b3 ),
	VERT( 0x4043709f, 0xc0addc26, 0xc17e93f3 ),
	NORM( 0xbef7ee83, 0xbeac2788, 0xbf4ec871 ),
	VERT( 0x418086ab, 0xc0ad488d, 0xc17a981b ),
	NORM( 0x3d5ffada, 0xbe7fa9f6, 0xbf777f3e ),
	VERT( 0x40a9e85d, 0xc0aca4e5, 0xc1841865 ),
	NORM( 0xbe4abbdb, 0xbe864289, 0xbf71c95e ),
	VERT( 0x3fa8cb0d, 0xc0a8beea, 0xc16ba510 ),
	NORM( 0xbf225290, 0xbf00bcd9, 0xbf166132 ),
	VERT( 0x40878a7d, 0xc0a897b5, 0xc1846e2d ),
	NORM( 0xbe85ecb4, 0xbe87eeaa, 0xbf6d8e3c ),
	VERT( 0x4178a4e7, 0xc0a875c5, 0xc173a366 ),
	NORM( 0xbf780ad9, 0x3e6773f8, 0xbdcdf4b6 ),
	VERT( 0x4179c696, 0xc0a7bced, 0xc17dbab6 ),
	NORM( 0xbeec96aa, 0xbc3166af, 0xbf630343 ),
	VERT( 0x4156af4f, 0xc0a2c115, 0xc174d760 ),
	NORM( 0x3ed64aae, 0xbe6791dc, 0xbf612d0d ),
	VERT( 0x415b6430, 0xc0a16f83, 0xc1709913 ),
	NORM( 0x3f316d14, 0xbe29672e, 0xbf339e08 ),
	VERT( 0x414d5ebf, 0xc0a0a1b2, 0xc17722d3 ),
	NORM( 0x3e855bb2, 0xbe4a088b, 0xbf71f2ac ),
	VERT( 0x40c0b43c, 0xc09f7f87, 0xc186f525 ),
	NORM( 0xbd89d73f, 0xbea6a972, 0xbf717199 ),
	VERT( 0xbecdc02e, 0xc09f5cda, 0xc1378e29 ),
	NORM( 0xbf5b5e77, 0xbeefb506, 0xbe5cd979 ),
	VERT( 0xbf0d5bf3, 0xc09f5918, 0xc11ed7b8 ),
	NORM( 0xbf69e02d, 0xbecb6eeb, 0xbdb16f4e ),
	VERT( 0x3e4c5f1d, 0xc0995d5c, 0xc14dd399 ),
	NORM( 0xbf42fe89, 0xbf0b4053, 0xbeb43f90 ),
	VERT( 0x3f360a28, 0xc096e69e, 0xc162a897 ),
	NORM( 0xbf45a023, 0xbf0bf7fb, 0xbea5ffe6 ),
	VERT( 0x4179af47, 0xc0956f95, 0xc171c0f6 ),
	NORM( 0xbf79c0d5, 0xbdfcb157, 0xbe39f8d6 ),
	VERT( 0x40da410b, 0xc0946136, 0xc187ad5a ),
	NORM( 0xbd7687d3, 0xbe94e5fc, 0xbf747342 ),
	VERT( 0x4025ab3f, 0xc08f51f8, 0xc17e61da ),
	NORM( 0xbec512f3, 0xbed4b2cd, 0xbf52fd2a ),
	VERT( 0x4098539c, 0xc08e4bb1, 0xc186b267 ),
	NORM( 0xbe89f4d9, 0xbe48335d, 0xbf7165e4 ),
	VERT( 0x41236a4d, 0xc08e19fd, 0xc186ba2d ),
	NORM( 0x3e9ead3f, 0xbeb427c5, 0xbf621d1d ),
	VERT( 0x3e4e81cc, 0xc08d7b3a, 0x40b147da ),
	NORM( 0xbc316c21, 0xbee3696d, 0x3f655869 ),
	VERT( 0x41397a3f, 0xc08ce4fb, 0xc17ed545 ),
	NORM( 0x3ee25d7e, 0xbe999ed9, 0xbf586491 ),
	VERT( 0x4158cf89, 0xc087bd10, 0x41529d7c ),
	NORM( 0xbe8bdda8, 0xbe44f13d, 0x3f714a72 ),
	VERT( 0x418f3db9, 0xc0877f32, 0x415f88a3 ),
	NORM( 0x39d1c4c1, 0xbe8751ff, 0x3f76e59d ),
	VERT( 0x41d2257a, 0xc0874c79, 0xc182dfe5 ),
	NORM( 0x3ede8f84, 0xbeda61c3, 0xbf4b0d3e ),
	VERT( 0x41fe3fe7, 0xc08648d1, 0xc10c94e2 ),
	NORM( 0x3f6a13fa, 0xbe9f9514, 0xbe845092 ),
	VERT( 0x415a4c87, 0xc085d6ea, 0xc1755fee ),
	NORM( 0x3f147a08, 0xbdb64481, 0xbf4f4bbe ),
	VERT( 0x417967f7, 0xc0859f0e, 0xc17842d0 ),
	NORM( 0xbf421d4d, 0xbe74899e, 0xbf1b4cdf ),
	VERT( 0x41256a5f, 0xc0851128, 0x413df963 ),
	NORM( 0xbef079c2, 0xbe7f307b, 0x3f58d0a9 ),
	VERT( 0x40f2ec29, 0xc084499d, 0x411fa2d3 ),
	NORM( 0xbf160e47, 0xbe8839d0, 0x3f43e86d ),
	VERT( 0x40b0daf5, 0xc084307b, 0x4102b70b ),
	NORM( 0xbf0f6944, 0xbe355aa6, 0x3f4f27f8 ),
	VERT( 0x40605d23, 0xc0842104, 0x40dd43a2 ),
	NORM( 0xbee24cb1, 0xbe40e782, 0x3f608411 ),
	VERT( 0x41aed050, 0xc083e2ef, 0x41544a43 ),
	NORM( 0x3e74b5f8, 0xbe8866c4, 0x3f6f0b37 ),
	VERT( 0x41e9cdcc, 0xc0829d01, 0x4109c6c7 ),
	NORM( 0x3f489892, 0xbe855ab4, 0x3f10666a ),
	VERT( 0x41f3a43a, 0xc0827a44, 0x40c81ad8 ),
	NORM( 0x3f630c55, 0xbe8986c9, 0x3ec06c6a ),
	VERT( 0x41faf5a0, 0xc0825e18, 0x4062350d ),
	NORM( 0x3f6ad220, 0xbe97094d, 0x3e88ffa5 ),
	VERT( 0x4200fc5b, 0xc082467f, 0x3e51c116 ),
	NORM( 0x3f708c6d, 0xbea38f3c, 0x3dfb0108 ),
	VERT( 0x41bceaa2, 0xc08240b6, 0xc1885a57 ),
	NORM( 0x3e34a194, 0xbeee2cb8, 0xbf5e11db ),
	VERT( 0x4200e182, 0xc08239e5, 0xc04327f4 ),
	NORM( 0x3f713a00, 0xbeaa884b, 0xbd0ae4b4 ),
	VERT( 0x41d283de, 0xc0819250, 0x413c546b ),
	NORM( 0x3f060c49, 0xbe7bb47d, 0x3f50d2e9 ),
	VERT( 0x41a93a62, 0xc080b802, 0xc18b4125 ),
	NORM( 0x3cb1f270, 0xbee54b4e, 0xbf64d356 ),
	VERT( 0x417f15f6, 0xc0800d40, 0xc17c8dfc ),
	NORM( 0xbeded6d8, 0xbe88c12b, 0xbf5c1ae4 ),
	VERT( 0x410a61c5, 0xc07fb9c5, 0xc18a3655 ),
	NORM( 0x3dce05ac, 0xbe794457, 0xbf76f5da ),
	VERT( 0x415ee1a0, 0xc07f0f5d, 0xc16f9d06 ),
	NORM( 0x3f522f8f, 0xbd96a882, 0xbf10ecd0 ),
	VERT( 0x41830d8b, 0xc07b8bca, 0xc1808b62 ),
	NORM( 0xbefbfbff, 0xbe9e43b3, 0xbf5053ac ),
	VERT( 0x401830dd, 0xc07b7aca, 0xc18265ee ),
	NORM( 0xbe7c39e8, 0xbf20c5c5, 0xbf3cf9f6 ),
	VERT( 0x41ee163c, 0xc07a96b0, 0xc1522617 ),
	NORM( 0x3f440032, 0xbeae4e5e, 0xbf0bba74 ),
	VERT( 0x4150131f, 0xc07a9630, 0xc178fcb8 ),
	NORM( 0x3e8cb8bc, 0xbc250e16, 0xbf76209e ),
	VERT( 0x3ead0d28, 0xc07985af, 0xc1709ec0 ),
	NORM( 0xbf28928c, 0xbf0ebb6c, 0xbf0168ee ),
	VERT( 0x41710117, 0xc0797f5b, 0xc1702292 ),
	NORM( 0xbf2d4c0e, 0xbf07d868, 0xbf029392 ),
	VERT( 0x40f9b01a, 0xc0767758, 0xc18a981b ),
	NORM( 0xbd3289c1, 0xbe581f72, 0xbf79fbfe ),
	VERT( 0xbe3a3546, 0xc0756bc0, 0xc15f0927 ),
	NORM( 0xbf3aea21, 0xbf15a216, 0xbeb534c3 ),
	VERT( 0x41891872, 0xc07308aa, 0xc184f567 ),
	NORM( 0xbecdc2b9, 0xbe98941a, 0xbf5da80f ),
	VERT( 0x3f895e43, 0xc072567c, 0xc1799010 ),
	NORM( 0xbede9bc9, 0xbf0cdd2e, 0xbf367eee ),
	VERT( 0x4084f91d, 0xc0718d29, 0xc184e46b ),
	NORM( 0xbe87d7c1, 0xbee38e66, 0xbf5b097d ),
	VERT( 0x4069ba1b, 0xc06e24c0, 0xc1840f88 ),
	NORM( 0xbe6db98b, 0xbef6c3c6, 0xbf5849df ),
	VERT( 0x4194ed52, 0xc0687623, 0xc1898b4f ),
	NORM( 0xbe55b6a0, 0xbec92e14, 0xbf654432 ),
	VERT( 0xbf623cba, 0xc06755ab, 0xc14f8815 ),
	NORM( 0xbf51b271, 0xbf0526d5, 0xbe77abf6 ),
	VERT( 0x4178f746, 0xc060db08, 0xc17e0415 ),
	NORM( 0xbefc11ac, 0xbec472ac, 0xbf480229 ),
	VERT( 0x41717b17, 0xc05f9efa, 0xc177c9b9 ),
	NORM( 0xbf19a1cd, 0xbefd4c78, 0xbf20e9de ),
	VERT( 0x41293c2d, 0xc05f5628, 0xc188fb5c ),
	NORM( 0x3e8dea49, 0xbef08f25, 0xbf568e11 ),
	VERT( 0x40b245fb, 0xc05d9d92, 0xc18a2266 ),
	NORM( 0xbd8dc8bf, 0xbeed648b, 0xbf622050 ),
	VERT( 0x4079f9d8, 0xc05d0450, 0xc187f74b ),
	NORM( 0xbe909a50, 0xbf518ea4, 0xbf000a52 ),
	VERT( 0x4080590b, 0xc058f354, 0xc189652d ),
	NORM( 0xbe0c875b, 0xbf429f8e, 0xbf228d9b ),
	VERT( 0x40d3fb3a, 0xc0584556, 0xc18a59ce ),
	NORM( 0xbc3ec928, 0xbeb0f5fe, 0xbf70346b ),
	VERT( 0x416032e0, 0xc0563df2, 0xc16cfd1b ),
	NORM( 0x3f17651b, 0xbeb47b3b, 0xbf39aab3 ),
	VERT( 0x41658cd8, 0xc0563869, 0xc16d2052 ),
	NORM( 0xbecf1e9d, 0xbf3a6028, 0xbf0db02c ),
	VERT( 0xbf92a983, 0xc052fd37, 0xc12b9d52 ),
	NORM( 0xbf6d7bb2, 0xbebe0202, 0xbd2957bd ),
	VERT( 0x41486ebf, 0xc051bd1e, 0xc179e3b4 ),
	NORM( 0x3f05918e, 0xbea59d45, 0xbf4a15c9 ),
	VERT( 0x417ee566, 0xc04f8c4b, 0xc18191f5 ),
	NORM( 0xbeed12c6, 0xbe9dbf4c, 0xbf54c0e2 ),
	VERT( 0x400e2179, 0xc04a7a28, 0xc187434a ),
	NORM( 0xbea2aad6, 0xbf088a05, 0xbf48b190 ),
	VERT( 0x3f80e4bd, 0xc049cf36, 0xc18092fb ),
	NORM( 0xbef6a634, 0xbf08fc28, 0xbf31a850 ),
	VERT( 0x413891bd, 0xc0488558, 0xc1867617 ),
	NORM( 0x3eed1b93, 0xbf14b861, 0xbf2b5b69 ),
	VERT( 0x3e43aa1d, 0xc04857cd, 0xc17948c1 ),
	NORM( 0xbf208cba, 0xbee5aae8, 0xbf230327 ),
	VERT( 0x404aa2f6, 0xc04488f0, 0xc18a4324 ),
	NORM( 0xbe9a811f, 0xbf3a8357, 0xbf1d6b7d ),
	VERT( 0x411462f5, 0xc03fce7e, 0xc18a9e31 ),
	NORM( 0x3d8f5523, 0xbf2d0aec, 0xbf3bce6e ),
	VERT( 0xbef7fac2, 0xc0378e2e, 0xc169c62e ),
	NORM( 0xbf45d3c9, 0xbef14d31, 0xbed9a88d ),
	VERT( 0x4105d2ed, 0xc0376733, 0xc18b7834 ),
	NORM( 0xbdccd069, 0xbef0f9a1, 0xbf606aef ),
	VERT( 0x4121c96d, 0xc035feaf, 0xc18b4546 ),
	NORM( 0x3c5abf31, 0xbf32c90c, 0xbf3731b8 ),
	VERT( 0x41159c23, 0xc033a906, 0xc193985e ),
	NORM( 0xbde011fa, 0xbf48e0dc, 0xbf1c33fe ),
	VERT( 0x415d0d8f, 0xc0329f00, 0xc173e1ce ),
	NORM( 0x3e50a690, 0xbef366d9, 0xbf5b1918 ),
	VERT( 0x4185e17a, 0xc03126bd, 0xc1867fd9 ),
	NORM( 0xbee713a9, 0xbed3db1b, 0xbf4a66a9 ),
	VERT( 0x40962aca, 0xc02d047f, 0xc18d5a5a ),
	NORM( 0xbe6502a1, 0xbf254447, 0xbf3aef9e ),
	VERT( 0x41492706, 0xc02b3e55, 0xc182643e ),
	NORM( 0x3f09599f, 0xbf257947, 0xbf0ae2d9 ),
	VERT( 0x413c78e5, 0xc0277fea, 0xc18a516f ),
	NORM( 0x3ee5fbf0, 0xbf2b27cc, 0xbf17b804 ),
	VERT( 0x3da0741b, 0xc024299d, 0x40c87179 ),
	NORM( 0x3cf50184, 0xbe73aa6a, 0x3f788760 ),
	VERT( 0x4164f657, 0xc0232787, 0xc176943a ),
	NORM( 0xbe2c9518, 0xbefc620c, 0xbf5a84a4 ),
	VERT( 0x403d5093, 0xc0221f20, 0xc18f9036 ),
	NORM( 0xbf0edf63, 0xbf02cc87, 0xbf276088 ),
	VERT( 0xbfa8ece4, 0xc021a8f8, 0xc15939f7 ),
	NORM( 0xbf60c46b, 0xbec97e55, 0xbe8b82b8 ),
	VERT( 0x4159e95f, 0xc01877ad, 0xc17b6a41 ),
	NORM( 0x3ea26c5c, 0xbf3a2af0, 0xbf1bd3d8 ),
	VERT( 0x4162cce7, 0xc017fecd, 0xc179f0e5 ),
	NORM( 0x3d65bb81, 0xbf45c408, 0xbf21ebe2 ),
	VERT( 0x3fe1fbf1, 0xc0166b21, 0xc1884221 ),
	NORM( 0xbee913e5, 0xbec1baf0, 0xbf4e545b ),
	VERT( 0x4106fb34, 0xc0149d2a, 0xc18eb3dd ),
	NORM( 0xbe992509, 0xbf078049, 0xbf4b4100 ),
	VERT( 0x411383d3, 0xc013133e, 0xc1951452 ),
	NORM( 0xbef74654, 0xbece7a37, 0xbf46f9f4 ),
	VERT( 0x3d29b012, 0xc012c344, 0xc17d8a40 ),
	NORM( 0xbf2c1dd5, 0xbee11d1b, 0xbf1874c7 ),
	VERT( 0x416ed526, 0xc0117b2b, 0xc17c28e5 ),
	NORM( 0xbe922311, 0xbf15ddde, 0xbf424299 ),
	VERT( 0x3f448e6e, 0xc0102cc7, 0xc184dd90 ),
	NORM( 0xbeffe985, 0xbee5ade0, 0xbf3dabcd ),
	VERT( 0x40d52108, 0xc00fa851, 0xc18f3ba4 ),
	NORM( 0x3dd05787, 0xbf182e85, 0xbf4c33bd ),
	VERT( 0x41bd93d1, 0xc00f5078, 0xc18e5af9 ),
	NORM( 0x3e5ff36e, 0xbe903175, 0xbf6f2c24 ),
	VERT( 0x41296a83, 0xc00db481, 0xc19121b5 ),
	NORM( 0x3ea9da21, 0xbf416824, 0xbf10a0d8 ),
	VERT( 0x41902771, 0xc00ac502, 0xc18f77f8 ),
	NORM( 0xbe694ef5, 0xbeb022b7, 0xbf6930e3 ),
	VERT( 0x40a51be7, 0xc0070157, 0xc194e2f5 ),
	NORM( 0x3e345807, 0xbf1daa48, 0xbf449549 ),
	VERT( 0x41a7aee9, 0xc003a02e, 0xc190a4d3 ),
	NORM( 0xbc223850, 0xbe70dd15, 0xbf78cded ),
	VERT( 0xbf3df5e9, 0xc0035c4d, 0xc16f81b4 ),
	NORM( 0xbf442d44, 0xbeca657a, 0xbf01a6e3 ),
	VERT( 0x41d42502, 0xbfff00bc, 0xc186a11c ),
	NORM( 0x3f02a5e8, 0xbe5c35bc, 0xbf55286c ),
	VERT( 0x4121e552, 0xbffb559d, 0xc197efb3 ),
	NORM( 0x3e5def9b, 0xbf3a902b, 0xbf2649b9 ),
	VERT( 0x411aae42, 0xbfe844db, 0xc198ec4b ),
	NORM( 0xbe529d70, 0xbf179608, 0xbf477662 ),
	VERT( 0xbfe0a051, 0xbfe673df, 0xc13f54fc ),
	NORM( 0xbf763fff, 0xbe8709cc, 0xbd931b91 ),
	VERT( 0x4112122b, 0xbfdec7f5, 0xc19692da ),
	NORM( 0xbf2f5252, 0x3e655fba, 0xbf3182bc ),
	VERT( 0x41099d4b, 0xbfd83380, 0xc1924772 ),
	NORM( 0xbe1a0153, 0xbe6ef3e6, 0xbf75efdf ),
	VERT( 0x417dee54, 0xbfd10e0c, 0xc187f1e0 ),
	NORM( 0xbedb6c69, 0xbee0a8cc, 0xbf4a3105 ),
	VERT( 0x413be65b, 0xbfd03157, 0xc192fe5d ),
	NORM( 0x3f062df2, 0xbf1b772a, 0xbf18d8ec ),
	VERT( 0x4150d004, 0xbfc98302, 0xc18c437e ),
	NORM( 0x3ed20f27, 0xbf1a4ee3, 0xbf2f3242 ),
	VERT( 0x4118322a, 0xbfc96bc7, 0xc199d282 ),
	NORM( 0xbf259857, 0xbd990c40, 0xbf424a05 ),
	VERT( 0x41434264, 0xbfbfd2b5, 0xc18f5745 ),
	NORM( 0x3f0840eb, 0xbf0c9d50, 0xbf24eb6d ),
	VERT( 0x4160b125, 0xbfbfa3df, 0xc1867fc8 ),
	NORM( 0x3e87b099, 0xbf29ace9, 0xbf334917 ),
	VERT( 0x40e5d7c6, 0xbfbf4e80, 0xc194c5b0 ),
	NORM( 0x3d95ba89, 0xbefc0abc, 0xbf5e0bc6 ),
	VERT( 0x40447f50, 0xbfb46570, 0xc1935a77 ),
	NORM( 0xbf12a869, 0xbddce478, 0xbf5000aa ),
	VERT( 0x4173f5e5, 0xbfb36b11, 0xc186bf1f ),
	NORM( 0xbe4b5c00, 0xbf001f58, 0xbf57b8d2 ),
	VERT( 0x412f69fa, 0xbfb21035, 0xc199a85b ),
	NORM( 0x3ee0022e, 0xbf2982aa, 0xbf1bbf50 ),
	VERT( 0xbed21612, 0xbfa27d60, 0xc1827b87 ),
	NORM( 0xbf342229, 0xbeb26201, 0xbf1e8891 ),
	VERT( 0x3e9bf5d4, 0xbf9d54e1, 0xc1866a40 ),
	NORM( 0xbf0731f7, 0xbe9eb06f, 0xbf4a647a ),
	VERT( 0x4128de21, 0xbf98a1b4, 0xc19d5229 ),
	NORM( 0x3e68ed36, 0xbf1b3d18, 0xbf430dcc ),
	VERT( 0x410a5203, 0xbf966e0b, 0xc193ac93 ),
	NORM( 0x3e9dcf90, 0xbeed5686, 0xbf54aaf5 ),
	VERT( 0x411a7eda, 0xbf9437e3, 0xc19b59ab ),
	NORM( 0xbf5a02bd, 0xbe7311ee, 0xbeef49ad ),
	VERT( 0xbf81a5b7, 0xbf93e3a0, 0xc17334da ),
	NORM( 0xbf4fce40, 0xbe9fc431, 0xbefcc1c2 ),
	VERT( 0x3fcf2f6c, 0xbf935a28, 0xc18b707d ),
	NORM( 0xbed94e07, 0xbe4f0fc5, 0xbf61f1d7 ),
	VERT( 0x4118a8f4, 0xbf8f9754, 0xc18ef648 ),
	NORM( 0xbe614a86, 0x3e008beb, 0xbf77a6a2 ),
	VERT( 0x40b9d346, 0xbf8f55c3, 0xc197947b ),
	NORM( 0x3e6a9c15, 0xbec56ff1, 0xbf64cd66 ),
	VERT( 0x411c6d6b, 0xbf8f0924, 0xc191ebf8 ),
	NORM( 0xbf648db4, 0x3eafe20a, 0xbe953477 ),
	VERT( 0x41215219, 0xbf881942, 0xc19de922 ),
	NORM( 0xbe820296, 0xbefefd32, 0xbf544348 ),
	VERT( 0xbfc7ddaf, 0xbf7bd512, 0xc16848f5 ),
	NORM( 0xbf66577e, 0xbe5c1efb, 0xbec26d07 ),
	VERT( 0x3f251bdd, 0xbf744fb8, 0xc18abdd3 ),
	NORM( 0xbf033c0c, 0xbe98a384, 0xbf4e20d6 ),
	VERT( 0x411c79d3, 0xbf4a6ebd, 0xc1937c82 ),
	NORM( 0xbf4cb9bd, 0xbf199a36, 0xbcaebd18 ),
	VERT( 0x4118b24a, 0xbf49dce1, 0xc19c241f ),
	NORM( 0xbf3dad01, 0xbeea7aba, 0xbefb81dd ),
	VERT( 0x40ed39b6, 0xbf44c504, 0xc196719b ),
	NORM( 0x3da8c6af, 0xbe534e7c, 0xbf7999a7 ),
	VERT( 0x40ca1de6, 0xbf449d5a, 0xc19732b9 ),
	NORM( 0x3e52247b, 0xbe3cccf5, 0xbf7610ba ),
	VERT( 0x411a111c, 0xbf408a12, 0xc190b683 ),
	NORM( 0xbe979846, 0xbf3b0874, 0xbf1d8297 ),
	VERT( 0x410c7e2b, 0xbf3a1300, 0xc19628da ),
	NORM( 0xbc0cf440, 0xbf24b110, 0xbf43faa6 ),
	VERT( 0x411321ca, 0xbf250886, 0xc198fe6e ),
	NORM( 0xbeefe711, 0xbf46011e, 0xbeda8f19 ),
	VERT( 0x4123d270, 0x39bd161c, 0xc1a303b1 ),
	NORM( 0xbe5f3415, 0x35bca317, 0xbf79d830 ),
	VERT( 0x412b53e0, 0x39bd4981, 0xc1a2bd52 ),
	NORM( 0x3e724c1f, 0x360c0959, 0xbf78baf4 ),
	VERT( 0x4133c338, 0x39bd621f, 0xc1a0ecd6 ),
	NORM( 0x3f1071ab, 0x3601381a, 0xbf535b7a ),
	VERT( 0x411af559, 0x39bc911e, 0xc1a00d73 ),
	NORM( 0xbf1e248b, 0xbbce28b8, 0xbf494e72 ),
	VERT( 0x4112c612, 0x39bbfa0d, 0xc19c08a9 ),
	NORM( 0xbf34cf9e, 0xbcac49f5, 0xbf3525bd ),
	VERT( 0x40afd105, 0x39ba195a, 0xc19aa86d ),
	NORM( 0x3ea29666, 0x35d9b8f7, 0xbf72bfe0 ),
	VERT( 0x40c31dd5, 0x39ba3b29, 0xc198d61a ),
	NORM( 0x3e9e308a, 0x35d6dae5, 0xbf737991 ),
	VERT( 0x41436ac2, 0x39bd20f9, 0xc19885bc ),
	NORM( 0x3f3cc5f0, 0x35c67031, 0xbf2ceb09 ),
	VERT( 0x410a96ca, 0x39bb62fd, 0xc19803de ),
	NORM( 0xbecd6a1d, 0x3c73497b, 0xbf6a7675 ),
	VERT( 0x40e223d5, 0x39ba87bc, 0xc196ec9d ),
	NORM( 0x3db7dc08, 0x35c4605a, 0xbf7ef75e ),
	VERT( 0x414b2313, 0x39bcfff4, 0xc194568b ),
	NORM( 0x3f223a85, 0x35c418ae, 0xbf4608fa ),
	VERT( 0x40473bd0, 0x39b849f2, 0xc192d7ac ),
	NORM( 0xbf0ba06b, 0x3532e8d4, 0xbf5691fd ),
	VERT( 0x41b9aab9, 0x39c1e174, 0xc192a286 ),
	NORM( 0x3e1cbdd4, 0x35b8203a, 0xbf7cfbb4 ),
	VERT( 0x41a52ff1, 0x39c09c48, 0xc19219c9 ),
	NORM( 0xbd155307, 0x35a645ef, 0xbf7fd46f ),
	VERT( 0x418a21b1, 0x39bee483, 0xc190edd2 ),
	NORM( 0xbe734452, 0x3541e748, 0xbf78abce ),
	VERT( 0x41585c7b, 0x39bcfd2d, 0xc18f9c9b ),
	NORM( 0x3f093a1e, 0x35f1093c, 0xbf581ce0 ),
	VERT( 0x416828b4, 0x39bd273b, 0xc18c07b4 ),
	NORM( 0x3e4df399, 0x35d07caa, 0xbf7ac4d2 ),
	VERT( 0x41798774, 0x39bda4ba, 0xc18bb107 ),
	NORM( 0xbe6d87d2, 0x358ca703, 0xbf79047a ),
	VERT( 0x3fd00a2c, 0x39b6f1c1, 0xc18b79c8 ),
	NORM( 0xbea65eff, 0x3588422d, 0xbf721b96 ),
	VERT( 0x3f4b595c, 0x39b67c83, 0xc18ac527 ),
	NORM( 0xbeb646aa, 0x359a19fa, 0xbf6f3a46 ),
	VERT( 0x41d2f8a9, 0x39c2b3b3, 0xc18a9765 ),
	NORM( 0x3efb275f, 0x35d6b647, 0xbf5f157c ),
	VERT( 0xbd286174, 0x39b5c089, 0xc186e04d ),
	NORM( 0xbf1012b4, 0x35a7499c, 0xbf539c42 ),
	VERT( 0xbf461789, 0x39b5045b, 0xc182665e ),
	NORM( 0xbf47293a, 0x34e98004, 0xbf20d81f ),
	VERT( 0xbfd1fc70, 0x39b36baf, 0xc1694a93 ),
	NORM( 0xbf6fd7ac, 0xb4e86704, 0xbeb303c9 ),
	VERT( 0x41f3510c, 0x39c21746, 0xc159f76c ),
	NORM( 0x3f54f02a, 0x35c57f83, 0xbf0e1a70 ),
	VERT( 0xbffe04d7, 0x39b1d22e, 0xc147e4ee ),
	NORM( 0xbf7edefc, 0xb55477c1, 0xbdc01fac ),
	VERT( 0x4201e0f4, 0x39bf6228, 0xc1041669 ),
	NORM( 0x3f78fd64, 0x359fefdf, 0xbe6dfe66 ),
	VERT( 0x42039825, 0x39bc7076, 0xc06b3244 ),
	NORM( 0x3f7fabe0, 0x35840d64, 0xbd4f75f0 ),
	VERT( 0x4203ca7b, 0x39ba1f9a, 0xbe8b6d5a ),
	NORM( 0x3f7e6be8, 0x354ca0ea, 0x3de313cf ),
	VERT( 0x42002538, 0x39b74ca1, 0x404ce4e0 ),
	NORM( 0x3f75b4ad, 0x35033458, 0x3e8fbb2e ),
	VERT( 0x41f8bfda, 0x39b4df46, 0x40c26e90 ),
	NORM( 0x3f6bcc9a, 0x34b6268f, 0x3ec75897 ),
	VERT( 0x40365dc2, 0x39a6eadb, 0x40d74cd5 ),
	NORM( 0xbe911c9c, 0xb5d590a3, 0x3f7580ba ),
	VERT( 0x3e486641, 0x39a58b8a, 0x40dc1b5b ),
	NORM( 0x3dd9532d, 0xb5d7a6ec, 0x3f7e8df8 ),
	VERT( 0x40a117a4, 0x39a7118a, 0x41007309 ),
	NORM( 0xbf153ef1, 0xb5c896cf, 0x3f4ffe90 ),
	VERT( 0x41ee34b4, 0x39b28c05, 0x4108a946 ),
	NORM( 0x3f50c874, 0x3380cbf9, 0x3f142400 ),
	VERT( 0x40e56de9, 0x39a6cb17, 0x411e9db5 ),
	NORM( 0xbf1ca56c, 0xb5cec15a, 0x3f4a7ac3 ),
	VERT( 0x4120c3b7, 0x39a6e589, 0x413c3e21 ),
	NORM( 0xbee61307, 0xb5c1e913, 0x3f64b281 ),
	VERT( 0x41d4b916, 0x39aebba3, 0x413df9bf ),
	NORM( 0x3f0cf1fa, 0xb5250df2, 0x3f55b4d9 ),
	VERT( 0x41575c70, 0x39a7ac1d, 0x41502bec ),
	NORM( 0xbe968cdf, 0xb5cd89f9, 0x3f74aec9 ),
	VERT( 0x41b08480, 0x39ab6f28, 0x41585ffc ),
	NORM( 0x3e8140ae, 0xb59c4ec3, 0x3f77b558 ),
	VERT( 0x419022f1, 0x39a91da8, 0x416147fc ),
	NORM( 0xbd0271d4, 0xb5d5665c, 0x3f7fdec2 ),
	VERT( 0x411321ca, 0x3f253775, 0xc198fe6d ),
	NORM( 0xbeff5f86, 0x3f44ae15, 0xbecd6ad5 ),
	VERT( 0x410c7e2b, 0x3f3a41d3, 0xc19628da ),
	NORM( 0x3a52885c, 0x3f22be60, 0xbf459ca5 ),
	VERT( 0x411a111c, 0x3f40b8df, 0xc190b682 ),
	NORM( 0xbeb68155, 0x3f31bbff, 0xbf200f8a ),
	VERT( 0x40ca1de6, 0x3f44cbe6, 0xc19732b8 ),
	NORM( 0x3e52246b, 0x3e3ccd93, 0xbf7610b5 ),
	VERT( 0x40ed39b6, 0x3f44f3af, 0xc196719b ),
	NORM( 0x3da8c6d1, 0x3e534f04, 0xbf7999a0 ),
	VERT( 0x4118b249, 0x3f4a0bec, 0xc19c241d ),
	NORM( 0xbf394926, 0x3ef23991, 0xbf009890 ),
	VERT( 0x411c79d3, 0x3f4a9d9f, 0xc1937c81 ),
	NORM( 0xbf58bc40, 0x3f083122, 0xbc6afb4c ),
	VERT( 0x3f251bdc, 0x3f747d52, 0xc18abdd2 ),
	NORM( 0xbf033c17, 0x3e98a3c2, 0xbf4e20be ),
	VERT( 0xbfc7ddaf, 0x3f7c01ec, 0xc16848f2 ),
	NORM( 0xbf66577f, 0x3e5c1ed2, 0xbec26ceb ),
	VERT( 0x41215219, 0x3f8830d4, 0xc19de921 ),
	NORM( 0xbe81214f, 0x3f00daec, 0xbf539303 ),
	VERT( 0x411c6d6b, 0x3f8f2091, 0xc191ebf6 ),
	NORM( 0xbf6785e3, 0xbe95deef, 0xbe9ef823 ),
	VERT( 0x40b9d346, 0x3f8f6d04, 0xc197947a ),
	NORM( 0x3e6a9bfe, 0x3ec57055, 0xbf64cd55 ),
	VERT( 0x4118a8f4, 0x3f8faeb5, 0xc18ef646 ),
	NORM( 0xbe7c024a, 0xbdf54460, 0xbf76399f ),
	VERT( 0x3fcf2f6c, 0x3f937107, 0xc18b707c ),
	NORM( 0xbed94e11, 0x3e4f1038, 0xbf61f1cc ),
	VERT( 0xbf81a5b8, 0x3f93fa25, 0xc17334d7 ),
	NORM( 0xbf4fce3d, 0x3e9fc431, 0xbefcc1a3 ),
	VERT( 0x411a7eda, 0x3f944f67, 0xc19b59aa ),
	NORM( 0xbf559552, 0x3e84f4c9, 0xbef8fd0a ),
	VERT( 0x410a5203, 0x3f96856b, 0xc193ac92 ),
	NORM( 0x3ea193c9, 0x3eeafdae, 0xbf549cc6 ),
	VERT( 0x4128de21, 0x3f98b94c, 0xc19d5226 ),
	NORM( 0x3e64ba6d, 0x3f1be568, 0xbf42d70c ),
	VERT( 0x3e9bf5d2, 0x3f9d6b9d, 0xc1866a3d ),
	NORM( 0xbf0731fb, 0x3e9eb08f, 0xbf4a6469 ),
	VERT( 0xbed21615, 0x3fa29407, 0xc1827b85 ),
	NORM( 0xbf342224, 0x3eb26214, 0xbf1e8884 ),
	VERT( 0x412f69fa, 0x3fb227c9, 0xc199a858 ),
	NORM( 0x3ee00224, 0x3f2982d1, 0xbf1bbf39 ),
	VERT( 0x4173f5e5, 0x3fb382b2, 0xc186bf1c ),
	NORM( 0xbe3cba94, 0x3f0e139e, 0xbf4fa9d0 ),
	VERT( 0x40447f4f, 0x3fb47c7a, 0xc1935a75 ),
	NORM( 0xbf12a868, 0x3ddce4c9, 0xbf5000a5 ),
	VERT( 0x40e5d7c6, 0x3fbf65cd, 0xc194c5af ),
	NORM( 0x3d95ba88, 0x3efc0b00, 0xbf5e0bb4 ),
	VERT( 0x4160b125, 0x3fbfbb6d, 0xc1867fc6 ),
	NORM( 0x3e87b096, 0x3f29ad12, 0xbf3348fa ),
	VERT( 0x41434263, 0x3fbfea40, 0xc18f5743 ),
	NORM( 0x3f0840f4, 0x3f0c9d7a, 0xbf24eb52 ),
	VERT( 0x4118322a, 0x3fc98345, 0xc199d27f ),
	NORM( 0xbf1f9b27, 0x3cff13cb, 0xbf47fef3 ),
	VERT( 0x4150d004, 0x3fc99a91, 0xc18c437b ),
	NORM( 0x3ed20f3c, 0x3f1a4f10, 0xbf2f321f ),
	VERT( 0x413be65b, 0x3fd048e4, 0xc192fe5a ),
	NORM( 0x3f062de7, 0x3f1b7758, 0xbf18d8d8 ),
	VERT( 0x417dee54, 0x3fd125bb, 0xc187f1dd ),
	NORM( 0xbee3c345, 0x3ee20288, 0xbf477dd7 ),
	VERT( 0x41099d4b, 0x3fd84adb, 0xc1924770 ),
	NORM( 0xbe20b2fa, 0x3e664531, 0xbf762fd5 ),
	VERT( 0x4112122b, 0x3fdedf66, 0xc19692d7 ),
	NORM( 0xbf3665de, 0xbe80fb6d, 0xbf27a778 ),
	VERT( 0xbfe0a051, 0x3fe68a11, 0xc13f54f7 ),
	NORM( 0xbf763fff, 0x3e870999, 0xbd931a8f ),
	VERT( 0x411aae42, 0x3fe85c59, 0xc198ec49 ),
	NORM( 0xbe103821, 0x3f0d5f56, 0xbf525b47 ),
	VERT( 0x4121e552, 0x3ffb6d20, 0xc197efb0 ),
	NORM( 0x3e78dbd5, 0x3f36d8cf, 0xbf280660 ),
	VERT( 0x41d42502, 0x3fff1909, 0xc186a119 ),
	NORM( 0x3f02a5ea, 0x3e5c3695, 0xbf552862 ),
	VERT( 0xbf3df5eb, 0x40036790, 0xc16f81ae ),
	NORM( 0xbf442d3f, 0x3eca657b, 0xbf01a6d6 ),
	VERT( 0x41a7aee9, 0x4003ac37, 0xc190a4d0 ),
	NORM( 0xbc223792, 0x3e70ddc8, 0xbf78cde1 ),
	VERT( 0x40a51be7, 0x40070cef, 0xc194e2f2 ),
	NORM( 0x3e345823, 0x3f1daa71, 0xbf44952b ),
	VERT( 0x41902771, 0x400ad0f4, 0xc18f77f6 ),
	NORM( 0xbe694ef1, 0x3eb022fc, 0xbf6930d3 ),
	VERT( 0x41296a83, 0x400dc03c, 0xc19121b1 ),
	NORM( 0x3ea9da26, 0x3f416847, 0xbf10a0b6 ),
	VERT( 0x41bd93d1, 0x400f5c95, 0xc18e5af7 ),
	NORM( 0x3e5ff371, 0x3e9031da, 0xbf6f2c17 ),
	VERT( 0x40d52108, 0x400fb3ec, 0xc18f3ba0 ),
	NORM( 0x3dd0572c, 0x3f182eb1, 0xbf4c33a0 ),
	VERT( 0x3f448e6c, 0x40103826, 0xc184dd8d ),
	NORM( 0xbeffe98e, 0x3ee5ade7, 0xbf3dabbf ),
	VERT( 0x416ed526, 0x401186ed, 0xc17c28dd ),
	NORM( 0xbea217a0, 0x3f04c575, 0xbf4b5215 ),
	VERT( 0x3d29aff3, 0x4012ce95, 0xc17d8a38 ),
	NORM( 0xbf2c1dd7, 0x3ee11d1f, 0xbf1874b5 ),
	VERT( 0x411383d3, 0x40131ef4, 0xc195144f ),
	NORM( 0xbf0f8e1c, 0x3ec6f396, 0xbf3b2b6d ),
	VERT( 0x4106fb34, 0x4014a8d2, 0xc18eb3d9 ),
	NORM( 0xbe9a52da, 0x3f07af27, 0xbf4ae88f ),
	VERT( 0x3fe1fbf0, 0x4016768d, 0xc188421e ),
	NORM( 0xbee913e6, 0x3ec1bafa, 0xbf4e5450 ),
	VERT( 0x4162cce7, 0x40180a87, 0xc179f0de ),
	NORM( 0x3d898601, 0x3f4446a3, 0xbf23737a ),
	VERT( 0x4159e95e, 0x40188364, 0xc17b6a3a ),
	NORM( 0x3ea26c56, 0x3f3a2b13, 0xbf1bd3bd ),
	VERT( 0xbfa8ece5, 0x4021b427, 0xc15939f0 ),
	NORM( 0xbf60c46b, 0x3ec97e36, 0xbe8b8298 ),
	VERT( 0x403d5092, 0x40222a9f, 0xc18f9034 ),
	NORM( 0xbf0edf67, 0x3f02cc91, 0xbf27606f ),
	VERT( 0x4164f657, 0x40233341, 0xc1769433 ),
	NORM( 0xbe25175f, 0x3efc9182, 0xbf5ad379 ),
	VERT( 0x3da0740a, 0x402433fb, 0x40c8718a ),
	NORM( 0x3cf50388, 0x3e73a9d1, 0x3f788769 ),
	VERT( 0x413c78e4, 0x40278ba5, 0xc18a516c ),
	NORM( 0x3ee5fbec, 0x3f2b27f9, 0xbf17b7e2 ),
	VERT( 0x41492706, 0x402b4a0c, 0xc1826439 ),
	NORM( 0x3f09599f, 0x3f25796c, 0xbf0ae2bf ),
	VERT( 0x40962ac9, 0x402d1008, 0xc18d5a57 ),
	NORM( 0xbe65029b, 0x3f254463, 0xbf3aef80 ),
	VERT( 0x4185e17a, 0x40313299, 0xc1867fd4 ),
	NORM( 0xbee713ac, 0x3ed3db43, 0xbf4a6695 ),
	VERT( 0x415d0d8f, 0x4032aab5, 0xc173e1c6 ),
	NORM( 0x3e50a688, 0x3ef36730, 0xbf5b1904 ),
	VERT( 0x41159c23, 0x4033b4bc, 0xc193985a ),
	NORM( 0xbde74329, 0x3f4c20ea, 0xbf17c333 ),
	VERT( 0x4121c96c, 0x40360a5e, 0xc18b4542 ),
	NORM( 0x3b94c38a, 0x3f37c358, 0xbf323ac7 ),
	VERT( 0x4105d2ed, 0x403772d6, 0xc18b7830 ),
	NORM( 0xbdcd2685, 0x3ef113e4, 0xbf6062a5 ),
	VERT( 0xbef7fac7, 0x4037996e, 0xc169c626 ),
	NORM( 0xbf45d3c9, 0x3ef14d20, 0xbed9a869 ),
	VERT( 0x411462f5, 0x403fda27, 0xc18a9e2d ),
	NORM( 0x3da3558d, 0x3f2da372, 0xbf3affe6 ),
	VERT( 0x404aa2f6, 0x40449469, 0xc18a431f ),
	NORM( 0xbe9a8107, 0x3f3a8369, 0xbf1d6b61 ),
	VERT( 0x3e43aa13, 0x4048631d, 0xc17948b8 ),
	NORM( 0xbf208cba, 0x3ee5aae5, 0xbf23031c ),
	VERT( 0x413891bd, 0x4048910c, 0xc1867612 ),
	NORM( 0x3eed1bae, 0x3f14b88b, 0xbf2b5b48 ),
	VERT( 0x3f80e4bc, 0x4049da91, 0xc18092f6 ),
	NORM( 0xbef6a643, 0x3f08fc37, 0xbf31a834 ),
	VERT( 0x400e2178, 0x404a8597, 0xc1874346 ),
	NORM( 0xbea2aac8, 0x3f088a10, 0xbf48b184 ),
	VERT( 0x417ee565, 0x404f981a, 0xc18191f1 ),
	NORM( 0xbef2315a, 0x3e99918a, 0xbf541335 ),
	VERT( 0x41486ebf, 0x4051c8cc, 0xc179e3ac ),
	NORM( 0x3f059184, 0x3ea59d96, 0xbf4a15c6 ),
	VERT( 0xbf92a984, 0x40530848, 0xc12b9d49 ),
	NORM( 0xbf6d7bba, 0x3ebe01a1, 0xbd29571e ),
	VERT( 0x41658cd8, 0x4056441d, 0xc16d2048 ),
	NORM( 0xbecf1ea2, 0x3f3a6033, 0xbf0db00a ),
	VERT( 0x416032e0, 0x405649a3, 0xc16cfd11 ),
	NORM( 0x3f17651f, 0x3eb47b9e, 0xbf39aaa1 ),
	VERT( 0x40d3fb3a, 0x405850e9, 0xc18a59c9 ),
	NORM( 0xbc3ecbaf, 0x3eb0f636, 0xbf703461 ),
	VERT( 0x4080590b, 0x4058fed3, 0xc1896528 ),
	NORM( 0xbd91354f, 0x3f5822f2, 0xbf07fbce ),
	VERT( 0x4079f9d7, 0x405d0fcc, 0xc187f747 ),
	NORM( 0xbdf74a83, 0x3f58b4b0, 0xbf04bca1 ),
	VERT( 0x40b245fa, 0x405da91d, 0xc18a2262 ),
	NORM( 0xbd910c5e, 0x3eed7905, 0xbf6212a7 ),
	VERT( 0x41293c2d, 0x405f61d8, 0xc188fb58 ),
	NORM( 0x3e78a1bc, 0x3ef2d90b, 0xbf58a154 ),
	VERT( 0x41717b17, 0x405faaba, 0xc177c9b0 ),
	NORM( 0xbf19a1cd, 0x3efd4c87, 0xbf20e9ca ),
	VERT( 0x4178f746, 0x4060e6d0, 0xc17e040c ),
	NORM( 0xbf01ad19, 0x3eb6e307, 0xbf48e4b7 ),
	VERT( 0xbf623cbd, 0x406760d6, 0xc14f880c ),
	NORM( 0xbf51b26f, 0x3f0526c6, 0xbe77ab9a ),
	VERT( 0x4194ed52, 0x40688210, 0xc1898b4a ),
	NORM( 0xbe55b69c, 0x3ec92e64, 0xbf65441e ),
	VERT( 0x4069ba1a, 0x406e3036, 0xc1840f83 ),
	NORM( 0xbe6db9b1, 0x3ef6c408, 0xbf5849c5 ),
	VERT( 0x4084f91d, 0x407198a1, 0xc184e467 ),
	NORM( 0xbe8500c9, 0x3edc17cf, 0xbf5d5dec ),
	VERT( 0x3f895e41, 0x407261d3, 0xc1799006 ),
	NORM( 0xbede9bc7, 0x3f0cdd3b, 0xbf367eda ),
	VERT( 0x41891872, 0x40731488, 0xc184f562 ),
	NORM( 0xbecdc2ad, 0x3e98944f, 0xbf5da806 ),
	VERT( 0xbe3a3553, 0x407576fb, 0xc15f091d ),
	NORM( 0xbf3aea1f, 0x3f15a212, 0xbeb5348e ),
	VERT( 0x40f9b01a, 0x407682f5, 0xc18a9817 ),
	NORM( 0xbd3289e1, 0x3e582010, 0xbf79fbf4 ),
	VERT( 0x41710117, 0x40798b16, 0xc1702289 ),
	NORM( 0xbf2d4c0e, 0x3f07d861, 0xbf029382 ),
	VERT( 0x3ead0d21, 0x407990fa, 0xc1709eb7 ),
	NORM( 0xbf289288, 0x3f0ebb6b, 0xbf0168dc ),
	VERT( 0x4150131f, 0x407aa1e0, 0xc178fcaf ),
	NORM( 0x3e8cb8bf, 0x3c251ad4, 0xbf76209e ),
	VERT( 0x41ee163c, 0x407aa2c6, 0xc152260d ),
	NORM( 0x3f440032, 0x3eae4ebd, 0xbf0bba67 ),
	VERT( 0x401830dc, 0x407b8632, 0xc18265e9 ),
	NORM( 0xbe7c39ca, 0x3f20c5e6, 0xbf3cf9d6 ),
	VERT( 0x41830d8b, 0x407b979c, 0xc1808b5d ),
	NORM( 0xbef56a8c, 0x3e97982d, 0xbf5380c0 ),
	VERT( 0x415ee19f, 0x407f1b0f, 0xc16f9cfb ),
	NORM( 0x3f522f91, 0x3d96aa0e, 0xbf10eccb ),
	VERT( 0x410a61c5, 0x407fc569, 0xc18a3650 ),
	NORM( 0x3dce063b, 0x3e794512, 0xbf76f5cd ),
	VERT( 0x417f15f6, 0x40801326, 0xc17c8df0 ),
	NORM( 0xbeeada8e, 0x3e83cdc2, 0xbf59b96a ),
	VERT( 0x41a93a61, 0x4080be04, 0xc18b411f ),
	NORM( 0x3cb1f2a9, 0x3ee54ba6, 0xbf64d341 ),
	VERT( 0x41d283de, 0x408197c5, 0x413c5477 ),
	NORM( 0x3f060c4a, 0x3e7bb42c, 0x3f50d2f3 ),
	VERT( 0x4200e182, 0x40823fc1, 0xc04327c7 ),
	NORM( 0x3f713a02, 0x3eaa8889, 0xbd0ae3cb ),
	VERT( 0x41bceaa2, 0x408246c0, 0xc1885a51 ),
	NORM( 0x3e34a198, 0x3eee2d13, 0xbf5e11c5 ),
	VERT( 0x4200fc5b, 0x40824c4c, 0x3e51c3e9 ),
	NORM( 0x3f708c6e, 0x3ea38f6b, 0x3dfb0178 ),
	VERT( 0x41faf5a0, 0x408263ce, 0x4062353c ),
	NORM( 0x3f6ad220, 0x3e97096e, 0x3e88ffc1 ),
	VERT( 0x41f3a43a, 0x40827fe7, 0x40c81af0 ),
	NORM( 0x3f630c55, 0x3e8986dd, 0x3ec06c87 ),
	VERT( 0x41e9cdcc, 0x4082a293, 0x4109c6d0 ),
	NORM( 0x3f489892, 0x3e855ab2, 0x3f106676 ),
	VERT( 0x41aed050, 0x4083e84a, 0x41544a4f ),
	NORM( 0x3e74b60c, 0x3e88667e, 0x3f6f0b43 ),
	VERT( 0x40605d22, 0x4084263d, 0x40dd43ba ),
	NORM( 0xbee24ca7, 0x3e40e6af, 0x3f60841b ),
	VERT( 0x40b0daf4, 0x408435b5, 0x4102b715 ),
	NORM( 0xbf0f6942, 0x3e3559cd, 0x3f4f2800 ),
	VERT( 0x40f2ec29, 0x40844ed3, 0x411fa2de ),
	NORM( 0xbf160e47, 0x3e883967, 0x3f43e879 ),
	VERT( 0x41256a5f, 0x40851661, 0x413df96d ),
	NORM( 0xbef079c4, 0x3e7f2fad, 0x3f58d0b4 ),
	VERT( 0x417967f6, 0x4085a4f0, 0xc17842c5 ),
	NORM( 0xbf421d43, 0x3e7489b3, 0xbf1b4ce1 ),
	VERT( 0x415a4c87, 0x4085dcc4, 0xc1755fe3 ),
	NORM( 0x3f147a0e, 0x3db6466b, 0xbf4f4bb5 ),
	VERT( 0x41fe3fe7, 0x40864ecd, 0xc10c94d7 ),
	NORM( 0x3f6a13fa, 0x3e9f9564, 0xbe845077 ),
	VERT( 0x41d2257a, 0x40875289, 0xc182dfdf ),
	NORM( 0x3ede8f85, 0x3eda6222, 0xbf4b0d2d ),
	VERT( 0x418f3db9, 0x4087847c, 0x415f88b0 ),
	NORM( 0x39d1cab8, 0x3e8751a6, 0x3f76e5aa ),
	VERT( 0x4158cf88, 0x4087c24b, 0x41529d8a ),
	NORM( 0xbe8bddb2, 0x3e44f064, 0x3f714a7a ),
	VERT( 0x41397a3e, 0x408cead0, 0xc17ed538 ),
	NORM( 0x3ee25d7d, 0x3e999f3c, 0xbf586485 ),
	VERT( 0x3e4e81bd, 0x408d806d, 0x40b147f3 ),
	NORM( 0xbc3169b2, 0x3ee36921, 0x3f65587b ),
	VERT( 0x41236a4d, 0x408e1fd3, 0xc186ba26 ),
	NORM( 0x3e9e804f, 0x3eb19119, 0xbf62a7e5 ),
	VERT( 0x4098539c, 0x408e5171, 0xc186b262 ),
	NORM( 0xbe89f4dc, 0x3e483408, 0xbf7165d9 ),
	VERT( 0x4025ab3e, 0x408f57ab, 0xc17e61ce ),
	NORM( 0xbec512e0, 0x3ed4b314, 0xbf52fd16 ),
	VERT( 0x40da410b, 0x409466fe, 0xc187ad54 ),
	NORM( 0xbd7687c7, 0x3e94e651, 0xbf747334 ),
	VERT( 0x4179af47, 0x40957575, 0xc171c0e9 ),
	NORM( 0xbf79c0d4, 0x3dfcb0af, 0xbe39f8c2 ),
	VERT( 0x3f360a24, 0x4096ec41, 0xc162a889 ),
	NORM( 0xbf45a021, 0x3f0bf7f3, 0xbea5ffb6 ),
	VERT( 0x3e4c5f0d, 0x409962f5, 0xc14dd38c ),
	NORM( 0xbf42fe86, 0x3f0b404c, 0xbeb43f63 ),
	VERT( 0xbf0d5bf7, 0x409f5e9e, 0xc11ed7ab ),
	NORM( 0xbf69e026, 0x3ecb6ece, 0xbdb16f4f ),
	VERT( 0xbecdc037, 0x409f6269, 0xc1378e1c ),
	NORM( 0xbf5b5e74, 0x3eefb4e6, 0xbe5cd92a ),
	VERT( 0x40c0b43b, 0x409f854d, 0xc186f51f ),
	NORM( 0xbd89d73e, 0x3ea6a9ca, 0xbf717189 ),
	VERT( 0x414d5ebf, 0x40a0a789, 0xc17722c5 ),
	NORM( 0x3e855bac, 0x3e4a098a, 0xbf71f2a0 ),
	VERT( 0x415b642f, 0x40a1755b, 0xc1709904 ),
	NORM( 0x3f316d15, 0x3e296803, 0xbf339e00 ),
	VERT( 0x4156af4f, 0x40a2c6ee, 0xc174d751 ),
	NORM( 0x3ed64ac6, 0x3e6792a8, 0xbf612cfe ),
	VERT( 0x4179c696, 0x40a7c2d1, 0xc17dbaa8 ),
	NORM( 0xbeec968d, 0x3c316b98, 0xbf630349 ),
	VERT( 0x4178a4e7, 0x40a87ba5, 0xc173a358 ),
	NORM( 0xbf780ada, 0xbe67745d, 0xbdcdf50b ),
	VERT( 0x40878a7d, 0x40a89d72, 0xc1846e26 ),
	NORM( 0xbe85ecc5, 0x3e87eefc, 0xbf6d8e2b ),
	VERT( 0x3fa8cb0b, 0x40a8c491, 0xc16ba501 ),
	NORM( 0xbf22528e, 0x3f00bce2, 0xbf16611d ),
	VERT( 0x40a9e85c, 0x40acaaa6, 0xc184185d ),
	NORM( 0xbe4abc53, 0x3e8642b4, 0xbf71c951 ),
	VERT( 0x418086ab, 0x40ad4e72, 0xc17a980c ),
	NORM( 0x3ceab23c, 0x3e919d02, 0xbf7551a9 ),
	VERT( 0x4043709e, 0x40ade1db, 0xc17e93e3 ),
	NORM( 0xbef7ee7b, 0x3eac27b9, 0xbf4ec863 ),
	VERT( 0x4183c64b, 0x40affda1, 0xc17b79f6 ),
	NORM( 0xbeb1bed7, 0x3e88e9f4, 0xbf661c87 ),
	VERT( 0x4195d472, 0x40b122c7, 0xc1842351 ),
	NORM( 0xbd8850ed, 0x3ee974da, 0xbf633364 ),
	VERT( 0x418c57ab, 0x40b5a914, 0xc181cb6f ),
	NORM( 0xbe92c74d, 0x3ea33ce4, 0xbf674687 ),
	VERT( 0x41a5c732, 0x40b76bcb, 0xc1814bf9 ),
	NORM( 0x3d98082d, 0x3f197d0b, 0xbf4c0019 ),
	VERT( 0x414cce7f, 0x40b8a884, 0xc1749719 ),
	NORM( 0x3e97b130, 0x3ea51959, 0xbf66265f ),
	VERT( 0x415c14a8, 0x40ba8489, 0xc16d5e17 ),
	NORM( 0x3f0f9d7c, 0x3ec9c686, 0xbf3a5dc1 ),
	VERT( 0x417559f7, 0x40bb8346, 0xc1738da9 ),
	NORM( 0xbf707d98, 0xbe8dd6d5, 0xbe4eb72c ),
	VERT( 0x415806d7, 0x40bdc340, 0xc16f7223 ),
	NORM( 0x3edf3aec, 0x3ec6e733, 0xbf4fd0e4 ),
	VERT( 0x41760976, 0x40beffbc, 0xc17a6279 ),
	NORM( 0xbeff80a1, 0x3e65c08f, 0xbf564803 ),
	VERT( 0x41336ff7, 0x40bfb345, 0xc17a5228 ),
	NORM( 0x3eb7325a, 0x3ead3f58, 0xbf5ece17 ),
	VERT( 0x410416c6, 0x40c4d3e1, 0xc1842afb ),
	NORM( 0x3da0cb7b, 0x3eda8c0a, 0xbf66a1e8 ),
	VERT( 0x411c75ee, 0x40c587a8, 0xc181c3ac ),
	NORM( 0x3e82cef7, 0x3ed4cb3d, 0xbf5f77d5 ),
	VERT( 0x40a2a18d, 0x40c61db5, 0xc1826cac ),
	NORM( 0xbe2ab864, 0x3ed67cd4, 0xbf648083 ),
	VERT( 0x408352de, 0x40c6626c, 0xc18098f7 ),
	NORM( 0xbea4dd2f, 0x3ef3466c, 0xbf51a199 ),
	VERT( 0x3f7c2139, 0x40c69b75, 0xc152feb6 ),
	NORM( 0xbf499bdf, 0x3effa4a4, 0xbeb8f2b8 ),
	VERT( 0x41b5f3d3, 0x40c6a498, 0xc17abdf1 ),
	NORM( 0x3e0428ba, 0x3f24895a, 0xbf415196 ),
	VERT( 0x41711027, 0x40c7481e, 0xc1718830 ),
	NORM( 0x3f411308, 0x3f1f3917, 0xbe57a4ce ),
	VERT( 0x40e6783c, 0x40c78010, 0xc183f391 ),
	NORM( 0xbd06729c, 0x3edc688a, 0xbf66e984 ),
	VERT( 0x4152fce7, 0x40cd1533, 0x414198fe ),
	NORM( 0xbe90c797, 0x3f069a57, 0x3f4d5f4c ),
	VERT( 0x40b9224d, 0x40cd6b9c, 0xc18291cf ),
	NORM( 0xbdcbd2e3, 0x3ee91e79, 0xbf627f26 ),
	VERT( 0x3f20f05d, 0x40cdd566, 0xc13b2a60 ),
	NORM( 0xbf47bb73, 0x3f09ed7c, 0xbea2b6af ),
	VERT( 0x417bc5e7, 0x40ceba7a, 0xc172fe3d ),
	NORM( 0xbdbeb9c7, 0x3f00a2d4, 0xbf5c0bdc ),
	VERT( 0x3e142865, 0x40cedba1, 0xc1121c90 ),
	NORM( 0xbf5d2f66, 0x3f003036, 0xbd57272f ),
	VERT( 0x41cce2ab, 0x40d0a739, 0xc16a2644 ),
	NORM( 0x3eb1c899, 0x3f27166f, 0xbf2c6220 ),
	VERT( 0x415f4229, 0x40d0fd66, 0xc1618402 ),
	NORM( 0x3f4135e5, 0x3e9d4db6, 0xbf1463dc ),
	VERT( 0x41f67eb3, 0x40d1a2d9, 0xc05d5cce ),
	NORM( 0x3f5458d7, 0x3f0dd8ee, 0xbd9005e1 ),
	VERT( 0x3f85db6b, 0x40d22354, 0x4091ce81 ),
	NORM( 0xbea53279, 0x3f3844e8, 0x3f1d5907 ),
	VERT( 0x4180942b, 0x40d38e67, 0xc17356f5 ),
	NORM( 0xbead4d2f, 0x3ea4c9a0, 0xbf625c2f ),
	VERT( 0x416cae97, 0x40d5da86, 0xc16f1b06 ),
	NORM( 0xbf460207, 0xbe177368, 0xbf1dc84b ),
	VERT( 0x3eb31cf0, 0x40d8a7be, 0xc12899a7 ),
	NORM( 0xbf519716, 0x3f0b2321, 0xbe3daec9 ),
	VERT( 0x402c13e5, 0x40dae380, 0xc16b0d73 ),
	NORM( 0xbf119838, 0x3f0a6dbf, 0xbf1eab1e ),
	VERT( 0x41598a00, 0x40daf657, 0xc166cdb9 ),
	NORM( 0x3f0987c8, 0x3ef072b0, 0xbf335a72 ),
	VERT( 0x41510ad0, 0x40dc4bca, 0xc169d64d ),
	NORM( 0x3ea69f15, 0x3f032d82, 0xbf4b7095 ),
	VERT( 0x416bef48, 0x40dd051a, 0xc163cc1c ),
	NORM( 0xbf031ad0, 0xbf5558b3, 0x3e54d2fa ),
	VERT( 0x41e0e0cd, 0x40de45ef, 0xc148c162 ),
	NORM( 0x3f15293a, 0x3f1cf315, 0xbf089444 ),
	VERT( 0x41f212d7, 0x40df98b9, 0xc1082d11 ),
	NORM( 0x3f3e9531, 0x3f222ed2, 0xbe57d04b ),
	VERT( 0x403cbffb, 0x40e3df59, 0x40b502d8 ),
	NORM( 0xbf0666a2, 0x3f124429, 0x3f217d10 ),
	VERT( 0x41881efb, 0x40e68a38, 0xc177664f ),
	NORM( 0xbe6d5657, 0x3ed6cdbc, 0xbf60ad9c ),
	VERT( 0x418f618b, 0x40e68c9d, 0xc178e2a3 ),
	NORM( 0x3d42c2a5, 0x3f0cae7e, 0xbf55888d ),
	VERT( 0x4137f968, 0x40e9f8f3, 0xc16f9388 ),
	NORM( 0x3ea7c7e0, 0x3ef723a1, 0xbf4fea71 ),
	VERT( 0x3f62001d, 0x40eeba0b, 0x400860a3 ),
	NORM( 0xbe20c653, 0x3f72528f, 0x3e9039c3 ),
	VERT( 0x415eb431, 0x40f092b3, 0xc159db69 ),
	NORM( 0xbd859692, 0x3ebd1040, 0xbf6d51fd ),
	VERT( 0x4170be38, 0x40f120dd, 0xc166f9f8 ),
	NORM( 0xbe9ef1ae, 0x3edfbbcb, 0xbf581d9f ),
	VERT( 0x3f9f630a, 0x40f4f370, 0xc06d3831 ),
	NORM( 0xbeeda9e6, 0x3f62af70, 0x3cab782f ),
	VERT( 0x41639699, 0x40f5c46f, 0xc15c9f6a ),
	NORM( 0xbf18b342, 0x3e8fafbb, 0xbf40809b ),
	VERT( 0x419d2c5c, 0x40f7477c, 0xc16b5048 ),
	NORM( 0x3e130006, 0x3f37f482, 0xbf2e3370 ),
	VERT( 0x417508d8, 0x40f79e38, 0xc1680b2a ),
	NORM( 0xbee27789, 0x3e9a1ed6, 0xbf5846ff ),
	VERT( 0x40386fb2, 0x40f8cced, 0x40820cff ),
	NORM( 0xbeecc029, 0x3f58942b, 0x3e87e520 ),
	VERT( 0x4153e109, 0x40f94dc8, 0xc15cdd6e ),
	NORM( 0x3ebf56e8, 0x3f03ab6d, 0xbf459a09 ),
	VERT( 0x406af684, 0x40f96018, 0xc16c5c11 ),
	NORM( 0xbeeafac1, 0x3f222e49, 0xbf1f7760 ),
	VERT( 0x4190200f, 0x40f9a9b6, 0x413e7c49 ),
	NORM( 0xbc166560, 0x3f0fa3a5, 0x3f53e45e ),
	VERT( 0x41b010ae, 0x40fb67d9, 0x41346e55 ),
	NORM( 0x3e4e12f2, 0x3f07dc78, 0x3f52c4e0 ),
	VERT( 0x411cd2f7, 0x40fbe329, 0xc174508d ),
	NORM( 0x3e4555c7, 0x3f1a8a65, 0xbf4609f5 ),
	VERT( 0x41a97f1c, 0x40fc7ef1, 0xc163433c ),
	NORM( 0x3ddc75a7, 0x3f40bbad, 0xbf263971 ),
	VERT( 0x3fceab62, 0x40fd2756, 0xbfce4bc4 ),
	NORM( 0xbea9e3e6, 0x3f7159d5, 0xbd05e292 ),
	VERT( 0x400ee0ae, 0x40fe22ee, 0xc150c58a ),
	NORM( 0xbf23cd90, 0x3f2659f8, 0xbed21062 ),
	VERT( 0x41c9939d, 0x40fe5913, 0x4123d526 ),
	NORM( 0x3ee488fa, 0x3f110008, 0x3f315a40 ),
	VERT( 0x41daeba3, 0x40ff4702, 0x40fd1b85 ),
	NORM( 0x3f213bf5, 0x3f176007, 0x3f00f043 ),
	VERT( 0x41038b17, 0x40ffe303, 0xc175d8ea ),
	NORM( 0x3d0a9c27, 0x3f2f0785, 0xbf3a9dcb ),
	VERT( 0x41369824, 0x4100b24a, 0x411c16d9 ),
	NORM( 0xbed056f6, 0x3f18867f, 0x3f314236 ),
	VERT( 0x411a9223, 0x4100cc38, 0x41110eb5 ),
	NORM( 0xbe9f4fbc, 0x3f2702e6, 0x3f30e9b1 ),
	VERT( 0x4152623d, 0x4100ff59, 0x41290af2 ),
	NORM( 0xbe856b9c, 0x3f1d22c1, 0x3f3ec5b8 ),
	VERT( 0x4006c9bd, 0x4101187a, 0x3f0154d6 ),
	NORM( 0xbeb11a8a, 0x3f6f755b, 0x3d968fc6 ),
	VERT( 0x40c50eb2, 0x41016ca3, 0x40ed6077 ),
	NORM( 0xbed271b0, 0x3f1e32b4, 0x3f2b92f7 ),
	VERT( 0x40224f64, 0x4101b978, 0x3fdff35e ),
	NORM( 0xbecab6fe, 0x3f675494, 0x3e274755 ),
	VERT( 0x40020596, 0x4102eea4, 0xc13cc534 ),
	NORM( 0xbf375eac, 0x3f25e0d7, 0xbe849a2e ),
	VERT( 0x4096b5b1, 0x41031ab4, 0xc16de50f ),
	NORM( 0xbe94c79c, 0x3f2ea3e9, 0xbf2bc39b ),
	VERT( 0x4159db4a, 0x4103467e, 0xc15669ce ),
	NORM( 0xbd1c6f00, 0x3edaccf4, 0xbf673d77 ),
	VERT( 0x401238a6, 0x410352c2, 0xc05da7a3 ),
	NORM( 0xbeeb3a4f, 0x3f625f0c, 0x3dab631a ),
	VERT( 0x417fca57, 0x41035864, 0xc16b0b6d ),
	NORM( 0xbe8af514, 0x3ee6427d, 0xbf59d6c6 ),
	VERT( 0x40e11950, 0x4103ba65, 0xc1721bce ),
	NORM( 0x3cb6d8cc, 0x3f2de446, 0xbf3bca34 ),
	VERT( 0x41682019, 0x410457f9, 0xc15cf3a1 ),
	NORM( 0xbef7d74a, 0x3ea347f2, 0xbf5099f1 ),
	VERT( 0x41e73f99, 0x4104c2ed, 0x40a6fc00 ),
	NORM( 0x3f3c8095, 0x3f1ad41b, 0x3e9b51e0 ),
	VERT( 0x41387a39, 0x4104d4cf, 0xc163a827 ),
	NORM( 0x3e9504bf, 0x3f16a42c, 0xbf411c3b ),
	VERT( 0x3faa6c0e, 0x41051528, 0xc10e215a ),
	NORM( 0xbf40e34d, 0x3f27ffd4, 0xbd250d36 ),
	VERT( 0x3fd29c34, 0x410538dd, 0xc0b1a50a ),
	NORM( 0xbf0dc14c, 0x3f523bcd, 0x3e0d0a4d ),
	VERT( 0x40b10be1, 0x4105a2a0, 0xc170610c ),
	NORM( 0xbe136991, 0x3f2ed4de, 0xbf3755cc ),
	VERT( 0x41bdf334, 0x41067043, 0xc1558d47 ),
	NORM( 0x3e2e5267, 0x3f453737, 0xbf1d4c58 ),
	VERT( 0x3fd66b3d, 0x4106da78, 0xc1251376 ),
	NORM( 0xbf35d2c1, 0x3f2c36db, 0xbe545b8d ),
	VERT( 0x41eb46c8, 0x4106ec77, 0x402eebec ),
	NORM( 0x3f42e89f, 0x3f2067b1, 0x3e2a7ffd ),
	VERT( 0x41ea4fab, 0x41088ec2, 0xc04504ef ),
	NORM( 0x3f2cd63a, 0x3f393c62, 0xbe130856 ),
	VERT( 0x416b8c29, 0x4108a7cd, 0xc15d6476 ),
	NORM( 0xbf038d62, 0x3e867de7, 0xbf511083 ),
	VERT( 0x41eea5f5, 0x4109145b, 0xbea5393c ),
	NORM( 0x3f3f27b0, 0x3f2a3a31, 0x3c899262 ),
	VERT( 0x40549e4d, 0x41099cc3, 0xc1533bd4 ),
	NORM( 0xbeece574, 0x3f43cc6f, 0xbee582ff ),
	VERT( 0x41882954, 0x410b1658, 0xc1671b9c ),
	NORM( 0x3d9eaa20, 0x3f4092dc, 0xbf27815e ),
	VERT( 0x411f9b49, 0x410b57b1, 0xc1653398 ),
	NORM( 0x3db44960, 0x3f40a098, 0xbf2719f3 ),
	VERT( 0x40557bb4, 0x410c3fc6, 0xbf68d2ef ),
	NORM( 0xbeabf82c, 0x3f711c85, 0x3c33955d ),
	VERT( 0x415de97a, 0x410c66cf, 0xc154f223 ),
	NORM( 0xbe9e5dd0, 0x3f024ced, 0xbf4da3d3 ),
	VERT( 0x407094de, 0x410ccb6e, 0x3f579644 ),
	NORM( 0xbecc0018, 0x3f693a97, 0x3dd910bc ),
	VERT( 0x40266a9a, 0x410d0e8b, 0xc0b04b99 ),
	NORM( 0xbeeead81, 0x3f5d8b67, 0x3e3c22cb ),
	VERT( 0x4160b34a, 0x410d3e1b, 0xc154d093 ),
	NORM( 0xbe9c7ba0, 0x3f1e5ee3, 0xbf394aa9 ),
	VERT( 0x4107c609, 0x410e5b7a, 0xc15f2803 ),
	NORM( 0x3da20a94, 0x3f4ace0e, 0xbf1ae7f7 ),
	VERT( 0x4072de66, 0x410f0098, 0xc053255d ),
	NORM( 0xbec690b8, 0x3f6930df, 0x3e1045b8 ),
	VERT( 0x4194056d, 0x410f45c7, 0xc152f9a5 ),
	NORM( 0x3e32ea85, 0x3f541c05, 0xbf082e02 ),
	VERT( 0x40a61d67, 0x410fd060, 0x4074e2d6 ),
	NORM( 0xbec763e6, 0x3f69d3c1, 0x3df2e024 ),
	VERT( 0x417042e9, 0x410feacc, 0xc15eab66 ),
	NORM( 0xbeadb513, 0x3f0e19e8, 0xbf426bde ),
	VERT( 0x408b8a55, 0x41100639, 0xc156e889 ),
	NORM( 0xbebd2279, 0x3f51c820, 0xbee05cbb ),
	VERT( 0x41dfb290, 0x41100be9, 0xc0e5a91f ),
	NORM( 0x3f0d450f, 0x3f5186df, 0xbe23d326 ),
	VERT( 0x40a3aae9, 0x411065a6, 0xbf82e062 ),
	NORM( 0xbeb2a470, 0x3f6fe730, 0xbc0320fc ),
	VERT( 0x411dcbc0, 0x41108a0c, 0x40e78609 ),
	NORM( 0xbe966410, 0x3f5e7be0, 0x3ecbca19 ),
	VERT( 0x4040fad5, 0x41123040, 0xc13c9445 ),
	NORM( 0xbf01f927, 0x3f4d0b2d, 0xbea27b13 ),
	VERT( 0x419884f5, 0x4113132f, 0xc14b978a ),
	NORM( 0x3dfbfc65, 0x3f532296, 0xbf0d4cf2 ),
	VERT( 0x413dae72, 0x411325c2, 0xc156bee9 ),
	NORM( 0x3e6ba920, 0x3f31d083, 0xbf2e7da3 ),
	VERT( 0x40979aae, 0x41139d18, 0x3f22018b ),
	NORM( 0xbea856fe, 0x3f71b6ea, 0x3ca18f30 ),
	VERT( 0x41ce4496, 0x4113ff12, 0xc13441c2 ),
	NORM( 0x3eb550e0, 0x3f599392, 0xbec7c6c9 ),
	VERT( 0x4164d84a, 0x41143cd7, 0xc150422c ),
	NORM( 0xbee05b25, 0x3f2c480b, 0xbf188c84 ),
	VERT( 0x40c5f6fa, 0x4115ad9a, 0x40944eff ),
	NORM( 0xbea7b73f, 0x3f6ae45b, 0x3e66cf21 ),
	VERT( 0x40ab5c75, 0x4115b9d9, 0xc1586fee ),
	NORM( 0xbe611681, 0x3f5bd6dc, 0xbeecfb6a ),
	VERT( 0x401b4306, 0x411634af, 0xc10f7bdc ),
	NORM( 0xbf16acc8, 0x3f4ef3ef, 0xbbeffb81 ),
	VERT( 0x403ba4bc, 0x4117c89c, 0xc128ada7 ),
	NORM( 0xbf065144, 0x3f53dd65, 0xbe4c46d0 ),
	VERT( 0x40e836d4, 0x4117da6e, 0xc15b5bea ),
	NORM( 0x3d5c38a3, 0x3f5921c1, 0xbf06e898 ),
	VERT( 0x408066ea, 0x4118b14b, 0xc13c0386 ),
	NORM( 0xbeafcde8, 0x3f61621f, 0xbea77849 ),
	VERT( 0x4110512b, 0x41190709, 0xc15025d3 ),
	NORM( 0x3c2a2052, 0x3f5f7771, 0xbef9bb9e ),
	VERT( 0x41807d65, 0x41192425, 0xc151f957 ),
	NORM( 0x3e1ae2ad, 0x3f4bff88, 0xbf15bce4 ),
	VERT( 0x4151fe0b, 0x41197fbf, 0xc14809d1 ),
	NORM( 0x3d8a2b09, 0x3f43bae3, 0xbf241890 ),
	VERT( 0x41261682, 0x4119910f, 0xc153f57f ),
	NORM( 0x3c875f28, 0x3f59d83a, 0xbf0664ef ),
	VERT( 0x4083af9d, 0x4119d884, 0xc0a8d210 ),
	NORM( 0xbec3e180, 0x3f67442c, 0x3e465fd2 ),
	VERT( 0x40bbb9e4, 0x411b4c89, 0xc03d9467 ),
	NORM( 0xbece0090, 0x3f69edea, 0x3d6467ee ),
	VERT( 0x40ef9584, 0x411c9d77, 0x4036b5f3 ),
	NORM( 0xbeb349c5, 0x3f6d6ead, 0x3e0635f7 ),
	VERT( 0x41621853, 0x411cc5f8, 0xc1453399 ),
	NORM( 0xbe3ababd, 0x3f4f85ee, 0xbf0e7230 ),
	VERT( 0x41a853be, 0x411d313a, 0xc13352a4 ),
	NORM( 0x3dcaf1fb, 0x3f621ff0, 0xbeea9b48 ),
	VERT( 0x407ccf1b, 0x411e6ae5, 0xc12b47ea ),
	NORM( 0xbe9d35e0, 0x3f6c925b, 0xbe68edf9 ),
	VERT( 0x4189633d, 0x411e940d, 0xc14333a8 ),
	NORM( 0x3e3e67ba, 0x3f54eba7, 0xbf05ebee ),
	VERT( 0x40e97147, 0x411ee6b3, 0xc1490004 ),
	NORM( 0x3c65da82, 0x3f6788f8, 0xbeda4ef0 ),
	VERT( 0x405e02a7, 0x411f5a5e, 0xc10b8cc2 ),
	NORM( 0xbeda186c, 0x3f676faa, 0x3d10bef4 ),
	VERT( 0x40a55b0a, 0x411f96de, 0xc13e45f6 ),
	NORM( 0xbe905052, 0x3f69739f, 0xbe98b46e ),
	VERT( 0x40b57efe, 0x411fd095, 0xc09d191a ),
	NORM( 0xbe8e4dba, 0x3f7174ed, 0x3e3a6b8c ),
	VERT( 0x40e486e3, 0x41204255, 0xc048b909 ),
	NORM( 0xbe9c1c8a, 0x3f6ded0f, 0xbe54f594 ),
	VERT( 0x4118b3ac, 0x4121715b, 0xc13efec8 ),
	NORM( 0xbb79ecf3, 0x3f6ceb52, 0xbec1f3b0 ),
	VERT( 0x409c186d, 0x4121bd71, 0xc12ba9da ),
	NORM( 0xbe909718, 0x3f70d8af, 0xbe3feed6 ),
	VERT( 0x418cb0ae, 0x4122928d, 0xc13aaffc ),
	NORM( 0x3e2e756e, 0x3f5cd5de, 0xbef3d928 ),
	VERT( 0x4174bffb, 0x41232ba2, 0xc14a0c03 ),
	NORM( 0xbe098284, 0x3f67aae7, 0xbecebacd ),
	VERT( 0x413276ac, 0x4123f38c, 0xc13c5d22 ),
	NORM( 0x3c73c14e, 0x3f668af6, 0xbede745a ),
	VERT( 0x4102287d, 0x41258253, 0xc13b1f66 ),
	NORM( 0x3d9d42e0, 0x3f6d5459, 0xbebbe027 ),
	VERT( 0x40dfc79a, 0x41258413, 0xc13c1b54 ),
	NORM( 0xbd4fe587, 0x3f6d02cf, 0xbebfc288 ),
	VERT( 0x4102015e, 0x4125c0a2, 0x3cb4583c ),
	NORM( 0xbf5122db, 0x3f0d227a, 0x3e2d63d9 ),
	VERT( 0x40904a93, 0x4125d729, 0xc10ab7ef ),
	NORM( 0xbe9903e3, 0x3f744b0f, 0x3beb740f ),
	VERT( 0x40fddb39, 0x41265adc, 0xbf4c9697 ),
	NORM( 0xbf517176, 0x3ec42920, 0x3edb8aea ),
	VERT( 0x411fa3fb, 0x41266b12, 0x407209c2 ),
	NORM( 0xbeb6f82a, 0x3f579d4b, 0x3ecea88f ),
	VERT( 0x4180c18e, 0x4126bc0a, 0xc13b250f ),
	NORM( 0x3ceb533d, 0x3f69f6de, 0xbecf4b12 ),
	VERT( 0x40dffc3d, 0x41272c02, 0xc0a0555d ),
	NORM( 0xbe639560, 0x3f769ae7, 0x3e1a2159 ),
	VERT( 0x4113dd3f, 0x4128b271, 0xc124c656 ),
	NORM( 0xbb9a6b9c, 0x3f7a1261, 0xbe5b0a1c ),
	VERT( 0x41036d37, 0x4129022f, 0x3f4facab ),
	NORM( 0xbf62cb1a, 0x3edd59d8, 0x3e2c1f9b ),
	VERT( 0x410d00a9, 0x41298f2f, 0xc038f5c2 ),
	NORM( 0xbe03db0a, 0x3f6fae8f, 0xbea75b05 ),
	VERT( 0x40dd91d7, 0x41299a8e, 0xbfd71a8a ),
	NORM( 0xbf1e68f3, 0x3f3e905f, 0x3e807e25 ),
	VERT( 0x419ae63f, 0x412a3315, 0xc11d29f0 ),
	NORM( 0x3de2f212, 0x3f6767cf, 0xbed37f42 ),
	VERT( 0x418a032d, 0x412a71b3, 0x411884f0 ),
	NORM( 0xbd6a35d6, 0x3f5796f8, 0x3f0944e1 ),
	VERT( 0x410d61d6, 0x412a7feb, 0xc0a1d89b ),
	NORM( 0xbdfbf7fe, 0x3f7dd909, 0x3d242b02 ),
	VERT( 0x415e498f, 0x412aec3e, 0x40e470b4 ),
	NORM( 0xbe66dfea, 0x3f78b88a, 0x3d940c02 ),
	VERT( 0x40b87414, 0x412b1e52, 0xc106cbe3 ),
	NORM( 0xbe4715b7, 0x3f7aeb78, 0x3d1e701c ),
	VERT( 0x41b45047, 0x412b449c, 0xc11370b5 ),
	NORM( 0x3e3ef394, 0x3f67388f, 0xbec5ede3 ),
	VERT( 0x40ff284d, 0x412b48ee, 0xc1286271 ),
	NORM( 0x3d95ba00, 0x3f7b27bf, 0xbe379905 ),
	VERT( 0x40d3972d, 0x412be5f7, 0xc127d328 ),
	NORM( 0xbe01a089, 0x3f7a5984, 0xbe2a371a ),
	VERT( 0x413257fe, 0x412bedea, 0xc129ec50 ),
	NORM( 0xbd99846b, 0x3f724e21, 0xbea0b29b ),
	VERT( 0x41a052bd, 0x412bf81e, 0x4116e774 ),
	NORM( 0x3d82367a, 0x3f579088, 0x3f091fbf ),
	VERT( 0x415a5ea6, 0x412c244b, 0xc12af3b2 ),
	NORM( 0xbd2f80da, 0x3f68f55f, 0xbed32641 ),
	VERT( 0x418255c6, 0x412c2a33, 0xc1305c41 ),
	NORM( 0x3d7e3ec8, 0x3f6c960d, 0xbec0fb5e ),
	VERT( 0x40f39444, 0x412c754a, 0xc102d17e ),
	NORM( 0xbd296b0d, 0x3f7fa9d9, 0x3cf802cc ),
	VERT( 0x417152ed, 0x412c964e, 0xc12ecb28 ),
	NORM( 0xbd0b2a84, 0x3f667270, 0xbede4d3e ),
	VERT( 0x4111ce6a, 0x412d2fb5, 0xc1045add ),
	NORM( 0xbdd80335, 0x3f7e8160, 0xbcba5894 ),
	VERT( 0x41bfb73b, 0x412d767f, 0x40e1a8b9 ),
	NORM( 0x3eb2c102, 0x3f618773, 0x3ea38447 ),
	VERT( 0x41b464cc, 0x412d91e7, 0x410954a6 ),
	NORM( 0x3e7c059d, 0x3f5b2056, 0x3ee8cf14 ),
	VERT( 0x40ec9d35, 0x412d9ae3, 0xc011d38c ),
	NORM( 0xbefee0a3, 0x3f303b63, 0xbf070bf3 ),
	VERT( 0x415a9c8a, 0x412dd1c6, 0x410bba5c ),
	NORM( 0xbe913c2f, 0x3f621e52, 0x3ebf2279 ),
	VERT( 0x412e2bb1, 0x412edca7, 0xc03818f6 ),
	NORM( 0xbe200544, 0x3f70b9f4, 0xbe9abe4e ),
	VERT( 0x413108d6, 0x412f9cb1, 0xc09b0a13 ),
	NORM( 0xbe160e96, 0x3f7cf228, 0x3d4201dd ),
	VERT( 0x41c8cd61, 0x41313d1b, 0x40a22e64 ),
	NORM( 0x3ec42c84, 0x3f644c2b, 0x3e766c09 ),
	VERT( 0x40eab447, 0x41315411, 0xbfc86768 ),
	NORM( 0xbf7a1cba, 0xbd0d7285, 0x3e57786e ),
	VERT( 0x4101ff0a, 0x41316630, 0xc0170d08 ),
	NORM( 0xbd9073d8, 0x3f320409, 0xbf3715ec ),
	VERT( 0x418784c8, 0x41327b28, 0xc115442b ),
	NORM( 0x3dcfd820, 0x3f75a874, 0xbe865c30 ),
	VERT( 0x418d55ab, 0x4132b5aa, 0x40cde858 ),
	NORM( 0xbd7d899e, 0x3f7b28bc, 0x3e3bc972 ),
	VERT( 0x41cbcad8, 0x4132d4b0, 0x4056f7ca ),
	NORM( 0x3ecd3f21, 0x3f687a9a, 0x3df79ee9 ),
	VERT( 0x41133150, 0x4133c5ec, 0x3fdb567c ),
	NORM( 0xbf21055d, 0x3ef8bea6, 0x3f1b5ea0 ),
	VERT( 0x415e9a20, 0x4133f4ea, 0xc058552a ),
	NORM( 0xbe2ee534, 0x3f74b23a, 0xbe74e1fc ),
	VERT( 0x41ceced5, 0x4134081e, 0xbf74670a ),
	NORM( 0x3ed1a9df, 0x3f693216, 0xbd4e39eb ),
	VERT( 0x40f0bdfa, 0x4134213a, 0xbf10e6e2 ),
	NORM( 0xbf45bbf2, 0xbf0503af, 0x3ebb05f0 ),
	VERT( 0x41321879, 0x41346d89, 0xc107198a ),
	NORM( 0xbe119e4b, 0x3f7c8db8, 0xbda5623f ),
	VERT( 0x41ceaf07, 0x41346e3a, 0x3f89c8d3 ),
	NORM( 0x3ecc90e3, 0x3f6a428f, 0x3d604709 ),
	VERT( 0x415db84c, 0x4134fecd, 0x40983006 ),
	NORM( 0x3d007409, 0x3f77ec31, 0x3e7d2b5f ),
	VERT( 0x41501b3c, 0x41360a24, 0x409ed0d6 ),
	NORM( 0xbe0f3629, 0x3f6fe067, 0x3ea3decb ),
	VERT( 0x415849d0, 0x413611dc, 0xc10c0ef8 ),
	NORM( 0xbd4b3bf2, 0x3f7cb55d, 0xbe1b9812 ),
	VERT( 0x4118465b, 0x4136e51b, 0xbfdee7be ),
	NORM( 0x3c84c0c7, 0x3f569e86, 0xbf0b7d5d ),
	VERT( 0x41ba3489, 0x41371eda, 0xc0dff858 ),
	NORM( 0x3e739407, 0x3f710d36, 0xbe740878 ),
	VERT( 0x417c9775, 0x41372fc9, 0xc0b4a97e ),
	NORM( 0xbd87fec1, 0x3f7e5e8c, 0xbdba7663 ),
	VERT( 0x415d3be5, 0x413768eb, 0xc0aa5285 ),
	NORM( 0xbdc285e3, 0x3f7eafd9, 0x3d0e822b ),
	VERT( 0x417698e0, 0x4137857d, 0xc1100ac9 ),
	NORM( 0x3c909028, 0x3f7b43c9, 0xbe4334df ),
	VERT( 0x41a2e530, 0x41381517, 0xc0fde813 ),
	NORM( 0x3d4596bf, 0x3f78bbc8, 0xbe6d277e ),
	VERT( 0x414d0f21, 0x41381ebf, 0xc02e8db6 ),
	NORM( 0xbe5631df, 0x3f07f1ca, 0xbf523562 ),
	VERT( 0x40e6b5c7, 0x41384d9e, 0xbfdbb165 ),
	NORM( 0xbf56905a, 0x3eae4c5b, 0xbeda3466 ),
	VERT( 0x41034c47, 0x41389cea, 0x3f3f588c ),
	NORM( 0xbf36f512, 0xbeade670, 0x3f1c883f ),
	VERT( 0x41261994, 0x413925f0, 0xbf4f64d9 ),
	NORM( 0x3df2ad33, 0x3f75a365, 0xbe82ced0 ),
	VERT( 0x418d63f2, 0x41394400, 0xc0d03a49 ),
	NORM( 0xbcd6b85c, 0x3f7e63d2, 0xbddef5f7 ),
	VERT( 0x413a9aca, 0x413948f2, 0xc00af4ca ),
	NORM( 0xbecb897a, 0x3f0a2f13, 0xbf3df576 ),
	VERT( 0x41226164, 0x41394eb8, 0xbf98a7a8 ),
	NORM( 0x3db39b67, 0x3f796206, 0xbe552c03 ),
	VERT( 0x41c4203b, 0x41398d32, 0xc07e6ed4 ),
	NORM( 0x3ea1ef85, 0x3f7147cd, 0xbddd1f83 ),
	VERT( 0x412932c9, 0x413a0b3f, 0x4022b72d ),
	NORM( 0xbed04dc0, 0x3f0b9f76, 0x3f3b99a2 ),
	VERT( 0x4128ad33, 0x413a5a08, 0xbfe4d426 ),
	NORM( 0xbe56fef9, 0x3f692be6, 0xbeb5f7c9 ),
	VERT( 0x40e58078, 0x413a7e29, 0xbfacdb93 ),
	NORM( 0xbf698005, 0x3eb5df00, 0xbe518c24 ),
	VERT( 0x41a15792, 0x413a7eec, 0x40a2efde ),
	NORM( 0x3b18596d, 0x3f791449, 0x3e6c7af2 ),
	VERT( 0x417c2836, 0x413aa670, 0xc08b4ff5 ),
	NORM( 0xbe04659c, 0x3f7c0bef, 0xbdf1b784 ),
	VERT( 0x415e6991, 0x413b6b02, 0xc0342848 ),
	NORM( 0x3d9c3a6a, 0x3f20caaf, 0xbf463e73 ),
	VERT( 0x4142b459, 0x413c7a93, 0x40357d55 ),
	NORM( 0xbd4756d7, 0x3f4a09ef, 0x3f1cb845 ),
	VERT( 0x41817951, 0x413c9354, 0x404e3db7 ),
	NORM( 0xbd603a8c, 0x3f7c42f0, 0x3e251b13 ),
	VERT( 0x416635ee, 0x413cca9a, 0x3f7ae14e ),
	NORM( 0x3ef59fa4, 0x3f55ba69, 0x3e8a2ea3 ),
	VERT( 0x412ee8dd, 0x413cd4f2, 0xbe0c3612 ),
	NORM( 0x3db92baa, 0x3f633e9b, 0xbee72c26 ),
	VERT( 0x4131e32b, 0x413d8451, 0xbfc351a2 ),
	NORM( 0xbec7a4e7, 0x3f649ab2, 0xbe662f8b ),
	VERT( 0x4189281b, 0x413dfcb9, 0xc081b4a3 ),
	NORM( 0xbdc239f6, 0x3f7ce523, 0xbdfbcbc0 ),
	VERT( 0x40fb7017, 0x413e059c, 0xbfd8bc25 ),
	NORM( 0xbdfca599, 0x3f4b5c66, 0xbf184272 ),
	VERT( 0x416fa1ec, 0x413e6ef5, 0xbf1e915b ),
	NORM( 0x3f1851ea, 0x3f2d8955, 0x3edd1612 ),
	VERT( 0x417685ab, 0x413f59ec, 0xbfacf048 ),
	NORM( 0x3e3ac147, 0x3f7b49ba, 0xbd6827ac ),
	VERT( 0x40e3a0bb, 0x413f6310, 0xbeaa7ec2 ),
	NORM( 0xbf766c89, 0x3e5a88b1, 0x3e2af1b6 ),
	VERT( 0x4155bec9, 0x414070b7, 0x401a218c ),
	NORM( 0x3e84c4ea, 0x3f55898d, 0x3ef93f10 ),
	VERT( 0x4113bf40, 0x414090da, 0x3fcf894a ),
	NORM( 0xbef85ce0, 0xbe5f8f20, 0x3f58c65b ),
	VERT( 0x413a61fa, 0x4140bd94, 0xc0093cfb ),
	NORM( 0xbf17f359, 0x3f07b9d3, 0xbf1b0064 ),
	VERT( 0x41704e2a, 0x4140f9dc, 0xbffcd01b ),
	NORM( 0x3f06a43b, 0x3f3b38a4, 0xbede5073 ),
	VERT( 0x4145912d, 0x41415391, 0xbef1859a ),
	NORM( 0xbe89219e, 0x3f6afafd, 0xbe95eb3d ),
	VERT( 0x4114a5ac, 0x4141eb52, 0xbf73d94b ),
	NORM( 0x3e0e5140, 0x3f55516b, 0xbf08fcc6 ),
	VERT( 0x413c2c86, 0x41424dbc, 0x3f10d74f ),
	NORM( 0xbef60318, 0x3ef3fcfb, 0xbf3c79ab ),
	VERT( 0x41a601c1, 0x41425904, 0x4057ae4c ),
	NORM( 0x3d76039f, 0x3f7c28aa, 0x3e25acb7 ),
	VERT( 0x41510074, 0x41429aab, 0xbf6b1f9d ),
	NORM( 0xbe801031, 0x3f736946, 0xbe3b0e9f ),
	VERT( 0x4118105c, 0x4142da4a, 0xbf4af4fb ),
	NORM( 0x3e514562, 0x3f477172, 0xbf17ba4c ),
	VERT( 0x4133e68e, 0x41430ca1, 0x3f2410c7 ),
	NORM( 0x3e909fc7, 0x3eac8204, 0xbf65edc3 ),
	VERT( 0x413957ec, 0x414318bc, 0xbf3f6667 ),
	NORM( 0xbedbe39d, 0x3f672f1f, 0x3bb849b4 ),
	VERT( 0x414b6569, 0x4143684e, 0xc029d510 ),
	NORM( 0xbe5c7dd8, 0x3f0d60aa, 0xbf4e2dda ),
	VERT( 0x41a9992e, 0x41437203, 0x3eb81ddd ),
	NORM( 0x3df8323b, 0x3f7e12ef, 0x3c8ece4c ),
	VERT( 0x4171eb6c, 0x41437471, 0xbf3c339f ),
	NORM( 0x3f6c01cb, 0xbe5429b5, 0x3ea79c5d ),
	VERT( 0x40f7104e, 0x4143df7b, 0x3f828349 ),
	NORM( 0xbf4f1936, 0x3e0837bd, 0x3f12952e ),
	VERT( 0x41a3b03c, 0x414494e3, 0xc0215eb5 ),
	NORM( 0x3d782b51, 0x3f7e60bf, 0xbdc1e00c ),
	VERT( 0x418d2746, 0x4144f7a5, 0xbe8cd4e3 ),
	NORM( 0xbda21830, 0x3f7f2ffc, 0x3c0c8e87 ),
	VERT( 0x40f94afa, 0x4145a1ed, 0xbf007fa5 ),
	NORM( 0xbe8cb74a, 0x3f6c6657, 0xbe89203a ),
	VERT( 0x415f3359, 0x4145fb99, 0xc021b98b ),
	NORM( 0x3dedb6e3, 0x3f06a0ea, 0xbf57b43b ),
	VERT( 0x4140c5b3, 0x41461827, 0xbfa09a90 ),
	NORM( 0xbe53c4ab, 0x3f79e387, 0x3d87ee54 ),
	VERT( 0x415b459c, 0x4146a984, 0xbf49010e ),
	NORM( 0xbef9ea3e, 0x3f59c98e, 0xbe479c05 ),
	VERT( 0x4113955d, 0x41476c7a, 0xbe87ac1c ),
	NORM( 0xbdbe9e06, 0x3f6956b2, 0xbecd25a5 ),
	VERT( 0x414a7663, 0x4148b752, 0xbfdb1a8a ),
	NORM( 0xbe5f2a63, 0x3f79d8b6, 0x37f75edb ),
	VERT( 0x412410f9, 0x41495f22, 0x400e3232 ),
	NORM( 0xbe826f95, 0xbda7e388, 0x3f76a981 ),
	VERT( 0x410284f6, 0x4149db92, 0x3e6b0b73 ),
	NORM( 0xbe9f9455, 0x3f6ff61c, 0xbe1f6779 ),
	VERT( 0x410c2ee8, 0x414aeea3, 0x3fee64b5 ),
	NORM( 0xbf1e805b, 0x3e2b5ce9, 0x3f4469aa ),
	VERT( 0x4166968e, 0x414b014a, 0x3ee427f4 ),
	NORM( 0x3f3e1869, 0xbe862410, 0x3f1dcd27 ),
	VERT( 0x41252ecd, 0x414b8ad7, 0xbe3f36bf ),
	NORM( 0x3e20a82f, 0x3f2e77c6, 0xbf36fc5f ),
	VERT( 0x411929d6, 0x414be471, 0x3f15e47d ),
	NORM( 0xbe08ed72, 0x3f648f24, 0xbedc39e0 ),
	VERT( 0x415220f4, 0x414c2c75, 0xbf1e7741 ),
	NORM( 0x3d7a2cc7, 0x3f2284d7, 0xbf452d8c ),
	VERT( 0x415f8025, 0x414c6f9f, 0xbe9ac3a5 ),
	NORM( 0xbf1df05c, 0x3f3279e1, 0xbebaf313 ),
	VERT( 0x4157c9ca, 0x414db20a, 0xbfee414a ),
	NORM( 0xbed8811b, 0x3f5df0b9, 0xbe870de0 ),
	VERT( 0x413e2261, 0x414fa9d7, 0x40183cb7 ),
	NORM( 0x3ddf739b, 0x3cf9db1a, 0x3f7e5a14 ),
	VERT( 0x4153cef5, 0x41502c00, 0xbe8ac6df ),
	NORM( 0x3e51d546, 0x3f5a660e, 0xbef5a6cf ),
	VERT( 0x4146959d, 0x41506641, 0xbecbfb04 ),
	NORM( 0xbebd998c, 0x3f01e88c, 0xbf472e24 ),
	VERT( 0x416c162a, 0x4150ac0d, 0xbffc978a ),
	NORM( 0x3ed3d0d3, 0x3f1e068f, 0xbf2b4f9e ),
	VERT( 0x410f3a87, 0x4150b692, 0x3f8890d4 ),
	NORM( 0xbeb91f9e, 0x3f6ac0e7, 0xbe2c779e ),
	VERT( 0x4176176c, 0x4150f4ac, 0xbf08a6bc ),
	NORM( 0x3f7fb592, 0x3ca67bdb, 0x3d30808a ),
	VERT( 0x412b30a7, 0x4151a147, 0x3f7f4e95 ),
	NORM( 0xbe32cfa4, 0x3f5084c8, 0xbf0d9ff8 ),
	VERT( 0x415a583e, 0x4151fd7a, 0x3eddbdcc ),
	NORM( 0xbec591ab, 0x3f1d003d, 0xbf306ea0 ),
	VERT( 0x41559cef, 0x41524f15, 0x3fd2b372 ),
	NORM( 0x3f1e3695, 0xbdf32572, 0x3f46f304 ),
	VERT( 0x4137657e, 0x4152c049, 0x3ebdd680 ),
	NORM( 0xbe459bf5, 0xbe0823aa, 0xbf78df1e ),
	VERT( 0x412d0c56, 0x4152f4c8, 0x3eb86ebb ),
	NORM( 0xbd02e640, 0x3f5672d4, 0xbf0b92ed ),
	VERT( 0x414ff6f6, 0x41533119, 0x3f2f2cb6 ),
	NORM( 0xbdce14c3, 0x3f42ad68, 0xbf243c28 ),
	VERT( 0x41600e6b, 0x41535f4e, 0xbfb0686e ),
	NORM( 0xbf0271de, 0x3f597450, 0xbe0c7f3b ),
	VERT( 0x414b85f5, 0x4153dd26, 0xbd1377db ),
	NORM( 0x3e0f8fa0, 0x3f6f7f28, 0xbea600b8 ),
	VERT( 0x4128af17, 0x4155de20, 0x3f918ddf ),
	NORM( 0xbe02ff1a, 0x3f24be3c, 0xbf41312f ),
	VERT( 0x413ff03e, 0x41563b9b, 0x3f5b7629 ),
	NORM( 0xbdf644b8, 0x3f559069, 0xbf09c369 ),
	VERT( 0x4162d65c, 0x41567524, 0xbf08a298 ),
	NORM( 0xbf29231d, 0x3f32a30c, 0xbe8daadb ),
	VERT( 0x413ef136, 0x415735bf, 0x3ea19656 ),
	NORM( 0xbdf6101c, 0x3f733b38, 0xbe935b31 ),
	VERT( 0x416eeede, 0x415766ff, 0x3f6c5688 ),
	NORM( 0x3f485308, 0xbdd17c19, 0x3f1d3a35 ),
	VERT( 0x411e6211, 0x41580fa6, 0x401ba6ff ),
	NORM( 0xbedbc3a5, 0x3ee9abd9, 0x3f47871c ),
	VERT( 0x41725f6c, 0x415a2deb, 0xbf3c8f4d ),
	NORM( 0x3f0c3c87, 0x3f46899f, 0xbea0a801 ),
	VERT( 0x4120d4a8, 0x415b3830, 0x3fd9e104 ),
	NORM( 0xbeb967e8, 0x3f69ecba, 0xbe3c8658 ),
	VERT( 0x415e1b25, 0x415bf367, 0x3eaa8aac ),
	NORM( 0xbf01c3f5, 0x3f19bd39, 0xbf1e4ea2 ),
	VERT( 0x413e3ea1, 0x415cf2bf, 0x4027f2c8 ),
	NORM( 0x3d62aa39, 0x3ea29678, 0x3f7255f3 ),
	VERT( 0x41591728, 0x415d3521, 0x4000bed9 ),
	NORM( 0x3f056454, 0x3d157a16, 0x3f5a4d0e ),
	VERT( 0x413e4be7, 0x415d520c, 0x3f8f08c5 ),
	NORM( 0xbe5560fd, 0x3f39405a, 0xbf2870cf ),
	VERT( 0x4152121e, 0x415eec4b, 0x3f5070fc ),
	NORM( 0xbe8430ba, 0x3f24baf0, 0xbf3879d6 ),
	VERT( 0x413effe8, 0x4163d07f, 0x3ffee49e ),
	NORM( 0xbe20f0d6, 0x3f7b2771, 0x3de7b038 ),
	VERT( 0x416b0e9e, 0x4163ef6d, 0x3f13d95e ),
	NORM( 0x3ed33d7b, 0x3f693218, 0xbaf0dc16 ),
	VERT( 0x4156a137, 0x416787fa, 0x3fd16dd5 ),
	NORM( 0x3e2fd0c8, 0x3f766e01, 0x3e5687fb ),
	CnkV_VN(FV_CONT, 865),
	OffnbIdx(5288, 144),
	VERT( 0x417104b7, 0x4089b8e5, 0xc17187d3 ),
	NORM( 0x3d3b5efe, 0xbe6450c2, 0xbf7947db ),
	VERT( 0x4179af47, 0x40957575, 0xc171c0e9 ),
	NORM( 0x3def5ecb, 0xbe5686cc, 0xbf78863d ),
	VERT( 0x41710117, 0x40798b16, 0xc1702289 ),
	NORM( 0xbd4a3e8c, 0xbe5762f8, 0xbf79f41b ),
	VERT( 0x415c2a7f, 0x40a58755, 0xc171d3ef ),
	NORM( 0xbf647300, 0x3d9871db, 0xbee3e4a6 ),
	VERT( 0x415da977, 0x409583b4, 0xc1710876 ),
	NORM( 0xbf00db20, 0xbe2b4a71, 0xbf590586 ),
	VERT( 0x415b6447, 0x40a1754d, 0xc17098f2 ),
	NORM( 0xbf3df5ef, 0xbde534cb, 0xbf29344a ),
	VERT( 0x416bef48, 0x40dd051a, 0xc163cc1c ),
	NORM( 0xbeaa2590, 0x3f2ac1dc, 0xbf2ab4ac ),
	VERT( 0x41665c37, 0x40c75092, 0xc17141b1 ),
	NORM( 0xbea471b0, 0x3f48f0b7, 0xbf07a41d ),
	VERT( 0x415f4229, 0x40d0fd66, 0xc1618402 ),
	NORM( 0xbeea92b4, 0x3f21f1b1, 0xbf1fdb21 ),
	VERT( 0x415eb431, 0x40f092b3, 0xc159db69 ),
	NORM( 0xbeaf89ff, 0x3eccdfd6, 0xbf599355 ),
	VERT( 0x416650b7, 0x4089be4d, 0xc1714166 ),
	NORM( 0xbd6efed1, 0xbe61f58f, 0xbf793e0f ),
	VERT( 0x415ee1b7, 0x407f1af2, 0xc16f9cea ),
	NORM( 0xbdb186a4, 0xbe5c43eb, 0xbf790548 ),
	VERT( 0x41658cf8, 0x40564401, 0xc16d2036 ),
	NORM( 0xbd0550d9, 0xbe820a63, 0xbf77770c ),
	VERT( 0x416032f0, 0x40564986, 0xc16cfcff ),
	NORM( 0xbcf03442, 0xbe83e970, 0xbf773e66 ),
	VERT( 0x415c14c0, 0x40ba847b, 0xc16d5e06 ),
	NORM( 0xbf5e631b, 0x3ebf6cea, 0xbea65c65 ),
	VERT( 0x41711047, 0x40c74810, 0xc171881e ),
	NORM( 0xbc72d53c, 0x3f480798, 0xbf1fb7ba ),
	VERT( 0x415db097, 0x40bb967b, 0xc17108a1 ),
	NORM( 0xbf4a2c64, 0x3eee6026, 0xbecc82ac ),
	VERT( 0x41710117, 0xc0797f5b, 0xc1702292 ),
	NORM( 0xbcb5dd51, 0x3e798b5c, 0xbf78378c ),
	VERT( 0x4179af67, 0xc09474ac, 0xc171df33 ),
	NORM( 0x3e0d4a01, 0x3e779545, 0xbf75e16d ),
	VERT( 0x417104b7, 0xc088b85c, 0xc171a3ca ),
	NORM( 0x3d7ff674, 0x3e8085d3, 0xbf774950 ),
	VERT( 0x415b6430, 0xc0a16f82, 0xc1709913 ),
	NORM( 0xbf4f360b, 0x3dc55e6c, 0xbf144b11 ),
	VERT( 0x415da978, 0xc0948398, 0xc17126d3 ),
	NORM( 0xbf1720ea, 0x3e3d9e85, 0xbf491e82 ),
	VERT( 0x415c2a7f, 0xc0a48691, 0xc171f592 ),
	NORM( 0xbf6566e0, 0xbd7e33cf, 0xbee104d0 ),
	VERT( 0x415f4229, 0xc0d0f792, 0xc1618415 ),
	NORM( 0xbee65e1f, 0xbf1eda91, 0xbf246bba ),
	VERT( 0x41665c37, 0xc0c65041, 0xc1716a36 ),
	NORM( 0xbeb32459, 0xbf45b35b, 0xbf07bf82 ),
	VERT( 0x416bef49, 0xc0dcff42, 0xc163cc2f ),
	NORM( 0xbeaa454e, 0xbf28a056, 0xbf2cc7db ),
	VERT( 0x415eb432, 0xc0f08ce2, 0xc159db7f ),
	NORM( 0xbeaf89fa, 0xbeccdf88, 0xbf59936f ),
	VERT( 0x415ee1a0, 0xc07f0f5d, 0xc16f9d06 ),
	NORM( 0xbdea9347, 0x3e63fd49, 0xbf77d884 ),
	VERT( 0x416650b7, 0xc088be00, 0xc1715d5e ),
	NORM( 0xbd8628b2, 0x3e717e85, 0xbf783695 ),
	VERT( 0x41658cd8, 0xc0563869, 0xc16d2052 ),
	NORM( 0xbcefd17e, 0x3e8a958c, 0xbf765477 ),
	VERT( 0x415db098, 0xc0ba965a, 0xc1712ec3 ),
	NORM( 0xbf456a27, 0xbf0d4e7d, 0xbea26e4a ),
	VERT( 0x41711037, 0xc0c64783, 0xc171b0d0 ),
	NORM( 0xbc787296, 0xbf4576a4, 0xbf22e0ac ),
	VERT( 0x415c14a8, 0xc0ba7eb1, 0xc16d5e27 ),
	NORM( 0xbf3dd807, 0xbf095f83, 0xbece253d ),
	VERT( 0x416032e0, 0xc0563df2, 0xc16cfd1b ),
	NORM( 0xbd1ad622, 0x3e899b4f, 0xbf76640f ),
	VERT( 0x4164fd27, 0x409f90aa, 0xc17546df ),
	NORM( 0xbeac52fb, 0xbe84c4b6, 0xbf67be72 ),
	VERT( 0x415da96f, 0x409583b3, 0xc17108a4 ),
	NORM( 0xbead2f2c, 0xbe89699c, 0xbf66e7c2 ),
	VERT( 0x415c2a6f, 0x40a58754, 0xc171d41d ),
	NORM( 0xbed9d5e2, 0xbcff0396, 0xbf67897e ),
	VERT( 0x4173c0b7, 0x40a87edb, 0xc175a822 ),
	NORM( 0x3ec350f7, 0xba199c06, 0xbf6ca40b ),
	VERT( 0x4178a4e7, 0x40a87ba5, 0xc173a358 ),
	NORM( 0x3ec342ea, 0xbcbc2e56, 0xbf6c943e ),
	VERT( 0x4179af47, 0x40957575, 0xc171c0e9 ),
	NORM( 0x3e93bfae, 0xbe8c43bf, 0xbf6adc9a ),
	VERT( 0x41650077, 0x40b18087, 0xc17546e1 ),
	NORM( 0xbeb15cf4, 0x3e8376b6, 0xbf66fa66 ),
	VERT( 0x415db08f, 0x40bb967a, 0xc17108cf ),
	NORM( 0xbeb3ff56, 0x3e822c2c, 0xbf66a6b8 ),
	VERT( 0x41665c27, 0x40c75092, 0xc17141df ),
	NORM( 0xbe193fbd, 0x3ed013b8, 0xbf66bf38 ),
	VERT( 0x41691627, 0x40b706ce, 0xc17561cc ),
	NORM( 0xbe138a7d, 0x3ed10ad3, 0xbf66c2e9 ),
	VERT( 0x41711037, 0x40c7480f, 0xc171884c ),
	NORM( 0x3d1d151a, 0x3edb0fa9, 0xbf672d3d ),
	VERT( 0x41723047, 0x409f8a7d, 0xc1759ddd ),
	NORM( 0x3e99e316, 0xbe838905, 0xbf6b238f ),
	VERT( 0x417104b7, 0x4089b8e5, 0xc1718801 ),
	NORM( 0x3dd394a9, 0xbed0340f, 0xbf6860ad ),
	VERT( 0x416910d7, 0x409a0581, 0xc17561bf ),
	NORM( 0xbe148af0, 0xbed0da70, 0xbf66c395 ),
	VERT( 0x416650a7, 0x4089be4c, 0xc1714194 ),
	NORM( 0xbe1a4df2, 0xbecfdb0a, 0xbf66c0be ),
	VERT( 0x417233c7, 0x40b17575, 0xc1759de3 ),
	NORM( 0x3e96c465, 0x3e4bf470, 0xbf6f46e9 ),
	VERT( 0x417559f7, 0x40bb8346, 0xc1738da9 ),
	NORM( 0x3e5d571e, 0x3e96a9f2, 0xbf6e5362 ),
	VERT( 0x41636f27, 0x40a88bc9, 0xc1753c94 ),
	NORM( 0xbed7d27f, 0x3c65e7d4, 0xbf681df1 ),
	VERT( 0x416e20f7, 0x40b70267, 0xc1758303 ),
	NORM( 0x3d7855fe, 0x3ecac061, 0xbf6a8f2e ),
	VERT( 0x416e1b67, 0x409a0358, 0xc17582f2 ),
	NORM( 0x3dc91c7f, 0xbed11639, 0xbf685318 ),
	VERT( 0x415da978, 0xc0948398, 0xc17126d3 ),
	NORM( 0xbeac1dfa, 0x3e878b41, 0xbf67615f ),
	VERT( 0x4164fd27, 0xc09e8d17, 0xc1756749 ),
	NORM( 0xbeb1c351, 0x3e83a583, 0xbf66e00f ),
	VERT( 0x41636f27, 0xc0a7883f, 0xc1755ed3 ),
	NORM( 0xbede0302, 0xbc4dab68, 0xbf66a898 ),
	VERT( 0x4178a4e7, 0xc0a875c4, 0xc173a366 ),
	NORM( 0x3ecad756, 0x3bfb7efb, 0xbf6b0b70 ),
	VERT( 0x4173c0b7, 0xc0a77af3, 0xc175ca5e ),
	NORM( 0x3eceeac1, 0x3c541488, 0xbf6a23be ),
	VERT( 0x41723047, 0xc09e869e, 0xc175be45 ),
	NORM( 0x3e9f25a5, 0x3e820dec, 0xbf6a77f6 ),
	VERT( 0x415db098, 0xc0ba965a, 0xc1712ec3 ),
	NORM( 0xbeb35b9b, 0xbe7fd25b, 0xbf67177e ),
	VERT( 0x41650077, 0xc0b07cf1, 0xc1756af5 ),
	NORM( 0xbeb5326f, 0xbe812c81, 0xbf668e8c ),
	VERT( 0x41691627, 0xc0b60321, 0xc17586fe ),
	NORM( 0xbe138c02, 0xbed05147, 0xbf66eccb ),
	VERT( 0x41665c27, 0xc0c65042, 0xc1716a64 ),
	NORM( 0xbe19463b, 0xbecf55c1, 0xbf66e9b1 ),
	VERT( 0x416e20f7, 0xc0b5fe9e, 0xc175a834 ),
	NORM( 0x3dcb4ff3, 0xbed0325d, 0xbf687e92 ),
	VERT( 0x4179af67, 0xc09474ac, 0xc171df33 ),
	NORM( 0x3e970a20, 0x3e88599b, 0xbf6aea2d ),
	VERT( 0x416e1b67, 0xc098ff92, 0xc175a23a ),
	NORM( 0x3dc93442, 0x3ed1d298, 0xbf68284e ),
	VERT( 0x416650a7, 0xc088be00, 0xc1715d8b ),
	NORM( 0xbe1a56d9, 0x3ed09958, 0xbf66956a ),
	VERT( 0x416910d7, 0xc09901d7, 0xc1758109 ),
	NORM( 0xbe148a09, 0x3ed193a6, 0xbf66999f ),
	VERT( 0x417559f7, 0xc0bb7d66, 0xc1738dba ),
	NORM( 0x3e172def, 0xbe95d135, 0xbf71dc27 ),
	VERT( 0x417233c7, 0xc0b07195, 0xc175c1f3 ),
	NORM( 0x3e988ec9, 0xbe6c8a5f, 0xbf6d1bd7 ),
	VERT( 0x415c2a7f, 0xc0a48691, 0xc171f592 ),
	NORM( 0xbed4cd09, 0x3d0e0a46, 0xbf68abf6 ),
	VERT( 0x41711037, 0xc0c64783, 0xc171b0d0 ),
	NORM( 0x3d1e2a34, 0xbed103f1, 0xbf697cce ),
	VERT( 0x417104b7, 0xc088b85d, 0xc171a3f8 ),
	NORM( 0x3dd39e63, 0x3ed0f039, 0xbf68364e ),
	VERT( 0x4079f9f7, 0x405d0fb6, 0xc187f748 ),
	NORM( 0xbc0b3cae, 0x3f5312b5, 0xbf10d7be ),
	VERT( 0x40747816, 0x40577208, 0xc1895100 ),
	NORM( 0x3b7cd915, 0x3f4743c6, 0xbf20b675 ),
	VERT( 0x4069ba1a, 0x406e3020, 0xc1840f85 ),
	NORM( 0xbe59b757, 0x3f4fd32d, 0xbf0b385f ),
	VERT( 0x40879578, 0x3f736161, 0xc19277d6 ),
	NORM( 0x3efa8720, 0xbd18c794, 0xbf5f0e37 ),
	VERT( 0x40878c98, 0x3ff7196f, 0xc1921042 ),
	NORM( 0x3eb2477e, 0x3ea97069, 0xbf60871e ),
	VERT( 0x408c5598, 0x3ff7cbf8, 0xc190e86e ),
	NORM( 0xbe57c7f0, 0x3e88ab18, 0xbf70bdc1 ),
	VERT( 0x408061e9, 0x40292be2, 0xc18ea5d8 ),
	NORM( 0x3e2b0133, 0x3f2231bb, 0xbf4164f5 ),
	VERT( 0x4066bb35, 0x4048472e, 0xc18a7ef4 ),
	NORM( 0xbe2cc7f8, 0x3f3a2f0a, 0xbf2a4f91 ),
	VERT( 0x4072b852, 0x40199a4a, 0xc18fbc0e ),
	NORM( 0xbcfeff7e, 0x3f069889, 0xbf599d8a ),
	VERT( 0x403d5092, 0x40222a8a, 0xc18f9035 ),
	NORM( 0x3d05ef5a, 0x3f12749e, 0xbf51cd34 ),
	VERT( 0x404aa2f6, 0x40449453, 0xc18a4321 ),
	NORM( 0xbe134989, 0x3f4b4a24, 0xbf172c75 ),
	VERT( 0x4076eaef, 0x3fc5ba48, 0xc192ff6c ),
	NORM( 0x3d99a7a2, 0x3e425d54, 0xbf7a9c7b ),
	VERT( 0x40afd105, 0x39ba220a, 0xc19aa86d ),
	NORM( 0xbf0f0f46, 0xbb0d903c, 0xbf544bcb ),
	VERT( 0x408aa948, 0x39b95edb, 0xc1920d05 ),
	NORM( 0xbf49b198, 0xb95d8b10, 0xbf1da81d ),
	VERT( 0x408f9a98, 0x3f70c510, 0xc192a13b ),
	NORM( 0xbf32c3cf, 0x3dd961b3, 0xbf35385c ),
	VERT( 0x40a51be7, 0x40070cef, 0xc194e2f2 ),
	NORM( 0xbed9ad6d, 0x3e46fe37, 0xbf624ece ),
	VERT( 0x408fe648, 0x3ff95a69, 0xc1922f29 ),
	NORM( 0xbf235180, 0x3e0a08a5, 0xbf4217eb ),
	VERT( 0x408897d9, 0x402af950, 0xc18eac8e ),
	NORM( 0xbeced77b, 0x3f06ef2d, 0xbf3f65a6 ),
	VERT( 0x40447f4f, 0x3fb47c4f, 0xc1935a77 ),
	NORM( 0x3caf320a, 0x3e41911b, 0xbf7b5335 ),
	VERT( 0x4084ffb9, 0x402a612b, 0xc18d96e7 ),
	NORM( 0xbe37baa9, 0x3f0f7ee2, 0xbf4ef77a ),
	VERT( 0x4080590b, 0x4058febd, 0xc1896529 ),
	NORM( 0xbf35378c, 0x3eaa78c6, 0xbf1f78bf ),
	VERT( 0x408c4468, 0x3f721b5a, 0xc191418e ),
	NORM( 0xbe1ab779, 0x3ba8a98d, 0xbf7d0ec4 ),
	VERT( 0x40874138, 0x39b93037, 0xc1909afe ),
	NORM( 0x3c04b3a9, 0xbb941da4, 0xbf7ffd2e ),
	VERT( 0x4075434f, 0x39b93ab5, 0xc192fe4a ),
	NORM( 0x3e432da5, 0xbc0a8eea, 0xbf7b4c24 ),
	VERT( 0x40962ac9, 0x402d0ff3, 0xc18d5a59 ),
	NORM( 0x3e256c1d, 0x3f4d936e, 0xbf12d90b ),
	VERT( 0x40b9d346, 0x3f8f6cd9, 0xc197947b ),
	NORM( 0xbee3667e, 0x3e79425e, 0xbf5cbcd8 ),
	VERT( 0x40830c08, 0x39b93e36, 0xc191e68b ),
	NORM( 0x3f1f4adb, 0xb9d076ef, 0xbf486785 ),
	VERT( 0x4069ba1b, 0xc06e24c0, 0xc1840f88 ),
	NORM( 0xbe57c45f, 0xbf4acd47, 0xbf129ef9 ),
	VERT( 0x40747817, 0xc0553b5a, 0xc1895bec ),
	NORM( 0xbd23d4bc, 0xbf40b726, 0xbf2833b8 ),
	VERT( 0x4079f9d8, 0xc05d0450, 0xc187f74b ),
	NORM( 0xbe1bcf74, 0xbf47958a, 0xbf1b83d0 ),
	VERT( 0x40878c98, 0xbff27314, 0xc192167e ),
	NORM( 0x3ea6ac46, 0xbeada3a4, 0xbf61f330 ),
	VERT( 0x40879578, 0xbf6a0f75, 0xc1927ae1 ),
	NORM( 0x3ee130eb, 0x3cc923cf, 0xbf65d2c1 ),
	VERT( 0x408c4468, 0xbf68d937, 0xc1914495 ),
	NORM( 0xbe24104e, 0x3b696f50, 0xbf7cb0f5 ),
	VERT( 0x408061e9, 0xc026e3d4, 0xc18eae67 ),
	NORM( 0x3e27ab08, 0xbf1fca41, 0xbf4390e9 ),
	VERT( 0x4084ffba, 0xc0281c8e, 0xc18d9f86 ),
	NORM( 0xbe381b95, 0xbf0f35c2, 0xbf4f24bd ),
	VERT( 0x4066bb36, 0xc0460cab, 0xc18a891b ),
	NORM( 0xbe09238e, 0xbf38b376, 0xbf2dea00 ),
	VERT( 0x403d5093, 0xc0221f20, 0xc18f9036 ),
	NORM( 0x3d423f1d, 0xbf158366, 0xbf4f7283 ),
	VERT( 0x4072b852, 0xc0174eb4, 0xc18fc3d3 ),
	NORM( 0x3d1bfae7, 0xbf0389e7, 0xbf5b67ab ),
	VERT( 0x404aa2f6, 0xc04488ef, 0xc18a4324 ),
	NORM( 0xbdb80df5, 0xbf49c857, 0xbf1bdaa4 ),
	VERT( 0x4076eaf0, 0xbfc10ddf, 0xc1930466 ),
	NORM( 0x3de6bef0, 0xbe269c98, 0xbf7aefbb ),
	VERT( 0x408f9a98, 0xbf677100, 0xc192a43d ),
	NORM( 0xbf33394f, 0xbdcf8d32, 0xbf34f25d ),
	VERT( 0x408897d9, 0xc028b12a, 0xc18eb536 ),
	NORM( 0xbed8c959, 0xbf0433e1, 0xbf3e8cdb ),
	VERT( 0x408fe648, 0xbff4b33f, 0xc1923574 ),
	NORM( 0xbf246855, 0xbe0b87d7, 0xbf411ac2 ),
	VERT( 0x40a51be7, 0xc0070157, 0xc194e2f5 ),
	NORM( 0xbed71d8c, 0xbe5f8171, 0xbf617d1d ),
	VERT( 0x40447f50, 0xbfb4656f, 0xc1935a77 ),
	NORM( 0x3d012e43, 0xbe2b8441, 0xbf7c4115 ),
	VERT( 0x408c55a8, 0xbff32d23, 0xc190eeae ),
	NORM( 0xbe619da6, 0xbe85dfa1, 0xbf709200 ),
	VERT( 0x40473bd0, 0x39b852a2, 0xc192d7ac ),
	NORM( 0xbc58a4c1, 0xbc81d2be, 0xbf7ff20b ),
	VERT( 0x40962aca, 0xc02d047e, 0xc18d5a5a ),
	NORM( 0x3debf901, 0xbf49fe00, 0xbf1a7bbc ),
	VERT( 0x40b9d346, 0xbf8f55c2, 0xc197947b ),
	NORM( 0xbee2f02a, 0xbe732cf4, 0xbf5d47b5 ),
	VERT( 0x4080590b, 0xc058f353, 0xc189652d ),
	NORM( 0xbf399d0d, 0xbe98f3f7, 0xbf1edaf3 ),
	VERT( 0x41636f37, 0x40a88bca, 0xc1753c64 ),
	NORM( 0xbcd2f726, 0x3803971b, 0xbf7fea45 ),
	VERT( 0x41650087, 0x40b18087, 0xc17546b1 ),
	NORM( 0xbcd2f147, 0x37f4d788, 0xbf7fea45 ),
	VERT( 0x41691637, 0x40b706cf, 0xc175619c ),
	NORM( 0xbcd2d44c, 0x37ed258c, 0xbf7fea4b ),
	VERT( 0x4173c0c7, 0xc0a77af2, 0xc175ca2d ),
	NORM( 0xbcd2d491, 0x3accb2c0, 0xbf7fea36 ),
	VERT( 0x417233d7, 0xc0b07194, 0xc175c1c3 ),
	NORM( 0xbcd2fdd0, 0x3aceb27f, 0xbf7fea2d ),
	VERT( 0x416e2107, 0xc0b5fe9e, 0xc175a804 ),
	NORM( 0xbcd2d675, 0x3acdce7b, 0xbf7fea36 ),
	VERT( 0x416e2107, 0x40b70268, 0xc17582d2 ),
	NORM( 0xbcd2b5d4, 0x388754f5, 0xbf7fea52 ),
	VERT( 0x417233d7, 0x40b17576, 0xc1759db3 ),
	NORM( 0xbcd2cd65, 0x37e89597, 0xbf7fea4d ),
	VERT( 0x4173c0c7, 0x40a87edb, 0xc175a7f2 ),
	NORM( 0xbcd2c937, 0x37e9c92d, 0xbf7fea4e ),
	VERT( 0x41723057, 0x409f8a7e, 0xc1759dac ),
	NORM( 0xbcd2eb69, 0x3786dc23, 0xbf7fea46 ),
	VERT( 0x416e1b77, 0x409a0359, 0xc17582c1 ),
	NORM( 0xbcd2d6bb, 0x377381b8, 0xbf7fea4a ),
	VERT( 0x416910e7, 0x409a0581, 0xc175618e ),
	NORM( 0xbcd2b0b6, 0x37bbc91c, 0xbf7fea52 ),
	VERT( 0x4164fd47, 0x409f90ab, 0xc17546ae ),
	NORM( 0xbcd2cf23, 0x37d0c7e2, 0xbf7fea4c ),
	VERT( 0x41691637, 0xc0b60321, 0xc17586cd ),
	NORM( 0xbcd2bbd4, 0x3ad136b2, 0xbf7fea3b ),
	VERT( 0x41650087, 0xc0b07cf0, 0xc1756ac4 ),
	NORM( 0xbcd2cb53, 0x3ace0046, 0xbf7fea38 ),
	VERT( 0x41636f47, 0xc0a7883d, 0xc1755ea3 ),
	NORM( 0xbcd2db0c, 0x3acc4d91, 0xbf7fea34 ),
	VERT( 0x4164fd47, 0xc09e8d16, 0xc1756719 ),
	NORM( 0xbcd2cdda, 0x3accbd3b, 0xbf7fea38 ),
	VERT( 0x416910e7, 0xc09901d6, 0xc17580d8 ),
	NORM( 0xbcd2b650, 0x3acd92ab, 0xbf7fea3c ),
	VERT( 0x416e1b77, 0xc098ff92, 0xc175a20a ),
	NORM( 0xbcd2d14f, 0x3acdd6d8, 0xbf7fea37 ),
	VERT( 0x41723057, 0xc09e869e, 0xc175be15 ),
	NORM( 0xbcd2ff02, 0x3acd72bd, 0xbf7fea2d ),
	CnkV_VN_NF(FV_CONT|FW_START, 29),
	OffnbIdx(4228, 4),
	VERT( 0x3ed7f013, 0xc0f5168b, 0x3f7719db ),
	NORM( 0xbdc62292, 0xbf7cef9d, 0x3df60e75 ),
	NFlagsW( 0, 97.343246 ),
	VERT( 0x3ed7c6e5, 0xc0ea6593, 0xc0b0f8a9 ),
	NORM( 0xbf35bcec, 0xbf34350a, 0xbcb71a2b ),
	NFlagsW( 1, 99.245857 ),
	VERT( 0x3ed7c7d8, 0x40ea6b05, 0xc0b0f881 ),
	NORM( 0xbf35bccf, 0x3f34350e, 0xbcb71cd1 ),
	NFlagsW( 2, 99.254486 ),
	VERT( 0x3ed7f206, 0x40f51bd9, 0x3f771b3d ),
	NORM( 0xbdc62325, 0x3f7cef93, 0x3df60fc7 ),
	NFlagsW( 3, 97.330704 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 239),
	OffnbIdx(0, 34),
	VERT( 0xbfe59475, 0xc10c090f, 0x3fa5a206 ),
	NORM( 0x3f4e196d, 0xbf179a0b, 0xbd0b6a26 ),
	NFlagsW( 4166, 0.243332 ),
	VERT( 0xc003c684, 0xc10aa2ec, 0xbeda964c ),
	NORM( 0x3f4ad8f7, 0xbf126348, 0xbe599a43 ),
	NFlagsW( 4167, 0.054251 ),
	VERT( 0xbfe51c23, 0xc106684e, 0x4036caea ),
	NORM( 0x3f4d9715, 0xbf0ae143, 0x3e7c6147 ),
	NFlagsW( 4169, 0.276932 ),
	VERT( 0xc0112d6d, 0xc1030ee2, 0xbff0c508 ),
	NORM( 0x3f2b3064, 0xbf1ecbaf, 0xbed1e5a7 ),
	NFlagsW( 4171, 0.013245 ),
	VERT( 0x3e720369, 0xc0f753e8, 0xbf8a7afa ),
	NORM( 0xbe15216f, 0xbf7c3dac, 0xbdb68637 ),
	NFlagsW( 4172, 91.813789 ),
	VERT( 0xbf8bbbb9, 0xc0f3aba5, 0x3f877670 ),
	NORM( 0x3ef7c656, 0xbf5fe590, 0x3cf3f601 ),
	NFlagsW( 4173, 5.793483 ),
	VERT( 0xbf9cafce, 0xc0f0ce07, 0xbf4f08d1 ),
	NORM( 0x3eaeea0d, 0xbf6bec6f, 0xbe3cc6ba ),
	NFlagsW( 4176, 2.981154 ),
	VERT( 0x3dfe8a07, 0xc0eec914, 0xc00be117 ),
	NORM( 0xbe844e98, 0xbf716ebc, 0xbe564abc ),
	NFlagsW( 4177, 86.738655 ),
	VERT( 0xbf70b8cf, 0xc0eac080, 0x4023181b ),
	NORM( 0x3ef4b8b9, 0xbf56a200, 0x3e861cd3 ),
	NFlagsW( 4179, 14.245587 ),
	VERT( 0xbfa935d9, 0xc0ea7f3e, 0xbfe1bc8f ),
	NORM( 0x3e860955, 0xbf65b865, 0xbeb5e9d3 ),
	NFlagsW( 4180, 1.957717 ),
	VERT( 0xbeb404d9, 0xc0da2f87, 0xc08538fb ),
	NORM( 0xbf090407, 0xbf5024c4, 0xbe6a923a ),
	NFlagsW( 4181, 47.253685 ),
	VERT( 0xbfef9e0b, 0xc0d80c67, 0x409ee151 ),
	NORM( 0x3f04a178, 0xbf051b15, 0x3f2ddc9b ),
	NFlagsW( 4182, 0.607297 ),
	VERT( 0xbfb43e29, 0xc0d534f9, 0xc04618f4 ),
	NORM( 0x3cba9514, 0xbf5eeca9, 0xbefb7309 ),
	NFlagsW( 4183, 1.397243 ),
	VERT( 0xbf378ea3, 0xc0cb43e2, 0x408efabc ),
	NORM( 0x3e9067fa, 0xbf38d39a, 0x3f21bf06 ),
	NFlagsW( 4184, 83.751663 ),
	VERT( 0xbf3a7324, 0xc0aae027, 0xc0d12a8e ),
	NORM( 0xbf43ff9c, 0xbf18a7ea, 0xbe771f37 ),
	NFlagsW( 4186, 29.962816 ),
	VERT( 0xbfdb9c80, 0xc0a1ce3d, 0x40be1d20 ),
	NORM( 0x3e929ea3, 0xbebde9ab, 0x3f622708 ),
	NFlagsW( 4187, 6.489344 ),
	VERT( 0xbfe376c6, 0xc09ead7e, 0xc0b3816a ),
	NORM( 0xbe8dcfdf, 0xbf3dae19, 0xbf1c9ebb ),
	NFlagsW( 4188, 0.414323 ),
	VERT( 0xbfe37648, 0x409eb2ea, 0xc0b3814f ),
	NORM( 0xbe8dd051, 0x3f3dae3e, 0xbf1c9e6b ),
	NFlagsW( 4202, 0.415079 ),
	VERT( 0xbfdb9c42, 0x40a1d368, 0x40be1d3d ),
	NORM( 0x3e929ecb, 0x3ebde986, 0x3f62270d ),
	NFlagsW( 4203, 6.489480 ),
	VERT( 0xbf3a72a8, 0x40aae599, 0xc0d12a71 ),
	NORM( 0xbf43ff97, 0x3f18a7ee, 0xbe771e38 ),
	NFlagsW( 4204, 29.992788 ),
	VERT( 0xbf378f29, 0x40cb4918, 0x408efae1 ),
	NORM( 0x3e90687b, 0x3f38d378, 0x3f21bf1b ),
	NFlagsW( 4206, 83.467491 ),
	VERT( 0xbfb43d6c, 0x40d53a55, 0xc04618ab ),
	NORM( 0x3cba7e40, 0x3f5eecf6, 0xbefb7208 ),
	NFlagsW( 4207, 1.397587 ),
	VERT( 0xbfef9dcd, 0x40d81194, 0x409ee175 ),
	NORM( 0x3f04a187, 0x3f051af3, 0x3f2ddcb5 ),
	NFlagsW( 4208, 0.604795 ),
	VERT( 0xbeb407e4, 0x40da34ed, 0xc08538d6 ),
	NORM( 0xbf090430, 0x3f502499, 0xbe6a921d ),
	NFlagsW( 4209, 47.303608 ),
	VERT( 0xbfa9361c, 0x40ea8495, 0xbfe1bbea ),
	NORM( 0x3e860943, 0x3f65b895, 0xbeb5e916 ),
	NFlagsW( 4210, 1.957818 ),
	VERT( 0xbf70b8d5, 0x40eac5c0, 0x4023186e ),
	NORM( 0x3ef4b945, 0x3f56a1e8, 0x3e861ccd ),
	NFlagsW( 4211, 14.225873 ),
	VERT( 0x3dfe85d4, 0x40eece71, 0xc00be0c4 ),
	NORM( 0xbe844e90, 0x3f716ec0, 0xbe5649fc ),
	NFlagsW( 4213, 86.748108 ),
	VERT( 0xbf9cb051, 0x40f0d356, 0xbf4f0785 ),
	NORM( 0x3eaeea6c, 0x3f6bec71, 0xbe3cc622 ),
	NFlagsW( 4214, 2.981134 ),
	VERT( 0xbf8bbb7c, 0x40f3b0eb, 0x3f877717 ),
	NORM( 0x3ef7c578, 0x3f5fe5dc, 0x3cf3f790 ),
	NFlagsW( 4217, 5.791646 ),
	VERT( 0x3e720550, 0x40f75940, 0xbf8a7a54 ),
	NORM( 0xbe15214b, 0x3f7c3dad, 0xbdb6843f ),
	NFlagsW( 4218, 91.808426 ),
	VERT( 0xc0112dae, 0x4103118a, 0xbff0c455 ),
	NORM( 0x3f2b30c2, 0x3f1ecb85, 0xbed1e53a ),
	NFlagsW( 4219, 0.013243 ),
	VERT( 0xbfe51b66, 0x41066aec, 0x4036cb43 ),
	NORM( 0x3f4d9729, 0x3f0ae16e, 0x3e7c5fc2 ),
	NFlagsW( 4221, 0.276845 ),
	VERT( 0xc003c6a6, 0x410aa592, 0xbeda9361 ),
	NORM( 0x3f4ad94c, 0x3f1262ee, 0xbe599a25 ),
	NFlagsW( 4223, 0.054242 ),
	VERT( 0xbfe594b9, 0x410c0bb4, 0x3fa5a2c6 ),
	NORM( 0x3f4e195f, 0x3f179a33, 0xbd0b6d6f ),
	NFlagsW( 4224, 0.243280 ),
	CnkV_VN_NF(FV_CONT|FW_END, 78),
	OffnbIdx(0, 11),
	VERT( 0xbf9a029a, 0xc08ad682, 0xc0e7d538 ),
	NORM( 0xbf4dc902, 0xbefa63fb, 0xbead5fc2 ),
	NFlagsW( 4189, 6.663622 ),
	VERT( 0xbfbc3da6, 0xc02df5a9, 0xc104f140 ),
	NORM( 0xbf611c17, 0xbebda7d1, 0xbe993927 ),
	NFlagsW( 4191, 2.896759 ),
	VERT( 0xbfc99ff9, 0xc02620f1, 0x40d3c546 ),
	NORM( 0x3e81aad5, 0xbe7c3586, 0x3f6f7e43 ),
	NFlagsW( 4192, 6.538518 ),
	VERT( 0xc000cd17, 0xbf8b4829, 0xc1102a3f ),
	NORM( 0xbf75d0ea, 0xbe4f748b, 0xbe44cc89 ),
	NFlagsW( 4193, 0.257538 ),
	VERT( 0xc002b9f8, 0x39af6932, 0xc1113be9 ),
	NORM( 0xbf7be603, 0x36a2d742, 0xbe3690cf ),
	NFlagsW( 4194, 0.212171 ),
	VERT( 0xc0195071, 0x39ae7cae, 0xc0ff1d7c ),
	NORM( 0xbf150c7f, 0x35b3c687, 0xbf5022b9 ),
	NFlagsW( 4195, 0.010942 ),
	VERT( 0xbfb964b4, 0x39a4a458, 0x40e2af94 ),
	NORM( 0x3e56247a, 0xb5dd0880, 0x3f7a56f3 ),
	NFlagsW( 4196, 14.803317 ),
	VERT( 0xc000ccd7, 0x3f8b5e16, 0xc1102a3c ),
	NORM( 0xbf75d0d6, 0x3e4f74b0, 0xbe44cd61 ),
	NFlagsW( 4197, 0.257563 ),
	VERT( 0xbfc99f7a, 0x40262b40, 0x40d3c557 ),
	NORM( 0x3e81aabf, 0x3e7c34d4, 0x3f6f7e54 ),
	NFlagsW( 4198, 6.540576 ),
	VERT( 0xbfbc3de7, 0x402e009c, 0xc104f139 ),
	NORM( 0xbf611c19, 0x3ebda75b, 0xbe99395c ),
	NFlagsW( 4199, 2.897437 ),
	VERT( 0xbf9a02dc, 0x408adbf5, 0xc0e7d521 ),
	NORM( 0xbf4dc8e8, 0x3efa645c, 0xbead5f66 ),
	NFlagsW( 4201, 6.665878 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_Head[]
START
VList      vertex_kihon11_Bip01_Bip01_Head,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_Head[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_Head,
OPosition  (  6.714032F,  0.000000F, -0.000000F ),
OAngle     (  0.000002F,  8.954325F,  0.000024F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Dummy21,
Sibling     object_kihon11_Bip01_Bip01_L_Clavicle,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_Neck[]
START
	CnkV_VN(FV_CONT, 55),
	OffnbIdx(1906, 9),
	VERT( 0x40932537, 0xc030a16f, 0x40f3c0ad ),
	NORM( 0x3f01b9f6, 0xbe6094d5, 0x3f556f84 ),
	VERT( 0x3fe2c6b0, 0xc02fe84f, 0x4116403b ),
	NORM( 0x3ef1b540, 0xbe3c4300, 0x3f5cb711 ),
	VERT( 0x40472163, 0xc01824be, 0xc0d8a8c6 ),
	NORM( 0xbf0181c2, 0xbef47290, 0xbf37eaa8 ),
	VERT( 0x403f94e5, 0xbf60ad14, 0xc0ef75d2 ),
	NORM( 0xbf28c988, 0xbe575c10, 0xbf38cac8 ),
	VERT( 0x4089e018, 0x39a4689b, 0x4102b8a9 ),
	NORM( 0x3efdd300, 0xb598cfe6, 0x3f5e53b9 ),
	VERT( 0x403f94c4, 0x3f60d8d8, 0xc0ef75ca ),
	NORM( 0xbf28c921, 0x3e575b99, 0xbf38cb2f ),
	VERT( 0x4047215e, 0x40182fa8, 0xc0d8a8ba ),
	NORM( 0xbf0181ea, 0x3ef472c2, 0xbf37ea7b ),
	VERT( 0x3fe2c6a5, 0x402ff285, 0x41164043 ),
	NORM( 0x3ef1b53a, 0x3e3c4259, 0x3f5cb71b ),
	VERT( 0x40932534, 0x4030abbb, 0x40f3c0bd ),
	NORM( 0x3f01b9e1, 0x3e609404, 0x3f556f9e ),
	CnkV_VN_NF(FV_CONT|FW_START, 442),
	OffnbIdx(4164, 63),
	VERT( 0x4092c0a4, 0xc1194747, 0x4006554a ),
	NORM( 0x3f5d5c93, 0xbefbead2, 0xbdcefd47 ),
	NFlagsW( 0, 0.064557 ),
	VERT( 0x408da7d3, 0xc111d690, 0x3e00d28c ),
	NORM( 0x3f5af5e9, 0xbed894f3, 0xbe992bc0 ),
	NFlagsW( 1, 5.201325 ),
	VERT( 0x40a4993d, 0xc10c090e, 0x3fc75909 ),
	NORM( 0x3f4a3b3c, 0xbf179a12, 0xbe22be6f ),
	NFlagsW( 2, 3.643546 ),
	VERT( 0x4093a34b, 0xc10aa2eb, 0xbdcf5b4d ),
	NORM( 0x3f3fe87b, 0xbf12634f, 0xbeaa9edb ),
	NFlagsW( 3, 13.007811 ),
	VERT( 0x406de863, 0xc109039f, 0xbfcb5db7 ),
	NORM( 0x3f44c518, 0xbeda71ba, 0xbef408a9 ),
	NFlagsW( 4, 18.138994 ),
	VERT( 0x40ac7ec2, 0xc106684d, 0x40466523 ),
	NORM( 0x3f54e7bb, 0xbf0ae14b, 0x3df29cc2 ),
	NFlagsW( 5, 1.592518 ),
	VERT( 0x4052e60c, 0xc103c3d9, 0xc026f53d ),
	NORM( 0x3f591fa7, 0xbe9cda0f, 0xbedd4b1d ),
	NFlagsW( 6, 20.642467 ),
	VERT( 0x4085c6b3, 0xc1030ee0, 0xbfc0a473 ),
	NORM( 0x3f18c491, 0xbf1ecbb6, 0xbf025088 ),
	NFlagsW( 7, 25.841908 ),
	VERT( 0x40d8ee65, 0xc0f753e9, 0xbf8d804d ),
	NORM( 0xbe218472, 0xbf7c3daa, 0xbd85e05c ),
	NFlagsW( 8, 0.204733 ),
	VERT( 0x40b99ccd, 0xc0f3aba4, 0x3f9b8f96 ),
	NORM( 0x3ef720e4, 0xbf5fe594, 0xbd3c078b ),
	NFlagsW( 9, 21.871910 ),
	VERT( 0x4032097f, 0xc0f20b11, 0xc0831da4 ),
	NORM( 0x3f5d5f5a, 0xbde57573, 0xbefaa8d2 ),
	NFlagsW( 10, 20.051735 ),
	VERT( 0x406a4481, 0xc0f178cf, 0xc025e575 ),
	NORM( 0x3f20ad2e, 0xbf049fbc, 0xbf14c2ea ),
	NFlagsW( 11, 36.461193 ),
	VERT( 0x40ac206d, 0xc0f0ce06, 0xbf1bbc47 ),
	NORM( 0x3e9e176c, 0xbf6bec72, 0xbe70ece8 ),
	NFlagsW( 12, 37.116829 ),
	VERT( 0x40cfe44d, 0xc0eec914, 0xc00b699d ),
	NORM( 0xbe935f0d, 0xbf716eba, 0xbe2a7e74 ),
	NFlagsW( 13, 2.782691 ),
	VERT( 0x407b56f7, 0xc0ee6401, 0x40c4f494 ),
	NORM( 0x3f22829b, 0xbe8c1d2b, 0x3f38fb79 ),
	NFlagsW( 14, 1.068099 ),
	VERT( 0x40c5d16a, 0xc0eac07f, 0x402a7934 ),
	NORM( 0x3f034e87, 0xbf56a204, 0x3e3cc69e ),
	NFlagsW( 15, 10.891661 ),
	VERT( 0x40a44735, 0xc0ea7f3c, 0xbfc4a5f5 ),
	NORM( 0x3e502d7c, 0xbf65b868, 0xbec88f09 ),
	NFlagsW( 16, 43.442425 ),
	VERT( 0x40b6ffcd, 0xc0da2f86, 0xc081d905 ),
	NORM( 0xbf10792f, 0xbf5024bf, 0xbe126879 ),
	NFlagsW( 17, 29.728773 ),
	VERT( 0x40b46768, 0xc0d80c64, 0x40a6448d ),
	NORM( 0x3f1e1351, 0xbf051b19, 0x3f171968 ),
	NFlagsW( 18, 10.838509 ),
	VERT( 0x409aebba, 0xc0d534f7, 0xc035a7f2 ),
	NORM( 0xbd5cf16b, 0xbf5eeca9, 0xbefa3330 ),
	NFlagsW( 19, 54.959286 ),
	VERT( 0x40d67033, 0xc0cb43e1, 0x4090cee6 ),
	NORM( 0x3ec0ff3d, 0xbf38d39c, 0x3f148968 ),
	NFlagsW( 20, 1.974899 ),
	VERT( 0x40838dcc, 0xc0b8c2ff, 0x40d493bf ),
	NORM( 0x3f0d6e23, 0xbe98c81e, 0x3f473e4e ),
	NFlagsW( 21, 32.043259 ),
	VERT( 0x409f454b, 0xc0aae026, 0xc0cafd50 ),
	NORM( 0xbf4b39c6, 0xbf18a7e3, 0xbdf42af5 ),
	NFlagsW( 22, 68.990440 ),
	VERT( 0x40be34b5, 0xc0a1ce3a, 0x40c457a0 ),
	NORM( 0x3ed73b98, 0xbebde9b0, 0x3f53fc5f ),
	NFlagsW( 23, 93.031281 ),
	VERT( 0x4082bc8c, 0xc09ead7c, 0xc0a87780 ),
	NORM( 0xbebcd6a2, 0xbf3dae17, 0xbf0faccb ),
	NFlagsW( 24, 82.602516 ),
	VERT( 0x408cbb47, 0xc08ad681, 0xc0df03c0 ),
	NORM( 0xbf58c50f, 0xbefa63ed, 0xbe56671f ),
	NFlagsW( 25, 93.336334 ),
	VERT( 0x40534dee, 0xc0786426, 0xc0b7c22e ),
	NORM( 0xbe96cc2e, 0xbf003640, 0xbf505b73 ),
	NFlagsW( 26, 91.425308 ),
	VERT( 0x407df4c7, 0xc02df5a7, 0xc0ff51cf ),
	NORM( 0xbf6a4a64, 0xbebda7c1, 0xbe228fa8 ),
	NFlagsW( 27, 97.103241 ),
	VERT( 0x40c604bb, 0xc02620ed, 0x40d90909 ),
	NORM( 0x3ecaa3cf, 0xbe7c358d, 0x3f627bb8 ),
	NFlagsW( 28, 93.461487 ),
	VERT( 0x4054b603, 0xbf8b4821, 0xc109656a ),
	NORM( 0xbf7a7a60, 0xbe4f7467, 0xbd256efa ),
	NFlagsW( 29, 99.742462 ),
	VERT( 0x405224c1, 0x39afe675, 0xc10a6091 ),
	NORM( 0xbf7feeb7, 0x36b4e6a6, 0xbcbc17f5 ),
	NFlagsW( 30, 99.787834 ),
	VERT( 0x4046d611, 0x39af18cb, 0xc0f01315 ),
	NORM( 0xbf33a0c5, 0x35db86ec, 0xbf366668 ),
	NFlagsW( 31, 99.989059 ),
	VERT( 0x40cc5930, 0x39a539e4, 0x40e7231e ),
	NORM( 0x3eb7b212, 0xb5e868de, 0x3f6ef4be ),
	NFlagsW( 32, 85.196678 ),
	VERT( 0x4054b640, 0x3f8b5e1e, 0xc109656a ),
	NORM( 0xbf7a7a56, 0x3e4f74d3, 0xbd257280 ),
	NFlagsW( 33, 99.742439 ),
	VERT( 0x40c604d8, 0x40262b45, 0x40d90915 ),
	NORM( 0x3ecaa3b8, 0x3e7c34cd, 0x3f627bcb ),
	NFlagsW( 34, 93.459427 ),
	VERT( 0x407df4a2, 0x402e009f, 0xc0ff51bd ),
	NORM( 0xbf6a4a70, 0x3ebda76b, 0xbe22900d ),
	NFlagsW( 35, 97.102562 ),
	VERT( 0x40534da8, 0x40786f02, 0xc0b7c212 ),
	NORM( 0xbe96cb43, 0x3f003622, 0xbf505baf ),
	NFlagsW( 36, 91.619118 ),
	VERT( 0x408cbb33, 0x408adbf6, 0xc0df03a6 ),
	NORM( 0xbf58c4f5, 0x3efa646a, 0xbe566676 ),
	NFlagsW( 37, 93.334106 ),
	VERT( 0x4082bca6, 0x409eb2ec, 0xc0a8776a ),
	NORM( 0xbebcd70f, 0x3f3dae40, 0xbf0fac72 ),
	NFlagsW( 38, 82.751839 ),
	VERT( 0x40be34bf, 0x40a1d36a, 0x40c457bb ),
	NORM( 0x3ed73bb5, 0x3ebde982, 0x3f53fc61 ),
	NFlagsW( 39, 92.950882 ),
	VERT( 0x409f4556, 0x40aae59a, 0xc0cafd35 ),
	NORM( 0xbf4b39c0, 0x3f18a7f5, 0xbdf428fe ),
	NFlagsW( 40, 69.013428 ),
	VERT( 0x40838de6, 0x40b8c82a, 0x40d493da ),
	NORM( 0x3f0d6e16, 0x3e98c7e4, 0x3f473e63 ),
	NFlagsW( 41, 31.872490 ),
	VERT( 0x40d6701d, 0x40cb491a, 0x4090cf0d ),
	NORM( 0x3ec0ffae, 0x3f38d375, 0x3f148973 ),
	NFlagsW( 42, 1.961685 ),
	VERT( 0x409aebe2, 0x40d53a57, 0xc035a7b7 ),
	NORM( 0xbd5cfc36, 0x3f5eecf6, 0xbefa31f7 ),
	NFlagsW( 43, 54.962357 ),
	VERT( 0x40b46771, 0x40d81197, 0x40a644af ),
	NORM( 0x3f1e135c, 0x3f051aef, 0x3f171981 ),
	NFlagsW( 44, 10.777382 ),
	VERT( 0x40b6ff96, 0x40da34ed, 0xc081d8d7 ),
	NORM( 0xbf107962, 0x3f50249e, 0xbe12683e ),
	NFlagsW( 45, 29.728989 ),
	VERT( 0x40a4471e, 0x40ea8497, 0xbfc4a544 ),
	NORM( 0x3e502d5f, 0x3f65b892, 0xbec88e4a ),
	NFlagsW( 46, 43.426029 ),
	VERT( 0x40c5d163, 0x40eac5c1, 0x402a7988 ),
	NORM( 0x3f034ec0, 0x3f56a1e3, 0x3e3cc66c ),
	NFlagsW( 47, 10.859624 ),
	VERT( 0x407b56e8, 0x40ee692f, 0x40c4f4c0 ),
	NORM( 0x3f2282b7, 0x3e8c1d1d, 0x3f38fb63 ),
	NFlagsW( 48, 1.064681 ),
	VERT( 0x40cfe436, 0x40eece71, 0xc00b6943 ),
	NORM( 0xbe935f11, 0x3f716ec2, 0xbe2a7db4 ),
	NFlagsW( 49, 2.776103 ),
	VERT( 0x40ac2046, 0x40f0d357, 0xbf1bbacd ),
	NORM( 0x3e9e17bc, 0x3f6bec6e, 0xbe70ec6b ),
	NFlagsW( 50, 37.094574 ),
	VERT( 0x406a4452, 0x40f17e29, 0xc025e51c ),
	NORM( 0x3f20ad1e, 0x3f04a005, 0xbf14c2b9 ),
	NFlagsW( 51, 36.448326 ),
	VERT( 0x4032096f, 0x40f21076, 0xc0831d7a ),
	NORM( 0x3f5d5f6a, 0x3de575ab, 0xbefaa895 ),
	NFlagsW( 52, 20.036016 ),
	VERT( 0x40b99cd5, 0x40f3b0ec, 0x3f9b9036 ),
	NORM( 0x3ef71ff4, 0x3f5fe5d8, 0xbd3c05a1 ),
	NFlagsW( 53, 21.843107 ),
	VERT( 0x40d8ee6c, 0x40f75940, 0xbf8d7fae ),
	NORM( 0xbe21845e, 0x3f7c3dae, 0xbd85de6c ),
	NFlagsW( 54, 0.203655 ),
	VERT( 0x4085c68b, 0x4103118c, 0xbfc0a3a9 ),
	NORM( 0x3f18c4ee, 0x3f1ecb7f, 0xbf025060 ),
	NFlagsW( 55, 25.824648 ),
	VERT( 0x4052e5dc, 0x4103c687, 0xc026f4db ),
	NORM( 0x3f591fae, 0x3e9cda01, 0xbedd4b08 ),
	NFlagsW( 56, 20.625320 ),
	VERT( 0x40ac7ee8, 0x41066aed, 0x4046656f ),
	NORM( 0x3f54e7b7, 0x3f0ae167, 0x3df299ad ),
	NFlagsW( 57, 1.587825 ),
	VERT( 0x406de852, 0x4109064b, 0xbfcb5cf8 ),
	NORM( 0x3f44c549, 0x3eda711e, 0xbef40897 ),
	NFlagsW( 58, 18.121531 ),
	VERT( 0x4093a332, 0x410aa593, 0xbdcf4ece ),
	NORM( 0x3f3fe8c8, 0x3f1262e7, 0xbeaa9ee6 ),
	NFlagsW( 59, 12.991522 ),
	VERT( 0x40a49924, 0x410c0bb5, 0x3fc759d6 ),
	NORM( 0x3f4a3b1e, 0x3f179a2c, 0xbe22bf34 ),
	NFlagsW( 60, 3.635316 ),
	VERT( 0x408da7ca, 0x4111d939, 0x3e00d8f0 ),
	NORM( 0x3f5af62d, 0x3ed89413, 0xbe992b76 ),
	NFlagsW( 61, 5.190800 ),
	VERT( 0x4092c09a, 0x411949e9, 0x400655b3 ),
	NORM( 0x3f5d5ca9, 0x3efbea84, 0xbdcefcd5 ),
	NFlagsW( 62, 0.064060 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 43),
	OffnbIdx(0, 6),
	VERT( 0x4021cc7f, 0xc0bb9771, 0xc0902ff7 ),
	NORM( 0x3f199445, 0xbecb4555, 0xbf31d1b7 ),
	NFlagsW( 3345, 44.500889 ),
	VERT( 0x3fef869b, 0xc087b1ff, 0xc0bac39f ),
	NORM( 0x3f052f48, 0xbe4f17d6, 0xbf546893 ),
	NFlagsW( 3350, 55.795925 ),
	VERT( 0x3fb82c56, 0xc025dc60, 0xc0cc468f ),
	NORM( 0x3eb57aad, 0xbe807632, 0xbf6699cc ),
	NFlagsW( 3351, 86.710129 ),
	VERT( 0x3fb82c0d, 0x4025e744, 0xc0cc467d ),
	NORM( 0x3eb57b5e, 0x3e80758f, 0xbf6699c1 ),
	NFlagsW( 3356, 86.864304 ),
	VERT( 0x3fef8747, 0x4087b76e, 0xc0bac390 ),
	NORM( 0x3f052f15, 0x3e4f1880, 0xbf5468a8 ),
	NFlagsW( 3357, 55.901962 ),
	VERT( 0x4021cc72, 0x40bb9cdc, 0xc0902fd7 ),
	NORM( 0x3f19943d, 0x3ecb45e5, 0xbf31d196 ),
	NFlagsW( 3362, 44.495876 ),
	CnkV_VN_NF(FV_CONT|FW_END, 29),
	OffnbIdx(0, 4),
	VERT( 0x3e58bf44, 0xc012a858, 0xc0f74eb8 ),
	NORM( 0x3f2c5192, 0xbc79422e, 0xbf3d47cf ),
	NFlagsW( 3352, 0.674239 ),
	VERT( 0x3e4b6789, 0x39af0d6b, 0xc0f909fe ),
	NORM( 0x3f310a1c, 0x3518b295, 0xbf38e9dc ),
	NFlagsW( 3353, 2.335666 ),
	VERT( 0x3f37378a, 0x39aea9fe, 0xc0e50685 ),
	NORM( 0x3ed60e7f, 0x35cd1e16, 0xbf688d97 ),
	NFlagsW( 3354, 42.745815 ),
	VERT( 0x3e58bf01, 0x4012b349, 0xc0f74ea9 ),
	NORM( 0x3f2c51e5, 0x3c794fa4, 0xbf3d4784 ),
	NFlagsW( 3355, 0.673509 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_Neck[]
START
VList      vertex_kihon11_Bip01_Bip01_Neck,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_Neck[]
START
EvalFlags ( 0x00000006 ),
CNKModel   model_kihon11_Bip01_Bip01_Neck,
OPosition  ( 10.495700F,  0.000000F,  0.005347F ),
OAngle     (  0.000000F, -0.000000F, -0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_Head,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_Spine3[]
START
	CnkV_VN(FV_CONT, 121),
	OffnbIdx(1886, 20),
	VERT( 0x410c7a6b, 0xc054a7c0, 0x4129b928 ),
	NORM( 0x3e93218d, 0xbe02ef94, 0x3f7301e5 ),
	VERT( 0x40a89a93, 0xc04b9fda, 0x4136db61 ),
	NORM( 0x3e71378d, 0xbdbb1f1c, 0x3f77b1a6 ),
	VERT( 0x4125b97d, 0xc015c789, 0xc0ff6dbc ),
	NORM( 0x3f2ca67f, 0x3b7846bc, 0xbf3d03fe ),
	VERT( 0x4110cf0b, 0xc01543f1, 0xc1169dd8 ),
	NORM( 0x3ef351a7, 0x3d474b87, 0xbf60e649 ),
	VERT( 0x4051393d, 0xbfe44e44, 0xc1357812 ),
	NORM( 0x3ea0aaa3, 0xbc73b98e, 0xbf730a0a ),
	VERT( 0x40b6a937, 0xbf9deca0, 0xc1245b87 ),
	NORM( 0x3ea9a4a1, 0x3cedd84a, 0xbf716cd1 ),
	VERT( 0x41099512, 0xbf984b69, 0xc11464c6 ),
	NORM( 0x3eb3e970, 0x3e97163f, 0xbf63753b ),
	VERT( 0x4098d7a5, 0x39b0800d, 0xc127cad1 ),
	NORM( 0x3eb6d7fe, 0xbc476871, 0xbf6f1958 ),
	VERT( 0x410f7b8e, 0x39af8472, 0xc108fb6a ),
	NORM( 0x3e9ebf9f, 0x35b4ba5c, 0xbf736247 ),
	VERT( 0x41202f2e, 0x39af6be5, 0xc104c4c7 ),
	NORM( 0x3f0d68e6, 0x34cf37d3, 0xbf55663a ),
	VERT( 0x413b8015, 0x39a2ade4, 0x4126b48c ),
	NORM( 0x3ede77df, 0xb59846b6, 0x3f66922a ),
	VERT( 0x41109234, 0x39a1eddf, 0x41330aad ),
	NORM( 0x3e78acd5, 0xb59946ea, 0x3f785628 ),
	VERT( 0x40b18dbd, 0x39a12bde, 0x413e0944 ),
	NORM( 0x3e24b62c, 0xb58668ed, 0x3f7caaa3 ),
	VERT( 0x41099511, 0x3f986166, 0xc11464c2 ),
	NORM( 0x3eb3e970, 0xbe9715ed, 0xbf637549 ),
	VERT( 0x40b6a936, 0x3f9e02af, 0xc1245b83 ),
	NORM( 0x3eab9785, 0xbce29c45, 0xbf711751 ),
	VERT( 0x40513958, 0x3fe46464, 0xc135780f ),
	NORM( 0x3e9eadd3, 0x3ccc1bce, 0xbf734fc8 ),
	VERT( 0x4110cf0a, 0x40154ef5, 0xc1169dd2 ),
	NORM( 0x3ef3517e, 0xbd47490b, 0xbf60e658 ),
	VERT( 0x4125b984, 0x4015d27e, 0xc0ff6db1 ),
	NORM( 0x3f2ca6ca, 0xbb7805a5, 0xbf3d03bb ),
	VERT( 0x40a89a8f, 0x404ba9f0, 0x4136db69 ),
	NORM( 0x3e713772, 0x3dbb1dd6, 0x3f77b1ad ),
	VERT( 0x410c7a69, 0x4054b1e5, 0x4129b932 ),
	NORM( 0x3e932183, 0x3e02eee8, 0x3f7301ed ),
	CnkV_VN_NF(FV_CONT|FW_START, 953),
	OffnbIdx(3286, 136),
	VERT( 0x407c40f0, 0xc193ab49, 0xbfda3e2a ),
	NORM( 0xbf458b13, 0xbe4e45e3, 0xbf1a7204 ),
	NFlagsW( 0, 0.037110 ),
	VERT( 0x40381ee7, 0xc18fa76d, 0xbec4687a ),
	NORM( 0xbf689a49, 0xbe5f54bd, 0xbeb65eab ),
	NFlagsW( 1, 0.089664 ),
	VERT( 0x4097334c, 0xc18f3df9, 0xc037cf6b ),
	NORM( 0xbf2d1a60, 0xbe7b5600, 0xbf31d446 ),
	NFlagsW( 2, 0.339576 ),
	VERT( 0x40194ca1, 0xc18d6e28, 0x40241829 ),
	NORM( 0xbf74dda7, 0xbe8eecc2, 0x3dad67ce ),
	NFlagsW( 3, 0.020555 ),
	VERT( 0x40cbff83, 0xc18c6626, 0xc0884ebf ),
	NORM( 0xbee715d8, 0xbe584812, 0xbf5df37b ),
	NFlagsW( 4, 0.178034 ),
	VERT( 0x406833d5, 0xc18c3eb5, 0xbfe45a40 ),
	NORM( 0xbf4a395a, 0xbe8667d5, 0xbf0ddd05 ),
	NFlagsW( 5, 0.843237 ),
	VERT( 0x4028f4b3, 0xc187d185, 0xbebf63fd ),
	NORM( 0xbf6a025c, 0xbe68579f, 0xbeac1116 ),
	NFlagsW( 6, 1.347556 ),
	VERT( 0x40bb941d, 0xc1872b8a, 0xc084ece3 ),
	NORM( 0xbf030dd8, 0xbe954ca4, 0xbf4eda6c ),
	NFlagsW( 7, 1.667889 ),
	VERT( 0x400ad407, 0xc186fa84, 0x4026e276 ),
	NORM( 0xbf759b41, 0xbe8cdf4e, 0x3d7e1866 ),
	NFlagsW( 8, 0.493000 ),
	VERT( 0x40fabc3a, 0xc186e96d, 0xc09aade2 ),
	NORM( 0xbddb4791, 0xbe767aa4, 0xbf76f4f6 ),
	NFlagsW( 9, 0.073098 ),
	VERT( 0x4048d024, 0xc186e42f, 0x40c38a08 ),
	NORM( 0xbf388300, 0xbeb8ccac, 0x3f17813a ),
	NFlagsW( 10, 0.027076 ),
	VERT( 0x40876d40, 0xc1868cda, 0xc03021aa ),
	NORM( 0xbf3496e9, 0xbe5d307f, 0xbf2cd119 ),
	NFlagsW( 11, 3.441959 ),
	VERT( 0x40f167bb, 0xc1844af9, 0xc09c741e ),
	NORM( 0xbe1cc896, 0xbea10b79, 0xbf6fd317 ),
	NFlagsW( 12, 0.456675 ),
	VERT( 0x404ab0e9, 0xc182c802, 0xbfc69140 ),
	NORM( 0xbf5187b5, 0xbe626df7, 0xbf07c0a3 ),
	NFlagsW( 13, 5.555765 ),
	VERT( 0x40be890a, 0xc1810d4b, 0x41006f51 ),
	NORM( 0xbe5f3e67, 0xbec71ef1, 0x3f6525ea ),
	NFlagsW( 14, 0.019985 ),
	VERT( 0x40359e1b, 0xc180f342, 0x40c64e4e ),
	NORM( 0xbf459dcf, 0xbea4104d, 0x3f0c8cfd ),
	NFlagsW( 15, 0.501763 ),
	VERT( 0x3ff8b758, 0xc18086f4, 0x4029acb5 ),
	NORM( 0xbf788c14, 0xbe707532, 0x3d41aeed ),
	NFlagsW( 16, 2.866604 ),
	VERT( 0x4019cafd, 0xc17ff763, 0xbeba6016 ),
	NORM( 0xbf6c37d4, 0xbe40e49c, 0xbeac2e33 ),
	NFlagsW( 17, 6.051313 ),
	VERT( 0x40a66cdb, 0xc17e0086, 0xc085cbc9 ),
	NORM( 0xbf13e194, 0xbec834e3, 0xbf376e07 ),
	NFlagsW( 18, 8.747067 ),
	VERT( 0x40e551c3, 0xc17da19e, 0xc0a393f9 ),
	NORM( 0xbe4eea7f, 0xbec5a6d2, 0xbf666ba0 ),
	NFlagsW( 19, 2.939488 ),
	VERT( 0x410f53b2, 0xc17bea99, 0xc0a488f3 ),
	NORM( 0x3e41f1aa, 0xbe97eef1, 0xbf6f9cd0 ),
	NFlagsW( 20, 0.103482 ),
	VERT( 0x407f1d82, 0xc17a93eb, 0xc036aa8a ),
	NORM( 0xbf3f30a2, 0xbe91becb, 0xbf19db63 ),
	NFlagsW( 21, 12.767259 ),
	VERT( 0x403c0048, 0xc175f7a8, 0xbfd24ee4 ),
	NORM( 0xbf5330fd, 0xbe4a3cd2, 0xbf0790b7 ),
	NFlagsW( 22, 14.958885 ),
	VERT( 0x40b5c453, 0xc174bc79, 0x4104886a ),
	NORM( 0xbe6c4d87, 0xbea78afd, 0x3f6a94d2 ),
	NFlagsW( 23, 0.516906 ),
	VERT( 0x402af118, 0xc173230a, 0x40cc37e9 ),
	NORM( 0xbf4a8f2e, 0xbe83c56c, 0x3f0e00bb ),
	NFlagsW( 24, 3.497408 ),
	VERT( 0x400ee855, 0xc1728d02, 0xbe94d195 ),
	NORM( 0xbf70cf2e, 0xbe28ff63, 0xbe97d051 ),
	NFlagsW( 25, 14.505248 ),
	VERT( 0x4098b407, 0xc16d1e4b, 0xc08cca5b ),
	NORM( 0xbf13eda0, 0xbede1c77, 0xbf30f96b ),
	NFlagsW( 26, 22.515718 ),
	VERT( 0x40debd2d, 0xc16cb112, 0xc0b2176c ),
	NORM( 0xbe47124f, 0xbee0dab7, 0xbf608ada ),
	NFlagsW( 27, 11.991478 ),
	VERT( 0x407fe31c, 0xc16bc5a1, 0xc05d35a4 ),
	NORM( 0xbf43964f, 0xbebf804f, 0xbf06961c ),
	NFlagsW( 28, 24.875797 ),
	VERT( 0x411088ed, 0xc1696928, 0xc0b0e9fe ),
	NORM( 0x3e81f4de, 0xbeab0712, 0xbf6861b1 ),
	NFlagsW( 29, 1.469319 ),
	VERT( 0x4028b279, 0xc16697e1, 0xbfbd79b4 ),
	NORM( 0xbf16e758, 0xbf38fd98, 0xbeb8da14 ),
	NFlagsW( 30, 27.484661 ),
	VERT( 0x40204378, 0xc1645f87, 0x40d22191 ),
	NORM( 0xbf1c36c3, 0xbf12062a, 0x3f0cbfa5 ),
	NFlagsW( 31, 11.354545 ),
	VERT( 0x40ae25c1, 0xc162e3bf, 0x410985cd ),
	NORM( 0xbe835766, 0xbe967803, 0x3f6bb7e6 ),
	NFlagsW( 32, 3.724925 ),
	VERT( 0x408cbb2e, 0xc160287b, 0xc09474a7 ),
	NORM( 0xbee4d39a, 0xbf1cb41f, 0xbf270073 ),
	NFlagsW( 33, 33.105309 ),
	VERT( 0x40171f65, 0xc15de35c, 0xc072153d ),
	NORM( 0xbc502375, 0xbf7536a9, 0xbe92e963 ),
	NFlagsW( 34, 25.607738 ),
	VERT( 0x40ddc080, 0xc15c072d, 0xc0c4d143 ),
	NORM( 0xbdfe918b, 0xbf12f34f, 0xbf4f3170 ),
	NFlagsW( 35, 22.249815 ),
	VERT( 0x41084130, 0xc15b43ab, 0x4108c534 ),
	NORM( 0x3e753935, 0xbe99f813, 0x3f6c53fe ),
	NFlagsW( 36, 0.239280 ),
	VERT( 0x410faf4d, 0xc15702f2, 0xc0c018fc ),
	NORM( 0x3ea08343, 0xbeca33ec, 0xbf5d12c6 ),
	NFlagsW( 37, 6.711924 ),
	VERT( 0x40147a51, 0xc1559196, 0x40f5ce54 ),
	NORM( 0xbdd8b1ae, 0xbf61a5c6, 0x3eebac66 ),
	NFlagsW( 38, 21.838211 ),
	VERT( 0x40822edd, 0xc154e8a4, 0xc0a42853 ),
	NORM( 0xbe141c8c, 0xbf4e3b61, 0xbf13152c ),
	NFlagsW( 39, 36.986931 ),
	VERT( 0x40a9d507, 0xc150c6ad, 0x410e8247 ),
	NORM( 0xbddba6dc, 0xbf26f1f0, 0x3f401fa6 ),
	NFlagsW( 40, 11.214567 ),
	VERT( 0x40dd7993, 0xc14f25f7, 0xc0da728e ),
	NORM( 0xbaadae08, 0xbf1547df, 0xbf4ff817 ),
	NFlagsW( 41, 25.962332 ),
	VERT( 0x410ee671, 0xc14a4e5c, 0xc0cbd8a5 ),
	NORM( 0x3ebbb37a, 0xbe904c3b, 0xbf62fc66 ),
	NFlagsW( 42, 11.756967 ),
	VERT( 0x412c1d34, 0xc1496ac1, 0xc0aa022b ),
	NORM( 0x3f0ce71c, 0xbe5df456, 0xbf4e67ed ),
	NFlagsW( 43, 0.273529 ),
	VERT( 0x40b0af84, 0xc146ee05, 0x411edcbf ),
	NORM( 0x3e3364a5, 0xbf2cbd11, 0x3f37899c ),
	NFlagsW( 44, 8.922531 ),
	VERT( 0x40d67a27, 0xc1439efe, 0xc0ec5fff ),
	NORM( 0x3e0ae8c3, 0xbf16bd99, 0xbf4bfa87 ),
	NFlagsW( 45, 29.854635 ),
	VERT( 0x410c337a, 0xc1432cb7, 0x410fd2d6 ),
	NORM( 0x3ea713f0, 0xbea58a57, 0x3f6363e9 ),
	NFlagsW( 46, 1.408775 ),
	VERT( 0x40107886, 0xc142a0bc, 0xc10c4d84 ),
	NORM( 0x3e36574c, 0xbf3cbd5b, 0xbf26d6d7 ),
	NFlagsW( 47, 13.647911 ),
	VERT( 0x40b94a13, 0xc13c1f5c, 0xc0f8c30f ),
	NORM( 0x3de9d402, 0xbf2a32b4, 0xbf3cfb79 ),
	NFlagsW( 48, 33.908550 ),
	VERT( 0x410da1a6, 0xc13647fb, 0xc0d5b364 ),
	NORM( 0x3ede88af, 0xbea4c0ab, 0xbf575624 ),
	NFlagsW( 49, 22.918694 ),
	VERT( 0x410f024c, 0xc12f60db, 0x4114f8b6 ),
	NORM( 0x3ecc1488, 0xbe902cdd, 0x3f5f71a6 ),
	NFlagsW( 50, 3.257378 ),
	VERT( 0x4127cdbe, 0xc129be6a, 0xc0bde2b2 ),
	NORM( 0x3f1128db, 0xbe9c72ca, 0xbf43d20b ),
	NFlagsW( 51, 7.521192 ),
	VERT( 0x40aac74a, 0xc11259ba, 0x41364381 ),
	NORM( 0x3e80cc65, 0xbe5373d4, 0x3f720ffd ),
	NFlagsW( 52, 86.337921 ),
	VERT( 0x404969cc, 0xc11191f3, 0xc11f56dc ),
	NORM( 0x3e664e5f, 0xbea93e4c, 0xbf6aa61f ),
	NFlagsW( 53, 70.376701 ),
	VERT( 0x41117ee4, 0xc10b7736, 0x41201daa ),
	NORM( 0x3edabb1b, 0xbe5f0f50, 0x3f60a52c ),
	NFlagsW( 54, 9.154230 ),
	VERT( 0x40c9402e, 0xc108fa85, 0xc115dc3a ),
	NORM( 0x3e9b4cf1, 0xbe97dcfe, 0xbf67d217 ),
	NFlagsW( 55, 45.762913 ),
	VERT( 0x4100d658, 0xc103bf12, 0xc10c3d3f ),
	NORM( 0x3ec0b31e, 0xbea04f98, 0xbf5f38b0 ),
	NFlagsW( 56, 38.686893 ),
	VERT( 0x411e9a4d, 0xc0f2f604, 0xc100b3e3 ),
	NORM( 0x3f04f9bd, 0xbe933cd5, 0xbf4dfe9e ),
	NFlagsW( 57, 21.738894 ),
	VERT( 0x4136b2a1, 0xc0daf0d8, 0xc0e8bd7f ),
	NORM( 0x3f2dd427, 0xbe031ded, 0xbf390de6 ),
	NFlagsW( 58, 3.880127 ),
	VERT( 0x41506180, 0xc0bb9771, 0xc090042b ),
	NORM( 0x3f199445, 0xbecb4555, 0xbf31d1b7 ),
	NFlagsW( 59, 0.013924 ),
	VERT( 0x409800a8, 0xc0afa3af, 0xc124e232 ),
	NORM( 0x3e960258, 0xbe0bafe4, 0xbf724305 ),
	NFlagsW( 60, 99.338463 ),
	VERT( 0x40ddcc51, 0xc0a0cac2, 0xc11a0fd6 ),
	NORM( 0x3e8d42b8, 0xbdead3d7, 0xbf744e80 ),
	NFlagsW( 61, 90.733978 ),
	VERT( 0x41190db5, 0xc09be466, 0xc10ff3e1 ),
	NORM( 0x3f0b034c, 0xbddbc2e5, 0xbf5534bc ),
	NFlagsW( 62, 67.359657 ),
	VERT( 0x412b3181, 0xc08923ba, 0xc0f54e67 ),
	NORM( 0x3f39cc37, 0x3b28ce0c, 0xbf301c2e ),
	NFlagsW( 63, 52.528488 ),
	VERT( 0x4145df33, 0xc087b1fe, 0xc0ba97d3 ),
	NORM( 0x3f052f48, 0xbe4f17d6, 0xbf546893 ),
	NFlagsW( 64, 0.931398 ),
	VERT( 0x413ef3eb, 0xc025dc5f, 0xc0cc1ac3 ),
	NORM( 0x3eb57aad, 0xbe807632, 0xbf6699cc ),
	NFlagsW( 65, 10.003572 ),
	VERT( 0x412b515d, 0xc012a857, 0xc0f722ec ),
	NORM( 0x3f2c5192, 0xbc79422e, 0xbf3d47cf ),
	NFlagsW( 66, 99.317032 ),
	VERT( 0x412b1bfe, 0x39af1e67, 0xc0f8de32 ),
	NORM( 0x3f310a1c, 0x3518b295, 0xbf38e9dc ),
	NFlagsW( 67, 97.664330 ),
	VERT( 0x413361d9, 0x39aebafa, 0xc0e4dab9 ),
	NORM( 0x3ed60e7f, 0x35cd1e16, 0xbf688d97 ),
	NFlagsW( 68, 57.254189 ),
	VERT( 0x412b515c, 0x4012b349, 0xc0f722dd ),
	NORM( 0x3f2c51e5, 0x3c794fa4, 0xbf3d4784 ),
	NFlagsW( 69, 99.320938 ),
	VERT( 0x413ef3e2, 0x4025e745, 0xc0cc1ab1 ),
	NORM( 0x3eb57b5e, 0x3e80758f, 0xbf6699c1 ),
	NFlagsW( 70, 10.021533 ),
	VERT( 0x4145df49, 0x4087b76e, 0xc0ba97c4 ),
	NORM( 0x3f052f15, 0x3e4f1880, 0xbf5468a8 ),
	NFlagsW( 71, 0.935078 ),
	VERT( 0x412b316f, 0x40892931, 0xc0f54e47 ),
	NORM( 0x3f39cc2e, 0xbb287534, 0xbf301c39 ),
	NFlagsW( 72, 52.762978 ),
	VERT( 0x41190db3, 0x409be9e6, 0xc10ff3d4 ),
	NORM( 0x3f0b0368, 0x3ddbc406, 0xbf5534a6 ),
	NFlagsW( 73, 67.554619 ),
	VERT( 0x40ddcc3c, 0x40a0d043, 0xc11a0fc8 ),
	NORM( 0x3e8d42cb, 0x3dead502, 0xbf744e78 ),
	NFlagsW( 74, 90.816895 ),
	VERT( 0x409800b2, 0x40afa930, 0xc124e223 ),
	NORM( 0x3e96025a, 0x3e0bb0a9, 0xbf7242ff ),
	NFlagsW( 75, 99.346397 ),
	VERT( 0x4150617d, 0x40bb9cdc, 0xc090040b ),
	NORM( 0x3f19943d, 0x3ecb45e5, 0xbf31d196 ),
	NFlagsW( 76, 0.013972 ),
	VERT( 0x4136b296, 0x40daf64f, 0xc0e8bd54 ),
	NORM( 0x3f2dd424, 0x3e031e6e, 0xbf390de2 ),
	NFlagsW( 77, 3.879817 ),
	VERT( 0x411e9a51, 0x40f2fb7e, 0xc100b3cf ),
	NORM( 0x3f04f9e4, 0x3e933cf7, 0xbf4dfe7e ),
	NFlagsW( 78, 21.735146 ),
	VERT( 0x4100d65c, 0x4103c1d1, 0xc10c3d29 ),
	NORM( 0x3ec0b2f7, 0x3ea04ff2, 0xbf5f38a7 ),
	NFlagsW( 79, 38.682213 ),
	VERT( 0x40c94025, 0x4108fd43, 0xc115dc22 ),
	NORM( 0x3e9b4cda, 0x3e97dd3f, 0xbf67d210 ),
	NFlagsW( 80, 45.759411 ),
	VERT( 0x41117ee8, 0x410b79c2, 0x41201dc1 ),
	NORM( 0x3edabb0a, 0x3e5f0e8a, 0x3f60a53c ),
	NFlagsW( 81, 9.150691 ),
	VERT( 0x4049699a, 0x411194b4, 0xc11f56c1 ),
	NORM( 0x3e664e38, 0x3ea93e92, 0xbf6aa615 ),
	NFlagsW( 82, 70.453934 ),
	VERT( 0x40aac741, 0x41125c41, 0x4136439b ),
	NORM( 0x3e80cc57, 0x3e537317, 0x3f721009 ),
	NFlagsW( 83, 86.241653 ),
	VERT( 0x4127cdb9, 0x4129c122, 0xc0bde277 ),
	NORM( 0x3f1128d0, 0x3e9c731b, 0xbf43d203 ),
	NFlagsW( 84, 7.517663 ),
	VERT( 0x410f0257, 0x412f636a, 0x4114f8d3 ),
	NORM( 0x3ecc148b, 0x3e902c7b, 0x3f5f71b5 ),
	NFlagsW( 85, 3.254525 ),
	VERT( 0x410da1a0, 0x41364ab4, 0xc0d5b325 ),
	NORM( 0x3ede88bc, 0x3ea4c101, 0xbf575611 ),
	NFlagsW( 86, 22.912189 ),
	VERT( 0x40b94a37, 0x413c2219, 0xc0f8c2d7 ),
	NORM( 0x3de9d4b4, 0x3f2a32bc, 0xbf3cfb6e ),
	NFlagsW( 87, 33.901817 ),
	VERT( 0x4010788d, 0x4142a37a, 0xc10c4d62 ),
	NORM( 0x3e365709, 0x3f3cbd7b, 0xbf26d6b8 ),
	NFlagsW( 88, 13.732097 ),
	VERT( 0x410c3384, 0x41432f45, 0x410fd2f7 ),
	NORM( 0x3ea713fb, 0x3ea58a0f, 0x3f6363f4 ),
	NFlagsW( 89, 1.407174 ),
	VERT( 0x40d67a2a, 0x4143a1b9, 0xc0ec5fbd ),
	NORM( 0x3e0ae917, 0x3f16bdbc, 0xbf4bfa6a ),
	NFlagsW( 90, 29.847511 ),
	VERT( 0x40b0af88, 0x4146f090, 0x411edce2 ),
	NORM( 0x3e336486, 0x3f2cbcf1, 0x3f3789be ),
	NFlagsW( 91, 8.878261 ),
	VERT( 0x412c1d26, 0x41496d78, 0xc0aa01e1 ),
	NORM( 0x3f0ce6fe, 0x3e5df4c2, 0xbf4e67fa ),
	NFlagsW( 92, 0.273931 ),
	VERT( 0x410ee66a, 0x414a5113, 0xc0cbd85e ),
	NORM( 0x3ebbb3a0, 0x3e904cbb, 0xbf62fc4a ),
	NFlagsW( 93, 11.751173 ),
	VERT( 0x40dd7996, 0x414f28b2, 0xc0da7247 ),
	NORM( 0xbaad8e5d, 0x3f154808, 0xbf4ff7f9 ),
	NFlagsW( 94, 25.954115 ),
	VERT( 0x40a9d509, 0x4150c93b, 0x410e826b ),
	NORM( 0xbddba6f3, 0x3f26f1c5, 0x3f401fca ),
	NFlagsW( 95, 11.188084 ),
	VERT( 0x40822edf, 0x4154eb57, 0xc0a4280a ),
	NORM( 0xbe141ce9, 0x3f4e3b64, 0xbf131521 ),
	NFlagsW( 96, 36.980145 ),
	VERT( 0x40147a36, 0x41559425, 0x40f5ce9f ),
	NORM( 0xbdd8b1f9, 0x3f61a5ae, 0x3eebacbc ),
	NFlagsW( 97, 21.645292 ),
	VERT( 0x410faf3e, 0x415705a9, 0xc0c018ae ),
	NORM( 0x3ea08325, 0x3eca3488, 0xbf5d12a8 ),
	NFlagsW( 98, 6.707647 ),
	VERT( 0x41084130, 0x415b463d, 0x4108c559 ),
	NORM( 0x3e753926, 0x3e99f7cf, 0x3f6c540a ),
	NFlagsW( 99, 0.238746 ),
	VERT( 0x40ddc072, 0x415c09e3, 0xc0c4d0f6 ),
	NORM( 0xbdfe91fb, 0x3f12f371, 0xbf4f3157 ),
	NFlagsW( 100, 22.239899 ),
	VERT( 0x40171f49, 0x415de60c, 0xc07214a1 ),
	NORM( 0xbc50239f, 0x3f7536b2, 0xbe92e920 ),
	NFlagsW( 101, 25.600552 ),
	VERT( 0x408cbb00, 0x41602b2c, 0xc0947453 ),
	NORM( 0xbee4d3a2, 0x3f1cb44a, 0xbf270047 ),
	NFlagsW( 102, 33.096714 ),
	VERT( 0x40ae25c3, 0x4162e64d, 0x410985f5 ),
	NORM( 0xbe835751, 0x3e96779d, 0x3f6bb7f9 ),
	NFlagsW( 103, 3.716076 ),
	VERT( 0x4020435c, 0x4164621b, 0x40d221e2 ),
	NORM( 0xbf1c36ca, 0x3f120602, 0x3f0cbfc7 ),
	NFlagsW( 104, 11.309971 ),
	VERT( 0x4028b27c, 0x41669a8c, 0xbfbd787b ),
	NORM( 0xbf16e777, 0x3f38fd64, 0xbeb8da80 ),
	NFlagsW( 105, 27.475060 ),
	VERT( 0x411088de, 0x41696bdd, 0xc0b0e9a9 ),
	NORM( 0x3e81f4d9, 0x3eab076c, 0xbf6861a2 ),
	NFlagsW( 106, 1.467635 ),
	VERT( 0x407fe31e, 0x416bc850, 0xc05d3503 ),
	NORM( 0xbf43963c, 0x3ebf8130, 0xbf0695e6 ),
	NFlagsW( 107, 24.865818 ),
	VERT( 0x40debd2e, 0x416cb3c8, 0xc0b2171c ),
	NORM( 0xbe4711ef, 0x3ee0db0e, 0xbf608aca ),
	NFlagsW( 108, 11.982054 ),
	VERT( 0x4098b3f8, 0x416d20ff, 0xc08cca07 ),
	NORM( 0xbf13ed9e, 0x3ede1d14, 0xbf30f93b ),
	NFlagsW( 109, 22.505247 ),
	VERT( 0x400ee816, 0x41728fa8, 0xbe94cc1b ),
	NORM( 0xbf70cf20, 0x3e290111, 0xbe97d033 ),
	NFlagsW( 110, 14.496674 ),
	VERT( 0x402af0f9, 0x41732598, 0x40cc383d ),
	NORM( 0xbf4a8f15, 0x3e83c607, 0x3f0e00ba ),
	NFlagsW( 111, 3.486959 ),
	VERT( 0x40b5c454, 0x4174bf0a, 0x41048896 ),
	NORM( 0xbe6c4d5d, 0x3ea78ac2, 0x3f6a94e0 ),
	NFlagsW( 112, 0.515249 ),
	VERT( 0x403c0029, 0x4175fa53, 0xbfd24d8a ),
	NORM( 0xbf5330ee, 0x3e4a3d1c, 0xbf0790c8 ),
	NFlagsW( 113, 14.950045 ),
	VERT( 0x407f1d62, 0x417a9699, 0xc036a9db ),
	NORM( 0xbf3f30a3, 0x3e91bef9, 0xbf19db56 ),
	NFlagsW( 114, 12.759127 ),
	VERT( 0x410f53a2, 0x417bed4e, 0xc0a48897 ),
	NORM( 0x3e41f0df, 0x3e97eeb3, 0xbf6f9ce3 ),
	NFlagsW( 115, 0.103236 ),
	VERT( 0x40e551d3, 0x417da452, 0xc0a393a5 ),
	NORM( 0xbe4ee9df, 0x3ec5a726, 0xbf666b98 ),
	NFlagsW( 116, 2.935373 ),
	VERT( 0x40a66ccb, 0x417e0337, 0xc085cb70 ),
	NORM( 0xbf13e18e, 0x3ec83579, 0xbf376de4 ),
	NFlagsW( 117, 8.739636 ),
	VERT( 0x4019cafc, 0x417ffa08, 0xbeba5a9a ),
	NORM( 0xbf6c37c1, 0x3e40e6bd, 0xbeac2e03 ),
	NFlagsW( 118, 6.045695 ),
	VERT( 0x3ff8b757, 0x41808843, 0x4029ad67 ),
	NORM( 0xbf788c07, 0x3e707602, 0x3d41afb0 ),
	NFlagsW( 119, 2.862961 ),
	VERT( 0x40359e3a, 0x4180f48d, 0x40c64ea6 ),
	NORM( 0xbf459dbd, 0x3ea40f95, 0x3f0c8d4b ),
	NFlagsW( 120, 0.500573 ),
	VERT( 0x40be88f9, 0x41810e92, 0x41006f7c ),
	NORM( 0xbe5f3f0a, 0x3ec71ed5, 0x3f6525e7 ),
	NFlagsW( 121, 0.019845 ),
	VERT( 0x404ab0e7, 0x4182c957, 0xbfc68fd9 ),
	NORM( 0xbf5187ac, 0x3e626e6f, 0xbf07c0a2 ),
	NFlagsW( 122, 5.550579 ),
	VERT( 0x40f167aa, 0x41844c53, 0xc09c73c0 ),
	NORM( 0xbe1cc893, 0x3ea10be9, 0xbf6fd304 ),
	NFlagsW( 123, 0.455585 ),
	VERT( 0x40876d3f, 0x41868e2f, 0xc03020f1 ),
	NORM( 0xbf3496e3, 0x3e5d3066, 0xbf2cd11f ),
	NFlagsW( 124, 3.437929 ),
	VERT( 0x4048cfe2, 0x4186e57a, 0x40c38a68 ),
	NORM( 0xbf38832a, 0x3eb8cbf4, 0x3f17813f ),
	NFlagsW( 125, 0.026980 ),
	VERT( 0x40fabc19, 0x4186eac6, 0xc09aad80 ),
	NORM( 0xbddb481e, 0x3e767b56, 0xbf76f4ea ),
	NFlagsW( 126, 0.072823 ),
	VERT( 0x400ad3e5, 0x4186fbd4, 0x4026e336 ),
	NORM( 0xbf759b53, 0x3e8cded5, 0x3d7e188c ),
	NFlagsW( 127, 0.492181 ),
	VERT( 0x40bb942b, 0x41872ce3, 0xc084ec89 ),
	NORM( 0xbf030dce, 0x3e954c9a, 0xbf4eda75 ),
	NFlagsW( 128, 1.665121 ),
	VERT( 0x4028f4b0, 0x4187d2d8, 0xbebf5e28 ),
	NORM( 0xbf6a025f, 0x3e6857c4, 0xbeac10f1 ),
	NFlagsW( 129, 1.345474 ),
	VERT( 0x406833b1, 0x418c400c, 0xbfe458b6 ),
	NORM( 0xbf4a396f, 0x3e8667c3, 0xbf0ddced ),
	NFlagsW( 130, 0.841688 ),
	VERT( 0x40cbff71, 0x418c677e, 0xc0884e5c ),
	NORM( 0xbee715ec, 0x3e58485e, 0xbf5df371 ),
	NFlagsW( 131, 0.177440 ),
	VERT( 0x40194c7d, 0x418d6f77, 0x402418ef ),
	NORM( 0xbf74ddad, 0x3e8eeca0, 0x3dad67d5 ),
	NFlagsW( 132, 0.020476 ),
	VERT( 0x4097332a, 0x418f3f50, 0xc037ce9d ),
	NORM( 0xbf2d1a70, 0x3e7b5626, 0xbf31d433 ),
	NFlagsW( 133, 0.338679 ),
	VERT( 0x40381ee3, 0x418fa8c0, 0xbec46255 ),
	NORM( 0xbf689a4c, 0x3e5f548f, 0xbeb65eb1 ),
	NFlagsW( 134, 0.089357 ),
	VERT( 0x407c40cb, 0x4193ac9f, 0xbfda3c8a ),
	NORM( 0xbf458b3d, 0x3e4e48ed, 0xbf1a718e ),
	NFlagsW( 135, 0.036938 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 99),
	OffnbIdx(0, 14),
	VERT( 0x3fe378fe, 0xc17325c0, 0x402b21f6 ),
	NORM( 0xbf7e78f8, 0xbdd6812a, 0x3cf974cf ),
	NFlagsW( 3606, 10.047251 ),
	VERT( 0x4004064b, 0xc165227d, 0xbe5e8787 ),
	NORM( 0xbf237207, 0xbf42a746, 0xbdf42e86 ),
	NFlagsW( 3607, 25.422501 ),
	VERT( 0x3fe2cf7f, 0xc164d2b4, 0x402c2807 ),
	NORM( 0xbf447d2a, 0xbf23f9a2, 0x3ccb053f ),
	NFlagsW( 3608, 22.549898 ),
	VERT( 0x3f89fc23, 0xc163dcdf, 0xbfcbc403 ),
	NORM( 0x3ce0af46, 0xbf7fbea1, 0xbd1055af ),
	NFlagsW( 3609, 13.047038 ),
	VERT( 0x3f8c8526, 0xc160cd76, 0x40a9c119 ),
	NORM( 0xbdfcf903, 0xbf7c3b00, 0x3df21b44 ),
	NFlagsW( 3610, 12.331869 ),
	VERT( 0x3f3104b3, 0xc15fe9cf, 0x4035a4e8 ),
	NORM( 0xbdae4c1c, 0xbf7ec394, 0x3d483f9b ),
	NFlagsW( 3611, 11.480620 ),
	VERT( 0x3f52b85a, 0xc14dfbde, 0xc0e19c9c ),
	NORM( 0x3e2ce820, 0xbf74af02, 0xbe767dcd ),
	NFlagsW( 3614, 2.933862 ),
	VERT( 0x3f52b773, 0x414dfe94, 0xc0e19c51 ),
	NORM( 0x3e2ce82c, 0x3f74af11, 0xbe767cce ),
	NFlagsW( 3621, 2.950395 ),
	VERT( 0x3f3104c0, 0x415fec69, 0x4035a580 ),
	NORM( 0xbdae4cd8, 0x3f7ec390, 0x3d484293 ),
	NFlagsW( 3624, 11.462053 ),
	VERT( 0x3f8c852d, 0x4160d00c, 0x40a9c166 ),
	NORM( 0xbdfcf98e, 0x3f7c3afa, 0x3df21c50 ),
	NFlagsW( 3625, 12.262400 ),
	VERT( 0x3f89fc67, 0x4163df8a, 0xbfcbc2d6 ),
	NORM( 0x3ce0ad6a, 0x3f7fbea3, 0xbd105389 ),
	NFlagsW( 3626, 13.050326 ),
	VERT( 0x3fe2cf85, 0x4164d552, 0x402c28a5 ),
	NORM( 0xbf447d98, 0x3f23f91d, 0x3ccb08e2 ),
	NFlagsW( 3627, 22.529222 ),
	VERT( 0x4004060e, 0x41652522, 0xbe5e7d2c ),
	NORM( 0xbf237204, 0x3f42a752, 0xbdf42cfd ),
	NFlagsW( 3628, 25.414320 ),
	VERT( 0x3fe37881, 0x41732860, 0x402b22a4 ),
	NORM( 0xbf7e78f8, 0x3dd68152, 0x3cf975d0 ),
	NFlagsW( 3629, 10.036021 ),
	CnkV_VN_NF(FV_CONT|FW_END, 43),
	OffnbIdx(0, 6),
	VERT( 0x401d6c41, 0xc0bc3b7c, 0xc12ea25f ),
	NORM( 0x3e909839, 0xbe258b5f, 0xbf721114 ),
	NFlagsW( 3615, 99.977737 ),
	VERT( 0x3f90c6e0, 0xc08ccab7, 0x414668eb ),
	NORM( 0x3cae04b2, 0x3c419d48, 0x3f7feca3 ),
	NFlagsW( 3616, 1.608636 ),
	VERT( 0x3fb6e5ea, 0x39b11ae8, 0xc13bbabe ),
	NORM( 0x3e539fb8, 0xba18ba8b, 0xbf7a7932 ),
	NFlagsW( 3617, 52.921856 ),
	VERT( 0x402f0b7b, 0x39a0f7b2, 0x413d6e22 ),
	NORM( 0xbd380a0f, 0xb56b58df, 0x3f7fbdd0 ),
	NFlagsW( 3618, 99.977997 ),
	VERT( 0x3f90c6c9, 0x408ccfba, 0x414668f4 ),
	NORM( 0x3cae050e, 0xbc41a833, 0x3f7feca3 ),
	NFlagsW( 3619, 1.608056 ),
	VERT( 0x401d6c14, 0x40bc4101, 0xc12ea24e ),
	NORM( 0x3e909818, 0x3e258c21, 0xbf721110 ),
	NFlagsW( 3620, 99.977753 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_Spine3[]
START
VList      vertex_kihon11_Bip01_Bip01_Spine3,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_Spine3[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_Spine3,
OPosition  ( 10.721880F, -0.000001F,  0.008357F ),
OAngle     ( -0.000001F, -0.500021F, -0.000006F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_Neck,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_Spine2[]
START
	CnkV_VN(FV_CONT, 499),
	OffnbIdx(892, 83),
	VERT( 0x40c27ebc, 0xc16e8582, 0xbfd54ae7 ),
	NORM( 0x3d26ea27, 0xbf7f7fc9, 0x3d42385e ),
	VERT( 0x40cbfec6, 0xc16cb435, 0xc0bb350b ),
	NORM( 0x3e293335, 0xbf6a490a, 0xbebc3976 ),
	VERT( 0x400e6e94, 0xc16c22a8, 0xc0e21442 ),
	NORM( 0xbcb7456d, 0xbf687802, 0xbed61dd0 ),
	VERT( 0x40cbde18, 0xc16941ff, 0x401634d8 ),
	NORM( 0xbcc7292a, 0xbf7ce2fe, 0x3e1d4174 ),
	VERT( 0x40d7de12, 0xc15bb0d7, 0x40d1899b ),
	NORM( 0xbe03f0d8, 0xbf755b3d, 0x3e825b4a ),
	VERT( 0x40f594d9, 0xc1578fa5, 0xc1080de4 ),
	NORM( 0xba6c5d09, 0xbf67abaf, 0xbed9d9a0 ),
	VERT( 0x40e541a5, 0xc15730bc, 0xc0de5e65 ),
	NORM( 0x3dbbdc08, 0xbf67aa30, 0xbed4c0df ),
	VERT( 0x400bfcd8, 0xc14b93e0, 0xc1164ee1 ),
	NORM( 0x3dbaf0c6, 0xbf295ec4, 0xbf3e890a ),
	VERT( 0x4108bc05, 0xc14b5d43, 0x41214679 ),
	NORM( 0xbe303cd8, 0xbf450245, 0x3f1d6c83 ),
	VERT( 0x40a92c3b, 0xc149eb0c, 0xc104b842 ),
	NORM( 0x3c587d57, 0xbf416ac6, 0xbf27ac6a ),
	VERT( 0x40f807ee, 0xc13fc5fc, 0xc11c7739 ),
	NORM( 0x3e07aea6, 0xbf1f0454, 0xbf45bc17 ),
	VERT( 0x40bd2924, 0xc13dd7b7, 0xc11f2db5 ),
	NORM( 0xbe7fea0a, 0xbf1ea285, 0xbf3e7797 ),
	VERT( 0x413a2fa5, 0xc13ba837, 0x4135979f ),
	NORM( 0x3d4a28de, 0xbf18da54, 0x3f4cf81c ),
	VERT( 0x41283378, 0xc13a427a, 0xc1151bd8 ),
	NORM( 0x3e1ba4de, 0xbf1c24fa, 0xbf4719a0 ),
	VERT( 0x4096281d, 0xc139a4da, 0xc11649f8 ),
	NORM( 0xbd548cbd, 0xbf1a626e, 0xbf4bc6d8 ),
	VERT( 0x4100fef2, 0xc12aa581, 0xc12c466d ),
	NORM( 0xbc92a3c3, 0xbf1e4590, 0xbf4928c9 ),
	VERT( 0x4102f72b, 0xc1244857, 0xc13241b9 ),
	NORM( 0xbc478634, 0xbf1ce3d4, 0xbf4a4448 ),
	VERT( 0x41135aa6, 0xc11f5c51, 0xc1306b73 ),
	NORM( 0x3ec73bd6, 0xbecbed7a, 0xbf54a3e4 ),
	VERT( 0x410b12c9, 0xc11efabc, 0xc13406e0 ),
	NORM( 0x3e987468, 0xbead45ae, 0xbf64841a ),
	VERT( 0x4103e099, 0xc11dd72d, 0xc1351e42 ),
	NORM( 0x3d7c5e76, 0xbeaeffad, 0xbf701093 ),
	VERT( 0x40fc8b97, 0xc11d67b7, 0xc1357963 ),
	NORM( 0xbe5c29b8, 0xbea312ea, 0xbf6c57ef ),
	VERT( 0x40ee35ed, 0xc11c34a9, 0xc1334a48 ),
	NORM( 0xbe350858, 0xbea9def4, 0xbf6d3881 ),
	VERT( 0x410e90fa, 0xc11c0a38, 0x413fe55b ),
	NORM( 0xbe67f888, 0xbe870b22, 0x3f700749 ),
	VERT( 0x3fd895cc, 0xc11b1e26, 0xc13539bd ),
	NORM( 0x3e3e7d71, 0xbebc7af6, 0xbf6935c0 ),
	VERT( 0x41292e2d, 0xc118e778, 0xc128563d ),
	NORM( 0x3e7b9ec2, 0xbec90f2e, 0xbf62e046 ),
	VERT( 0x40d977cc, 0xc118e2b6, 0x412d775d ),
	NORM( 0xbecaf00c, 0xbe98fb64, 0x3f5e3ca0 ),
	VERT( 0x40b9709a, 0xc117b221, 0xc1312668 ),
	NORM( 0xbe8e0e81, 0xbe8b0a7b, 0xbf6beb53 ),
	VERT( 0x4103ed28, 0xc116cc42, 0xc137226c ),
	NORM( 0x3dcaa47f, 0xbd66a2d1, 0xbf7e55e9 ),
	VERT( 0x408fc70d, 0xc1169358, 0xc127eb89 ),
	NORM( 0xbd076feb, 0xbea11770, 0xbf72d9eb ),
	VERT( 0x4102b456, 0xc10ccf5e, 0xc1373242 ),
	NORM( 0x3dd2867c, 0xbdc19896, 0xbf7d7dcb ),
	VERT( 0x4120c1a1, 0xc0c17c3e, 0xc13de8b1 ),
	NORM( 0x3dd46bcc, 0xbe3c41ed, 0xbf7a3b50 ),
	VERT( 0x40fb2443, 0xc0bdc3cc, 0xc13dd251 ),
	NORM( 0xbd0ac3af, 0xbdbe9250, 0xbf7ebddf ),
	VERT( 0x40e5d16b, 0xc0b6c447, 0x413ad1f2 ),
	NORM( 0xbe7c1914, 0xbd29b5d8, 0x3f77e4d9 ),
	VERT( 0x40c8ab07, 0xc0ac04d8, 0xc13b917a ),
	NORM( 0xbe37f05c, 0xbd4a4329, 0xbf7b84c2 ),
	VERT( 0x4094b3aa, 0xc09ce455, 0xc135a8e8 ),
	NORM( 0x3d36762f, 0xbde7e9b2, 0xbf7e18fc ),
	VERT( 0x410a5ebd, 0xc00b0252, 0x413cc480 ),
	NORM( 0xbe05942a, 0x3de4fffb, 0x3f7c3175 ),
	VERT( 0x412d4cf8, 0xbff77060, 0xc140a7bb ),
	NORM( 0x3da505b7, 0xbc9e6888, 0xbf7f1e9b ),
	VERT( 0x40e979a7, 0xbfd9dece, 0xc13ab9c1 ),
	NORM( 0xbd160d62, 0xbc51e9b7, 0xbf7fcea1 ),
	VERT( 0x4040341a, 0xbf6496fa, 0xc1418331 ),
	NORM( 0x3e9cc375, 0xbe5a3022, 0xbf6d85c0 ),
	VERT( 0x3f82d6a3, 0x39b16d84, 0xc155559d ),
	NORM( 0x3e897f48, 0x359c344d, 0xbf769899 ),
	VERT( 0x40a37c59, 0x39b06bcd, 0xc13ae618 ),
	NORM( 0x3e044877, 0x35b8c8f2, 0xbf7ddadd ),
	VERT( 0x40f09828, 0x39b08616, 0xc13b93c8 ),
	NORM( 0xbd5d28e4, 0xbbbb2907, 0xbf7f9f55 ),
	VERT( 0x411ed7d9, 0x39b0b834, 0xc13e6e0b ),
	NORM( 0xbcc8783c, 0xbc0b3f02, 0xbf7fea02 ),
	VERT( 0x411d8b5a, 0x39a0ae2d, 0x41382896 ),
	NORM( 0xbdd0c510, 0xb59e5c18, 0x3f7eaa9b ),
	VERT( 0x40403418, 0x3f64c323, 0xc141832f ),
	NORM( 0x3e9cc379, 0x3e5a30c7, 0xbf6d85b6 ),
	VERT( 0x40e979a6, 0x3fd9f4de, 0xc13ab9bc ),
	NORM( 0xbd2909e2, 0x3c864644, 0xbf7fbf5b ),
	VERT( 0x412d4cf0, 0x3ff78678, 0xc140a7b2 ),
	NORM( 0x3daa54e5, 0x3cac71e3, 0xbf7f0e5f ),
	VERT( 0x410a5ebc, 0x400b0c5a, 0x413cc487 ),
	NORM( 0xbe0593fa, 0xbde50146, 0x3f7c3173 ),
	VERT( 0x4094b3a7, 0x409ce9d7, 0xc135a8d9 ),
	NORM( 0x3d36763c, 0x3de7eb14, 0xbf7e18f6 ),
	VERT( 0x40c8ab04, 0x40ac0a5c, 0xc13b916b ),
	NORM( 0xbe37f06e, 0x3d4a45c8, 0xbf7b84c0 ),
	VERT( 0x40e5d167, 0x40b6c94b, 0x413ad202 ),
	NORM( 0xbe7c18f9, 0x3d29b379, 0x3f77e4dd ),
	VERT( 0x40fb243f, 0x40bdc950, 0xc13dd240 ),
	NORM( 0xbd0ac3b9, 0x3dbe93ae, 0xbf7ebddb ),
	VERT( 0x4120c19f, 0x40c181c4, 0xc13de8a0 ),
	NORM( 0x3dd46c0d, 0x3e3c4283, 0xbf7a3b49 ),
	VERT( 0x4102b453, 0x410cd21e, 0xc1373229 ),
	NORM( 0x3dd28671, 0x3dc19a18, 0xbf7d7dc5 ),
	VERT( 0x408fc708, 0x41169616, 0xc127eb6d ),
	NORM( 0xbd077048, 0x3ea117ba, 0xbf72d9de ),
	VERT( 0x4103ed26, 0x4116cf04, 0xc1372251 ),
	NORM( 0x3dcaa347, 0x3d66a593, 0xbf7e55ea ),
	VERT( 0x40b97094, 0x4117b4e0, 0xc131264e ),
	NORM( 0xbe8e0e8a, 0x3e8b0acd, 0xbf6beb46 ),
	VERT( 0x40d977c6, 0x4118e53a, 0x412d7776 ),
	NORM( 0xbecaf012, 0x3e98fb16, 0x3f5e3cac ),
	VERT( 0x41292e2a, 0x4118ea36, 0xc1285623 ),
	NORM( 0x3e7b9edb, 0x3ec90f74, 0xbf62e033 ),
	VERT( 0x3fd895b4, 0x411b20e7, 0xc13539a2 ),
	NORM( 0x3e3e7d6d, 0x3ebc7b46, 0xbf6935b1 ),
	VERT( 0x410e90f7, 0x411c0cba, 0x413fe577 ),
	NORM( 0xbe67f88d, 0x3e870acb, 0x3f700756 ),
	VERT( 0x40ee35e8, 0x411c376a, 0xc1334a2d ),
	NORM( 0xbe350858, 0x3ea9df48, 0xbf6d3872 ),
	VERT( 0x40fc8b91, 0x411d6a78, 0xc1357949 ),
	NORM( 0xbe5c2a12, 0x3ea312ef, 0xbf6c57e9 ),
	VERT( 0x4103e096, 0x411dd9ed, 0xc1351e27 ),
	NORM( 0x3d7c5dd8, 0x3eaeffa6, 0xbf701093 ),
	VERT( 0x410b12c6, 0x411efd7d, 0xc13406c6 ),
	NORM( 0x3e98746f, 0x3ead45e5, 0xbf64840f ),
	VERT( 0x41135aa2, 0x411f5f11, 0xc1306b58 ),
	NORM( 0x3ec73bdc, 0x3ecbedbc, 0xbf54a3d3 ),
	VERT( 0x4102f727, 0x41244b17, 0xc132419e ),
	NORM( 0xbc478df4, 0x3f1ce40d, 0xbf4a441b ),
	VERT( 0x4100feef, 0x412aa83e, 0xc12c4650 ),
	NORM( 0xbc92a4a5, 0x3f1e45af, 0xbf4928af ),
	VERT( 0x40962816, 0x4139a796, 0xc11649d9 ),
	NORM( 0xbd548c83, 0x3f1a6290, 0xbf4bc6be ),
	VERT( 0x41283374, 0x413a4536, 0xc1151bb9 ),
	NORM( 0x3e1ba4e0, 0x3f1c251b, 0xbf471986 ),
	VERT( 0x413a2fa1, 0x413baabb, 0x413597bf ),
	NORM( 0x3d4a28b0, 0x3f18da33, 0x3f4cf835 ),
	VERT( 0x40bd291d, 0x413dda73, 0xc11f2d93 ),
	NORM( 0xbe7fea09, 0x3f1ea2a5, 0xbf3e777d ),
	VERT( 0x40f807e7, 0x413fc8ba, 0xc11c7719 ),
	NORM( 0x3e07ae82, 0x3f1f0477, 0xbf45bbfc ),
	VERT( 0x40a92c33, 0x4149edc4, 0xc104b820 ),
	NORM( 0x3c587d15, 0x3f416ae3, 0xbf27ac47 ),
	VERT( 0x4108bc01, 0x414b5fca, 0x4121469c ),
	NORM( 0xbe303cd9, 0x3f45022a, 0x3f1d6ca5 ),
	VERT( 0x400bfcc8, 0x414b969a, 0xc1164ebe ),
	NORM( 0x3dbaf0b6, 0x3f295ee4, 0xbf3e88ed ),
	VERT( 0x40e5419d, 0x41573371, 0xc0de5e1a ),
	NORM( 0x3dbbdbe4, 0x3f67aa42, 0xbed4c091 ),
	VERT( 0x40f594d1, 0x4157925f, 0xc1080dbe ),
	NORM( 0xba6c6e46, 0x3f67abc3, 0xbed9d94c ),
	VERT( 0x40d7de0a, 0x415bb367, 0x40d189e7 ),
	NORM( 0xbe03f0cf, 0x3f755b33, 0x3e825b9a ),
	VERT( 0x40cbde0f, 0x41694499, 0x4016357a ),
	NORM( 0xbcc729cb, 0x3f7ce2f7, 0x3e1d4228 ),
	VERT( 0x400e6e82, 0x416c255d, 0xc0e213f0 ),
	NORM( 0xbcb745b1, 0x3f687812, 0xbed61d85 ),
	VERT( 0x40cbfebd, 0x416cb6e6, 0xc0bb34b9 ),
	NORM( 0x3e293323, 0x3f6a4919, 0xbebc392a ),
	VERT( 0x40c27eb3, 0x416e8828, 0xbfd5499e ),
	NORM( 0x3d26e9b1, 0x3f7f7fc7, 0x3d423b28 ),
	CnkV_VN_NF(FV_CONT|FW_START, 169),
	OffnbIdx(3606, 24),
	VERT( 0x41479c1c, 0xc17325c1, 0x402ca750 ),
	NORM( 0xbf7e87e8, 0xbdd6811b, 0x3cb261f4 ),
	NFlagsW( 0, 0.064912 ),
	VERT( 0x414c95dd, 0xc165227d, 0xbe438751 ),
	NORM( 0xbf232c40, 0xbf42a745, 0xbdff9558 ),
	NFlagsW( 1, 0.016456 ),
	VERT( 0x4147865a, 0xc164d2b5, 0x402daca1 ),
	NORM( 0xbf44896d, 0xbf23f9a1, 0x3c942427 ),
	NFlagsW( 2, 0.241359 ),
	VERT( 0x413d0518, 0xc163dce0, 0xbfc97be9 ),
	NORM( 0x3ce331c5, 0xbf7fbea1, 0xbd0f5948 ),
	NFlagsW( 3, 9.261169 ),
	VERT( 0x413c5fb1, 0xc160cd77, 0x40aa5263 ),
	NORM( 0xbdff137e, 0xbf7c3b00, 0x3defe3c0 ),
	NFlagsW( 4, 28.690952 ),
	VERT( 0x41363793, 0xc15fe9cf, 0x40368eee ),
	NORM( 0xbdaf2a27, 0xbf7ec394, 0x3d4532e0 ),
	NFlagsW( 5, 55.339062 ),
	VERT( 0x4124ee7c, 0xc1566ce6, 0xc0af2888 ),
	NORM( 0x3e58e8fb, 0xbf5f7bd3, 0xbee0f2ba ),
	NFlagsW( 6, 96.441940 ),
	VERT( 0x41264280, 0xc1513174, 0xc0f4d279 ),
	NORM( 0x3e45e8fd, 0xbf68fc3e, 0xbebbadb9 ),
	NFlagsW( 7, 99.775009 ),
	VERT( 0x4139b441, 0xc14dfbdf, 0xc0e11b1a ),
	NORM( 0x3e2f0d19, 0xbf74af03, 0xbe74f91b ),
	NFlagsW( 8, 36.543869 ),
	VERT( 0x41546dac, 0xc0bc3b7e, 0xc12e2683 ),
	NORM( 0x3e94d068, 0xbe258b62, 0xbf716d33 ),
	NFlagsW( 9, 0.022263 ),
	VERT( 0x413bea44, 0xc08ccab8, 0x4146b1a5 ),
	NORM( 0x3c4d1591, 0x3c419d53, 0x3f7ff64b ),
	NFlagsW( 10, 98.391365 ),
	VERT( 0x41440cc5, 0x39b0a303, 0xc13b639b ),
	NORM( 0x3e5c5bf9, 0xba18bceb, 0xbf7a008e ),
	NFlagsW( 11, 47.078144 ),
	VERT( 0x4155a817, 0x39a09675, 0x413df049 ),
	NORM( 0xbd5bbdd6, 0xb5667fdf, 0x3f7fa19f ),
	NFlagsW( 12, 0.022001 ),
	VERT( 0x413bea42, 0x408ccfb8, 0x4146b1ae ),
	NORM( 0x3c4d1647, 0xbc41a827, 0x3f7ff64a ),
	NFlagsW( 13, 98.391945 ),
	VERT( 0x41546da2, 0x40bc40fe, 0xc12e2673 ),
	NORM( 0x3e94d048, 0x3e258c1e, 0xbf716d2f ),
	NFlagsW( 14, 0.022256 ),
	VERT( 0x4139b435, 0x414dfe93, 0xc0e11ad0 ),
	NORM( 0x3e2f0d30, 0x3f74af10, 0xbe74f81e ),
	NFlagsW( 15, 36.787880 ),
	VERT( 0x4126427c, 0x4151342b, 0xc0f4d22f ),
	NORM( 0x3e45e91b, 0x3f68fc4f, 0xbebbad5c ),
	NFlagsW( 16, 99.792877 ),
	VERT( 0x4124ee78, 0x41566f98, 0xc0af283f ),
	NORM( 0x3e58e8fe, 0x3f5f7be6, 0xbee0f26d ),
	NFlagsW( 17, 96.527084 ),
	VERT( 0x41363797, 0x415fec68, 0x40368f84 ),
	NORM( 0xbdaf2aca, 0x3f7ec390, 0x3d4535cf ),
	NFlagsW( 18, 55.285519 ),
	VERT( 0x413c5fb5, 0x4160d00c, 0x40aa52af ),
	NORM( 0xbdff13ed, 0x3f7c3afa, 0x3defe4c8 ),
	NFlagsW( 19, 28.549597 ),
	VERT( 0x413d0524, 0x4163df89, 0xbfc97abe ),
	NORM( 0x3ce33054, 0x3f7fbea3, 0xbd0f572a ),
	NFlagsW( 20, 9.266443 ),
	VERT( 0x4147865d, 0x4164d552, 0x402dad3e ),
	NORM( 0xbf4489d9, 0x3f23f91e, 0x3c9427a2 ),
	NFlagsW( 21, 0.241081 ),
	VERT( 0x414c95d0, 0x41652521, 0xbe437d16 ),
	NORM( 0xbf232c3a, 0x3f42a753, 0xbdff93d2 ),
	NFlagsW( 22, 0.016438 ),
	VERT( 0x41479c0f, 0x4173285f, 0x402ca7fc ),
	NORM( 0xbf7e87e7, 0x3dd68161, 0x3cb262f4 ),
	NFlagsW( 23, 0.064817 ),
	CnkV_VN_NF(FV_CONT|FW_END, 204),
	OffnbIdx(0, 29),
	VERT( 0xbed2cb1d, 0xc170d281, 0xc01780df ),
	NORM( 0xbd982925, 0xbf7f22c5, 0x3d0f10bb ),
	NFlagsW( 4008, 36.306347 ),
	VERT( 0xbfbf7c6f, 0xc162ba11, 0xc0d145a8 ),
	NORM( 0xbd99bbf2, 0xbf718db1, 0xbea5266a ),
	NFlagsW( 4009, 0.497253 ),
	VERT( 0x3fa68031, 0xc15c3cc6, 0x40658639 ),
	NORM( 0xbdabf5ca, 0xbf73f320, 0x3e952a1a ),
	NFlagsW( 4010, 86.129593 ),
	VERT( 0xbfd698b8, 0xc152b174, 0x4089e5b6 ),
	NORM( 0xbe2a862d, 0xbf63f6f1, 0x3ed8cd33 ),
	NFlagsW( 4011, 0.781116 ),
	VERT( 0x401c3621, 0xc14331cb, 0x40f5e896 ),
	NORM( 0xbe7bf236, 0xbf3ffc5d, 0x3f1d31d4 ),
	NFlagsW( 4012, 98.997375 ),
	VERT( 0xbfb61277, 0xc12fe0b0, 0x40e62111 ),
	NORM( 0xbe366ba0, 0xbf2a6438, 0x3f3988be ),
	NFlagsW( 4013, 4.700264 ),
	VERT( 0xbfccd249, 0xc11c137a, 0xc13c9050 ),
	NORM( 0x3d6b97c3, 0xbee2f225, 0xbf65012a ),
	NFlagsW( 4014, 0.495332 ),
	VERT( 0x4007d7a6, 0xc11a3b68, 0x41135238 ),
	NORM( 0xbe807fb9, 0xbecf8cf0, 0x3f6107cb ),
	NFlagsW( 4015, 85.986832 ),
	VERT( 0x40540370, 0xc0a2c608, 0x412bf826 ),
	NORM( 0xbe49f683, 0xbe226acd, 0x3f77aa41 ),
	NFlagsW( 4016, 99.453590 ),
	VERT( 0xbfd17b96, 0xc0846b31, 0xc151f972 ),
	NORM( 0x3dd96a2b, 0xbe24e247, 0xbf7b3194 ),
	NFlagsW( 4017, 1.641218 ),
	VERT( 0x3f4a0ad2, 0xc071db78, 0xc14ad399 ),
	NORM( 0x3e856eb8, 0xbe28ade3, 0xbf738792 ),
	NFlagsW( 4018, 99.981354 ),
	VERT( 0xbfde04d9, 0xbfd5465c, 0x4123fdf5 ),
	NORM( 0xbd4f29f1, 0x3e0228cb, 0x3f7d97dd ),
	NFlagsW( 4019, 5.943744 ),
	VERT( 0x405c28fa, 0xbfcb45d2, 0x41315656 ),
	NORM( 0xbe1cf54a, 0x3e02f30e, 0x3f7ad8fd ),
	NFlagsW( 4020, 99.429146 ),
	VERT( 0xc0110a75, 0x39b1570c, 0xc155f03c ),
	NORM( 0x3e2525bd, 0x35a1fa31, 0xbf7ca615 ),
	NFlagsW( 4021, 0.018762 ),
	VERT( 0xbfec6dfd, 0x39a1b238, 0x41184814 ),
	NORM( 0xbc61bf47, 0xb585daf9, 0x3f7ff9c8 ),
	NFlagsW( 4022, 5.594031 ),
	VERT( 0x40655f60, 0x39a12a35, 0x41285e9a ),
	NORM( 0xbe25ac4a, 0xb5c9e9bd, 0x3f7ca094 ),
	NFlagsW( 4023, 99.725189 ),
	VERT( 0x405c28f9, 0x3fcb59eb, 0x4131565c ),
	NORM( 0xbe1cf55f, 0xbe02f3d5, 0x3f7ad8f6 ),
	NFlagsW( 4024, 99.429176 ),
	VERT( 0xbfde045c, 0x3fd55a85, 0x4123fdf9 ),
	NORM( 0xbd4f2adc, 0xbe022977, 0x3f7d97d6 ),
	NFlagsW( 4025, 5.943457 ),
	VERT( 0x3f4a0abd, 0x4071e687, 0xc14ad390 ),
	NORM( 0x3e856eb9, 0x3e28ae8c, 0xbf73878b ),
	NFlagsW( 4026, 99.981361 ),
	VERT( 0xbfd17ba1, 0x408470ba, 0xc151f967 ),
	NORM( 0x3dd96a22, 0x3e24e2f3, 0xbf7b318c ),
	NFlagsW( 4027, 1.640986 ),
	VERT( 0x4054034a, 0x40a2cb10, 0x412bf835 ),
	NORM( 0xbe49f680, 0x3e226a33, 0x3f77aa47 ),
	NFlagsW( 4028, 99.453720 ),
	VERT( 0x4007d79a, 0x411a3df1, 0x41135252 ),
	NORM( 0xbe807fbf, 0x3ecf8c97, 0x3f6107df ),
	NFlagsW( 4029, 85.989609 ),
	VERT( 0xbfccd2a1, 0x411c163d, 0xc13c9035 ),
	NORM( 0x3d6b977a, 0x3ee2f278, 0xbf650116 ),
	NFlagsW( 4030, 0.495082 ),
	VERT( 0xbfb61251, 0x412fe33e, 0x40e6214d ),
	NORM( 0xbe366bcf, 0x3f2a6414, 0x3f3988dd ),
	NFlagsW( 4031, 4.698598 ),
	VERT( 0x401c35f3, 0x41433457, 0x40f5e8dc ),
	NORM( 0xbe7bf24f, 0x3f3ffc3c, 0x3f1d31f9 ),
	NFlagsW( 4032, 98.997940 ),
	VERT( 0xbfd698d8, 0x4152b40a, 0x4089e5ff ),
	NORM( 0xbe2a8636, 0x3f63f6dd, 0x3ed8cd85 ),
	NFlagsW( 4033, 0.780623 ),
	VERT( 0x3fa6804e, 0x415c3f5d, 0x406586cd ),
	NORM( 0xbdabf5ae, 0x3f73f314, 0x3e952a68 ),
	NFlagsW( 4034, 86.133232 ),
	VERT( 0xbfbf7c93, 0x4162bcc2, 0xc0d1455b ),
	NORM( 0xbd99bc03, 0x3f718dbd, 0xbea5261e ),
	NFlagsW( 4035, 0.496881 ),
	VERT( 0xbed2cbaf, 0x4170d52a, 0xc0178038 ),
	NORM( 0xbd982943, 0x3f7f22c3, 0x3d0f1352 ),
	NFlagsW( 4036, 36.304153 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_Spine2[]
START
VList      vertex_kihon11_Bip01_Bip01_Spine2,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_Spine2[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_Spine2,
OPosition  ( 10.816617F,  0.000000F,  0.008473F ),
OAngle     (  0.000001F, -7.000005F, -0.000014F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_Spine3,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_Spine1[]
START
	CnkV_VN(FV_CONT, 211),
	OffnbIdx(980, 35),
	VERT( 0x40da4ce2, 0xc169e8a2, 0xbfdd5590 ),
	NORM( 0xbd9ce21a, 0xbf7d3f3a, 0x3dff2c5e ),
	VERT( 0x406dfe96, 0xc1669b2a, 0xbfee51fc ),
	NORM( 0x3d1e5f1f, 0xbf7d70a1, 0x3e0aec3d ),
	VERT( 0x40314eae, 0xc1669589, 0xc0d35ef1 ),
	NORM( 0x3d63d670, 0xbf76c383, 0xbe8547b3 ),
	VERT( 0x40c5217b, 0xc16688b5, 0xc0d46885 ),
	NORM( 0x3c185a12, 0xbf762d18, 0xbe8c64eb ),
	VERT( 0x4075f98a, 0xc14df883, 0x40809c53 ),
	NORM( 0x3e6b52bb, 0xbf61d6c7, 0x3ed271bb ),
	VERT( 0x411a7bd1, 0xc14b0615, 0xc11aa2e7 ),
	NORM( 0x3d3aea66, 0xbf411245, 0xbf27b2f6 ),
	VERT( 0x40d19e8f, 0xc148f6f0, 0xc11aecf1 ),
	NORM( 0x3d15b6c1, 0xbf46ff76, 0xbf20c628 ),
	VERT( 0x40c645a9, 0xc148f103, 0x407aadd2 ),
	NORM( 0xbd5304c1, 0xbf68ba1a, 0x3ed3a98b ),
	VERT( 0x405e9252, 0xc1470e6c, 0xc124ed78 ),
	NORM( 0x3e0f2fdb, 0xbf575bcd, 0xbf05b2cf ),
	VERT( 0x40a07197, 0xc132b705, 0x40d2fed2 ),
	NORM( 0x3d452937, 0xbf34a9ac, 0x3f34f4c5 ),
	VERT( 0x40787732, 0xc126caf8, 0xc15315b7 ),
	NORM( 0x3e68e594, 0xbf2343cb, 0xbf3c63ad ),
	VERT( 0x4101d4b8, 0xc1196e10, 0xc143ae4a ),
	NORM( 0x3e3234f6, 0xbefd3b97, 0xbf59fd53 ),
	VERT( 0x40b9bf16, 0xc1029dbd, 0x40fd6e4d ),
	NORM( 0xbc9eb23e, 0xbed89c07, 0x3f67e88a ),
	VERT( 0x4026213f, 0xc0cbf34b, 0xc17fbcd7 ),
	NORM( 0x3e7c0588, 0xbecf2b4a, 0xbf61783b ),
	VERT( 0x40d30c96, 0xc0a508f4, 0x4113eee9 ),
	NORM( 0xbdd83169, 0xbe7ae6df, 0x3f76b88f ),
	VERT( 0x4103e05f, 0xc0808792, 0xc159ead9 ),
	NORM( 0x3eb3c664, 0xbe6f846d, 0xbf6819c4 ),
	VERT( 0x40b2843e, 0xc0550db6, 0xc17daf01 ),
	NORM( 0x3ed7655e, 0xbe48dd16, 0xbf62bff8 ),
	VERT( 0x40c8cb2b, 0x39b30316, 0xc175adac ),
	NORM( 0x3ebfd76b, 0x35ab65d9, 0xbf6d59b5 ),
	VERT( 0x40b2843e, 0x405518ec, 0xc17daef8 ),
	NORM( 0x3ed7655f, 0x3e48dda7, 0xbf62bff0 ),
	VERT( 0x4103e05f, 0x40808d1f, 0xc159eace ),
	NORM( 0x3eb3c65e, 0x3e6f84ff, 0xbf6819bb ),
	VERT( 0x40d30c94, 0x40a50e05, 0x4113eef5 ),
	NORM( 0xbdd8317a, 0x3e7ae633, 0x3f76b89a ),
	VERT( 0x4026213b, 0x40cbf8e7, 0xc17fbcc7 ),
	NORM( 0x3e7c058e, 0x3ecf2b90, 0xbf61782b ),
	VERT( 0x40b9bf14, 0x4102a048, 0x40fd6e78 ),
	NORM( 0xbc9eb298, 0x3ed89bb5, 0x3f67e89e ),
	VERT( 0x4101d4b7, 0x411970d2, 0xc143ae30 ),
	NORM( 0x3e3234fc, 0x3efd3be5, 0xbf59fd3c ),
	VERT( 0x4078772c, 0x4126cdbf, 0xc153159b ),
	NORM( 0x3e68e593, 0x3f2343ec, 0xbf3c6390 ),
	VERT( 0x40a07194, 0x4132b995, 0x40d2ff10 ),
	NORM( 0x3d452908, 0x3f34a98a, 0x3f34f4e6 ),
	VERT( 0x405e924b, 0x4147112a, 0xc124ed57 ),
	NORM( 0x3e0f2fdb, 0x3f575be3, 0xbf05b2a9 ),
	VERT( 0x40c645a5, 0x4148f39a, 0x407aae5b ),
	NORM( 0xbd5304b2, 0x3f68ba07, 0x3ed3a9da ),
	VERT( 0x40d19e8b, 0x4148f9ad, 0xc11aeccd ),
	NORM( 0x3d15b6de, 0x3f46ff92, 0xbf20c604 ),
	VERT( 0x411a7bcf, 0x414b08d1, 0xc11aa2c5 ),
	NORM( 0x3d3aea89, 0x3f411264, 0xbf27b2d3 ),
	VERT( 0x4075f983, 0x414dfb1b, 0x40809c9a ),
	NORM( 0x3e6b524e, 0x3f61d6bc, 0x3ed27209 ),
	VERT( 0x40c52176, 0x41668b69, 0xc0d46837 ),
	NORM( 0x3c185aea, 0x3f762d24, 0xbe8c649a ),
	VERT( 0x40314ea6, 0x4166983e, 0xc0d35ea3 ),
	NORM( 0x3d63d64a, 0x3f76c38e, 0xbe854762 ),
	VERT( 0x406dfe8e, 0x41669dd1, 0xbfee50bf ),
	NORM( 0x3d1e5eff, 0x3f7d709a, 0x3e0aecee ),
	VERT( 0x40da4cde, 0x4169eb4a, 0xbfdd544e ),
	NORM( 0xbd9ce21e, 0x3f7d3f35, 0x3dff2db2 ),
	CnkV_VN_NF(FV_CONT|FW_START, 204),
	OffnbIdx(4008, 29),
	VERT( 0x412b24b8, 0xc170d280, 0xc0190b04 ),
	NORM( 0xbd9fbea2, 0xbf7f22c4, 0x3cd1d2a4 ),
	NFlagsW( 0, 63.693649 ),
	VERT( 0x41220f70, 0xc162ba11, 0xc0d54671 ),
	NORM( 0xbd1029db, 0xbf718db1, 0xbea89a5a ),
	NFlagsW( 1, 99.502747 ),
	VERT( 0x413abaed, 0xc15c3cc6, 0x406e805c ),
	NORM( 0xbdf364a5, 0xbf73f31f, 0x3e8ed03d ),
	NFlagsW( 2, 13.870399 ),
	VERT( 0x410a09d3, 0xc152b173, 0x40829a36 ),
	NORM( 0xbe5e18a2, 0xbf63f6f0, 0x3ecccb72 ),
	NFlagsW( 3, 99.218880 ),
	VERT( 0x4144d7d7, 0xc14331cb, 0x40fddd8b ),
	NORM( 0xbea3593e, 0xbf3ffc5c, 0x3f1458c9 ),
	NFlagsW( 4, 1.002615 ),
	VERT( 0x41087419, 0xc12fe0b0, 0x40df2340 ),
	NORM( 0xbe87c096, 0xbf2a6438, 0x3f3297e5 ),
	NFlagsW( 5, 95.299736 ),
	VERT( 0x412aa251, 0xc11c137a, 0xc13e2490 ),
	NORM( 0x3e2a17fb, 0xbee2f225, 0xbf6180cc ),
	NFlagsW( 6, 99.504669 ),
	VERT( 0x413cd1ba, 0xc11a3b68, 0x41167f55 ),
	NORM( 0xbeb663ca, 0xbecf8cee, 0x3f5785e8 ),
	NFlagsW( 7, 14.013168 ),
	VERT( 0x414cb75b, 0xc0a2c608, 0x41314856 ),
	NORM( 0xbea09828, 0xbe226ac9, 0x3f6faa6d ),
	NFlagsW( 8, 0.546408 ),
	VERT( 0x412caa41, 0xc0846b30, 0xc1537704 ),
	NORM( 0x3e66592b, 0xbe24e249, 0xbf760260 ),
	NFlagsW( 9, 98.358788 ),
	VERT( 0x41525150, 0xc071db78, 0xc147a3e6 ),
	NORM( 0x3ebfcba5, 0xbe28ade8, 0xbf69956c ),
	NFlagsW( 10, 0.018644 ),
	VERT( 0x40fb11be, 0xbfd54655, 0x411f85e7 ),
	NORM( 0xbe2f06a2, 0x3e0228cc, 0x3f7a2003 ),
	NFlagsW( 11, 94.056252 ),
	VERT( 0x414e1562, 0xbfcb45d5, 0x4136dbd2 ),
	NORM( 0xbe8b090f, 0x3e02f311, 0x3f74321c ),
	NFlagsW( 12, 0.570863 ),
	VERT( 0x412325fd, 0x39b1bac5, 0xc158a090 ),
	NORM( 0x3e8f89dd, 0x359bc33d, 0xbf75bbe4 ),
	NFlagsW( 13, 99.981239 ),
	VERT( 0x40fa5909, 0x39a22249, 0x4113ae2b ),
	NORM( 0xbe0ac956, 0xb5844ca5, 0x3f7da34a ),
	NFlagsW( 14, 94.405975 ),
	VERT( 0x4151765f, 0x39a0ef53, 0x412e3d0d ),
	NORM( 0xbe8fcb4b, 0xb5c3aea5, 0x3f75b254 ),
	NFlagsW( 15, 0.274810 ),
	VERT( 0x414e1562, 0x3fcb59e7, 0x4136dbd8 ),
	NORM( 0xbe8b091a, 0xbe02f3d2, 0x3f743214 ),
	NFlagsW( 16, 0.570822 ),
	VERT( 0x40fb11dd, 0x3fd55a8c, 0x411f85ed ),
	NORM( 0xbe2f06dd, 0xbe022976, 0x3f7a1ffb ),
	NFlagsW( 17, 94.056549 ),
	VERT( 0x4152514f, 0x4071e688, 0xc147a3dd ),
	NORM( 0x3ebfcba8, 0x3e28ae87, 0xbf699564 ),
	NFlagsW( 18, 0.018638 ),
	VERT( 0x412caa40, 0x408470bb, 0xc15376fa ),
	NORM( 0x3e665928, 0x3e24e2f1, 0xbf760259 ),
	NFlagsW( 19, 98.359016 ),
	VERT( 0x414cb752, 0x40a2cb0f, 0x41314864 ),
	NORM( 0xbea09826, 0x3e226a37, 0x3f6faa73 ),
	NFlagsW( 20, 0.546278 ),
	VERT( 0x413cd1b9, 0x411a3df1, 0x41167f6e ),
	NORM( 0xbeb663cf, 0x3ecf8c99, 0x3f5785fb ),
	NFlagsW( 21, 14.010389 ),
	VERT( 0x412aa247, 0x411c163d, 0xc13e2476 ),
	NORM( 0x3e2a17ed, 0x3ee2f277, 0xbf6180b9 ),
	NFlagsW( 22, 99.504921 ),
	VERT( 0x4108741f, 0x412fe33f, 0x40df237e ),
	NORM( 0xbe87c0aa, 0x3f2a6415, 0x3f329803 ),
	NFlagsW( 23, 95.301407 ),
	VERT( 0x4144d7cd, 0x41433457, 0x40fdddcf ),
	NORM( 0xbea35948, 0x3f3ffc3d, 0x3f1458ec ),
	NFlagsW( 24, 1.002057 ),
	VERT( 0x410a09d1, 0x4152b40b, 0x40829a7f ),
	NORM( 0xbe5e18a3, 0x3f63f6de, 0x3ecccbc5 ),
	NFlagsW( 25, 99.219376 ),
	VERT( 0x413abaf3, 0x415c3f5d, 0x406e80f2 ),
	NORM( 0xbdf36473, 0x3f73f314, 0x3e8ed08d ),
	NFlagsW( 26, 13.866763 ),
	VERT( 0x41220f6e, 0x4162bcc2, 0xc0d54625 ),
	NORM( 0xbd1029cf, 0x3f718dbd, 0xbea89a0e ),
	NFlagsW( 27, 99.503120 ),
	VERT( 0x412b24b6, 0x4170d52a, 0xc0190a5e ),
	NORM( 0xbd9fbea9, 0x3f7f22c4, 0x3cd1d7d1 ),
	NFlagsW( 28, 63.695843 ),
	CnkV_VN_NF(FV_CONT|FW_END, 253),
	OffnbIdx(0, 36),
	VERT( 0xbf50dbc0, 0xc175b1f9, 0x4037f081 ),
	NORM( 0x3e6bf338, 0xbf7619fb, 0x3e1a6dfd ),
	NFlagsW( 3544, 8.868437 ),
	VERT( 0xbfb03968, 0xc172f976, 0xc007ce61 ),
	NORM( 0x3dbd0f6a, 0xbf7e1503, 0xbda3e98c ),
	NFlagsW( 3545, 0.909714 ),
	VERT( 0x3fb0ab05, 0xc16bdbca, 0xc00c520d ),
	NORM( 0x3e402efb, 0xbf7b590d, 0x3ce66f13 ),
	NFlagsW( 3546, 94.604294 ),
	VERT( 0x3d282b53, 0xc168533a, 0xc0da068b ),
	NORM( 0x3c507056, 0xbf74eb27, 0xbe94ddc3 ),
	NFlagsW( 3547, 47.712013 ),
	VERT( 0x4012035a, 0xc15d314f, 0x406c0c40 ),
	NORM( 0x3ee237bd, 0xbf578356, 0x3e9eb37e ),
	NFlagsW( 3548, 99.706558 ),
	VERT( 0x3d556ace, 0xc15259b1, 0xc1232e1a ),
	NORM( 0x3cffca35, 0xbf605396, 0xbef62b1f ),
	NFlagsW( 3549, 50.131607 ),
	VERT( 0xbfb27ba5, 0xc138e73e, 0x410b5827 ),
	NORM( 0x3eae7a0e, 0xbefe44a6, 0x3f4c5bc6 ),
	NFlagsW( 3550, 1.906820 ),
	VERT( 0xbf0fba20, 0xc12d9d68, 0xc152fc34 ),
	NORM( 0x3b9b3925, 0xbf318689, 0xbf387168 ),
	NFlagsW( 3551, 12.255996 ),
	VERT( 0x401bf3f1, 0xc1281c3e, 0x40f1e3e6 ),
	NORM( 0x3e83b492, 0xbf0b2f80, 0x3f4c841b ),
	NFlagsW( 3552, 99.248474 ),
	VERT( 0x40389362, 0xc101a024, 0x4109080d ),
	NORM( 0x3e1b9eff, 0xbebdf3d3, 0x3f6a865c ),
	NFlagsW( 3553, 99.782768 ),
	VERT( 0xbe928533, 0xc0f2cc18, 0x41145275 ),
	NORM( 0x3e8040e6, 0xbe449af3, 0x3f72ea5b ),
	NFlagsW( 3554, 42.814812 ),
	VERT( 0x4055323c, 0xc095e7a5, 0x41191ad6 ),
	NORM( 0x3da28c61, 0xbe2807e9, 0x3f7bb610 ),
	NFlagsW( 3557, 99.948753 ),
	VERT( 0x3c34aee8, 0xc076aa00, 0x411dbc33 ),
	NORM( 0x3d8775f2, 0xbd1cc852, 0x3f7f405c ),
	NFlagsW( 3558, 48.811478 ),
	VERT( 0xbf7dc9a9, 0xc05cb604, 0xc18be8bb ),
	NORM( 0x3cd24683, 0xbe403f5c, 0xbf7b5cb0 ),
	NFlagsW( 3559, 0.556367 ),
	VERT( 0x3ee214cc, 0xbfcd54c0, 0xc18ae2af ),
	NORM( 0x3e207d14, 0x3c14f737, 0xbf7cd35d ),
	NFlagsW( 3562, 85.508507 ),
	VERT( 0x404da1a8, 0xbfa4e0e1, 0x411ce93e ),
	NORM( 0xbb12d99e, 0x3e13b145, 0x3f7d5299 ),
	NFlagsW( 3565, 99.813652 ),
	VERT( 0x3f9a4b27, 0x39b44a7f, 0xc1893227 ),
	NORM( 0x3e6b0e25, 0xba3ef982, 0xbf792a08 ),
	NFlagsW( 3571, 99.656502 ),
	VERT( 0x3e6cf671, 0x39a21f8f, 0x4115822c ),
	NORM( 0x3cd59e48, 0xb5b9fa5a, 0x3f7fe9b8 ),
	NFlagsW( 3574, 50.077713 ),
	VERT( 0x404f623f, 0x39a21d9e, 0x41152099 ),
	NORM( 0x3b93d861, 0xb5b9fbca, 0x3f7fff56 ),
	NFlagsW( 3575, 99.777824 ),
	VERT( 0xc0312cc0, 0x39a1e19e, 0x411bb33f ),
	NORM( 0x3e3dc76e, 0xb5a57639, 0x3f7b90ab ),
	NFlagsW( 3576, 0.031498 ),
	VERT( 0x404da1a7, 0x3fa4f519, 0x411ce941 ),
	NORM( 0xbb12d89c, 0xbe13b1ef, 0x3f7d5293 ),
	NFlagsW( 3582, 99.813667 ),
	VERT( 0x3ee214c5, 0x3fcd6b4c, 0xc18ae2ad ),
	NORM( 0x3e227225, 0xbbcadf9d, 0xbf7cc0d4 ),
	NFlagsW( 3586, 85.508804 ),
	VERT( 0xbf7dc9b1, 0x405cc14c, 0xc18be8b6 ),
	NORM( 0x3cd2466f, 0x3e404002, 0xbf7b5ca8 ),
	NFlagsW( 3589, 0.556245 ),
	VERT( 0x3c348cbd, 0x4076b41c, 0x411dbc3e ),
	NORM( 0x3d87760e, 0x3d1cc576, 0x3f7f405d ),
	NFlagsW( 3590, 48.811264 ),
	VERT( 0x40553239, 0x4095ecb6, 0x41191ae3 ),
	NORM( 0x3da28c7a, 0x3e280746, 0x3f7bb616 ),
	NFlagsW( 3591, 99.948761 ),
	VERT( 0xbe928555, 0x40f2d12b, 0x4114528c ),
	NORM( 0x3e8040ed, 0x3e449a55, 0x3f72ea62 ),
	NFlagsW( 3594, 42.813484 ),
	VERT( 0x4038933d, 0x4101a2af, 0x41090823 ),
	NORM( 0x3e1b9f12, 0x3ebdf382, 0x3f6a866b ),
	NFlagsW( 3595, 99.782852 ),
	VERT( 0x401bf3cb, 0x41281eca, 0x40f1e421 ),
	NORM( 0x3e83b49f, 0x3f0b2f5b, 0x3f4c8432 ),
	NFlagsW( 3596, 99.248795 ),
	VERT( 0xbf0fba39, 0x412da02f, 0xc152fc15 ),
	NORM( 0x3b9b39cf, 0x3f3186aa, 0xbf387149 ),
	NFlagsW( 3597, 12.253546 ),
	VERT( 0xbfb27bb3, 0x4138e9c9, 0x410b5846 ),
	NORM( 0x3eae7a10, 0x3efe4458, 0x3f4c5bde ),
	NFlagsW( 3598, 1.905956 ),
	VERT( 0x3d5568e6, 0x41525c6f, 0xc1232df5 ),
	NORM( 0x3cffca37, 0x3f6053ac, 0xbef62acb ),
	NFlagsW( 3599, 50.131111 ),
	VERT( 0x40120312, 0x415d33e5, 0x406c0cdb ),
	NORM( 0x3ee23787, 0x3f578353, 0x3e9eb3df ),
	NFlagsW( 3600, 99.706741 ),
	VERT( 0x3d28293b, 0x416855ee, 0xc0da0639 ),
	NORM( 0x3c506fba, 0x3f74eb34, 0xbe94dd70 ),
	NFlagsW( 3601, 47.711216 ),
	VERT( 0x3fb0aaf4, 0x416bde71, 0xc00c516b ),
	NORM( 0x3e402eec, 0x3f7b590b, 0x3ce67529 ),
	NFlagsW( 3602, 94.606247 ),
	VERT( 0xbfb039b9, 0x4172fc1e, 0xc007cdba ),
	NORM( 0x3dbd0f6e, 0x3f7e1507, 0xbda3e826 ),
	NFlagsW( 3603, 0.909067 ),
	VERT( 0xbf50dc63, 0x4175b491, 0x4037f12b ),
	NORM( 0x3e6bf353, 0x3f7619f4, 0x3e1a6e82 ),
	NFlagsW( 3604, 8.865385 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_Spine1[]
START
VList      vertex_kihon11_Bip01_Bip01_Spine1,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_Spine1[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_Spine1,
OPosition  ( 12.670258F, -0.000000F,  0.008611F ),
OAngle     (  0.000000F, -1.500002F, -0.000007F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_Spine2,
Sibling     object_kihon11_Bip01_Bip01_L_Thigh,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_Spine[]
START
	CnkV_VN(FV_CONT, 493),
	OffnbIdx(630, 82),
	VERT( 0x409891a5, 0xc17e1445, 0x400ab017 ),
	NORM( 0x3dd39f8d, 0xbf7e7a38, 0x3d0cdac1 ),
	VERT( 0x40a4b55f, 0xc17bd651, 0xbf27f414 ),
	NORM( 0x3da00202, 0xbf7e0b15, 0xbdc3a0bc ),
	VERT( 0x408df4e5, 0xc17ac8c3, 0x40a9e810 ),
	NORM( 0x3deb369f, 0xbf713b8e, 0x3ea0f9ff ),
	VERT( 0x40b1a174, 0xc17447da, 0xc05b626e ),
	NORM( 0x3c78c4de, 0xbf758ba6, 0xbe909d32 ),
	VERT( 0x41260b47, 0xc1685356, 0x40c606e3 ),
	NORM( 0x3e5f60bf, 0xbf53a851, 0x3f04bc19 ),
	VERT( 0x408d6dfb, 0xc15826a9, 0x41044284 ),
	NORM( 0x3e49caea, 0xbf5037ff, 0x3f0c20dc ),
	VERT( 0x40a823fa, 0xc157c697, 0xc0e69ada ),
	NORM( 0xbdee1fdc, 0xbf643938, 0xbee02dc5 ),
	VERT( 0x40d18dfe, 0xc14bcb52, 0xc120ddd3 ),
	NORM( 0xbe3816fc, 0xbf5fdbe1, 0xbee6b210 ),
	VERT( 0x40986308, 0xc13c2c6f, 0x4133f7a6 ),
	NORM( 0x3e964b56, 0xbf0aba10, 0x3f499a62 ),
	VERT( 0x40faf824, 0xc12f9fc1, 0xc14e7162 ),
	NORM( 0xbe05158c, 0xbf36c020, 0xbf302830 ),
	VERT( 0x400a60c0, 0xc12dcae4, 0xc1262012 ),
	NORM( 0xbed456b8, 0xbf30a2ba, 0xbf17de33 ),
	VERT( 0x405be9a9, 0xc116f01f, 0xc14d6761 ),
	NORM( 0xbec42fbd, 0xbf12d9ce, 0xbf395565 ),
	VERT( 0x410fce76, 0xc0f68ef8, 0x4129d837 ),
	NORM( 0x3ec1061e, 0xbd0f3560, 0x3f6cf10f ),
	VERT( 0x40c9b0f1, 0xc0ec9ec2, 0x4136a754 ),
	NORM( 0x3e952301, 0xbdfe9b83, 0x3f72d282 ),
	VERT( 0x40fd71c7, 0xc0ebab50, 0xc178a09f ),
	NORM( 0xbe2b4835, 0xbefd6237, 0xbf5a4adb ),
	VERT( 0x41358524, 0xc0db3477, 0xc17f5d44 ),
	NORM( 0x3bee4146, 0xbef8e48a, 0xbf5fb575 ),
	VERT( 0x40c46c26, 0xc0ac2f7e, 0x413ae758 ),
	NORM( 0x3edcc1e0, 0x3d97323b, 0x3f66350b ),
	VERT( 0x40758b3f, 0xc0a7675f, 0xc1758469 ),
	NORM( 0xbebf0e87, 0xbeb72548, 0xbf5b253e ),
	VERT( 0x40e63443, 0xc08d21ac, 0xc1846b49 ),
	NORM( 0xbe4d846f, 0xbe880b4f, 0xbf7163da ),
	VERT( 0x411b838e, 0xc0891b16, 0xc187d3e8 ),
	NORM( 0xbded5015, 0xbe90d22f, 0xbf73bf50 ),
	VERT( 0x407afe65, 0xc07174cf, 0xc17b373e ),
	NORM( 0xbeaab3a4, 0xbe500021, 0xbf6baf3e ),
	VERT( 0x40e3f7d9, 0xc04ec320, 0x4125e16e ),
	NORM( 0x3ecfa444, 0x3ddce59c, 0x3f685e29 ),
	VERT( 0x40acef09, 0xc04a7a78, 0x413b544a ),
	NORM( 0x3f025648, 0x3e0903c3, 0x3f59a868 ),
	VERT( 0x40cc1562, 0xc0132fd7, 0xc1865520 ),
	NORM( 0xbe562042, 0xbd6bdb1e, 0xbf79e7f8 ),
	VERT( 0x40f0ee80, 0xc003647d, 0xc187da90 ),
	NORM( 0xbe4a8da9, 0xbd088d8a, 0xbf7acbeb ),
	VERT( 0x41147046, 0xbfaf6c0f, 0xc18b6f56 ),
	NORM( 0xbe211900, 0x3c6874cc, 0xbf7cc939 ),
	VERT( 0x4081ec39, 0xbfa73bff, 0xc182503d ),
	NORM( 0xbea17f5a, 0xbbaf0083, 0xbf72ed70 ),
	VERT( 0x40b75824, 0xbf259e9e, 0xc1835b5e ),
	NORM( 0x3d528957, 0x3e9fd0a5, 0xbf72da66 ),
	VERT( 0x40bbbda2, 0xbf20fdb7, 0xc1836ca4 ),
	NORM( 0xbd9e87f9, 0x3e9d143d, 0xbf72d8ee ),
	VERT( 0x40c0d452, 0xbf191b5b, 0xc183452f ),
	NORM( 0xbda1a750, 0x3e900b9f, 0xbf74d3cb ),
	VERT( 0x40af02f1, 0xbf09d5f8, 0xc1836bb7 ),
	NORM( 0x3d0fed3d, 0x3e161feb, 0xbf7d12f7 ),
	VERT( 0x411ef650, 0xbed585f8, 0xc18b23bd ),
	NORM( 0xbdbcb6dd, 0x3daa23d2, 0xbf7e05a9 ),
	VERT( 0x40b7dff2, 0xbecda35e, 0xc1828156 ),
	NORM( 0x3d9a5772, 0x3e6047a4, 0xbf7909be ),
	VERT( 0x40bb24f2, 0xbec840e7, 0xc1828157 ),
	NORM( 0xbe156049, 0x3e79d01e, 0xbf7570c2 ),
	VERT( 0x40c50c73, 0xbec299b5, 0xc183325c ),
	NORM( 0xbeb208a3, 0x3d1db5c2, 0xbf6fd291 ),
	VERT( 0x40b358f0, 0xbe95f5e7, 0xc18291cd ),
	NORM( 0x3e5cfc47, 0x3df58575, 0xbf781396 ),
	VERT( 0x40bfaea2, 0xbe909d5e, 0xc18294be ),
	NORM( 0xbe6ff8b0, 0x3e11a71c, 0xbf763161 ),
	VERT( 0x41210a84, 0x39b0f078, 0xc18b07b8 ),
	NORM( 0xbd95a068, 0xbc21685d, 0xbf7f4dab ),
	VERT( 0x40c6d40d, 0x39b2067e, 0xc1848cbf ),
	NORM( 0xbef991d2, 0x35d7c17e, 0xbf5f8729 ),
	VERT( 0x40aa7e9a, 0x39b25cc1, 0xc18413b4 ),
	NORM( 0x3e43b0bb, 0x35a0f60a, 0xbf7b4829 ),
	VERT( 0x40af70df, 0x39b22a99, 0xc18290a6 ),
	NORM( 0x3eec2b18, 0x3564640c, 0xbf632396 ),
	VERT( 0x40c0f9ff, 0x39b1ed0e, 0xc1827c8c ),
	NORM( 0xbed33812, 0x35d733bb, 0xbf69336a ),
	VERT( 0x404e4f2b, 0x39b2cdd2, 0xc17d8b68 ),
	NORM( 0xbecee136, 0x35bfe01b, 0xbf6a2bd9 ),
	VERT( 0x40e43175, 0x399f1291, 0x4126d66c ),
	NORM( 0x3ec77c04, 0xb5c3b712, 0x3f6bc51d ),
	VERT( 0x408092b7, 0x399f375c, 0x414264ae ),
	NORM( 0x3ec63dc0, 0xb5a88f81, 0x3f6c0831 ),
	VERT( 0x40bfaea2, 0x3e90f659, 0xc18294be ),
	NORM( 0xbe6ff8b6, 0xbe11a651, 0xbf763167 ),
	VERT( 0x40b358f0, 0x3e964ef6, 0xc18291cd ),
	NORM( 0x3e5cfc47, 0xbdf5843b, 0xbf78139b ),
	VERT( 0x40c50c73, 0x3ec2f2ac, 0xc183325c ),
	NORM( 0xbeb208a4, 0xbd1db271, 0xbf6fd292 ),
	VERT( 0x40bb24f2, 0x3ec899e8, 0xc1828157 ),
	NORM( 0xbe15604e, 0xbe79cf60, 0xbf7570cd ),
	VERT( 0x40b7dff2, 0x3ecdfc64, 0xc1828155 ),
	NORM( 0x3d9a5769, 0xbe6046f7, 0xbf7909c7 ),
	VERT( 0x411ef650, 0x3ed5de79, 0xc18b23bb ),
	NORM( 0xbdd02c00, 0xbda24548, 0xbf7ddd71 ),
	VERT( 0x40af02f1, 0x3f0a0288, 0xc1836bb6 ),
	NORM( 0x3d0fed38, 0xbe161f37, 0xbf7d12fd ),
	VERT( 0x40c0d452, 0x3f1947db, 0xc183452e ),
	NORM( 0xbda1a759, 0xbe900b42, 0xbf74d3d9 ),
	VERT( 0x40bbbda2, 0x3f212a3d, 0xc1836ca3 ),
	NORM( 0xbd9e8804, 0xbe9d13e2, 0xbf72d8fd ),
	VERT( 0x40b75824, 0x3f25cb26, 0xc1835b5d ),
	NORM( 0x3d528946, 0xbe9fd04f, 0xbf72da75 ),
	VERT( 0x4081ec39, 0x3fa75257, 0xc182503c ),
	NORM( 0xbea17f54, 0x3baf1a94, 0xbf72ed71 ),
	VERT( 0x41147046, 0x3faf8239, 0xc18b6f53 ),
	NORM( 0xbe211900, 0xbc686842, 0xbf7cc93a ),
	VERT( 0x40f0ee80, 0x40036f9a, 0xc187da8d ),
	NORM( 0xbe4a8da9, 0x3d0890bf, 0xbf7acbeb ),
	VERT( 0x40cc1562, 0x40133afa, 0xc186551e ),
	NORM( 0xbe562045, 0x3d6bde58, 0xbf79e7f6 ),
	VERT( 0x40acef09, 0x404a8467, 0x413b5452 ),
	NORM( 0x3f025644, 0xbe090447, 0x3f59a868 ),
	VERT( 0x40e3f7d9, 0x404ecd11, 0x4125e177 ),
	NORM( 0x3ecfa439, 0xbddce6f8, 0x3f685e28 ),
	VERT( 0x407afe66, 0x40717ff6, 0xc17b3733 ),
	NORM( 0xbeaab39c, 0x3e5000f2, 0xbf6baf36 ),
	VERT( 0x411b838e, 0x4089209c, 0xc187d3e2 ),
	NORM( 0xbded5019, 0x3e90d283, 0xbf73bf43 ),
	VERT( 0x40e63443, 0x408d2738, 0xc1846b43 ),
	NORM( 0xbe4d846d, 0x3e880ba8, 0xbf7163ce ),
	VERT( 0x40758b40, 0x40a76cf0, 0xc175845a ),
	NORM( 0xbebf0e84, 0x3eb725ac, 0xbf5b252c ),
	VERT( 0x40c46c16, 0x40ac3473, 0x413ae767 ),
	NORM( 0x3edcc1d7, 0xbd9733ff, 0x3f66350a ),
	VERT( 0x41358525, 0x40db39f3, 0xc17f5d33 ),
	NORM( 0x3bee41a7, 0x3ef8e4d1, 0xbf5fb561 ),
	VERT( 0x40fd71c8, 0x40ebb0d5, 0xc178a08b ),
	NORM( 0xbe2b482d, 0x3efd6281, 0xbf5a4ac8 ),
	VERT( 0x40c9b0f2, 0x40eca3b8, 0x4136a769 ),
	NORM( 0x3e952308, 0x3dfe9996, 0x3f72d289 ),
	VERT( 0x410fce76, 0x40f693ea, 0x4129d84c ),
	NORM( 0x3ec10619, 0x3d0f3221, 0x3f6cf111 ),
	VERT( 0x405be9cb, 0x4116f2e1, 0xc14d6748 ),
	NORM( 0xbec42fb6, 0x3f12d9ef, 0xbf395555 ),
	VERT( 0x400a60c2, 0x412dcda4, 0xc1261ff6 ),
	NORM( 0xbed456b7, 0x3f30a2db, 0xbf17de19 ),
	VERT( 0x40faf815, 0x412fa27d, 0xc14e7143 ),
	NORM( 0xbe05158b, 0x3f36c043, 0xbf30280f ),
	VERT( 0x4098630a, 0x413c2eed, 0x4133f7c4 ),
	NORM( 0x3e964b52, 0x3f0ab9e8, 0x3f499a7b ),
	VERT( 0x40d18e00, 0x414bce08, 0xc120ddb1 ),
	NORM( 0xbe3816e0, 0x3f5fdbff, 0xbee6b1b3 ),
	VERT( 0x40a823fb, 0x4157c947, 0xc0e69a8c ),
	NORM( 0xbdee1fb8, 0x3f64394f, 0xbee02d75 ),
	VERT( 0x408d6dfd, 0x41582930, 0x410442a9 ),
	NORM( 0x3e49cae3, 0x3f5037e0, 0x3f0c2104 ),
	VERT( 0x41260b57, 0x416855d9, 0x40c60731 ),
	NORM( 0x3e5f6116, 0x3f53a832, 0x3f04bc3a ),
	VERT( 0x40b1a176, 0x41744a80, 0xc05b61c7 ),
	NORM( 0x3c78c5f3, 0x3f758bb2, 0xbe909cda ),
	VERT( 0x408df4e6, 0x417acb53, 0x40a9e867 ),
	NORM( 0x3deb369a, 0x3f713b7d, 0x3ea0fa59 ),
	VERT( 0x40a4b561, 0x417bd8ef, 0xbf27f164 ),
	NORM( 0x3da00210, 0x3f7e0b18, 0xbdc39f64 ),
	VERT( 0x409891a6, 0x417e16dc, 0x400ab0c6 ),
	NORM( 0x3dd39fa0, 0x3f7e7a34, 0x3d0cdd19 ),
	CnkV_VN_NF(FV_CONT|FW_START, 428),
	OffnbIdx(3544, 61),
	VERT( 0x413c78a2, 0xc175b202, 0x40370f8b ),
	NORM( 0x3e67d39e, 0xbf7619fe, 0x3e208d9c ),
	NFlagsW( 0, 91.131569 ),
	VERT( 0x413597a8, 0xc172f97e, 0xc00983d8 ),
	NORM( 0x3dc14932, 0xbf7e1505, 0xbd9ee837 ),
	NFlagsW( 1, 99.090286 ),
	VERT( 0x4161b7e8, 0xc16bdbd4, 0xc00968b3 ),
	NORM( 0x3e3f5d11, 0xbf7b590f, 0x3d074cf3 ),
	NFlagsW( 2, 5.395706 ),
	VERT( 0x414e3c05, 0xc1685343, 0xc0d9a410 ),
	NORM( 0x3ca68858, 0xbf74eb27, 0xbe94a50c ),
	NFlagsW( 3, 52.287991 ),
	VERT( 0x416dab90, 0xc15d315b, 0x4070571a ),
	NORM( 0x3eddfc62, 0xbf57835c, 0x3ea49185 ),
	NFlagsW( 4, 0.293448 ),
	VERT( 0x414fd43f, 0xc15259ba, 0xc122f6ed ),
	NORM( 0x3d3366f9, 0xbf605397, 0xbef5aa63 ),
	NFlagsW( 5, 49.868393 ),
	VERT( 0x4130c618, 0xc138e746, 0x410ad9b0 ),
	NORM( 0x3ea3b7cf, 0xbefe44af, 0x3f4e9274 ),
	NFlagsW( 6, 98.093178 ),
	VERT( 0x4147446a, 0xc12d9d72, 0xc153029d ),
	NORM( 0x3cc14afb, 0xbf31868a, 0xbf385918 ),
	NFlagsW( 7, 87.744003 ),
	VERT( 0x416e8876, 0xc1281c4a, 0x40f41fc3 ),
	NORM( 0x3e71e7ed, 0xbf0b2f84, 0x3f4e2b75 ),
	NFlagsW( 8, 0.751521 ),
	VERT( 0x417543e5, 0xc101a030, 0x410a5485 ),
	NORM( 0x3e0302d9, 0xbebdf3d7, 0x3f6b767f ),
	NFlagsW( 9, 0.217231 ),
	VERT( 0x414243ac, 0xc0f2cc2a, 0x41144a08 ),
	NORM( 0x3e66fbe6, 0xbe449b00, 0x3f7482c6 ),
	NFlagsW( 10, 57.185192 ),
	VERT( 0xc1491544, 0xc0a081c6, 0xc0fae250 ),
	NORM( 0x3e26d3c1, 0x3f07db5a, 0xbf54ee3d ),
	NFlagsW( 11, 0.073156 ),
	VERT( 0xc1265e0a, 0xc09d2a67, 0x410a8477 ),
	NORM( 0xbf3ffcb8, 0xbdc39f62, 0x3f27915e ),
	NFlagsW( 12, 29.142544 ),
	VERT( 0x417bff45, 0xc095e7bd, 0x411a95d9 ),
	NORM( 0x3d5b8f88, 0xbe2807ed, 0x3f7c2823 ),
	NFlagsW( 13, 0.051244 ),
	VERT( 0x4146c583, 0xc076aa24, 0x411dd2d0 ),
	NORM( 0x3d23ebd8, 0xbd1cc85b, 0x3f7f9b6e ),
	NFlagsW( 14, 51.188522 ),
	VERT( 0x41423152, 0xc05cb627, 0xc18bfff7 ),
	NORM( 0x3d526147, 0xbe403f5e, 0xbf7b1a99 ),
	NFlagsW( 15, 99.443634 ),
	VERT( 0xc135cf4f, 0xc02a5092, 0x40d8a64d ),
	NORM( 0xbf4360e7, 0x3ebb993f, 0x3f0840d5 ),
	NFlagsW( 16, 41.734943 ),
	VERT( 0xc128f8b8, 0xc00274fd, 0x411da497 ),
	NORM( 0xbf5265c0, 0x3e78b7de, 0x3f03eb45 ),
	NFlagsW( 17, 86.803886 ),
	VERT( 0x41590ed9, 0xbfcd5510, 0xc18aad30 ),
	NORM( 0x3e3ae80d, 0x3c14f696, 0xbf7bb04e ),
	NFlagsW( 18, 14.491492 ),
	VERT( 0xc13451c3, 0xbfbb997c, 0xc0a9a642 ),
	NORM( 0x3e10ab60, 0x3f564553, 0xbf07561d ),
	NFlagsW( 19, 67.082626 ),
	VERT( 0xc1306f1e, 0xbfb500a4, 0x40ffdd47 ),
	NORM( 0xbf5b051c, 0x3ed38e69, 0x3e9fb735 ),
	NFlagsW( 20, 78.446358 ),
	VERT( 0x417a01c9, 0xbfa4e140, 0x411e573f ),
	NORM( 0xbce68c84, 0x3e13b147, 0x3f7d3886 ),
	NFlagsW( 21, 0.186350 ),
	VERT( 0xc157c682, 0xbf9d2da8, 0xc0af17bf ),
	NORM( 0x3d368ff6, 0x3f52ee47, 0xbf109de6 ),
	NFlagsW( 22, 0.583916 ),
	VERT( 0xc13ee0a1, 0xbf966835, 0x40610219 ),
	NORM( 0xbecfb6ea, 0x3f651fc2, 0x3e3dd0d8 ),
	NFlagsW( 23, 57.779526 ),
	VERT( 0xc136b9a6, 0xbf62bb6c, 0xbe92c9c8 ),
	NORM( 0xbdd8b7c2, 0x3f7cfcb6, 0xbde239ed ),
	NFlagsW( 24, 66.358498 ),
	VERT( 0xc1355cc6, 0xbf262c9b, 0x4096daf0 ),
	NORM( 0xbf2a834b, 0x3f3da3fa, 0x3db2819f ),
	NFlagsW( 25, 76.644051 ),
	VERT( 0xc1518c20, 0xbf096018, 0xbfba33ba ),
	NORM( 0x3df1a85e, 0x3f7e08b0, 0xbd180617 ),
	NFlagsW( 26, 12.985927 ),
	VERT( 0x41652fe0, 0x39aeeaaf, 0xc188d3db ),
	NORM( 0x3e828837, 0xba3f079f, 0xbf778a5f ),
	NFlagsW( 27, 0.343504 ),
	VERT( 0xc12c0097, 0x39acccc2, 0x3fc5b304 ),
	NORM( 0xbf7e6434, 0xbde1e310, 0xbc9be317 ),
	NFlagsW( 28, 96.391937 ),
	VERT( 0xc121fe7d, 0x39a8f7d3, 0x40d7ad47 ),
	NORM( 0xbf707874, 0xba702b99, 0x3eaf9c97 ),
	NFlagsW( 29, 99.847755 ),
	VERT( 0x414a8303, 0x399d7503, 0x4115b123 ),
	NORM( 0xb8d2e15a, 0xb5ba2230, 0x3f7fffff ),
	NFlagsW( 30, 49.922287 ),
	VERT( 0x417aa60e, 0x399c23fe, 0x41169238 ),
	NORM( 0xbcb17db0, 0xb5b7bcc1, 0x3f7ff09d ),
	NFlagsW( 31, 0.222178 ),
	VERT( 0x411a5eb1, 0x399e861e, 0x411aa008 ),
	NORM( 0x3e235f88, 0xb5b76521, 0x3f7cb889 ),
	NFlagsW( 32, 99.968506 ),
	VERT( 0xc1518c24, 0x3f098c12, 0xbfba33ad ),
	NORM( 0x3df1a802, 0xbf7e08b2, 0xbd1808b3 ),
	NFlagsW( 33, 17.606237 ),
	VERT( 0xc1355cc6, 0x3f265753, 0x4096daf4 ),
	NORM( 0xbf381dfa, 0xbf2efec1, 0x3dfeb0fc ),
	NFlagsW( 34, 75.044044 ),
	VERT( 0xc136b9a2, 0x3f62e703, 0xbe92c979 ),
	NORM( 0xbe7580dd, 0xbf778bc2, 0xbdb11643 ),
	NFlagsW( 35, 65.035332 ),
	VERT( 0xc13ee0a1, 0x3f967db6, 0x40610226 ),
	NORM( 0xbecfb6ec, 0xbf651fc0, 0x3e3dd032 ),
	NFlagsW( 36, 53.392826 ),
	VERT( 0xc157c682, 0x3f9d4404, 0xc0af17b9 ),
	NORM( 0x3d368fb0, 0xbf52ee2f, 0xbf109e0a ),
	NFlagsW( 37, 2.226961 ),
	VERT( 0x417a01c9, 0x3fa4f4b9, 0x411e5742 ),
	NORM( 0xbce68c72, 0xbe13b1ed, 0x3f7d3881 ),
	NFlagsW( 38, 0.186339 ),
	VERT( 0xc1306f22, 0x3fb515b5, 0x40ffdd4f ),
	NORM( 0xbf5b0529, 0xbed38e1b, 0x3e9fb726 ),
	NFlagsW( 39, 76.552155 ),
	VERT( 0xc13451bf, 0x3fbbafb5, 0xc0a9a639 ),
	NORM( 0x3e10ab50, 0xbf564540, 0xbf075642 ),
	NFlagsW( 40, 63.610958 ),
	VERT( 0xc11cea48, 0x3fc0bb74, 0xc06e03d4 ),
	NORM( 0xbec327ed, 0xbf50421e, 0xbee0e1d8 ),
	NFlagsW( 41, 70.724342 ),
	VERT( 0x41590ed9, 0x3fcd6afb, 0xc18aad2e ),
	NORM( 0x3e3cdb01, 0xbbcae0e3, 0xbf7b9a80 ),
	NFlagsW( 42, 14.491200 ),
	VERT( 0xc128f8b8, 0x40027f6d, 0x411da49d ),
	NORM( 0xbf5265be, 0xbe78b7cd, 0x3f03eb42 ),
	NFlagsW( 43, 86.597748 ),
	VERT( 0xc135cf4a, 0x402a5b2b, 0x40d8a65b ),
	NORM( 0xbf4360fa, 0xbebb990a, 0x3f0840c2 ),
	NFlagsW( 44, 41.319176 ),
	VERT( 0x41423152, 0x405cc129, 0xc18bfff2 ),
	NORM( 0x3d526146, 0x3e403fff, 0xbf7b1a91 ),
	NFlagsW( 45, 99.443756 ),
	VERT( 0x4146c57b, 0x4076b3f8, 0x411dd2db ),
	NORM( 0x3d23ec13, 0x3d1cc56c, 0x3f7f9b70 ),
	NFlagsW( 46, 51.188736 ),
	VERT( 0x417bff45, 0x4095ec9e, 0x411a95e5 ),
	NORM( 0x3d5b8fc4, 0x3e280743, 0x3f7c2829 ),
	NFlagsW( 47, 0.051231 ),
	VERT( 0xc1265e0a, 0x409d2fa5, 0x410a8484 ),
	NORM( 0xbf3ffcb6, 0x3dc39edf, 0x3f279164 ),
	NFlagsW( 48, 29.749441 ),
	VERT( 0xc149154c, 0x40a08765, 0xc0fae236 ),
	NORM( 0x3e26d3aa, 0xbf07db3b, 0xbf54ee55 ),
	NFlagsW( 49, 0.060253 ),
	VERT( 0x414243ac, 0x40f2d11a, 0x41144a1e ),
	NORM( 0x3e66fbf6, 0x3e449a49, 0x3f7482cd ),
	NFlagsW( 50, 57.186516 ),
	VERT( 0x417543dd, 0x4101a2a3, 0x410a549b ),
	NORM( 0x3e0302f0, 0x3ebdf37f, 0x3f6b768f ),
	NFlagsW( 51, 0.217150 ),
	VERT( 0x416e886e, 0x41281ebf, 0x40f41ffd ),
	NORM( 0x3e71e80e, 0x3f0b2f57, 0x3f4e2b8d ),
	NFlagsW( 52, 0.751207 ),
	VERT( 0x4147446b, 0x412da026, 0xc153027f ),
	NORM( 0x3cc14b6b, 0x3f3186aa, 0xbf3858f9 ),
	NFlagsW( 53, 87.746452 ),
	VERT( 0x4130c619, 0x4138e9c1, 0x410ad9cf ),
	NORM( 0x3ea3b7d4, 0x3efe444f, 0x3f4e928c ),
	NFlagsW( 54, 98.094048 ),
	VERT( 0x414fd440, 0x41525c65, 0xc122f6c8 ),
	NORM( 0x3d336724, 0x3f6053ac, 0xbef5aa0f ),
	NFlagsW( 55, 49.868889 ),
	VERT( 0x416dab80, 0x415d33da, 0x407057b3 ),
	NORM( 0x3eddfc31, 0x3f57834d, 0x3ea491e5 ),
	NFlagsW( 56, 0.293249 ),
	VERT( 0x414e3c06, 0x416855e4, 0xc0d9a3bf ),
	NORM( 0x3ca6886b, 0x3f74eb34, 0xbe94a4ba ),
	NFlagsW( 57, 52.288788 ),
	VERT( 0x4161b7e8, 0x416bde66, 0xc0096811 ),
	NORM( 0x3e3f5d0f, 0x3f7b5909, 0x3d074ffd ),
	NFlagsW( 58, 5.393754 ),
	VERT( 0x413597a1, 0x4172fc16, 0xc0098332 ),
	NORM( 0x3dc1494f, 0x3f7e1505, 0xbd9ee6d0 ),
	NFlagsW( 59, 99.090935 ),
	VERT( 0x413c789b, 0x4175b489, 0x40371034 ),
	NORM( 0x3e67d3c6, 0x3f7619f0, 0x3e208e23 ),
	NFlagsW( 60, 91.134613 ),
	CnkV_VN_NF(FV_CONT|FW_MIDDLE, 274),
	OffnbIdx(0, 39),
	VERT( 0xbf933a00, 0xc1758a12, 0xc05fb474 ),
	NORM( 0x3de181cd, 0xbf65d528, 0xbeda57bb ),
	NFlagsW( 3434, 10.394816 ),
	VERT( 0xc01c0791, 0xc1608428, 0xc0b65f5d ),
	NORM( 0x3d9cd7ee, 0xbf3a20f2, 0xbf2eaa26 ),
	NFlagsW( 3439, 3.282501 ),
	VERT( 0xc0c36e37, 0xc13f50c4, 0xc0fea800 ),
	NORM( 0x3e65a64f, 0xbe846e6c, 0xbf708802 ),
	NFlagsW( 3445, 0.039105 ),
	VERT( 0xc0938de3, 0xc13bc1a4, 0x413a9b66 ),
	NORM( 0xbea431af, 0xbee22de4, 0x3f567df0 ),
	NFlagsW( 3447, 0.081661 ),
	VERT( 0xc07e0e59, 0xc13a1a63, 0xc0ee6d08 ),
	NORM( 0x3d624dc3, 0xbea7101a, 0xbf71932e ),
	NFlagsW( 3448, 29.351421 ),
	VERT( 0xc02fe409, 0xc1221e12, 0xc10017d3 ),
	NORM( 0xbe729759, 0xbe84ca56, 0xbf6fafb0 ),
	NFlagsW( 3450, 49.215961 ),
	VERT( 0xbfcddb6e, 0xc10c4666, 0xc10df8ab ),
	NORM( 0xbee9c73a, 0xbed67e6a, 0xbf48ece7 ),
	NFlagsW( 3451, 52.704292 ),
	VERT( 0xc0d27f0d, 0xc10842d3, 0xc101e0c9 ),
	NORM( 0x3e572693, 0x3ddb5742, 0xbf78c782 ),
	NFlagsW( 3452, 33.800732 ),
	VERT( 0xc102083e, 0xc1027337, 0xc1082e5d ),
	NORM( 0x3e825ffc, 0x3e82b3bb, 0xbf6ec7a6 ),
	NFlagsW( 3455, 21.742035 ),
	VERT( 0xc116756a, 0xc0f7b68c, 0x411355dd ),
	NORM( 0xbf24cf1c, 0xbdc8904d, 0x3f42482a ),
	NFlagsW( 3456, 3.691398 ),
	VERT( 0xc0f39ee7, 0xc0f0f101, 0x413c6320 ),
	NORM( 0xbf1f9b67, 0xbe546427, 0x3f40fb7e ),
	NFlagsW( 3458, 24.708717 ),
	VERT( 0xc0b56dd6, 0xc0d4c48d, 0xc0f9c4a8 ),
	NORM( 0xbe8508d8, 0xbd032fd8, 0xbf771240 ),
	NFlagsW( 3460, 41.221825 ),
	VERT( 0xc11ae451, 0xc0aedb39, 0xc0ebcac1 ),
	NORM( 0x3dde6529, 0x3ee1072b, 0xbf644335 ),
	NFlagsW( 3462, 43.388031 ),
	VERT( 0xc1009327, 0xc09b161a, 0x413fd3ae ),
	NORM( 0xbf1d1c4f, 0xbe2b95b8, 0x3f4583d6 ),
	NFlagsW( 3465, 58.274887 ),
	VERT( 0xc10d61dc, 0xc09acbf9, 0xc0e5abf5 ),
	NORM( 0xbdbef0cc, 0x3e973ca6, 0xbf7368d5 ),
	NFlagsW( 3466, 37.772385 ),
	VERT( 0xc06af95d, 0xc08bc89b, 0xc11c224a ),
	NORM( 0xbf1c3538, 0xbe8d3ed7, 0xbf3e1fff ),
	NFlagsW( 3467, 50.111164 ),
	VERT( 0xc101756f, 0xc0392132, 0xc0d9270e ),
	NORM( 0xbe9e0af2, 0x3edae2d7, 0xbf598479 ),
	NFlagsW( 3471, 54.972893 ),
	VERT( 0xc0d6b771, 0xc0068618, 0xc0e578f2 ),
	NORM( 0xbf2b8efe, 0x3d45204c, 0xbf3d9c1b ),
	NFlagsW( 3476, 64.488571 ),
	VERT( 0xc11cea50, 0xbfc0a572, 0xc06e03e1 ),
	NORM( 0xbead8625, 0x3f595f80, 0xbecf6f65 ),
	NFlagsW( 3477, 57.687561 ),
	VERT( 0xc1133e2a, 0x39afb7a5, 0xc0698af8 ),
	NORM( 0xbf5d4f32, 0xbd846ea1, 0xbeff37f5 ),
	NFlagsW( 3482, 66.395607 ),
	VERT( 0xc0d6b781, 0x40069129, 0xc0e578e5 ),
	NORM( 0xbf277a8d, 0xbcf61d7b, 0xbf417664 ),
	NFlagsW( 3488, 64.197090 ),
	VERT( 0xc1017572, 0x40392c49, 0xc0d926fd ),
	NORM( 0xbe9e0b10, 0xbedae26f, 0xbf59848a ),
	NFlagsW( 3493, 52.887581 ),
	VERT( 0xc06af97c, 0x408bce27, 0xc11c223c ),
	NORM( 0xbf1ffb68, 0x3e90476d, 0xbf3a6162 ),
	NFlagsW( 3497, 50.083332 ),
	VERT( 0xc10d61d8, 0x409ad189, 0xc0e5abd8 ),
	NORM( 0xbdbef0c6, 0xbe973c4d, 0xbf7368e3 ),
	NFlagsW( 3498, 37.421749 ),
	VERT( 0xc1009323, 0x409b1b3e, 0x413fd3bb ),
	NORM( 0xbf1d1c51, 0x3e2b955d, 0x3f4583dd ),
	NFlagsW( 3499, 58.690090 ),
	VERT( 0xc11ae44d, 0x40aee0cd, 0xc0ebcaa2 ),
	NORM( 0x3dde6511, 0xbee106e2, 0xbf644348 ),
	NFlagsW( 3502, 43.560120 ),
	VERT( 0xc0b56dd5, 0x40d4ca15, 0xc0f9c484 ),
	NORM( 0xbe8508e3, 0x3d033375, 0xbf77123d ),
	NFlagsW( 3504, 41.217567 ),
	VERT( 0xc0f39eee, 0x40f0f624, 0x413c6334 ),
	NORM( 0xbf1f9b6b, 0x3e5463c2, 0x3f40fb86 ),
	NFlagsW( 3506, 24.780645 ),
	VERT( 0xc1167569, 0x40f7bbc4, 0x411355f2 ),
	NORM( 0xbf24cf20, 0x3dc88fe1, 0x3f42482a ),
	NFlagsW( 3508, 3.654005 ),
	VERT( 0xc102083a, 0x41027603, 0xc1082e48 ),
	NORM( 0x3e82600d, 0xbe82b37e, 0xbf6ec7ae ),
	NFlagsW( 3509, 21.740330 ),
	VERT( 0xc0d27f14, 0x4108459a, 0xc101e0b1 ),
	NORM( 0x3e5726dd, 0xbddb56df, 0xbf78c780 ),
	NFlagsW( 3512, 33.789204 ),
	VERT( 0xbfcddb8a, 0x410c4924, 0xc10df891 ),
	NORM( 0xbee9c72e, 0x3ed67eb7, 0xbf48ecdc ),
	NFlagsW( 3513, 52.703743 ),
	VERT( 0xc02fe417, 0x412220d3, 0xc10017b7 ),
	NORM( 0xbe729749, 0x3e84caac, 0xbf6fafa7 ),
	NFlagsW( 3514, 49.205322 ),
	VERT( 0xc07e0e57, 0x413a1d23, 0xc0ee6cc7 ),
	NORM( 0x3d624e93, 0x3ea71045, 0xbf719325 ),
	NFlagsW( 3516, 29.309162 ),
	VERT( 0xc0938dca, 0x413bc431, 0x413a9b86 ),
	NORM( 0xbea431ae, 0x3ee22d9e, 0x3f567e07 ),
	NFlagsW( 3517, 0.082367 ),
	VERT( 0xc0c36e2e, 0x413f538a, 0xc0fea7c1 ),
	NORM( 0x3e65a643, 0x3e846ec5, 0xbf7087f6 ),
	NFlagsW( 3519, 0.040546 ),
	VERT( 0xc01c074e, 0x416086e5, 0xc0b65f12 ),
	NORM( 0x3d9cd72d, 0x3f3a2124, 0xbf2ea9f2 ),
	NFlagsW( 3525, 3.291633 ),
	VERT( 0xbf9339d9, 0x41758cc5, 0xc05fb3cd ),
	NORM( 0x3de18192, 0x3f65d53d, 0xbeda5758 ),
	NFlagsW( 3530, 10.395180 ),
	VERT( 0xbf3f8de6, 0x41818951, 0xbf73c810 ),
	NORM( 0x3e12553d, 0x3f78adc8, 0xbe422cc0 ),
	NFlagsW( 3535, 26.527151 ),
	CnkV_VN_NF(FV_CONT|FW_END, 393),
	OffnbIdx(0, 56),
	VERT( 0xbf486014, 0xc18375f5, 0x400a3206 ),
	NORM( 0x3e5319bd, 0xbf7a642f, 0x3ced4a15 ),
	NFlagsW( 3427, 26.153179 ),
	VERT( 0xbfccace4, 0xc182dec0, 0x409364e5 ),
	NORM( 0x3e5c7fa4, 0xbf7044f8, 0x3e8a199c ),
	NFlagsW( 3428, 0.777021 ),
	VERT( 0xbf3f8e73, 0xc18187fc, 0xbf73cad4 ),
	NORM( 0x3e125567, 0xbf78adc0, 0xbe422d81 ),
	NFlagsW( 3429, 26.525143 ),
	VERT( 0x3e6cb8e3, 0xc1796f05, 0x40b34e46 ),
	NORM( 0x3dc70bcc, 0xbf72797f, 0x3e9c7fdf ),
	NFlagsW( 3431, 91.910347 ),
	VERT( 0x3f5e3efb, 0xc1671e4b, 0x41071bc9 ),
	NORM( 0x3e26fe0a, 0xbf6351f3, 0x3edc2b76 ),
	NFlagsW( 3435, 99.983795 ),
	VERT( 0x3e4a8cfd, 0xc15ce5b3, 0xc0cf7d24 ),
	NORM( 0xbda69432, 0xbf473942, 0xbf1f699b ),
	NFlagsW( 3440, 80.132362 ),
	VERT( 0x3ec9088a, 0xc150d979, 0x4137ff7f ),
	NORM( 0x3e0a57aa, 0xbf3325d7, 0x3f33924a ),
	NFlagsW( 3441, 99.802856 ),
	VERT( 0x3f6361dd, 0xc144a586, 0xc0fdb187 ),
	NORM( 0xbe5ef549, 0xbf2740ec, 0xbf399f18 ),
	NFlagsW( 3443, 94.549767 ),
	VERT( 0xc028872c, 0xc14226e0, 0x41411659 ),
	NORM( 0xbddc185d, 0xbef9147c, 0x3f5df747 ),
	NFlagsW( 3444, 3.079022 ),
	VERT( 0x3ed0efbd, 0xc12b6f5c, 0x414bf975 ),
	NORM( 0x3da5fee5, 0xbeaf202d, 0x3f6fa9a6 ),
	NFlagsW( 3449, 98.474373 ),
	VERT( 0xc002fcc7, 0xc1069074, 0x4157e972 ),
	NORM( 0x395f3997, 0xbe57961e, 0x3f7a431e ),
	NFlagsW( 3453, 41.186050 ),
	VERT( 0xc0871db3, 0xc10534fc, 0x4154e5cc ),
	NORM( 0xbe817bb7, 0xbe5588ff, 0x3f71db54 ),
	NFlagsW( 3454, 27.987076 ),
	VERT( 0x3f8adf1f, 0xc0f688ea, 0x41514ebc ),
	NORM( 0x3e6e092a, 0xbe250a0f, 0x3f758b80 ),
	NFlagsW( 3457, 99.166092 ),
	VERT( 0xbeef3e3a, 0xc0ece49e, 0xc12e4ea2 ),
	NORM( 0xbf178ca6, 0xbede9b0b, 0xbf2db9a4 ),
	NFlagsW( 3459, 62.289303 ),
	VERT( 0xc00a4b47, 0xc0b7452c, 0x415d6e62 ),
	NORM( 0xbce9cf0c, 0xbd8844d9, 0x3f7f5402 ),
	NFlagsW( 3461, 43.409412 ),
	VERT( 0xc09a5620, 0xc0ae889e, 0x415504eb ),
	NORM( 0xbe91f670, 0xbd9d16e9, 0x3f7496f9 ),
	NFlagsW( 3463, 42.788319 ),
	VERT( 0x3fa77548, 0xc0adf5d7, 0x4156f62e ),
	NORM( 0x3e6543c2, 0xbd934ff8, 0x3f78d21e ),
	NFlagsW( 3464, 98.829002 ),
	VERT( 0x3fbd88b5, 0xc0493a2b, 0x4155efd0 ),
	NORM( 0x3e47c298, 0x3e02d43a, 0x3f78f134 ),
	NFlagsW( 3468, 97.316162 ),
	VERT( 0x3fc822d7, 0xc048f852, 0xc16d774f ),
	NORM( 0xbf08fa53, 0xbe59d69b, 0xbf514d3f ),
	NFlagsW( 3469, 99.984070 ),
	VERT( 0xc014dc45, 0xc041473c, 0x415c4582 ),
	NORM( 0xbc7d48d9, 0x3e7ed723, 0x3f77e9fd ),
	NFlagsW( 3470, 40.506260 ),
	VERT( 0xbfa8e087, 0xc0289188, 0xc149d867 ),
	NORM( 0xbf22102b, 0xbe5451d9, 0xbf3eedee ),
	NFlagsW( 3472, 50.545895 ),
	VERT( 0xc0ad8e8d, 0xc0254df8, 0x4155240b ),
	NORM( 0xbe690975, 0x3e96dad4, 0x3f6d98f6 ),
	NFlagsW( 3473, 42.318401 ),
	VERT( 0xc10756db, 0xc00a767b, 0x4143443a ),
	NORM( 0xbf050dbb, 0x3ea36827, 0x3f4adf63 ),
	NFlagsW( 3474, 71.228287 ),
	VERT( 0xc064c59d, 0xc009bc35, 0xc12c4e21 ),
	NORM( 0xbf301832, 0xbe16bfce, 0xbf35f39b ),
	NFlagsW( 3475, 56.440163 ),
	VERT( 0x3faf68e0, 0x39b2efe7, 0xc16e4103 ),
	NORM( 0xbf0b23bc, 0x35a17216, 0xbf56e2ec ),
	NFlagsW( 3478, 99.317757 ),
	VERT( 0xbfab1fc0, 0x39b29fae, 0xc14c15d6 ),
	NORM( 0xbf231e53, 0x35773a9b, 0xbf454d80 ),
	NFlagsW( 3479, 38.364162 ),
	VERT( 0xc06a35f0, 0x39b21f77, 0xc129611d ),
	NORM( 0xbf341c3b, 0x357a2419, 0xbf35ec81 ),
	NFlagsW( 3480, 65.191078 ),
	VERT( 0xc0e11790, 0x39b1246a, 0xc0e21fad ),
	NORM( 0xbf47d837, 0xbcefe649, 0xbf1fd185 ),
	NFlagsW( 3481, 66.666641 ),
	VERT( 0xc117006e, 0x39a7c473, 0x4100f4e5 ),
	NORM( 0xbf53783c, 0xb3bf055a, 0x3f10478f ),
	NFlagsW( 3483, 82.385834 ),
	VERT( 0xc0ea78c1, 0x39a56555, 0x41233239 ),
	NORM( 0xbf11c0a7, 0xb4d54ffa, 0x3f527506 ),
	NFlagsW( 3484, 64.947533 ),
	VERT( 0xc0ac44f7, 0x39a3aff9, 0x4137a8a1 ),
	NORM( 0xbec5dc20, 0xb527ba59, 0x3f6c1cab ),
	NFlagsW( 3485, 62.429451 ),
	VERT( 0xc018da4b, 0x39a1e3b0, 0x4143c54c ),
	NORM( 0xbe016322, 0xb59318c4, 0x3f7df2bc ),
	NFlagsW( 3486, 48.838108 ),
	VERT( 0x3f774651, 0x39a02a19, 0x414a9eba ),
	NORM( 0x3ba9eafd, 0xb5969ffa, 0x3f7fff1e ),
	NFlagsW( 3487, 70.273277 ),
	VERT( 0xc064c5ad, 0x4009c758, 0xc12c4e1b ),
	NORM( 0xbf31e2fa, 0x3e0851f5, 0xbf34eab7 ),
	NFlagsW( 3489, 56.134460 ),
	VERT( 0xc10756d6, 0x400a80c2, 0x41434441 ),
	NORM( 0xbf050db7, 0xbea36853, 0x3f4adf59 ),
	NFlagsW( 3490, 71.498558 ),
	VERT( 0xc0ad8e84, 0x40255820, 0x41552412 ),
	NORM( 0xbe690959, 0xbe96db2f, 0x3f6d98e8 ),
	NFlagsW( 3491, 42.519169 ),
	VERT( 0xbfa8e0c6, 0x40289cae, 0xc149d85f ),
	NORM( 0xbf207eda, 0x3e4e11b6, 0xbf40ac79 ),
	NFlagsW( 3492, 50.504501 ),
	VERT( 0xc014dc25, 0x4041514a, 0x415c458a ),
	NORM( 0xbc7d473a, 0xbe7ed7cc, 0x3f77e9f3 ),
	NFlagsW( 3494, 40.482441 ),
	VERT( 0x3fc82299, 0x4049037e, 0xc16d7743 ),
	NORM( 0xbf08fa52, 0x3e59d76f, 0xbf514d35 ),
	NFlagsW( 3495, 99.984062 ),
	VERT( 0x3fbd8876, 0x40494421, 0x4155efd7 ),
	NORM( 0x3e47c292, 0xbe02d527, 0x3f78f12e ),
	NFlagsW( 3496, 97.307808 ),
	VERT( 0x3fa7758a, 0x40adfad3, 0x4156f63d ),
	NORM( 0x3e6543e6, 0x3d934e7d, 0x3f78d220 ),
	NFlagsW( 3500, 98.822128 ),
	VERT( 0xc09a5627, 0x40ae8db0, 0x415504fc ),
	NORM( 0xbe91f679, 0x3d9d15c8, 0x3f7496fb ),
	NFlagsW( 3501, 42.789154 ),
	VERT( 0xc00a4b66, 0x40b74a2e, 0x415d6e70 ),
	NORM( 0xbce9cf85, 0x3d884381, 0x3f7f5405 ),
	NFlagsW( 3503, 43.272144 ),
	VERT( 0xbeef3dae, 0x40ecea27, 0xc12e4e8e ),
	NORM( 0xbf171ad5, 0x3ee0027a, 0xbf2da950 ),
	NFlagsW( 3505, 62.284340 ),
	VERT( 0x3f8adee3, 0x40f68de5, 0x41514ed0 ),
	NORM( 0x3e6e0912, 0x3e250975, 0x3f758b87 ),
	NFlagsW( 3507, 99.161850 ),
	VERT( 0xc0871db2, 0x41053783, 0x4154e5e3 ),
	NORM( 0xbe817bbc, 0x3e558890, 0x3f71db5b ),
	NFlagsW( 3510, 27.806278 ),
	VERT( 0xc002fcb6, 0x410692f8, 0x4157e98b ),
	NORM( 0x396045a8, 0x3e57955c, 0x3f7a4327 ),
	NFlagsW( 3511, 40.946243 ),
	VERT( 0x3ed0ef4f, 0x412b71dc, 0x414bf990 ),
	NORM( 0x3da5ff13, 0x3eaf1fd4, 0x3f6fa9b6 ),
	NFlagsW( 3515, 98.462761 ),
	VERT( 0xc028872a, 0x41422969, 0x4141167b ),
	NORM( 0xbddc1880, 0x3ef91438, 0x3f5df75b ),
	NFlagsW( 3520, 3.004276 ),
	VERT( 0x3f6361e7, 0x4144a83f, 0xc0fdb143 ),
	NORM( 0xbe5ef542, 0x3f27411d, 0xbf399ef0 ),
	NFlagsW( 3521, 94.546722 ),
	VERT( 0x3ec9089f, 0x4150dbfd, 0x4137ffa2 ),
	NORM( 0x3e0a57ce, 0x3f3325b4, 0x3f339268 ),
	NFlagsW( 3523, 99.802086 ),
	VERT( 0x3e4a8d29, 0x415ce867, 0xc0cf7cd7 ),
	NORM( 0xbda69405, 0x3f47395b, 0xbf1f697f ),
	NFlagsW( 3524, 80.104759 ),
	VERT( 0x3f5e3f07, 0x416720d6, 0x41071bf0 ),
	NORM( 0x3e26fe1e, 0x3f6351d8, 0x3edc2bcf ),
	NFlagsW( 3529, 99.983833 ),
	VERT( 0x3e6cba16, 0x4179719d, 0x40b34e9d ),
	NORM( 0x3dc70c03, 0x3f72796d, 0x3e9c8039 ),
	NFlagsW( 3533, 91.916641 ),
	VERT( 0xbfccacbd, 0x4182e00f, 0x40936540 ),
	NORM( 0x3e5c7fca, 0x3f7044e9, 0x3e8a19d3 ),
	NFlagsW( 3536, 0.776663 ),
	VERT( 0xbf486007, 0x41837745, 0x400a32ba ),
	NORM( 0x3e5319b2, 0x3f7a6429, 0x3ced4e3f ),
	NFlagsW( 3537, 26.156403 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_Spine[]
START
VList      vertex_kihon11_Bip01_Bip01_Spine,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_Spine[]
START
EvalFlags ( 0x00000004 ),
CNKModel   model_kihon11_Bip01_Bip01_Spine,
OPosition  (  7.085594F,  0.000010F,  0.010086F ),
OAngle     ( -0.000238F,  0.045626F,  0.000079F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_Spine1,
Sibling     object_kihon11_Bip01_body,
END

CNKOBJECT_END



CNKOBJECT_START

VLIST      vertex_kihon11_Bip01_Bip01_Pelvis[]
START
	CnkV_VN(0x0, 25),
	OffnbIdx(976, 4),
	VERT( 0x4095a353, 0xc16e01f2, 0x4108d746 ),
	NORM( 0xbd1308c8, 0xbf677648, 0x3ed9f653 ),
	VERT( 0x40928600, 0xc15e0b3d, 0x412aeba2 ),
	NORM( 0xbde420cc, 0xbf4fb680, 0x3f12e52b ),
	VERT( 0x409285b1, 0x415e0e2f, 0x412aeb4f ),
	NORM( 0xbde421e1, 0x3f4fb6b5, 0x3f12e4d9 ),
	VERT( 0x4095a2fe, 0x416e04d7, 0x4108d6ed ),
	NORM( 0xbd130aa6, 0x3f677669, 0x3ed9f5bd ),
	CnkV_VN_NF(FV_CONT|FW_START, 848),
	OffnbIdx(3422, 121),
	VERT( 0xbeb6ceeb, 0xc18b883e, 0xbfff86ef ),
	NORM( 0x3dba5be1, 0xbf76f844, 0xbe7cf587 ),
	NFlagsW( 0, 1.674459 ),
	VERT( 0x40673b93, 0xc18b3fad, 0x400cdc57 ),
	NORM( 0x3e533d71, 0xbf79c8b9, 0x3d96bc4d ),
	NFlagsW( 1, 99.935692 ),
	VERT( 0x40322f20, 0xc18638ba, 0x40870103 ),
	NORM( 0x3d0a5d09, 0xbf696356, 0x3ed1ada3 ),
	NFlagsW( 2, 99.264397 ),
	VERT( 0x4074016f, 0xc185e2e7, 0xbfaf3ff5 ),
	NORM( 0x3e6e44ee, 0xbf70e6b0, 0xbe7b891f ),
	NFlagsW( 3, 99.631744 ),
	VERT( 0xbf10994c, 0xc1843f3b, 0xc08f9f80 ),
	NORM( 0x3dfbacc8, 0xbf5c7b59, 0xbefc75e0 ),
	NFlagsW( 4, 0.348601 ),
	VERT( 0x40c9bf77, 0xc18375ec, 0x400ae29a ),
	NORM( 0x3e53201f, 0xbf7a6426, 0x3cebfa53 ),
	NFlagsW( 5, 73.842468 ),
	VERT( 0x40afb037, 0xc182deb3, 0x4093c281 ),
	NORM( 0x3e5cb844, 0xbf7044de, 0x3e8a03a3 ),
	NFlagsW( 6, 99.219437 ),
	VERT( 0x40cac55e, 0xc18187fa, 0xbf710a53 ),
	NORM( 0x3e122e28, 0xbf78adc9, 0xbe424a43 ),
	NFlagsW( 7, 73.464951 ),
	VERT( 0x40618dca, 0xc17e8294, 0xc0707fb7 ),
	NORM( 0x3e6950a7, 0xbf5a0e2f, 0xbef18aaf ),
	NFlagsW( 8, 99.018410 ),
	VERT( 0x40ea47b5, 0xc1796ee2, 0x40b39fea ),
	NORM( 0x3dc78c14, 0xbf727967, 0x3e9c763c ),
	NFlagsW( 9, 8.089652 ),
	VERT( 0x40874add, 0xc17917ee, 0x40df3293 ),
	NORM( 0xbca283ce, 0xbf68bf46, 0x3ed4f81c ),
	NFlagsW( 10, 99.974243 ),
	VERT( 0x3fc113b2, 0xc177f399, 0x40c236d9 ),
	NORM( 0xbdd4fa78, 0xbf55a17d, 0x3f0a865d ),
	NFlagsW( 11, 87.439682 ),
	VERT( 0x40bdd813, 0xc1758a1a, 0xc05eff21 ),
	NORM( 0x3de0d064, 0xbf65d542, 0xbeda62b7 ),
	NFlagsW( 12, 89.576630 ),
	VERT( 0x40febc52, 0xc1671e1a, 0x41074281 ),
	NORM( 0x3e27581d, 0xbf6351cf, 0x3edc1ae9 ),
	NFlagsW( 13, 0.016207 ),
	VERT( 0x4018ebb3, 0xc164c3bb, 0x4109cee3 ),
	NORM( 0xbe78ddaf, 0xbf53fffb, 0x3f014f6c ),
	NFlagsW( 14, 98.279663 ),
	VERT( 0x40132130, 0xc16415f6, 0xc0cd0655 ),
	NORM( 0x3e7425ca, 0xbf1ecd4f, 0xbf3f4a9f ),
	NFlagsW( 15, 92.955574 ),
	VERT( 0xbdcf09d9, 0xc1611ff2, 0x40f92e80 ),
	NORM( 0xbe36939b, 0xbf3d5a23, 0x3f2620af ),
	NFlagsW( 16, 27.176830 ),
	VERT( 0x40949467, 0xc160843d, 0xc0b5fc57 ),
	NORM( 0x3d9bbb97, 0xbf3a211f, 0xbf2eadef ),
	NFlagsW( 17, 96.360382 ),
	VERT( 0x40e8e777, 0xc15ce5c5, 0xc0cf2b51 ),
	NORM( 0xbda79799, 0xbf473970, 0xbf1f6523 ),
	NFlagsW( 18, 19.867603 ),
	VERT( 0x40ef98e6, 0xc150d93c, 0x413827bd ),
	NORM( 0x3e0aea56, 0xbf3325a2, 0x3f338b6a ),
	NFlagsW( 19, 0.197140 ),
	VERT( 0x400fc3bb, 0xc14eb524, 0x412d3312 ),
	NORM( 0xbea9e61b, 0xbf2fe452, 0x3f257959 ),
	NFlagsW( 20, 99.811714 ),
	VERT( 0x40fef5da, 0xc144a59c, 0xc0fd6442 ),
	NORM( 0xbe5f8c64, 0xbf274127, 0xbf39938a ),
	NFlagsW( 21, 5.450234 ),
	VERT( 0x408ec87c, 0xc14226a7, 0x41414872 ),
	NORM( 0xbddaadff, 0xbef9140b, 0x3f5dfd01 ),
	NFlagsW( 22, 96.920982 ),
	VERT( 0x3f78d9c9, 0xc13f50ea, 0xc0fe2d1b ),
	NORM( 0x3e64e23f, 0xbe846edf, 0xbf7093a0 ),
	NFlagsW( 23, 73.964569 ),
	VERT( 0xbec9addb, 0xc13c65ac, 0x41258ca3 ),
	NORM( 0xbf029fd2, 0xbef4d9e6, 0x3f36fd66 ),
	NFlagsW( 24, 29.920271 ),
	VERT( 0x401ef715, 0xc13bc171, 0x413ad3f1 ),
	NORM( 0xbea3da24, 0xbee22d85, 0x3f568ec7 ),
	NFlagsW( 25, 99.891960 ),
	VERT( 0x40470b21, 0xc13a1a82, 0xc0ee0018 ),
	NORM( 0x3d5f3a44, 0xbea7109a, 0xbf7195f5 ),
	NFlagsW( 26, 66.212120 ),
	VERT( 0x40f01f78, 0xc12b6f19, 0x414c219b ),
	NORM( 0x3da785fc, 0xbeaf1fa4, 0x3f6fa57f ),
	NFlagsW( 27, 1.525634 ),
	VERT( 0x408a9714, 0xc1221e30, 0xc0ffcabb ),
	NORM( 0xbe735aae, 0xbe84caea, 0xbf6fa33d ),
	NFlagsW( 28, 50.324623 ),
	VERT( 0x40af0c90, 0xc10c4687, 0xc10dc9f3 ),
	NORM( 0xbeea190d, 0xbed67ef8, 0xbf48d4f2 ),
	NFlagsW( 29, 47.284729 ),
	VERT( 0x3f004a7b, 0xc10842fa, 0xc101a1dd ),
	NORM( 0x3e565ba7, 0x3ddb555e, 0xbf78d27c ),
	NFlagsW( 30, 40.960052 ),
	VERT( 0x40a196f1, 0xc1069034, 0x41581991 ),
	NORM( 0x3a81fa0e, 0xbe57950d, 0x3f7a4325 ),
	NFlagsW( 31, 58.813953 ),
	VERT( 0x4037ecd2, 0xc10534c1, 0x41551d03 ),
	NORM( 0xbe81190f, 0xbe55881b, 0x3f71e890 ),
	NFlagsW( 32, 72.012932 ),
	VERT( 0xbf862ac7, 0xc1027364, 0xc107ea65 ),
	NORM( 0x3e81fe93, 0x3e82b34a, 0xbf6ed4fd ),
	NFlagsW( 33, 32.721050 ),
	VERT( 0xc013e2e2, 0xc0f7b650, 0x41139df8 ),
	NORM( 0xbf24a77b, 0xbdc88f59, 0x3f4269c6 ),
	NFlagsW( 34, 0.460038 ),
	VERT( 0x4102e534, 0xc0f6885f, 0x415174a1 ),
	NORM( 0x3e6ed16d, 0xbe2508e3, 0x3f757f66 ),
	NFlagsW( 35, 0.833905 ),
	VERT( 0xbf04a64d, 0xc0f0f0a7, 0x413ca562 ),
	NORM( 0xbf1f7408, 0xbe5463ab, 0x3f411c12 ),
	NFlagsW( 36, 58.715267 ),
	VERT( 0x40d38254, 0xc0ece4eb, 0xc12e23a8 ),
	NORM( 0xbf17b003, 0xbede9b93, 0xbf2d9a9d ),
	NFlagsW( 37, 37.710697 ),
	VERT( 0x3fb47228, 0xc0d4c4d6, 0xc0f94ccc ),
	NORM( 0xbe856d90, 0xbd0334a0, 0xbf7704aa ),
	NFlagsW( 38, 41.221825 ),
	VERT( 0x409df1e9, 0xc0b744a9, 0x415d9ed4 ),
	NORM( 0xbce34d37, 0xbd8842b3, 0x3f7f557f ),
	NFlagsW( 39, 56.590588 ),
	VERT( 0xc02676d2, 0xc0aedb8f, 0xc0eb38c5 ),
	NORM( 0x3ddcf08f, 0x3ee106b7, 0xbf6448fa ),
	NFlagsW( 40, 3.562094 ),
	VERT( 0x40117c01, 0xc0ae882b, 0x41553e0b ),
	NORM( 0xbe9192b0, 0xbd9d1523, 0x3f74a5da ),
	NFlagsW( 41, 57.211685 ),
	VERT( 0x4106791c, 0xc0adf548, 0x41571b4e ),
	NORM( 0x3e660ea9, 0xbd934d9b, 0x3f78c66f ),
	NFlagsW( 42, 1.171002 ),
	VERT( 0xbf70d68a, 0xc09b15c0, 0x41401746 ),
	NORM( 0xbf1cf404, 0xbe2b9536, 0x3f45a3e5 ),
	NFlagsW( 43, 39.703457 ),
	VERT( 0xbfe0d50c, 0xc09acc4a, 0xc0e51f81 ),
	NORM( 0xbdc07df6, 0x3e973c1a, 0xbf736408 ),
	NFlagsW( 44, 29.161226 ),
	VERT( 0x405a01d7, 0xc08bc8ec, 0xc11becea ),
	NORM( 0xbf1c5bf0, 0xbe8d3f69, 0xbf3e0010 ),
	NFlagsW( 45, 49.857185 ),
	VERT( 0x41093b51, 0xc049390c, 0x41561455 ),
	NORM( 0x3e488d86, 0x3e02d565, 0x3f78e6f8 ),
	NFlagsW( 46, 2.683837 ),
	VERT( 0x410a3290, 0xc048f91f, 0xc16d5306 ),
	NORM( 0xbf0924f6, 0xbe59d7ca, 0xbf513140 ),
	NFlagsW( 47, 0.015926 ),
	VERT( 0x4098a8ea, 0xc0414638, 0x415c7671 ),
	NORM( 0xbc70a7c4, 0x3e7ed82f, 0x3f77eab6 ),
	NFlagsW( 48, 59.493732 ),
	VERT( 0xbf816782, 0xc03921c7, 0xc0d89f88 ),
	NORM( 0xbe9e63b2, 0x3edae24b, 0xbf597477 ),
	NFlagsW( 49, 30.690199 ),
	VERT( 0x40b832ce, 0xc0289248, 0xc149aaba ),
	NORM( 0xbf22370f, 0xbe545302, 0xbf3eccd3 ),
	NFlagsW( 50, 49.454109 ),
	VERT( 0x3fd61662, 0xc0254d17, 0x41555f14 ),
	NORM( 0xbe6847cd, 0x3e96db46, 0x3f6da4be ),
	NFlagsW( 51, 57.681595 ),
	VERT( 0xbfae8363, 0xc00a75c8, 0x41438927 ),
	NORM( 0xbf04e464, 0x3ea36872, 0x3f4afa69 ),
	NFlagsW( 52, 28.771708 ),
	VERT( 0x4060285a, 0xc009bce8, 0xc12c191c ),
	NORM( 0xbf303d42, 0xbe16c0f4, 0xbf35cfa8 ),
	NFlagsW( 53, 43.559845 ),
	VERT( 0x3ebd7054, 0xc00686a7, 0xc0e4fa75 ),
	NORM( 0xbf2bb5a3, 0x3d451b9a, 0xbf3d7921 ),
	NFlagsW( 54, 32.477646 ),
	VERT( 0xc02e5f48, 0xbfc0a64f, 0xc06cde8d ),
	NORM( 0xbeadb092, 0x3f595f58, 0xbecf4c78 ),
	NFlagsW( 55, 18.766502 ),
	VERT( 0x41071b23, 0x3998f597, 0xc16e1c27 ),
	NORM( 0xbf0b4f88, 0xb665864e, 0xbf56c68a ),
	NFlagsW( 56, 0.682248 ),
	VERT( 0x40b7a20f, 0x399a5ac7, 0xc14be826 ),
	NORM( 0xbf234689, 0xb6725354, 0xbf452c3b ),
	NFlagsW( 57, 61.635841 ),
	VERT( 0x405aba5e, 0x399c0e0f, 0xc1292bd9 ),
	NORM( 0xbf34414e, 0xb66a1491, 0xbf35c7c6 ),
	NFlagsW( 58, 34.808918 ),
	VERT( 0x3d3bc7a2, 0x399f136e, 0xc0e19f25 ),
	NORM( 0xbf47f8c7, 0xbcefef23, 0xbf1fa8c3 ),
	NFlagsW( 59, 33.333321 ),
	VERT( 0xc007add1, 0x39a2be4b, 0xc0686da1 ),
	NORM( 0xbf5d692f, 0xbd8470a9, 0xbefeddac ),
	NFlagsW( 60, 33.197655 ),
	VERT( 0xc0161e1f, 0x39b41582, 0x41013cfb ),
	NORM( 0xbf535ace, 0x3510bcc2, 0x3f1072a8 ),
	NFlagsW( 61, 17.614170 ),
	VERT( 0xbe6f1fe5, 0x39b8ae80, 0x4123736d ),
	NORM( 0xbf1195bc, 0x35f6fe55, 0x3f5292b8 ),
	NFlagsW( 62, 35.052467 ),
	VERT( 0x3fdb0c84, 0x39bbe1d5, 0x4137e37d ),
	NORM( 0xbec57bd8, 0x3621bb80, 0x3f6c30d1 ),
	NFlagsW( 63, 37.570549 ),
	VERT( 0x40969fe1, 0x39bf000f, 0x4143f663 ),
	NORM( 0xbe00940b, 0x3639dbde, 0x3f7df94f ),
	NFlagsW( 64, 51.161896 ),
	VERT( 0x4100fc4d, 0x39c1dd78, 0x414ac4e0 ),
	NORM( 0x3bc402e2, 0x364cae35, 0x3f7ffed4 ),
	NFlagsW( 65, 29.726717 ),
	VERT( 0x3ebd6e95, 0x4006909a, 0xc0e4fa8d ),
	NORM( 0xbf27a1f9, 0xbcf626ee, 0xbf41543a ),
	NFlagsW( 66, 32.682289 ),
	VERT( 0x40602832, 0x4009c6a5, 0xc12c1928 ),
	NORM( 0xbf3207db, 0x3e0850cf, 0xbf34c67a ),
	NFlagsW( 67, 43.865540 ),
	VERT( 0xbfae8374, 0x400a8176, 0x4143891b ),
	NORM( 0xbf04e451, 0xbea36808, 0x3f4afa8b ),
	NFlagsW( 68, 28.501432 ),
	VERT( 0x3fd61647, 0x40255901, 0x41555f04 ),
	NORM( 0xbe68477a, 0xbe96dabd, 0x3f6da4d8 ),
	NFlagsW( 69, 57.480831 ),
	VERT( 0x40b832af, 0x40289bef, 0xc149aac9 ),
	NORM( 0xbf20a622, 0x3e4e108d, 0xbf408bcc ),
	NFlagsW( 70, 49.495499 ),
	VERT( 0xbf8167e4, 0x40392bb5, 0xc0d89fa9 ),
	NORM( 0xbe9e63a8, 0xbedae2fb, 0xbf59744c ),
	NFlagsW( 71, 32.034092 ),
	VERT( 0x4098a8e9, 0x4041524e, 0x415c7660 ),
	NORM( 0xbc70a343, 0xbe7ed6c0, 0x3f77eace ),
	NFlagsW( 72, 59.517563 ),
	VERT( 0x410a327f, 0x404902b0, 0xc16d5316 ),
	NORM( 0xbf0924fe, 0x3e59d640, 0xbf513153 ),
	NFlagsW( 73, 0.015936 ),
	VERT( 0x41093b40, 0x4049453f, 0x41561441 ),
	NORM( 0x3e488d98, 0xbe02d3fc, 0x3f78e704 ),
	NFlagsW( 74, 2.692190 ),
	VERT( 0x405a0185, 0x408bcdd6, 0xc11bed02 ),
	NORM( 0xbf20216a, 0x3e9046dc, 0xbf3a40d5 ),
	NFlagsW( 75, 49.884663 ),
	VERT( 0xbfe0d55a, 0x409ad138, 0xc0e51fb9 ),
	NORM( 0xbdc07d83, 0xbe973cd9, 0xbf7363ec ),
	NFlagsW( 76, 29.314428 ),
	VERT( 0xbf70d726, 0x409b1b98, 0x41401729 ),
	NORM( 0xbf1cf40d, 0x3e2b95df, 0x3f45a3d5 ),
	NFlagsW( 77, 39.285114 ),
	VERT( 0x41067915, 0x40adfb62, 0x41571b2e ),
	NORM( 0x3e660ebf, 0x3d9350da, 0x3f78c667 ),
	NFlagsW( 78, 1.177875 ),
	VERT( 0x40117bb3, 0x40ae8e23, 0x41553dec ),
	NORM( 0xbe9192c0, 0x3d9d178e, 0x3f74a5d2 ),
	NFlagsW( 79, 57.210846 ),
	VERT( 0xc0267701, 0x40aee077, 0xc0eb3906 ),
	NORM( 0x3ddcf11a, 0xbee10757, 0xbf6448d0 ),
	NFlagsW( 80, 3.549425 ),
	VERT( 0x409df1b9, 0x40b74ab2, 0x415d9eb0 ),
	NORM( 0xbce34e13, 0x3d8845a6, 0x3f7f5579 ),
	NFlagsW( 81, 56.727852 ),
	VERT( 0x3fb47191, 0x40d4c9cc, 0xc0f94d1d ),
	NORM( 0xbe856d9e, 0x3d032ead, 0xbf7704ab ),
	NFlagsW( 82, 41.217567 ),
	VERT( 0x40d38232, 0x40ece9da, 0xc12e23d5 ),
	NORM( 0xbf173e42, 0x3ee001f2, 0xbf2d8a9e ),
	NFlagsW( 83, 37.715660 ),
	VERT( 0xbf04a7e3, 0x40f0f67e, 0x413ca535 ),
	NORM( 0xbf1f7415, 0x3e54643e, 0x3f411bfd ),
	NFlagsW( 84, 58.644993 ),
	VERT( 0x4102e516, 0x40f68e70, 0x41517471 ),
	NORM( 0x3e6ed137, 0x3e250aa1, 0x3f757f56 ),
	NFlagsW( 85, 0.838150 ),
	VERT( 0xc013e33a, 0x40f7bc00, 0x41139dca ),
	NORM( 0xbf24a784, 0x3dc890d6, 0x3f4269b8 ),
	NFlagsW( 86, 0.459645 ),
	VERT( 0xbf862b60, 0x410275d6, 0xc107ea97 ),
	NORM( 0x3e81febb, 0xbe82b3ef, 0xbf6ed4e2 ),
	NFlagsW( 87, 32.717846 ),
	VERT( 0x4037ec73, 0x410537be, 0x41551cd1 ),
	NORM( 0xbe811927, 0x3e558975, 0x3f71e87b ),
	NFlagsW( 88, 72.193718 ),
	VERT( 0x40a196c9, 0x41069338, 0x4158195f ),
	NORM( 0x3a820815, 0x3e57966d, 0x3f7a4311 ),
	NFlagsW( 89, 59.053757 ),
	VERT( 0x3f0048b8, 0x41084572, 0xc101a20f ),
	NORM( 0x3e565c06, 0xbddb58c3, 0xbf78d26b ),
	NFlagsW( 90, 40.965542 ),
	VERT( 0x40af0c56, 0x410c4904, 0xc10dca26 ),
	NORM( 0xbeea1928, 0x3ed67e2a, 0xbf48d521 ),
	NFlagsW( 91, 47.285263 ),
	VERT( 0x408a96d2, 0x412220b4, 0xc0ffcb34 ),
	NORM( 0xbe735ace, 0x3e84ca18, 0xbf6fa358 ),
	NFlagsW( 92, 50.334610 ),
	VERT( 0x40f01f33, 0x412b721f, 0x414c2159 ),
	NORM( 0x3da785ab, 0x3eaf205c, 0x3f6fa55f ),
	NFlagsW( 93, 1.537234 ),
	VERT( 0x40470a9c, 0x413a1d04, 0xc0ee00a2 ),
	NORM( 0x3d5f3a22, 0x3ea70fc5, 0xbf71961a ),
	NFlagsW( 94, 66.236664 ),
	VERT( 0x401ef6bf, 0x413bc464, 0x413ad3aa ),
	NORM( 0xbea3da4b, 0x3ee22dfd, 0x3f568ea1 ),
	NFlagsW( 95, 99.890656 ),
	VERT( 0xbec9b20a, 0x413c688e, 0x41258c5d ),
	NORM( 0xbf029fe3, 0x3ef4da3e, 0x3f36fd3c ),
	NFlagsW( 96, 29.824516 ),
	VERT( 0x3f78d7ea, 0x413f5365, 0xc0fe2dad ),
	NORM( 0x3e64e203, 0x3e846e52, 0xbf7093b8 ),
	NFlagsW( 97, 73.901230 ),
	VERT( 0x408ec837, 0x414229a2, 0x4141482a ),
	NORM( 0xbddaaed6, 0x3ef914aa, 0x3f5dfcd0 ),
	NFlagsW( 98, 96.995720 ),
	VERT( 0x40fef594, 0x4144a828, 0xc0fd64d4 ),
	NORM( 0xbe5f8cd6, 0x3f2740e3, 0xbf3993bd ),
	NFlagsW( 99, 5.453276 ),
	VERT( 0x400fc318, 0x414eb810, 0x412d32c4 ),
	NORM( 0xbea9e65b, 0x3f2fe472, 0x3f257925 ),
	NFlagsW( 100, 99.805687 ),
	VERT( 0x40ef989c, 0x4150dc3a, 0x4138276e ),
	NORM( 0x3e0ae9f7, 0x3f3325ea, 0x3f338b27 ),
	NFlagsW( 101, 0.197916 ),
	VERT( 0x40e8e728, 0x415ce855, 0xc0cf2bf5 ),
	NORM( 0xbda7988c, 0x3f47392d, 0xbf1f6574 ),
	NFlagsW( 102, 19.895195 ),
	VERT( 0x40949438, 0x416086d1, 0xc0b5fd02 ),
	NORM( 0x3d9bb9c9, 0x3f3a20f7, 0xbf2eae21 ),
	NFlagsW( 103, 96.346741 ),
	VERT( 0xbdcf21d7, 0x416122c4, 0x40f92dd6 ),
	NORM( 0xbe36942c, 0x3f3d5a54, 0x3f26206c ),
	NFlagsW( 104, 26.950926 ),
	VERT( 0x4013207e, 0x4164187b, 0xc0cd06ff ),
	NORM( 0x3e7424e8, 0x3f1ecd2b, 0xbf3f4acd ),
	NFlagsW( 105, 92.858978 ),
	VERT( 0x4018eb00, 0x4164c69c, 0x4109ce90 ),
	NORM( 0xbe78de24, 0x3f54001f, 0x3f014f24 ),
	NFlagsW( 106, 98.229645 ),
	VERT( 0x40febc00, 0x41672106, 0x4107422a ),
	NORM( 0x3e27578d, 0x3f6351fc, 0x3edc1a49 ),
	NFlagsW( 107, 0.016160 ),
	VERT( 0x40bdd7c4, 0x41758cbd, 0xc05f0092 ),
	NORM( 0x3de0cedc, 0x3f65d524, 0xbeda6350 ),
	NFlagsW( 108, 89.575775 ),
	VERT( 0x3fc11252, 0x4177f669, 0x40c23620 ),
	NORM( 0xbdd4fbd9, 0x3f55a1aa, 0x3f0a860f ),
	NFlagsW( 109, 87.080734 ),
	VERT( 0x40874a8c, 0x41791acb, 0x40df31d9 ),
	NORM( 0xbca2875b, 0x3f68bf6a, 0x3ed4f77d ),
	NFlagsW( 110, 99.972481 ),
	VERT( 0x40ea4764, 0x417971c0, 0x40b39f30 ),
	NORM( 0x3dc78aed, 0x3f727986, 0x3e9c758d ),
	NFlagsW( 111, 8.083352 ),
	VERT( 0x40618d05, 0x417e852b, 0xc0708133 ),
	NORM( 0x3e694feb, 0x3f5a0e11, 0xbef18b45 ),
	NFlagsW( 112, 98.983200 ),
	VERT( 0x40cac512, 0x41818953, 0xbf711064 ),
	NORM( 0x3e122d4a, 0x3f78adc0, 0xbe424ba1 ),
	NFlagsW( 113, 73.462692 ),
	VERT( 0x40afafe2, 0x4182e01c, 0x4093c1be ),
	NORM( 0x3e5cb7bc, 0x3f704503, 0x3e8a02d4 ),
	NFlagsW( 114, 99.219536 ),
	VERT( 0x40c9bf19, 0x4183774e, 0x400ae110 ),
	NORM( 0x3e531f5f, 0x3f7a6432, 0x3cebed6b ),
	NFlagsW( 115, 73.839081 ),
	VERT( 0xbf109bfc, 0x41844081, 0xc08fa047 ),
	NORM( 0x3dfbabf0, 0x3f5c7b2e, 0xbefc7689 ),
	NFlagsW( 116, 0.328172 ),
	VERT( 0x407400b0, 0x4185e439, 0xbfaf4315 ),
	NORM( 0x3e6e4440, 0x3f70e6a3, 0xbe7b8a82 ),
	NFlagsW( 117, 99.609253 ),
	VERT( 0x40322e61, 0x41863a20, 0x4087003b ),
	NORM( 0x3d0a5ac1, 0x3f696384, 0x3ed1acde ),
	NFlagsW( 118, 99.200912 ),
	VERT( 0x40673abd, 0x418b410a, 0x400cdab6 ),
	NORM( 0x3e533ccb, 0x3f79c8cb, 0x3d96b8d9 ),
	NFlagsW( 119, 99.926468 ),
	VERT( 0xbeb6d51d, 0x418b898a, 0xbfff8a2d ),
	NORM( 0x3dba5ac7, 0x3f76f832, 0xbe7cf6ea ),
	NFlagsW( 120, 1.417190 ),
	CnkEnd()
END

CNKMODEL   model_kihon11_Bip01_Bip01_Pelvis[]
START
VList      vertex_kihon11_Bip01_Bip01_Pelvis,
PList      NULL,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       0.000000F,
END

CNKOBJECT  object_kihon11_Bip01_Bip01_Pelvis[]
START
EvalFlags ( 0x00000005 ),
CNKModel   model_kihon11_Bip01_Bip01_Pelvis,
OPosition  (  0.000002F,  0.000000F,  0.000000F ),
OAngle     ( -89.999932F, -0.000075F, 90.000021F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_Spine,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_kihon11_Bip01_Bip01[]
START
EvalFlags ( 0x0000000c ),
CNKModel   NULL,
OPosition  ( -0.000328F, 55.635731F,  0.932268F ),
OAngle     (  0.000003F, -89.980234F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_kihon11_Bip01_Bip01_Pelvis,
Sibling     NULL,
END

CNKOBJECT_END


DEFAULT_START

#ifndef DEFAULT_OBJECT_NAME
#define DEFAULT_OBJECT_NAME object_kihon11_Bip01_Bip01
#endif
#ifndef DEFAULT_TEXLIST_NAME
#define DEFAULT_TEXLIST_NAME texlist_kihon11_Bip01
#endif

DEFAULT_END

